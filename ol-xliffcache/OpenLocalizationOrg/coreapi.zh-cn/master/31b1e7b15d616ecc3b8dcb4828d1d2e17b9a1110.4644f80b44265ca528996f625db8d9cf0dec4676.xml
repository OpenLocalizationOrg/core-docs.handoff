{"nodes":[{"pos":[1055,1074],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[2646,2650],"content":"Mode","needQuote":true,"nodes":[{"content":"Mode","pos":[0,4]}]},{"pos":[4246,4251],"content":"Pkcs1","needQuote":true,"nodes":[{"content":"Pkcs1","pos":[0,5]}]},{"pos":[5652,5655],"content":"Pss","needQuote":true,"nodes":[{"content":"Pss","pos":[0,3]}]},{"pos":[7145,7159],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.","pos":[8012,8065],"source":"\\n<p>The object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[8066,8072],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified object is equal to the current object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[8133,8252],"source":"\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8253,8259],"source":" </p>\\n"},{"pos":[8838,8865],"content":"Equals(RSASignaturePadding)","needQuote":true,"nodes":[{"content":"Equals(RSASignaturePadding)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The object to compare with the current instance.","pos":[9909,9962],"source":"\\n<p>The object to compare with the current instance."},{"content":"&lt;/p&gt;\\n","pos":[9963,9969],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the specified object is equal to the current object; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[10030,10149],"source":"\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[10150,10156],"source":" </p>\\n"},{"pos":[10679,10692],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12455,12505],"content":"Equality(RSASignaturePadding, RSASignaturePadding)","needQuote":true,"nodes":[{"content":"Equality(RSASignaturePadding, RSASignaturePadding)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;The first object to compare.","pos":[13643,13676],"source":"\\n<p>The first object to compare."},{"content":"&lt;/p&gt;\\n","pos":[13677,13683],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.","pos":[13782,13816],"source":"\\n<p>The second object to compare."},{"content":"&lt;/p&gt;\\n","pos":[13817,13823],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right&lt;/strong&gt; are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13884,14016],"source":"\\n<p>\\n<strong>true</strong> if <strong>left</strong> and <strong>right</strong> are equal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[14744,14796],"content":"Inequality(RSASignaturePadding, RSASignaturePadding)","needQuote":true,"nodes":[{"content":"Inequality(RSASignaturePadding, RSASignaturePadding)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The first object to compare.","pos":[15941,15974],"source":"\\n<p>The first object to compare."},{"content":"&lt;/p&gt;\\n","pos":[15975,15981],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The second object to compare.","pos":[16080,16114],"source":"\\n<p>The second object to compare."},{"content":"&lt;/p&gt;\\n","pos":[16115,16121],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;strong&gt;left&lt;/strong&gt; and &lt;strong&gt;right&lt;/strong&gt; are unequal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16182,16316],"source":"\\n<p>\\n<strong>true</strong> if <strong>left</strong> and <strong>right</strong> are unequal; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[16734,16744],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The string representation of the current object.","pos":[17633,17686],"source":"\\n<p>The string representation of the current object."},{"content":"&lt;/p&gt;\\n","pos":[17687,17693],"source":" </p>\\n"},{"pos":[17940,17968],"content":"System.Security.Cryptography","needQuote":true,"nodes":[{"content":"System.Security.Cryptography","pos":[0,28]}]},{"pos":[18165,18171],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18384,18415],"content":"IEquatable<RSASignaturePadding>","needQuote":true,"nodes":[{"content":"IEquatable&lt;RSASignaturePadding&gt;","pos":[0,31],"source":"IEquatable<RSASignaturePadding>"}]},{"pos":[18682,18692],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[18756,18757],"content":"<","needQuote":true,"nodes":[]},{"pos":[18842,18861],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[19007,19017],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[19082,19085]},{"pos":[19177,19196],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[19270,19271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19581,19603],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19751,19757],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19824,19825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19875,19881],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19942,19943]},{"pos":[19998,20004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20064,20065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20162,20168],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20235,20236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20286,20292],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20353,20354]},{"pos":[20409,20415],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20475,20476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20721,20752],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20918,20933],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21009,21010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21060,21066],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21127,21128]},{"pos":[21183,21189],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21249,21250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21356,21371],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21447,21448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21498,21504],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21565,21566]},{"pos":[21621,21627],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21687,21688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21914,21923],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[22016,22023],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22091,22092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22119,22120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22189,22196],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[22264,22265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22292,22293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22468,22485],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[22594,22609],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22685,22686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22713,22714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22791,22806],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22882,22883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22910,22911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23056,23062],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23182,23195],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[23350,23360],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[23403,23404],"content":"<","needQuote":true,"nodes":[]},{"pos":[23431,23432],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23531,23541],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[23585,23588]},{"pos":[23622,23623],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23650,23651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23896,23919],"content":"RSASignaturePaddingMode","needQuote":true,"nodes":[{"content":"RSASignaturePaddingMode","pos":[0,23]}]},{"pos":[24216,24235],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[24491,24505],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24624,24630],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24697,24698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24748,24754],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24814,24815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24898,24904],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24971,24972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25022,25028],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25088,25089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25262,25269],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25614,25641],"content":"Equals(RSASignaturePadding)","needQuote":true,"nodes":[{"content":"Equals(RSASignaturePadding)","pos":[0,27]}]},{"pos":[25987,25993],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26114,26115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26200,26219],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[26293,26294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26372,26378],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26502,26503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26588,26607],"content":"RSASignaturePadding","needQuote":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[26681,26682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27063,27072],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[27230,27236],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27289,27290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27317,27318],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27345,27346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27424,27430],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27486,27487],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27514,27515],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27542,27543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27776,27789],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[27890,27901],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27973,27974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28001,28002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28075,28086],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28158,28159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28186,28187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28347,28352],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28509,28519],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[28614,28622],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[28691,28692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28719,28720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28790,28798],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[28867,28868],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28895,28896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29051,29057],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Security.Cryptography.RSASignaturePadding\n  commentId: T:System.Security.Cryptography.RSASignaturePadding\n  id: RSASignaturePadding\n  parent: System.Security.Cryptography\n  children:\n  - System.Security.Cryptography.RSASignaturePadding.Equals(System.Object)\n  - System.Security.Cryptography.RSASignaturePadding.Equals(System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSASignaturePadding.GetHashCode\n  - System.Security.Cryptography.RSASignaturePadding.Mode\n  - System.Security.Cryptography.RSASignaturePadding.op_Equality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSASignaturePadding.op_Inequality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSASignaturePadding.Pkcs1\n  - System.Security.Cryptography.RSASignaturePadding.Pss\n  - System.Security.Cryptography.RSASignaturePadding.ToString\n  langs:\n  - csharp\n  - vb\n  name: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RSASignaturePadding\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 258\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Specifies the padding mode and parameters to use with RSA signature creation or verification operations. </p>\\n\"\n  syntax:\n    content: 'public sealed class RSASignaturePadding : IEquatable<RSASignaturePadding>'\n    content.vb: >-\n      Public NotInheritable Class RSASignaturePadding\n          Implements IEquatable(Of RSASignaturePadding)\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Security.Cryptography.RSASignaturePadding}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: RSASignaturePadding\n- uid: System.Security.Cryptography.RSASignaturePadding.Mode\n  commentId: P:System.Security.Cryptography.RSASignaturePadding.Mode\n  id: Mode\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Mode\n  fullName: System.Security.Cryptography.RSASignaturePadding.Mode\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Mode\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 261\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets the padding mode of this <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public RSASignaturePaddingMode Mode { get; }\n    content.vb: Public ReadOnly Property Mode As RSASignaturePaddingMode\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RSASignaturePaddingMode\n      description: \"\\n<p>The padding mode (either <xref href=\\\"System.Security.Cryptography.RSASignaturePaddingMode.Pkcs1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Security.Cryptography.RSASignaturePaddingMode.Pss\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>) of this instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RSASignaturePadding.Mode\n- uid: System.Security.Cryptography.RSASignaturePadding.Pkcs1\n  commentId: P:System.Security.Cryptography.RSASignaturePadding.Pkcs1\n  id: Pkcs1\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Pkcs1\n  fullName: System.Security.Cryptography.RSASignaturePadding.Pkcs1\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Pkcs1\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 262\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets an object that uses the PKCS #1 v1.5 padding mode. </p>\\n\"\n  syntax:\n    content: public static RSASignaturePadding Pkcs1 { get; }\n    content.vb: Public Shared ReadOnly Property Pkcs1 As RSASignaturePadding\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>An object that uses the <xref href=\\\"System.Security.Cryptography.RSASignaturePaddingMode.Pkcs1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> padding mode. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: RSASignaturePadding.Pkcs1\n- uid: System.Security.Cryptography.RSASignaturePadding.Pss\n  commentId: P:System.Security.Cryptography.RSASignaturePadding.Pss\n  id: Pss\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Pss\n  fullName: System.Security.Cryptography.RSASignaturePadding.Pss\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Pss\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 263\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Gets an object that uses PSS padding mode. </p>\\n\"\n  syntax:\n    content: public static RSASignaturePadding Pss { get; }\n    content.vb: Public Shared ReadOnly Property Pss As RSASignaturePadding\n    parameters: []\n    return:\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>An object that uses the <xref href=\\\"System.Security.Cryptography.RSASignaturePaddingMode.Pss\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> padding mode with the number of salt bytes equal to the size of the hash. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: RSASignaturePadding.Pss\n- uid: System.Security.Cryptography.RSASignaturePadding.Equals(System.Object)\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Security.Cryptography.RSASignaturePadding.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 264\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to a specified object. </p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>. </p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RSASignaturePadding.Equals(Object)\n- uid: System.Security.Cryptography.RSASignaturePadding.Equals(System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.Equals(System.Security.Cryptography.RSASignaturePadding)\n  id: Equals(System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Equals(RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSASignaturePadding.Equals(System.Security.Cryptography.RSASignaturePadding)\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 265\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to a specified <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool Equals(RSASignaturePadding other)\n    content.vb: Public Function Equals(other As RSASignaturePadding) As Boolean\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>The object to compare with the current instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>. </p>\\n\"\n  implements:\n  - System.IEquatable{System.Security.Cryptography.RSASignaturePadding}.Equals(System.Security.Cryptography.RSASignaturePadding)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RSASignaturePadding.Equals(RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding.GetHashCode\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Security.Cryptography.RSASignaturePadding.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 266\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Returns the hash code for this <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The hash code for this <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RSASignaturePadding.GetHashCode()\n- uid: System.Security.Cryptography.RSASignaturePadding.op_Equality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.op_Equality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  id: op_Equality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Equality(RSASignaturePadding, RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSASignaturePadding.Equality(System.Security.Cryptography.RSASignaturePadding, System.Security.Cryptography.RSASignaturePadding)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 267\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Indicates whether two specified <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are equal. </p>\\n\"\n  syntax:\n    content: public static bool operator ==(RSASignaturePadding left, RSASignaturePadding right)\n    content.vb: Public Shared Operator =(left As RSASignaturePadding, right As RSASignaturePadding) As Boolean\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>The first object to compare. </p>\\n\"\n    - id: right\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>The second object to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <strong>left</strong> and <strong>right</strong> are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RSASignaturePadding.Equality(RSASignaturePadding, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding.op_Inequality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.op_Inequality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  id: op_Inequality(System.Security.Cryptography.RSASignaturePadding,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: Inequality(RSASignaturePadding, RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSASignaturePadding.Inequality(System.Security.Cryptography.RSASignaturePadding, System.Security.Cryptography.RSASignaturePadding)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 268\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Indicates whether two specified <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are unequal. </p>\\n\"\n  syntax:\n    content: public static bool operator !=(RSASignaturePadding left, RSASignaturePadding right)\n    content.vb: Public Shared Operator <>(left As RSASignaturePadding, right As RSASignaturePadding) As Boolean\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>The first object to compare. </p>\\n\"\n    - id: right\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: \"\\n<p>The second object to compare. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <strong>left</strong> and <strong>right</strong> are unequal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RSASignaturePadding.Inequality(RSASignaturePadding, RSASignaturePadding)\n- uid: System.Security.Cryptography.RSASignaturePadding.ToString\n  commentId: M:System.Security.Cryptography.RSASignaturePadding.ToString\n  id: ToString\n  parent: System.Security.Cryptography.RSASignaturePadding\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Security.Cryptography.RSASignaturePadding.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs\n    startLine: 269\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: \"\\n<p>Returns the string representation of the current <xref href=\\\"System.Security.Cryptography.RSASignaturePadding\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance. </p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>The string representation of the current object. </p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RSASignaturePadding.ToString()\nreferences:\n- uid: System.Security.Cryptography\n  isExternal: false\n  name: System.Security.Cryptography\n  fullName: System.Security.Cryptography\n  commentId: N:System.Security.Cryptography\n  nameWithType: System.Security.Cryptography\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IEquatable{System.Security.Cryptography.RSASignaturePadding}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<RSASignaturePadding>\n  fullName: System.IEquatable<System.Security.Cryptography.RSASignaturePadding>\n  fullname.vb: System.IEquatable(Of System.Security.Cryptography.RSASignaturePadding)\n  name.vb: IEquatable(Of RSASignaturePadding)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Security.Cryptography.RSASignaturePadding\n    name: RSASignaturePadding\n    fullName: System.Security.Cryptography.RSASignaturePadding\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Security.Cryptography.RSASignaturePadding\n    name: RSASignaturePadding\n    fullName: System.Security.Cryptography.RSASignaturePadding\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable{System.Security.Cryptography.RSASignaturePadding}\n  nameWithType: IEquatable<RSASignaturePadding>\n  nameWithType.vb: IEquatable(Of RSASignaturePadding)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable`1\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n- uid: System.Security.Cryptography.RSASignaturePaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePaddingMode\n  fullName: System.Security.Cryptography.RSASignaturePaddingMode\n  commentId: T:System.Security.Cryptography.RSASignaturePaddingMode\n  nameWithType: RSASignaturePaddingMode\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n  commentId: T:System.Security.Cryptography.RSASignaturePadding\n  nameWithType: RSASignaturePadding\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IEquatable{System.Security.Cryptography.RSASignaturePadding}.Equals(System.Security.Cryptography.RSASignaturePadding)\n  parent: System.IEquatable{System.Security.Cryptography.RSASignaturePadding}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(RSASignaturePadding)\n  fullName: System.IEquatable<System.Security.Cryptography.RSASignaturePadding>.Equals(System.Security.Cryptography.RSASignaturePadding)\n  fullname.vb: System.IEquatable(Of System.Security.Cryptography.RSASignaturePadding).Equals(System.Security.Cryptography.RSASignaturePadding)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Security.Cryptography.RSASignaturePadding>.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.RSASignaturePadding\n    name: RSASignaturePadding\n    fullName: System.Security.Cryptography.RSASignaturePadding\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Security.Cryptography.RSASignaturePadding).Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Security.Cryptography.RSASignaturePadding\n    name: RSASignaturePadding\n    fullName: System.Security.Cryptography.RSASignaturePadding\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable{System.Security.Cryptography.RSASignaturePadding}.Equals(System.Security.Cryptography.RSASignaturePadding)\n  nameWithType: IEquatable<RSASignaturePadding>.Equals(RSASignaturePadding)\n  nameWithType.vb: IEquatable(Of RSASignaturePadding).Equals(RSASignaturePadding)\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable`1.Equals(`0)\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}