{"nodes":[{"pos":[2256,2267],"content":"RegistryKey","needQuote":true,"nodes":[{"content":"RegistryKey","pos":[0,11]}]},{"pos":[3813,3819],"content":"Handle","needQuote":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"content":"\\n&lt;p&gt;The handle to the registry key.&lt;/p&gt;\\n","pos":[4835,4877],"source":"\\n<p>The handle to the registry key.</p>\\n"},{"content":"\\n&lt;p&gt;The registry key is closed.","pos":[5000,5032],"source":"\\n<p>The registry key is closed."},{"content":"Closed keys cannot be accessed.&lt;/p&gt;\\n","pos":[5033,5070],"source":" Closed keys cannot be accessed.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[5187,5251],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;A system error occurred, such as deletion of the current key.&lt;/p&gt;\\n","pos":[5342,5414],"source":"\\n<p>A system error occurred, such as deletion of the current key.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read the key.&lt;/p&gt;\\n","pos":[5529,5604],"source":"\\n<p>The user does not have the permissions required to read the key.</p>\\n"},{"pos":[6131,6135],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The absolute (qualified) name of the key.&lt;/p&gt;\\n","pos":[6818,6870],"source":"\\n<p>The absolute (qualified) name of the key.</p>\\n"},{"pos":[7559,7570],"content":"SubKeyCount","needQuote":true,"nodes":[{"content":"SubKeyCount","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The number of subkeys of the current key.&lt;/p&gt;\\n","pos":[8297,8349],"source":"\\n<p>The number of subkeys of the current key.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have read permission for the key.","pos":[8478,8534],"source":"\\n<p>The user does not have read permission for the key."},{"content":"&lt;/p&gt;\\n","pos":[8535,8541],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[8932,8996],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;A system error occurred, for example the current key has been deleted.&lt;/p&gt;\\n","pos":[9087,9168],"source":"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n"},{"pos":[9731,9741],"content":"ValueCount","needQuote":true,"nodes":[{"content":"ValueCount","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The number of name/value pairs in the key.&lt;/p&gt;\\n","pos":[10455,10508],"source":"\\n<p>The number of name/value pairs in the key.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have read permission for the key.","pos":[10637,10693],"source":"\\n<p>The user does not have read permission for the key."},{"content":"&lt;/p&gt;\\n","pos":[10694,10700],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[11091,11155],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;A system error occurred, for example the current key has been deleted.&lt;/p&gt;\\n","pos":[11246,11327],"source":"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n"},{"pos":[11747,11751],"content":"View","needQuote":true,"nodes":[{"content":"View","pos":[0,4]}]},{"pos":[13107,13127],"content":"CreateSubKey(String)","needQuote":true,"nodes":[{"content":"CreateSubKey(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The name or path of the subkey to create or open.","pos":[14083,14137],"source":"\\n<p>The name or path of the subkey to create or open."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[14138,14178],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[14635,14683],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[14684,14690],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to create or open the registry key.","pos":[14805,14893],"source":"\\n<p>The user does not have the permissions required to create or open the registry key."},{"content":"&lt;/p&gt;\\n","pos":[14894,14900],"source":" </p>\\n"},{"pos":[16849,16878],"content":"CreateSubKey(String, Boolean)","needQuote":true,"nodes":[{"content":"CreateSubKey(String, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The name or path of the subkey to create or open.","pos":[17786,17840],"source":"\\n<p>The name or path of the subkey to create or open."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[17841,17881],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate the new subkey is writable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17949,18058],"source":"\\n<p>\\n<strong>true</strong> to indicate the new subkey is writable; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[18515,18563],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[18564,18570],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to create or open the registry key.","pos":[18685,18773],"source":"\\n<p>The user does not have the permissions required to create or open the registry key."},{"content":"&lt;/p&gt;\\n","pos":[18774,18780],"source":" </p>\\n"},{"pos":[19982,20028],"content":"CreateSubKey(String, Boolean, RegistryOptions)","needQuote":true,"nodes":[{"content":"CreateSubKey(String, Boolean, RegistryOptions)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The name or path of the subkey to create or open.","pos":[21022,21076],"source":"\\n<p>The name or path of the subkey to create or open."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[21077,21117],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to indicate the new subkey is writable; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21185,21294],"source":"\\n<p>\\n<strong>true</strong> to indicate the new subkey is writable; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The registry option to use.&lt;/p&gt;\\n","pos":[21378,21416],"source":"\\n<p>The registry option to use.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[21873,21921],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[21922,21928],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;options&lt;/em&gt; does not specify a valid Option&lt;/p&gt;\\n","pos":[22025,22086],"source":"\\n<p>\\n<em>options</em> does not specify a valid Option</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to create or open the registry key.","pos":[22201,22289],"source":"\\n<p>The user does not have the permissions required to create or open the registry key."},{"content":"&lt;/p&gt;\\n","pos":[22290,22296],"source":" </p>\\n"},{"pos":[23374,23394],"content":"DeleteSubKey(String)","needQuote":true,"nodes":[{"content":"DeleteSubKey(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The name of the subkey to delete.","pos":[24056,24094],"source":"\\n<p>The name of the subkey to delete."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[24095,24135],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;subkey&lt;/em&gt; has child subkeys &lt;/p&gt;\\n","pos":[24262,24311],"source":"\\n<p>The <em>subkey</em> has child subkeys </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;subkey&lt;/em&gt; parameter does not specify a valid registry key &lt;/p&gt;\\n","pos":[24408,24487],"source":"\\n<p>The <em>subkey</em> parameter does not specify a valid registry key </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n","pos":[24592,24645],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong></p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the key.","pos":[24760,24831],"source":"\\n<p>The user does not have the permissions required to delete the key."},{"content":"&lt;/p&gt;\\n","pos":[24832,24838],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[25229,25293],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[26484,26513],"content":"DeleteSubKey(String, Boolean)","needQuote":true,"nodes":[{"content":"DeleteSubKey(String, Boolean)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The name of the subkey to delete.","pos":[27402,27440],"source":"\\n<p>The name of the subkey to delete."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[27441,27481],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;Indicates whether an exception should be raised if the specified subkey cannot be found.","pos":[27561,27654],"source":"\\n<p>Indicates whether an exception should be raised if the specified subkey cannot be found."},{"content":"If this argument is &lt;strong&gt;true&lt;/strong&gt; and the specified subkey does not exist, an exception is raised.","pos":[27655,27761],"source":" If this argument is <strong>true</strong> and the specified subkey does not exist, an exception is raised."},{"content":"If this argument is &lt;strong&gt;false&lt;/strong&gt; and the specified subkey does not exist, no action is taken.","pos":[27762,27865],"source":" If this argument is <strong>false</strong> and the specified subkey does not exist, no action is taken."},{"content":"&lt;/p&gt;\\n","pos":[27866,27872],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; has child subkeys.","pos":[27999,28040],"source":"\\n<p>\\n<em>subkey</em> has child subkeys."},{"content":"&lt;/p&gt;\\n","pos":[28041,28047],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; does not specify a valid registry key, and &lt;em&gt;throwOnMissingSubKey&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;.","pos":[28144,28265],"source":"\\n<p>\\n<em>subkey</em> does not specify a valid registry key, and <em>throwOnMissingSubKey</em> is <strong>true</strong>."},{"content":"&lt;/p&gt;\\n","pos":[28266,28272],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28377,28431],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the key.","pos":[28546,28617],"source":"\\n<p>The user does not have the permissions required to delete the key."},{"content":"&lt;/p&gt;\\n","pos":[28618,28624],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[29015,29079],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[30246,30270],"content":"DeleteSubKeyTree(String)","needQuote":true,"nodes":[{"content":"DeleteSubKeyTree(String)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The subkey to delete.","pos":[30970,30996],"source":"\\n<p>The subkey to delete."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[30997,31037],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[31156,31204],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[31205,31211],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Deletion of a root hive is attempted.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; does not specify a valid registry subkey.","pos":[31308,31431],"source":"\\n<p>Deletion of a root hive is attempted.</p>\\n<p>-or-</p>\\n<p>\\n<em>subkey</em> does not specify a valid registry subkey."},{"content":"&lt;/p&gt;\\n","pos":[31432,31438],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An I/O error has occurred.&lt;/p&gt;\\n","pos":[31529,31566],"source":"\\n<p>An I/O error has occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the key.","pos":[31681,31752],"source":"\\n<p>The user does not have the permissions required to delete the key."},{"content":"&lt;/p&gt;\\n","pos":[31753,31759],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[32150,32214],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[33520,33553],"content":"DeleteSubKeyTree(String, Boolean)","needQuote":true,"nodes":[{"content":"DeleteSubKeyTree(String, Boolean)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The name of the subkey to delete.","pos":[34546,34584],"source":"\\n<p>The name of the subkey to delete."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[34585,34625],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;Indicates whether an exception should be raised if the specified subkey cannot be found.","pos":[34705,34798],"source":"\\n<p>Indicates whether an exception should be raised if the specified subkey cannot be found."},{"content":"If this argument is &lt;strong&gt;true&lt;/strong&gt; and the specified subkey does not exist, an exception is raised.","pos":[34799,34905],"source":" If this argument is <strong>true</strong> and the specified subkey does not exist, an exception is raised."},{"content":"If this argument is &lt;strong&gt;false&lt;/strong&gt; and the specified subkey does not exist, no action is taken.&lt;/p&gt;\\n","pos":[34906,35015],"source":" If this argument is <strong>false</strong> and the specified subkey does not exist, no action is taken.</p>\\n"},{"content":"\\n&lt;p&gt;An attempt was made to delete the root hive of the tree.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; does not specify a valid registry subkey, and &lt;em&gt;throwOnMissingSubKey&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35126,35334],"source":"\\n<p>An attempt was made to delete the root hive of the tree.</p>\\n<p>-or-</p>\\n<p>\\n<em>subkey</em> does not specify a valid registry subkey, and <em>throwOnMissingSubKey</em> is <strong>true</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;subkey&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35439,35493],"source":"\\n<p>\\n<em>subkey</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[35865,35929],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the key.&lt;/p&gt;\\n","pos":[36044,36121],"source":"\\n<p>The user does not have the permissions required to delete the key.</p>\\n"},{"pos":[36730,36749],"content":"DeleteValue(String)","needQuote":true,"nodes":[{"content":"DeleteValue(String)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The name of the value to delete.","pos":[37413,37450],"source":"\\n<p>The name of the value to delete."},{"content":"&lt;/p&gt;\\n","pos":[37451,37457],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is not a valid reference to a value.","pos":[37568,37625],"source":"\\n<p>\\n<em>name</em> is not a valid reference to a value."},{"content":"&lt;/p&gt;\\n","pos":[37626,37632],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the value.","pos":[37747,37820],"source":"\\n<p>The user does not have the permissions required to delete the value."},{"content":"&lt;/p&gt;\\n","pos":[37821,37827],"source":" </p>\\n"},{"pos":[39534,39562],"content":"DeleteValue(String, Boolean)","needQuote":true,"nodes":[{"content":"DeleteValue(String, Boolean)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The name of the value to delete.","pos":[40450,40487],"source":"\\n<p>The name of the value to delete."},{"content":"&lt;/p&gt;\\n","pos":[40488,40494],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Indicates whether an exception should be raised if the specified value cannot be found.","pos":[40573,40665],"source":"\\n<p>Indicates whether an exception should be raised if the specified value cannot be found."},{"content":"If this argument is &lt;strong&gt;true&lt;/strong&gt; and the specified value does not exist, an exception is raised.","pos":[40666,40771],"source":" If this argument is <strong>true</strong> and the specified value does not exist, an exception is raised."},{"content":"If this argument is &lt;strong&gt;false&lt;/strong&gt; and the specified value does not exist, no action is taken.","pos":[40772,40874],"source":" If this argument is <strong>false</strong> and the specified value does not exist, no action is taken."},{"content":"&lt;/p&gt;\\n","pos":[40875,40881],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is not a valid reference to a value and &lt;em&gt;throwOnMissingValue&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;.","pos":[40992,41107],"source":"\\n<p>\\n<em>name</em> is not a valid reference to a value and <em>throwOnMissingValue</em> is <strong>true</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[41108,41178],"source":" </p>\\n<p>-or- </p>\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to delete the value.","pos":[41293,41366],"source":"\\n<p>The user does not have the permissions required to delete the value."},{"content":"&lt;/p&gt;\\n","pos":[41367,41373],"source":" </p>\\n"},{"pos":[42987,42996],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[43978,43985],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[45157,45187],"content":"FromHandle(SafeRegistryHandle)","needQuote":true,"nodes":[{"content":"FromHandle(SafeRegistryHandle)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The handle to the registry key.&lt;/p&gt;\\n","pos":[46083,46125],"source":"\\n<p>The handle to the registry key.</p>\\n"},{"content":"\\n&lt;p&gt;A registry key.&lt;/p&gt;\\n","pos":[46199,46225],"source":"\\n<p>A registry key.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;handle&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[46344,46398],"source":"\\n<p>\\n<em>handle</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[46515,46579],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to perform this action.&lt;/p&gt;\\n","pos":[46694,46776],"source":"\\n<p>The user does not have the permissions required to perform this action.</p>\\n"},{"pos":[47719,47763],"content":"FromHandle(SafeRegistryHandle, RegistryView)","needQuote":true,"nodes":[{"content":"FromHandle(SafeRegistryHandle, RegistryView)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The handle to the registry key.&lt;/p&gt;\\n","pos":[48757,48799],"source":"\\n<p>The handle to the registry key.</p>\\n"},{"content":"\\n&lt;p&gt;The registry view to use.&lt;/p&gt;\\n","pos":[48877,48913],"source":"\\n<p>The registry view to use.</p>\\n"},{"content":"\\n&lt;p&gt;A registry key.&lt;/p&gt;\\n","pos":[48987,49013],"source":"\\n<p>A registry key.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;view&lt;/em&gt; is invalid.&lt;/p&gt;\\n","pos":[49124,49162],"source":"\\n<p>\\n<em>view</em> is invalid.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;handle&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[49267,49321],"source":"\\n<p>\\n<em>handle</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[49438,49502],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to perform this action.&lt;/p&gt;\\n","pos":[49617,49699],"source":"\\n<p>The user does not have the permissions required to perform this action.</p>\\n"},{"pos":[50437,50453],"content":"GetSubKeyNames()","needQuote":true,"nodes":[{"content":"GetSubKeyNames()","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An array of strings that contains the names of the subkeys for the current key.&lt;/p&gt;\\n","pos":[51186,51276],"source":"\\n<p>An array of strings that contains the names of the subkeys for the current key.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the key.","pos":[51405,51479],"source":"\\n<p>The user does not have the permissions required to read from the key."},{"content":"&lt;/p&gt;\\n","pos":[51480,51486],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[51877,51941],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;A system error occurred, for example the current key has been deleted.&lt;/p&gt;\\n","pos":[52032,52113],"source":"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n"},{"pos":[52804,52820],"content":"GetValue(String)","needQuote":true,"nodes":[{"content":"GetValue(String)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The name of the value to retrieve.","pos":[53666,53705],"source":"\\n<p>The name of the value to retrieve."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[53706,53746],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt;, or &lt;strong&gt;null&lt;/strong&gt; if &lt;em&gt;name&lt;/em&gt; is not found.&lt;/p&gt;\\n","pos":[53806,53913],"source":"\\n<p>The value associated with <em>name</em>, or <strong>null</strong> if <em>name</em> is not found.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the registry key.","pos":[54042,54125],"source":"\\n<p>The user does not have the permissions required to read from the registry key."},{"content":"&lt;/p&gt;\\n","pos":[54126,54132],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[54797,54861],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[56128,56152],"content":"GetValue(String, Object)","needQuote":true,"nodes":[{"content":"GetValue(String, Object)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name of the value to retrieve.","pos":[57035,57074],"source":"\\n<p>The name of the value to retrieve."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[57075,57115],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The value to return if &lt;em&gt;name&lt;/em&gt; does not exist.","pos":[57186,57243],"source":"\\n<p>The value to return if <em>name</em> does not exist."},{"content":"&lt;/p&gt;\\n","pos":[57244,57250],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt;, with any embedded environment variables left unexpanded, or &lt;em&gt;defaultValue&lt;/em&gt; if &lt;em&gt;name&lt;/em&gt; is not found.&lt;/p&gt;\\n","pos":[57310,57474],"source":"\\n<p>The value associated with <em>name</em>, with any embedded environment variables left unexpanded, or <em>defaultValue</em> if <em>name</em> is not found.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the registry key.","pos":[57603,57686],"source":"\\n<p>The user does not have the permissions required to read from the registry key."},{"content":"&lt;/p&gt;\\n","pos":[57687,57693],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[58358,58422],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[59808,59854],"content":"GetValue(String, Object, RegistryValueOptions)","needQuote":true,"nodes":[{"content":"GetValue(String, Object, RegistryValueOptions)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The name of the value to retrieve.","pos":[60914,60953],"source":"\\n<p>The name of the value to retrieve."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[60954,60994],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The value to return if &lt;em&gt;name&lt;/em&gt; does not exist.","pos":[61065,61122],"source":"\\n<p>The value to return if <em>name</em> does not exist."},{"content":"&lt;/p&gt;\\n","pos":[61123,61129],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies optional processing of the retrieved value.&lt;/p&gt;\\n","pos":[61218,61317],"source":"\\n<p>One of the enumeration values that specifies optional processing of the retrieved value.</p>\\n"},{"content":"\\n&lt;p&gt;The value associated with &lt;em&gt;name&lt;/em&gt;, processed according to the specified &lt;em&gt;options&lt;/em&gt;, or &lt;em&gt;defaultValue&lt;/em&gt; if &lt;em&gt;name&lt;/em&gt; is not found.&lt;/p&gt;\\n","pos":[61377,61539],"source":"\\n<p>The value associated with <em>name</em>, processed according to the specified <em>options</em>, or <em>defaultValue</em> if <em>name</em> is not found.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the registry key.","pos":[61668,61751],"source":"\\n<p>The user does not have the permissions required to read from the registry key."},{"content":"&lt;/p&gt;\\n","pos":[61752,61758],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[62807,62871],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[64239,64259],"content":"GetValueKind(String)","needQuote":true,"nodes":[{"content":"GetValueKind(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The name of the value whose registry data type is to be retrieved.","pos":[65138,65209],"source":"\\n<p>The name of the value whose registry data type is to be retrieved."},{"content":"This string is not case-sensitive.&lt;/p&gt;\\n","pos":[65210,65250],"source":" This string is not case-sensitive.</p>\\n"},{"content":"\\n&lt;p&gt;The registry data type of the value associated with &lt;em&gt;name&lt;/em&gt;.&lt;/p&gt;\\n","pos":[65330,65407],"source":"\\n<p>The registry data type of the value associated with <em>name</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the registry key.","pos":[65536,65619],"source":"\\n<p>The user does not have the permissions required to read from the registry key."},{"content":"&lt;/p&gt;\\n","pos":[65620,65626],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The subkey that contains the specified value does not exist.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The name/value pair specified by &lt;em&gt;name&lt;/em&gt; does not exist.&lt;/p&gt;\\n&lt;p&gt;This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.&lt;/p&gt;\\n","pos":[66007,66257],"source":"\\n<p>The subkey that contains the specified value does not exist.</p>\\n<p>-or-</p>\\n<p>The name/value pair specified by <em>name</em> does not exist.</p>\\n<p>This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[66374,66438],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"pos":[67381,67396],"content":"GetValueNames()","needQuote":true,"nodes":[{"content":"GetValueNames()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An array of strings that contains the value names for the current key.&lt;/p&gt;\\n","pos":[68158,68239],"source":"\\n<p>An array of strings that contains the value names for the current key.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read from the registry key.","pos":[68368,68451],"source":"\\n<p>The user does not have the permissions required to read from the registry key."},{"content":"&lt;/p&gt;\\n","pos":[68452,68458],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[68850,68914],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;A system error occurred; for example, the current key has been deleted.&lt;/p&gt;\\n","pos":[69005,69087],"source":"\\n<p>A system error occurred; for example, the current key has been deleted.</p>\\n"},{"pos":[69944,69983],"content":"OpenBaseKey(RegistryHive, RegistryView)","needQuote":true,"nodes":[{"content":"OpenBaseKey(RegistryHive, RegistryView)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The HKEY to open.&lt;/p&gt;\\n","pos":[71070,71098],"source":"\\n<p>The HKEY to open.</p>\\n"},{"content":"\\n&lt;p&gt;The registry view to use.&lt;/p&gt;\\n","pos":[71176,71212],"source":"\\n<p>The registry view to use.</p>\\n"},{"content":"\\n&lt;p&gt;The requested registry key.&lt;/p&gt;\\n","pos":[71286,71324],"source":"\\n<p>The requested registry key.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;hKey&lt;/em&gt; or &lt;em&gt;view&lt;/em&gt; is invalid.&lt;/p&gt;\\n","pos":[71435,71490],"source":"\\n<p>\\n<em>hKey</em> or <em>view</em> is invalid.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the necessary registry rights.&lt;/p&gt;\\n","pos":[71607,71671],"source":"\\n<p>The user does not have the necessary registry rights.</p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to perform this action.&lt;/p&gt;\\n","pos":[71786,71868],"source":"\\n<p>The user does not have the permissions required to perform this action.</p>\\n"},{"pos":[72253,72271],"content":"OpenSubKey(String)","needQuote":true,"nodes":[{"content":"OpenSubKey(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The name or path of the subkey to open as read-only.","pos":[73018,73075],"source":"\\n<p>The name or path of the subkey to open as read-only."},{"content":"&lt;/p&gt;\\n","pos":[73076,73082],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The subkey requested, or &lt;strong&gt;null&lt;/strong&gt; if the operation failed.&lt;/p&gt;\\n","pos":[73156,73238],"source":"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;&lt;/p&gt;\\n","pos":[73357,73408],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong></p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to read the registry key.","pos":[73779,73857],"source":"\\n<p>The user does not have the permissions required to read the registry key."},{"content":"&lt;/p&gt;\\n","pos":[73858,73864],"source":" </p>\\n"},{"pos":[75440,75467],"content":"OpenSubKey(String, Boolean)","needQuote":true,"nodes":[{"content":"OpenSubKey(String, Boolean)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;Name or path of the subkey to open.","pos":[76328,76368],"source":"\\n<p>Name or path of the subkey to open."},{"content":"&lt;/p&gt;\\n","pos":[76369,76375],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Set to &lt;strong&gt;true&lt;/strong&gt; if you need write access to the key.","pos":[76443,76513],"source":"\\n<p>Set to <strong>true</strong> if you need write access to the key."},{"content":"&lt;/p&gt;\\n","pos":[76514,76520],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The subkey requested, or &lt;strong&gt;null&lt;/strong&gt; if the operation failed.&lt;/p&gt;\\n","pos":[76594,76676],"source":"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[76795,76841],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[76842,76848],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to access the registry key in the specified mode.","pos":[77219,77321],"source":"\\n<p>The user does not have the permissions required to access the registry key in the specified mode."},{"content":"&lt;/p&gt;\\n","pos":[77322,77328],"source":" </p>\\n"},{"pos":[79003,79037],"content":"OpenSubKey(String, RegistryRights)","needQuote":true,"nodes":[{"content":"OpenSubKey(String, RegistryRights)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The name or path of the subkey to create or open.&lt;/p&gt;\\n","pos":[79898,79958],"source":"\\n<p>The name or path of the subkey to create or open.</p>\\n"},{"content":"\\n&lt;p&gt;The rights for the registry key.&lt;/p&gt;\\n","pos":[80054,80097],"source":"\\n<p>The rights for the registry key.</p>\\n"},{"content":"\\n&lt;p&gt;The subkey requested, or &lt;strong&gt;null&lt;/strong&gt; if the operation failed.&lt;/p&gt;\\n","pos":[80171,80253],"source":"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[80372,80418],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[80419,80425],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to access the registry key in the specified mode.","pos":[80796,80898],"source":"\\n<p>The user does not have the permissions required to access the registry key in the specified mode."},{"content":"&lt;/p&gt;\\n","pos":[80899,80905],"source":" </p>\\n"},{"pos":[81299,81323],"content":"SetValue(String, Object)","needQuote":true,"nodes":[{"content":"SetValue(String, Object)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The name of the value to store.","pos":[82015,82051],"source":"\\n<p>The name of the value to store."},{"content":"&lt;/p&gt;\\n","pos":[82052,82058],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The data to be stored.","pos":[82122,82149],"source":"\\n<p>The data to be stored."},{"content":"&lt;/p&gt;\\n","pos":[82150,82156],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[82275,82322],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[82323,82329],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is an unsupported data type.","pos":[82426,82476],"source":"\\n<p>\\n<em>value</em> is an unsupported data type."},{"content":"&lt;/p&gt;\\n","pos":[82477,82483],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to create or modify registry keys.","pos":[83428,83515],"source":"\\n<p>The user does not have the permissions required to create or modify registry keys."},{"content":"&lt;/p&gt;\\n","pos":[83516,83522],"source":" </p>\\n"},{"pos":[84951,84994],"content":"SetValue(String, Object, RegistryValueKind)","needQuote":true,"nodes":[{"content":"SetValue(String, Object, RegistryValueKind)","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The name of the value to be stored.","pos":[85975,86015],"source":"\\n<p>The name of the value to be stored."},{"content":"&lt;/p&gt;\\n","pos":[86016,86022],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The data to be stored.","pos":[86086,86113],"source":"\\n<p>The data to be stored."},{"content":"&lt;/p&gt;\\n","pos":[86114,86120],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The registry data type to use when storing the data.","pos":[86208,86265],"source":"\\n<p>The registry data type to use when storing the data."},{"content":"&lt;/p&gt;\\n","pos":[86266,86272],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[86391,86438],"source":"\\n<p>\\n<em>value</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[86439,86445],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type of &lt;em&gt;value&lt;/em&gt; did not match the registry data type specified by &lt;em&gt;valueKind&lt;/em&gt;, therefore the data could not be converted properly.","pos":[86542,86695],"source":"\\n<p>The type of <em>value</em> did not match the registry data type specified by <em>valueKind</em>, therefore the data could not be converted properly."},{"content":"&lt;/p&gt;\\n","pos":[86696,86702],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The user does not have the permissions required to create or modify registry keys.","pos":[87647,87734],"source":"\\n<p>The user does not have the permissions required to create or modify registry keys."},{"content":"&lt;/p&gt;\\n","pos":[87735,87741],"source":" </p>\\n"},{"pos":[89095,89105],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A string representing the key.","pos":[89817,89852],"source":"\\n<p>A string representing the key."},{"content":"If the specified key is invalid (cannot be found) then &lt;strong&gt;null&lt;/strong&gt; is returned.&lt;/p&gt;\\n","pos":[89853,89948],"source":" If the specified key is invalid (cannot be found) then <strong>null</strong> is returned.</p>\\n"},{"pos":[90563,90578],"content":"Microsoft.Win32","needQuote":true,"nodes":[{"content":"Microsoft.Win32","pos":[0,15]}]},{"pos":[90736,90742],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[90892,90903],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[91091,91105],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[91224,91230],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[91297,91298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91348,91354],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91414,91415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91498,91504],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[91571,91572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91622,91628],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[91688,91689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91903,91925],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[92073,92079],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[92146,92147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92197,92203],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[92264,92265]},{"pos":[92320,92326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[92386,92387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92484,92490],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[92557,92558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92608,92614],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[92675,92676]},{"pos":[92731,92737],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[92797,92798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93043,93074],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[93240,93255],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[93331,93332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93382,93388],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[93449,93450]},{"pos":[93505,93511],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[93571,93572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93678,93693],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[93769,93770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93820,93826],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[93887,93888]},{"pos":[93943,93949],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94009,94010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94240,94253],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[94354,94365],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[94437,94438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94465,94466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94539,94550],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[94622,94623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94650,94651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94826,94835],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[94928,94935],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[95003,95004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95031,95032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95101,95108],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[95176,95177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95204,95205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95380,95397],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[95506,95521],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[95597,95598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95625,95626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95703,95718],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[95794,95795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95822,95823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95968,95974],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[96159,96177],"content":"SafeRegistryHandle","needQuote":true,"nodes":[{"content":"SafeRegistryHandle","pos":[0,18]}]},{"pos":[96397,96424],"content":"Microsoft.Win32.SafeHandles","needQuote":true,"nodes":[{"content":"Microsoft.Win32.SafeHandles","pos":[0,27]}]},{"pos":[96618,96624],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[96768,96773],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96939,96951],"content":"RegistryView","needQuote":true,"nodes":[{"content":"RegistryView","pos":[0,12]}]},{"pos":[97155,97166],"content":"RegistryKey","needQuote":true,"nodes":[{"content":"RegistryKey","pos":[0,11]}]},{"pos":[97345,97352],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[97527,97542],"content":"RegistryOptions","needQuote":true,"nodes":[{"content":"RegistryOptions","pos":[0,15]}]},{"pos":[97757,97766],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[97869,97876],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[97928,97929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97956,97957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98031,98038],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[98090,98091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98118,98119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98247,98255],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[98383,98389],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[98450,98452]},{"pos":[98517,98523],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98583,98585],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[98754,98774],"content":"RegistryValueOptions","needQuote":true,"nodes":[{"content":"RegistryValueOptions","pos":[0,20]}]},{"pos":[99008,99025],"content":"RegistryValueKind","needQuote":true,"nodes":[{"content":"RegistryValueKind","pos":[0,17]}]},{"pos":[99245,99257],"content":"RegistryHive","needQuote":true,"nodes":[{"content":"RegistryHive","pos":[0,12]}]},{"pos":[99492,99506],"content":"RegistryRights","needQuote":true,"nodes":[{"content":"RegistryRights","pos":[0,14]}]},{"pos":[99720,99749],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[99964,99974],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[100069,100077],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[100146,100147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100174,100175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100245,100253],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[100322,100323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100350,100351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100506,100529],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[100746,100773],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[100992,101003],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[101172,101189],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[101383,101404],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[101605,101622],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[101819,101844],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: Microsoft.Win32.RegistryKey\n  commentId: T:Microsoft.Win32.RegistryKey\n  id: RegistryKey\n  parent: Microsoft.Win32\n  children:\n  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)\n  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)\n  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)\n  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)\n  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)\n  - Microsoft.Win32.RegistryKey.Dispose\n  - Microsoft.Win32.RegistryKey.Flush\n  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)\n  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)\n  - Microsoft.Win32.RegistryKey.GetSubKeyNames\n  - Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)\n  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)\n  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  - Microsoft.Win32.RegistryKey.GetValueNames\n  - Microsoft.Win32.RegistryKey.Handle\n  - Microsoft.Win32.RegistryKey.Name\n  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)\n  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)\n  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)\n  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)\n  - Microsoft.Win32.RegistryKey.SubKeyCount\n  - Microsoft.Win32.RegistryKey.ToString\n  - Microsoft.Win32.RegistryKey.ValueCount\n  - Microsoft.Win32.RegistryKey.View\n  langs:\n  - csharp\n  - vb\n  name: RegistryKey\n  fullName: Microsoft.Win32.RegistryKey\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RegistryKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 102\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Represents a key-level node in the Windows registry. This class is a registry encapsulation.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public sealed class RegistryKey : IDisposable\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public NotInheritable Class RegistryKey\n          Implements IDisposable\n  seealso:\n  - type: Microsoft.Win32.Registry\n    commentId: T:Microsoft.Win32.Registry\n  - type: Microsoft.Win32.RegistryHive\n    commentId: T:Microsoft.Win32.RegistryHive\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: RegistryKey\n- uid: Microsoft.Win32.RegistryKey.Handle\n  commentId: P:Microsoft.Win32.RegistryKey.Handle\n  id: Handle\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: Handle\n  fullName: Microsoft.Win32.RegistryKey.Handle\n  type: Property\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Handle\n    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n    startLine: 34\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Gets a <xref href=\\\"Microsoft.Win32.SafeHandles.SafeRegistryHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the registry key that the current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object encapsulates.</p>\\n\"\n  syntax:\n    content: >-\n      public SafeRegistryHandle Handle\n\n      {\n          [SecurityCritical]\n          get;\n      }\n    content.vb: Public ReadOnly Property Handle As SafeRegistryHandle\n    parameters: []\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle\n      description: \"\\n<p>The handle to the registry key.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The registry key is closed. Closed keys cannot be accessed.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A system error occurred, such as deletion of the current key.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read the key.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegistryKey.Handle\n- uid: Microsoft.Win32.RegistryKey.Name\n  commentId: P:Microsoft.Win32.RegistryKey.Name\n  id: Name\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: Microsoft.Win32.RegistryKey.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1383\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the name of the key.</p>\\n\"\n  syntax:\n    content: >-\n      public string Name\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The absolute (qualified) name of the key.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed (closed keys cannot be accessed). </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.ToString\n    commentId: M:Microsoft.Win32.RegistryKey.ToString\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegistryKey.Name\n- uid: Microsoft.Win32.RegistryKey.SubKeyCount\n  commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount\n  id: SubKeyCount\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: SubKeyCount\n  fullName: Microsoft.Win32.RegistryKey.SubKeyCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SubKeyCount\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 819\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the count of subkeys of the current key.</p>\\n\"\n  syntax:\n    content: >-\n      public int SubKeyCount\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public ReadOnly Property SubKeyCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of subkeys of the current key.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have read permission for the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegistryKey.SubKeyCount\n- uid: Microsoft.Win32.RegistryKey.ValueCount\n  commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  id: ValueCount\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: ValueCount\n  fullName: Microsoft.Win32.RegistryKey.ValueCount\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ValueCount\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 989\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the count of values in the key.</p>\\n\"\n  syntax:\n    content: >-\n      public int ValueCount\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: Public ReadOnly Property ValueCount As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of name/value pairs in the key.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have read permission for the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegistryKey.ValueCount\n- uid: Microsoft.Win32.RegistryKey.View\n  commentId: P:Microsoft.Win32.RegistryKey.View\n  id: View\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: View\n  fullName: Microsoft.Win32.RegistryKey.View\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: View\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 827\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Gets the view that was used to create the registry key. </p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public RegistryView View\n\n      {\n          [SecuritySafeCritical]\n          get;\n      }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public ReadOnly Property View As RegistryView\n    parameters: []\n    return:\n      type: Microsoft.Win32.RegistryView\n      description: \"\\n<p>The view that was used to create the registry key.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"Microsoft.Win32.RegistryView.Default\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, if no view was used.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RegistryKey.View\n- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  id: CreateSubKey(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: CreateSubKey(String)\n  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 287\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Creates a new subkey or opens an existing subkey for write access.  </p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Concurrency\", \"CA8001\", Justification = \"Reviewed for thread safety\")]\n\n      public RegistryKey CreateSubKey(string subkey)\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Concurrency\", \"CA8001\", Justification:=\"Reviewed for thread safety\")>\n\n      Public Function CreateSubKey(subkey As String) As RegistryKey\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name or path of the subkey to create or open. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The newly created subkey, or <strong>null</strong> if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is returned.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to create or open the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> on which this method is being invoked is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The nesting level exceeds 510.</p>\\n<p>-or-</p>\\n<p>A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\\\"Microsoft.Win32.Registry.LocalMachine\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n    commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.CreateSubKey(String)\n- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)\n  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)\n  id: CreateSubKey(System.String,System.Boolean)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: CreateSubKey(String, Boolean)\n  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 304\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Creates a new subkey or opens an existing subkey with the specified access. </p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public RegistryKey CreateSubKey(string subkey, bool writable)\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Function CreateSubKey(subkey As String, writable As Boolean) As RegistryKey\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name or path of the subkey to create or open. This string is not case-sensitive.</p>\\n\"\n    - id: writable\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate the new subkey is writable; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The newly created subkey, or <strong>null</strong> if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is returned.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to create or open the registry key. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The nesting level exceeds 510.</p>\\n<p>-or-</p>\\n<p>A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\\\"Microsoft.Win32.Registry.LocalMachine\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.CreateSubKey(String, Boolean)\n- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)\n  commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)\n  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: CreateSubKey(String, Boolean, RegistryOptions)\n  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(System.String, System.Boolean, Microsoft.Win32.RegistryOptions)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 310\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Creates a new subkey or opens an existing subkey with the specified access. </p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public RegistryKey CreateSubKey(string subkey, bool writable, RegistryOptions options)\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Function CreateSubKey(subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name or path of the subkey to create or open. This string is not case-sensitive.</p>\\n\"\n    - id: writable\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to indicate the new subkey is writable; otherwise, <strong>false</strong>.</p>\\n\"\n    - id: options\n      type: Microsoft.Win32.RegistryOptions\n      description: \"\\n<p>The registry option to use.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The newly created subkey, or <strong>null</strong> if the operation failed. If a zero-length string is specified for <em>subkey</em>, the current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is returned.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>options</em> does not specify a valid Option</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to create or open the registry key. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The current <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The nesting level exceeds 510.</p>\\n<p>-or-</p>\\n<p>A system error occurred, such as deletion of the key, or an attempt to create a key in the <xref href=\\\"Microsoft.Win32.Registry.LocalMachine\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> root.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.CreateSubKey(String, Boolean, RegistryOptions)\n- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  id: DeleteSubKey(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteSubKey(String)\n  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 410\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes the specified subkey. </p>\\n\"\n  syntax:\n    content: public void DeleteSubKey(string subkey)\n    content.vb: Public Sub DeleteSubKey(subkey As String)\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name of the subkey to delete. This string is not case-sensitive.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <em>subkey</em> has child subkeys </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>subkey</em> parameter does not specify a valid registry key </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong></p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  - type: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteSubKey(String)\n- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)\n  id: DeleteSubKey(System.String,System.Boolean)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteSubKey(String, Boolean)\n  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 414\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void DeleteSubKey(string subkey, bool throwOnMissingSubKey)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub DeleteSubKey(subkey As String, throwOnMissingSubKey As Boolean)\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name of the subkey to delete. This string is not case-sensitive.</p>\\n\"\n    - id: throwOnMissingSubKey\n      type: System.Boolean\n      description: \"\\n<p>Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is <strong>true</strong> and the specified subkey does not exist, an exception is raised. If this argument is <strong>false</strong> and the specified subkey does not exist, no action is taken. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>subkey</em> has child subkeys. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>subkey</em> does not specify a valid registry key, and <em>throwOnMissingSubKey</em> is <strong>true</strong>. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  - type: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteSubKey(String, Boolean)\n- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  id: DeleteSubKeyTree(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteSubKeyTree(String)\n  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteSubKeyTree\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 464\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes a subkey and any child subkeys recursively. </p>\\n\"\n  syntax:\n    content: public void DeleteSubKeyTree(string subkey)\n    content.vb: Public Sub DeleteSubKeyTree(subkey As String)\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The subkey to delete. This string is not case-sensitive.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Deletion of a root hive is attempted.</p>\\n<p>-or-</p>\\n<p>\\n<em>subkey</em> does not specify a valid registry subkey. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An I/O error has occurred.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  - type: Microsoft.Win32.RegistryKey.SubKeyCount\n    commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteSubKeyTree(String)\n- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)\n  id: DeleteSubKeyTree(System.String,System.Boolean)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteSubKeyTree(String, Boolean)\n  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteSubKeyTree\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 468\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found. </p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(false)]\n\n      public void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(False)>\n\n      Public Sub DeleteSubKeyTree(subkey As String, throwOnMissingSubKey As Boolean)\n    parameters:\n    - id: subkey\n      type: System.String\n      description: \"\\n<p>The name of the subkey to delete. This string is not case-sensitive.</p>\\n\"\n    - id: throwOnMissingSubKey\n      type: System.Boolean\n      description: \"\\n<p>Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is <strong>true</strong> and the specified subkey does not exist, an exception is raised. If this argument is <strong>false</strong> and the specified subkey does not exist, no action is taken.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An attempt was made to delete the root hive of the tree.</p>\\n<p>-or-</p>\\n<p>\\n<em>subkey</em> does not specify a valid registry subkey, and <em>throwOnMissingSubKey</em> is <strong>true</strong>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>subkey</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed (closed keys cannot be accessed).</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the key.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteSubKeyTree(String, Boolean)\n- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  id: DeleteValue(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteValue(String)\n  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 552\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes the specified value from this key.</p>\\n\"\n  syntax:\n    content: public void DeleteValue(string name)\n    content.vb: Public Sub DeleteValue(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to delete. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is not a valid reference to a value. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the value. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is read-only. </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n    commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteValue(String)\n- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)\n  commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)\n  id: DeleteValue(System.String,System.Boolean)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: DeleteValue(String, Boolean)\n  fullName: Microsoft.Win32.RegistryKey.DeleteValue(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeleteValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 556\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void DeleteValue(string name, bool throwOnMissingValue)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub DeleteValue(name As String, throwOnMissingValue As Boolean)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to delete. </p>\\n\"\n    - id: throwOnMissingValue\n      type: System.Boolean\n      description: \"\\n<p>Indicates whether an exception should be raised if the specified value cannot be found. If this argument is <strong>true</strong> and the specified value does not exist, an exception is raised. If this argument is <strong>false</strong> and the specified value does not exist, no action is taken. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is not a valid reference to a value and <em>throwOnMissingValue</em> is <strong>true</strong>. </p>\\n<p>-or- </p>\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to delete the value. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is read-only. </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n    commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.DeleteValue(String, Boolean)\n- uid: Microsoft.Win32.RegistryKey.Dispose\n  commentId: M:Microsoft.Win32.RegistryKey.Dispose\n  id: Dispose\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: Microsoft.Win32.RegistryKey.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n    startLine: 48\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Releases all resources used by the current instance of the <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.Dispose()\n- uid: Microsoft.Win32.RegistryKey.Flush\n  commentId: M:Microsoft.Win32.RegistryKey.Flush\n  id: Flush\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: Microsoft.Win32.RegistryKey.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Flush\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 262\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Writes all the attributes of the specified open registry key into the registry.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void Flush()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub Flush\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.Close\n    commentId: M:Microsoft.Win32.RegistryKey.Close\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.Flush()\n- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)\n  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)\n  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: FromHandle(SafeRegistryHandle)\n  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromHandle\n    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n    startLine: 50\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Creates a registry key from a specified handle.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static RegistryKey FromHandle(SafeRegistryHandle handle)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Function FromHandle(handle As SafeRegistryHandle) As RegistryKey\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle\n      description: \"\\n<p>The handle to the registry key.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>A registry key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>handle</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to perform this action.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)\n- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)\n  commentId: M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)\n  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: FromHandle(SafeRegistryHandle, RegistryView)\n  fullName: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle, Microsoft.Win32.RegistryView)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FromHandle\n    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n    startLine: 52\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Creates a registry key from a specified handle and registry view setting. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static RegistryKey FromHandle(SafeRegistryHandle handle, RegistryView view)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Function FromHandle(handle As SafeRegistryHandle, view As RegistryView) As RegistryKey\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle\n      description: \"\\n<p>The handle to the registry key.</p>\\n\"\n    - id: view\n      type: Microsoft.Win32.RegistryView\n      description: \"\\n<p>The registry view to use.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>A registry key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>view</em> is invalid.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>handle</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to perform this action.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle, RegistryView)\n- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames\n  commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  id: GetSubKeyNames\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetSubKeyNames()\n  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetSubKeyNames\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 942\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves an array of strings that contains all the subkey names.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public string[] GetSubKeyNames()\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function GetSubKeyNames As String()\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of strings that contains the names of the subkeys for the current key.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A system error occurred, for example the current key has been deleted.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.SubKeyCount\n    commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetSubKeyNames()\n- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  id: GetValue(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetValue(String)\n  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1075\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the value associated with the specified name. Returns <strong>null</strong> if the name/value pair does not exist in the registry.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public object GetValue(string name)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function GetValue(name As String) As Object\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to retrieve. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value associated with <em>name</em>, or <strong>null</strong> if <em>name</em> is not found.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value has been marked for deletion. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n    commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.EnvironmentPermission\n    commentId: T:System.Security.Permissions.EnvironmentPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetValue(String)\n- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)\n  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)\n  id: GetValue(System.String,System.Object)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetValue(String, Object)\n  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1097\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public object GetValue(string name, object defaultValue)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function GetValue(name As String, defaultValue As Object) As Object\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to retrieve. This string is not case-sensitive.</p>\\n\"\n    - id: defaultValue\n      type: System.Object\n      description: \"\\n<p>The value to return if <em>name</em> does not exist. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value associated with <em>name</em>, with any embedded environment variables left unexpanded, or <em>defaultValue</em> if <em>name</em> is not found.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value has been marked for deletion. </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n    commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.EnvironmentPermission\n    commentId: T:System.Security.Permissions.EnvironmentPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetValue(String, Object)\n- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)\n  commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)\n  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetValue(String, Object, RegistryValueOptions)\n  fullName: Microsoft.Win32.RegistryKey.GetValue(System.String, System.Object, Microsoft.Win32.RegistryValueOptions)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1107\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(false)]\n\n      public object GetValue(string name, object defaultValue, RegistryValueOptions options)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(False)>\n\n      Public Function GetValue(name As String, defaultValue As Object, options As RegistryValueOptions) As Object\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to retrieve. This string is not case-sensitive.</p>\\n\"\n    - id: defaultValue\n      type: System.Object\n      description: \"\\n<p>The value to return if <em>name</em> does not exist. </p>\\n\"\n    - id: options\n      type: Microsoft.Win32.RegistryValueOptions\n      description: \"\\n<p>One of the enumeration values that specifies optional processing of the retrieved value.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The value associated with <em>name</em>, processed according to the specified <em>options</em>, or <em>defaultValue</em> if <em>name</em> is not found.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value has been marked for deletion. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>options</em> is not a valid <xref href=\\\"Microsoft.Win32.RegistryValueOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value; for example, an invalid value is cast to <xref href=\\\"Microsoft.Win32.RegistryValueOptions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryValueOptions\n    commentId: T:Microsoft.Win32.RegistryValueOptions\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n    commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  - type: Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.EnvironmentPermission\n    commentId: T:System.Security.Permissions.EnvironmentPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetValue(String, Object, RegistryValueOptions)\n- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  id: GetValueKind(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetValueKind(String)\n  fullName: Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValueKind\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1340\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves the registry data type of the value associated with the specified name.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(false)]\n\n      public RegistryValueKind GetValueKind(string name)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(False)>\n\n      Public Function GetValueKind(name As String) As RegistryValueKind\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryValueKind\n      description: \"\\n<p>The registry data type of the value associated with <em>name</em>.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The subkey that contains the specified value does not exist.</p>\\n<p>-or-</p>\\n<p>The name/value pair specified by <em>name</em> does not exist.</p>\\n<p>This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValueNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n    commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  - type: Microsoft.Win32.RegistryValueKind\n    commentId: T:Microsoft.Win32.RegistryValueKind\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetValueKind(String)\n- uid: Microsoft.Win32.RegistryKey.GetValueNames\n  commentId: M:Microsoft.Win32.RegistryKey.GetValueNames\n  id: GetValueNames\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: GetValueNames()\n  fullName: Microsoft.Win32.RegistryKey.GetValueNames()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetValueNames\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1024\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves an array of strings that contains all the value names associated with this key.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public string[] GetValueNames()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function GetValueNames As String()\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of strings that contains the value names for the current key.</p>\\n\"\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read from the registry key. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  being manipulated is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A system error occurred; for example, the current key has been deleted.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.GetValueNames()\n- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)\n  commentId: M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)\n  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: OpenBaseKey(RegistryHive, RegistryView)\n  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive, Microsoft.Win32.RegistryView)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenBaseKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 617\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Opens a new <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the requested key on the local machine with the specified view.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(false)]\n\n      public static RegistryKey OpenBaseKey(RegistryHive hKey, RegistryView view)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(False)>\n\n      Public Shared Function OpenBaseKey(hKey As RegistryHive, view As RegistryView) As RegistryKey\n    parameters:\n    - id: hKey\n      type: Microsoft.Win32.RegistryHive\n      description: \"\\n<p>The HKEY to open.</p>\\n\"\n    - id: view\n      type: Microsoft.Win32.RegistryView\n      description: \"\\n<p>The registry view to use.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The requested registry key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>hKey</em> or <em>view</em> is invalid.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The user does not have the necessary registry rights.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to perform this action.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RegistryKey.OpenBaseKey(RegistryHive, RegistryView)\n- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)\n  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)\n  id: OpenSubKey(System.String)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: OpenSubKey(String)\n  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 808\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves a subkey as read-only.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public RegistryKey OpenSubKey(string name)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function OpenSubKey(name As String) As RegistryKey\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name or path of the subkey to open as read-only. </p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong></p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to read the registry key. </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  - type: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)\n  - type: Microsoft.Win32.RegistryKey.SubKeyCount\n    commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount\n  - type: Microsoft.Win32.Registry\n    commentId: T:Microsoft.Win32.Registry\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.OpenSubKey(String)\n- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)\n  id: OpenSubKey(System.String,System.Boolean)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: OpenSubKey(String, Boolean)\n  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenSubKey\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 690\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves a specified subkey, and specifies whether write access is to be applied to the key. </p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public RegistryKey OpenSubKey(string name, bool writable)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function OpenSubKey(name As String, writable As Boolean) As RegistryKey\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>Name or path of the subkey to open. </p>\\n\"\n    - id: writable\n      type: System.Boolean\n      description: \"\\n<p>Set to <strong>true</strong> if you need write access to the key. </p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to access the registry key in the specified mode. </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)\n  - type: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetSubKeyNames\n    commentId: M:Microsoft.Win32.RegistryKey.GetSubKeyNames\n  - type: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)\n  - type: Microsoft.Win32.RegistryKey.SubKeyCount\n    commentId: P:Microsoft.Win32.RegistryKey.SubKeyCount\n  - type: Microsoft.Win32.Registry\n    commentId: T:Microsoft.Win32.Registry\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.OpenSubKey(String, Boolean)\n- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)\n  commentId: M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)\n  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: OpenSubKey(String, RegistryRights)\n  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(System.String, System.Security.AccessControl.RegistryRights)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OpenSubKey\n    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs\n    startLine: 63\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves a subkey with the specified name and .</p>\\n<p>Available starting in .NET Framework 4.6</p>\\n\"\n  syntax:\n    content: public RegistryKey OpenSubKey(string name, RegistryRights rights)\n    content.vb: Public Function OpenSubKey(name As String, rights As RegistryRights) As RegistryKey\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name or path of the subkey to create or open.</p>\\n\"\n    - id: rights\n      type: System.Security.AccessControl.RegistryRights\n      description: \"\\n<p>The rights for the registry key.</p>\\n\"\n    return:\n      type: Microsoft.Win32.RegistryKey\n      description: \"\\n<p>The subkey requested, or <strong>null</strong> if the operation failed.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to access the registry key in the specified mode. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.OpenSubKey(String, RegistryRights)\n- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)\n  id: SetValue(System.String,System.Object)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: SetValue(String, Object)\n  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1401\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Sets the specified name/value pair.</p>\\n\"\n  syntax:\n    content: public void SetValue(string name, object value)\n    content.vb: Public Sub SetValue(name As String, value As Object)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to store. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The data to be stored. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>value</em> is an unsupported data type. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access. </p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to create or modify registry keys. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.SetValue(String, Object)\n- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)\n  commentId: M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)\n  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: SetValue(String, Object, RegistryValueKind)\n  fullName: Microsoft.Win32.RegistryKey.SetValue(System.String, System.Object, Microsoft.Win32.RegistryValueKind)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetValue\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1405\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Sets the value of a name/value pair in the registry key, using the specified registry data type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(false)]\n\n      public void SetValue(string name, object value, RegistryValueKind valueKind)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(False)>\n\n      Public Sub SetValue(name As String, value As Object, valueKind As RegistryValueKind)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the value to be stored. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The data to be stored. </p>\\n\"\n    - id: valueKind\n      type: Microsoft.Win32.RegistryValueKind\n      description: \"\\n<p>The registry data type to use when storing the data. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>value</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The type of <em>value</em> did not match the registry data type specified by <em>valueKind</em>, therefore the data could not be converted properly. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the specified value is closed (closed keys cannot be accessed). </p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is read-only, and cannot be written to; for example, the key has not been opened with write access.</p>\\n<p>-or-</p>\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The user does not have the permissions required to create or modify registry keys. </p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)\n  - type: Microsoft.Win32.RegistryKey.GetValue(System.String)\n    commentId: M:Microsoft.Win32.RegistryKey.GetValue(System.String)\n  - type: Microsoft.Win32.RegistryKey.ValueCount\n    commentId: P:Microsoft.Win32.RegistryKey.ValueCount\n  - type: Microsoft.Win32.RegistryValueKind\n    commentId: T:Microsoft.Win32.RegistryValueKind\n  see:\n  - type: System.Security.Permissions.RegistryPermission\n    commentId: T:System.Security.Permissions.RegistryPermission\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RegistryKey.SetValue(String, Object, RegistryValueKind)\n- uid: Microsoft.Win32.RegistryKey.ToString\n  commentId: M:Microsoft.Win32.RegistryKey.ToString\n  id: ToString\n  parent: Microsoft.Win32.RegistryKey\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: Microsoft.Win32.RegistryKey.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/Microsoft/Win32/RegistryKey.cs\n    startLine: 1577\n  assemblies:\n  - Microsoft.Win32.Registry\n  namespace: Microsoft.Win32\n  summary: \"\\n<p>Retrieves a string representation of this key.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A string representing the key. If the specified key is invalid (cannot be found) then <strong>null</strong> is returned.</p>\\n\"\n  overridden: System.Object.ToString\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"Microsoft.Win32.RegistryKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> being accessed is closed (closed keys cannot be accessed). </p>\\n\"\n  seealso:\n  - type: Microsoft.Win32.RegistryKey.Name\n    commentId: P:Microsoft.Win32.RegistryKey.Name\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RegistryKey.ToString()\nreferences:\n- uid: Microsoft.Win32\n  isExternal: false\n  name: Microsoft.Win32\n  fullName: Microsoft.Win32\n  nameWithType: Microsoft.Win32\n  commentId: N:Microsoft.Win32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeRegistryHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle\n  nameWithType: SafeRegistryHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeRegistryHandle\n- uid: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: Microsoft.Win32.SafeHandles\n  fullName: Microsoft.Win32.SafeHandles\n  nameWithType: Microsoft.Win32.SafeHandles\n  commentId: N:Microsoft.Win32.SafeHandles\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: Microsoft.Win32.RegistryView\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryView\n  fullName: Microsoft.Win32.RegistryView\n  nameWithType: RegistryView\n  commentId: T:Microsoft.Win32.RegistryView\n- uid: Microsoft.Win32.RegistryKey\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryKey\n  fullName: Microsoft.Win32.RegistryKey\n  nameWithType: RegistryKey\n  commentId: T:Microsoft.Win32.RegistryKey\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: Microsoft.Win32.RegistryOptions\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryOptions\n  fullName: Microsoft.Win32.RegistryOptions\n  nameWithType: RegistryOptions\n  commentId: T:Microsoft.Win32.RegistryOptions\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: Microsoft.Win32.RegistryValueOptions\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryValueOptions\n  fullName: Microsoft.Win32.RegistryValueOptions\n  nameWithType: RegistryValueOptions\n  commentId: T:Microsoft.Win32.RegistryValueOptions\n- uid: Microsoft.Win32.RegistryValueKind\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryValueKind\n  fullName: Microsoft.Win32.RegistryValueKind\n  nameWithType: RegistryValueKind\n  commentId: T:Microsoft.Win32.RegistryValueKind\n- uid: Microsoft.Win32.RegistryHive\n  parent: Microsoft.Win32\n  isExternal: false\n  name: RegistryHive\n  fullName: Microsoft.Win32.RegistryHive\n  nameWithType: RegistryHive\n  commentId: T:Microsoft.Win32.RegistryHive\n- uid: System.Security.AccessControl.RegistryRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: RegistryRights\n  fullName: System.Security.AccessControl.RegistryRights\n  nameWithType: RegistryRights\n  commentId: T:System.Security.AccessControl.RegistryRights\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}