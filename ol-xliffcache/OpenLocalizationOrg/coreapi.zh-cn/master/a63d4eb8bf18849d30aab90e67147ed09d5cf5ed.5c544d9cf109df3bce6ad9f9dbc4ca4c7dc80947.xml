{"nodes":[{"pos":[747,757],"content":"IDbCommand","needQuote":true,"nodes":[{"content":"IDbCommand","pos":[0,10]}]},{"pos":[2176,2187],"content":"CommandText","needQuote":true,"nodes":[{"content":"CommandText","pos":[0,11]}]},{"pos":[3401,3415],"content":"CommandTimeout","needQuote":true,"nodes":[{"content":"CommandTimeout","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The time (in seconds) to wait for the command to execute.","pos":[4117,4179],"source":"\\n<p>The time (in seconds) to wait for the command to execute."},{"content":"The default value is 30 seconds.&lt;/p&gt;\\n","pos":[4180,4218],"source":" The default value is 30 seconds.</p>\\n"},{"content":"\\n&lt;p&gt;The property value assigned is less than 0.","pos":[4329,4377],"source":"\\n<p>The property value assigned is less than 0."},{"content":"&lt;/p&gt;\\n","pos":[4378,4384],"source":" </p>\\n"},{"pos":[4942,4953],"content":"CommandType","needQuote":true,"nodes":[{"content":"CommandType","pos":[0,11]}]},{"pos":[6116,6126],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The connection to the data source.&lt;/p&gt;\\n","pos":[6953,6998],"source":"\\n<p>The connection to the data source.</p>\\n"},{"pos":[7249,7259],"content":"Parameters","needQuote":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The parameters of the SQL statement or stored procedure.&lt;/p&gt;\\n","pos":[8014,8081],"source":"\\n<p>The parameters of the SQL statement or stored procedure.</p>\\n"},{"pos":[8448,8459],"content":"Transaction","needQuote":true,"nodes":[{"content":"Transaction","pos":[0,11]}]},{"content":"\\n&lt;p&gt;the &lt;strong&gt;Command&lt;/strong&gt; object of a .NET Framework data provider executes.","pos":[9199,9283],"source":"\\n<p>the <strong>Command</strong> object of a .NET Framework data provider executes."},{"content":"The default value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9284,9333],"source":" The default value is <strong>null</strong>.</p>\\n"},{"pos":[9603,9619],"content":"UpdatedRowSource","needQuote":true,"nodes":[{"content":"UpdatedRowSource","pos":[0,16]}]},{"pos":[11372,11380],"content":"Cancel()","needQuote":true,"nodes":[{"content":"Cancel()","pos":[0,8]}]},{"pos":[12193,12210],"content":"CreateParameter()","needQuote":true,"nodes":[{"content":"CreateParameter()","pos":[0,17]}]},{"content":"\\n&lt;p&gt;An &lt;strong&gt;IDbDataParameter&lt;/strong&gt; object.&lt;/p&gt;\\n","pos":[12945,13000],"source":"\\n<p>An <strong>IDbDataParameter</strong> object.</p>\\n"},{"pos":[13237,13254],"content":"ExecuteNonQuery()","needQuote":true,"nodes":[{"content":"ExecuteNonQuery()","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of rows affected.&lt;/p&gt;\\n","pos":[13974,14013],"source":"\\n<p>The number of rows affected.</p>\\n"},{"content":"\\n&lt;p&gt;The connection does not exist.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The connection is not open.","pos":[14140,14225],"source":"\\n<p>The connection does not exist.</p>\\n<p>-or- </p>\\n<p>The connection is not open."},{"content":"&lt;/p&gt;\\n","pos":[14226,14232],"source":" </p>\\n"},{"pos":[14463,14478],"content":"ExecuteReader()","needQuote":true,"nodes":[{"content":"ExecuteReader()","pos":[0,15]}]},{"pos":[15798,15828],"content":"ExecuteReader(CommandBehavior)","needQuote":true,"nodes":[{"content":"ExecuteReader(CommandBehavior)","pos":[0,30]}]},{"pos":[17484,17499],"content":"ExecuteScalar()","needQuote":true,"nodes":[{"content":"ExecuteScalar()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The first column of the first row in the resultset.&lt;/p&gt;\\n","pos":[18206,18268],"source":"\\n<p>The first column of the first row in the resultset.</p>\\n"},{"pos":[18479,18488],"content":"Prepare()","needQuote":true,"nodes":[{"content":"Prepare()","pos":[0,9]}]},{"pos":[19618,19629],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[19800,19809],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[19912,19919],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[19971,19972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19999,20000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20074,20081],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[20133,20134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20161,20162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20330,20341],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[20477,20483],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20614,20620],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20764,20769],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20926,20937],"content":"CommandType","needQuote":true,"nodes":[{"content":"CommandType","pos":[0,11]}]},{"pos":[21124,21137],"content":"IDbConnection","needQuote":true,"nodes":[{"content":"IDbConnection","pos":[0,13]}]},{"pos":[21341,21365],"content":"IDataParameterCollection","needQuote":true,"nodes":[{"content":"IDataParameterCollection","pos":[0,24]}]},{"pos":[21592,21606],"content":"IDbTransaction","needQuote":true,"nodes":[{"content":"IDbTransaction","pos":[0,14]}]},{"pos":[21804,21819],"content":"UpdateRowSource","needQuote":true,"nodes":[{"content":"UpdateRowSource","pos":[0,15]}]},{"pos":[22021,22037],"content":"IDbDataParameter","needQuote":true,"nodes":[{"content":"IDbDataParameter","pos":[0,16]}]},{"pos":[22237,22248],"content":"IDataReader","needQuote":true,"nodes":[{"content":"IDataReader","pos":[0,11]}]},{"pos":[22437,22452],"content":"CommandBehavior","needQuote":true,"nodes":[{"content":"CommandBehavior","pos":[0,15]}]},{"pos":[22634,22640],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22796,22813],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[23010,23035],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Data.IDbCommand\n  commentId: T:System.Data.IDbCommand\n  id: IDbCommand\n  parent: System.Data\n  children:\n  - System.Data.IDbCommand.Cancel\n  - System.Data.IDbCommand.CommandText\n  - System.Data.IDbCommand.CommandTimeout\n  - System.Data.IDbCommand.CommandType\n  - System.Data.IDbCommand.Connection\n  - System.Data.IDbCommand.CreateParameter\n  - System.Data.IDbCommand.ExecuteNonQuery\n  - System.Data.IDbCommand.ExecuteReader\n  - System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.IDbCommand.ExecuteScalar\n  - System.Data.IDbCommand.Parameters\n  - System.Data.IDbCommand.Prepare\n  - System.Data.IDbCommand.Transaction\n  - System.Data.IDbCommand.UpdatedRowSource\n  langs:\n  - csharp\n  - vb\n  name: IDbCommand\n  fullName: System.Data.IDbCommand\n  type: Interface\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IDbCommand\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 9\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\\n\"\n  syntax:\n    content: 'public interface IDbCommand : IDisposable'\n    content.vb: >-\n      Public Interface IDbCommand\n          Inherits IDisposable\n  seealso:\n  - type: System.Data.Common.DbDataAdapter\n    commentId: T:System.Data.Common.DbDataAdapter\n  - type: System.Data.IDbConnection\n    commentId: T:System.Data.IDbConnection\n  - type: System.Data.OleDb.OleDbCommand\n    commentId: T:System.Data.OleDb.OleDbCommand\n  - type: System.Data.SqlClient.SqlCommand\n    commentId: T:System.Data.SqlClient.SqlCommand\n  inheritedMembers:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IDbCommand\n- uid: System.Data.IDbCommand.CommandText\n  commentId: P:System.Data.IDbCommand.CommandText\n  id: CommandText\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandText\n  fullName: System.Data.IDbCommand.CommandText\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandText\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 24\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets or sets the text command to run against the data source.</p>\\n\"\n  syntax:\n    content: string CommandText { get; set; }\n    content.vb: Property CommandText As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The text command to execute. The default value is an empty string (\\\"\\\").</p>\\n\"\n  seealso:\n  - type: System.Data.IDbCommand.CommandType\n    commentId: P:System.Data.IDbCommand.CommandType\n  - type: System.Data.IDbCommand.UpdatedRowSource\n    commentId: P:System.Data.IDbCommand.UpdatedRowSource\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.CommandText\n- uid: System.Data.IDbCommand.CommandTimeout\n  commentId: P:System.Data.IDbCommand.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandTimeout\n  fullName: System.Data.IDbCommand.CommandTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandTimeout\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 30\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</p>\\n\"\n  syntax:\n    content: int CommandTimeout { get; set; }\n    content.vb: Property CommandTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property value assigned is less than 0. </p>\\n\"\n  seealso:\n  - type: System.Data.IDbCommand.CommandText\n    commentId: P:System.Data.IDbCommand.CommandText\n  - type: System.Data.IDbCommand.Connection\n    commentId: P:System.Data.IDbCommand.Connection\n  - type: System.Data.IDbCommand.CommandType\n    commentId: P:System.Data.IDbCommand.CommandType\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.CommandTimeout\n- uid: System.Data.IDbCommand.CommandType\n  commentId: P:System.Data.IDbCommand.CommandType\n  id: CommandType\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandType\n  fullName: System.Data.IDbCommand.CommandType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandType\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 36\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Indicates or specifies how the <xref href=\\\"System.Data.IDbCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is interpreted.</p>\\n\"\n  syntax:\n    content: CommandType CommandType { get; set; }\n    content.vb: Property CommandType As CommandType\n    parameters: []\n    return:\n      type: System.Data.CommandType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.CommandType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>Text</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.CommandType\n- uid: System.Data.IDbCommand.Connection\n  commentId: P:System.Data.IDbCommand.Connection\n  id: Connection\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: Connection\n  fullName: System.Data.IDbCommand.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connection\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 12\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.IDbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used by this instance of the <xref href=\\\"System.Data.IDbCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: IDbConnection Connection { get; set; }\n    content.vb: Property Connection As IDbConnection\n    parameters: []\n    return:\n      type: System.Data.IDbConnection\n      description: \"\\n<p>The connection to the data source.</p>\\n\"\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.Connection\n- uid: System.Data.IDbCommand.Parameters\n  commentId: P:System.Data.IDbCommand.Parameters\n  id: Parameters\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: Parameters\n  fullName: System.Data.IDbCommand.Parameters\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parameters\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 42\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.IDataParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: IDataParameterCollection Parameters { get; }\n    content.vb: ReadOnly Property Parameters As IDataParameterCollection\n    parameters: []\n    return:\n      type: System.Data.IDataParameterCollection\n      description: \"\\n<p>The parameters of the SQL statement or stored procedure.</p>\\n\"\n  seealso:\n  - type: System.Data.IDataParameter\n    commentId: T:System.Data.IDataParameter\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  nameWithType: IDbCommand.Parameters\n- uid: System.Data.IDbCommand.Transaction\n  commentId: P:System.Data.IDbCommand.Transaction\n  id: Transaction\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: Transaction\n  fullName: System.Data.IDbCommand.Transaction\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transaction\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 18\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets or sets the transaction within which the <strong>Command</strong> object of a .NET Framework data provider executes.</p>\\n\"\n  syntax:\n    content: IDbTransaction Transaction { get; set; }\n    content.vb: Property Transaction As IDbTransaction\n    parameters: []\n    return:\n      type: System.Data.IDbTransaction\n      description: \"\\n<p>the <strong>Command</strong> object of a .NET Framework data provider executes. The default value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.Transaction\n- uid: System.Data.IDbCommand.UpdatedRowSource\n  commentId: P:System.Data.IDbCommand.UpdatedRowSource\n  id: UpdatedRowSource\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: UpdatedRowSource\n  fullName: System.Data.IDbCommand.UpdatedRowSource\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UpdatedRowSource\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 49\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Gets or sets how command results are applied to the <xref href=\\\"System.Data.DataRow\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when used by the <xref href=\\\"System.Data.IDataAdapter.Update(System.Data.DataSet)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method of a <xref href=\\\"System.Data.Common.DbDataAdapter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: UpdateRowSource UpdatedRowSource { get; set; }\n    content.vb: Property UpdatedRowSource As UpdateRowSource\n    parameters: []\n    return:\n      type: System.Data.UpdateRowSource\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.UpdateRowSource\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>Both</strong> unless the command is automatically generated. Then the default is <strong>None</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value entered was not one of the <xref href=\\\"System.Data.UpdateRowSource\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  modifiers.csharp:\n  - get\n  - set\n  nameWithType: IDbCommand.UpdatedRowSource\n- uid: System.Data.IDbCommand.Cancel\n  commentId: M:System.Data.IDbCommand.Cancel\n  id: Cancel\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: Cancel()\n  fullName: System.Data.IDbCommand.Cancel()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Cancel\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 55\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Attempts to cancels the execution of an <xref href=\\\"System.Data.IDbCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: void Cancel()\n    content.vb: Sub Cancel\n  nameWithType: IDbCommand.Cancel()\n- uid: System.Data.IDbCommand.CreateParameter\n  commentId: M:System.Data.IDbCommand.CreateParameter\n  id: CreateParameter\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: CreateParameter()\n  fullName: System.Data.IDbCommand.CreateParameter()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateParameter\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 57\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Creates a new instance of an <xref href=\\\"System.Data.IDbDataParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: IDbDataParameter CreateParameter()\n    content.vb: Function CreateParameter As IDbDataParameter\n    return:\n      type: System.Data.IDbDataParameter\n      description: \"\\n<p>An <strong>IDbDataParameter</strong> object.</p>\\n\"\n  nameWithType: IDbCommand.CreateParameter()\n- uid: System.Data.IDbCommand.ExecuteNonQuery\n  commentId: M:System.Data.IDbCommand.ExecuteNonQuery\n  id: ExecuteNonQuery\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteNonQuery()\n  fullName: System.Data.IDbCommand.ExecuteNonQuery()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteNonQuery\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 59\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Executes an SQL statement against the <strong>Connection</strong> object of a .NET Framework data provider, and returns the number of rows affected.</p>\\n\"\n  syntax:\n    content: int ExecuteNonQuery()\n    content.vb: Function ExecuteNonQuery As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of rows affected.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The connection does not exist.</p>\\n<p>-or- </p>\\n<p>The connection is not open. </p>\\n\"\n  nameWithType: IDbCommand.ExecuteNonQuery()\n- uid: System.Data.IDbCommand.ExecuteReader\n  commentId: M:System.Data.IDbCommand.ExecuteReader\n  id: ExecuteReader\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReader()\n  fullName: System.Data.IDbCommand.ExecuteReader()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReader\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 61\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Executes the <xref href=\\\"System.Data.IDbCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> against the <xref href=\\\"System.Data.IDbCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds an <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: IDataReader ExecuteReader()\n    content.vb: Function ExecuteReader As IDataReader\n    return:\n      type: System.Data.IDataReader\n      description: \"\\n<p>An <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  nameWithType: IDbCommand.ExecuteReader()\n- uid: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  id: ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReader(CommandBehavior)\n  fullName: System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReader\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 63\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Executes the <xref href=\\\"System.Data.IDbCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> against the <xref href=\\\"System.Data.IDbCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and builds an <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using one of the <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: IDataReader ExecuteReader(CommandBehavior behavior)\n    content.vb: Function ExecuteReader(behavior As CommandBehavior) As IDataReader\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Data.IDataReader\n      description: \"\\n<p>An <xref href=\\\"System.Data.IDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  nameWithType: IDbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.IDbCommand.ExecuteScalar\n  commentId: M:System.Data.IDbCommand.ExecuteScalar\n  id: ExecuteScalar\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteScalar()\n  fullName: System.Data.IDbCommand.ExecuteScalar()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteScalar\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 65\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.</p>\\n\"\n  syntax:\n    content: object ExecuteScalar()\n    content.vb: Function ExecuteScalar As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>The first column of the first row in the resultset.</p>\\n\"\n  nameWithType: IDbCommand.ExecuteScalar()\n- uid: System.Data.IDbCommand.Prepare\n  commentId: M:System.Data.IDbCommand.Prepare\n  id: Prepare\n  parent: System.Data.IDbCommand\n  langs:\n  - csharp\n  - vb\n  name: Prepare()\n  fullName: System.Data.IDbCommand.Prepare()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Prepare\n    path: src/System.Data.Common/src/System/Data/IDbCommand.cs\n    startLine: 47\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data\n  summary: \"\\n<p>Creates a prepared (or compiled) version of the command on the data source.</p>\\n\"\n  syntax:\n    content: void Prepare()\n    content.vb: Sub Prepare\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.OleDb.OleDbCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not set.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Data.OleDb.OleDbCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not <xref href=\\\"System.Data.OleDb.OleDbConnection.Open\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  nameWithType: IDbCommand.Prepare()\nreferences:\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.CommandType\n  parent: System.Data\n  isExternal: false\n  name: CommandType\n  fullName: System.Data.CommandType\n  nameWithType: CommandType\n  commentId: T:System.Data.CommandType\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  fullName: System.Data.IDbConnection\n  nameWithType: IDbConnection\n  commentId: T:System.Data.IDbConnection\n- uid: System.Data.IDataParameterCollection\n  parent: System.Data\n  isExternal: false\n  name: IDataParameterCollection\n  fullName: System.Data.IDataParameterCollection\n  nameWithType: IDataParameterCollection\n  commentId: T:System.Data.IDataParameterCollection\n- uid: System.Data.IDbTransaction\n  parent: System.Data\n  isExternal: false\n  name: IDbTransaction\n  fullName: System.Data.IDbTransaction\n  nameWithType: IDbTransaction\n  commentId: T:System.Data.IDbTransaction\n- uid: System.Data.UpdateRowSource\n  parent: System.Data\n  isExternal: false\n  name: UpdateRowSource\n  fullName: System.Data.UpdateRowSource\n  nameWithType: UpdateRowSource\n  commentId: T:System.Data.UpdateRowSource\n- uid: System.Data.IDbDataParameter\n  parent: System.Data\n  isExternal: false\n  name: IDbDataParameter\n  fullName: System.Data.IDbDataParameter\n  nameWithType: IDbDataParameter\n  commentId: T:System.Data.IDbDataParameter\n- uid: System.Data.IDataReader\n  parent: System.Data\n  isExternal: false\n  name: IDataReader\n  fullName: System.Data.IDataReader\n  nameWithType: IDataReader\n  commentId: T:System.Data.IDataReader\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  fullName: System.Data.CommandBehavior\n  nameWithType: CommandBehavior\n  commentId: T:System.Data.CommandBehavior\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}