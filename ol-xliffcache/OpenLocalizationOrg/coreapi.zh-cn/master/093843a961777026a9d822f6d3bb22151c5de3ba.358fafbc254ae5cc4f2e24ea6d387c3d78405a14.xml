{"nodes":[{"pos":[897,912],"content":"XPathExpression","needQuote":true,"nodes":[{"content":"XPathExpression","pos":[0,15]}]},{"pos":[2164,2174],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[3490,3500],"content":"ReturnType","needQuote":true,"nodes":[{"content":"ReturnType","pos":[0,10]}]},{"pos":[4993,5019],"content":"AddSort(Object, IComparer)","needQuote":true,"nodes":[{"content":"AddSort(Object, IComparer)","pos":[0,26]}]},{"pos":[8191,8255],"content":"AddSort(Object, XmlSortOrder, XmlCaseOrder, String, XmlDataType)","needQuote":true,"nodes":[{"content":"AddSort(Object, XmlSortOrder, XmlCaseOrder, String, XmlDataType)","pos":[0,64]}]},{"pos":[12599,12606],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[13852,13867],"content":"Compile(String)","needQuote":true,"nodes":[{"content":"Compile(String)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An XPath expression.&lt;/p&gt;\\n","pos":[14704,14735],"source":"\\n<p>An XPath expression.</p>\\n"},{"content":"\\n&lt;p&gt;The XPath expression parameter is not a valid XPath expression.&lt;/p&gt;\\n","pos":[15039,15113],"source":"\\n<p>The XPath expression parameter is not a valid XPath expression.</p>\\n"},{"content":"\\n&lt;p&gt;The XPath expression is not valid.&lt;/p&gt;\\n","pos":[15224,15269],"source":"\\n<p>The XPath expression is not valid.</p>\\n"},{"pos":[15843,15881],"content":"Compile(String, IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"Compile(String, IXmlNamespaceResolver)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;An XPath expression.&lt;/p&gt;\\n","pos":[16972,17003],"source":"\\n<p>An XPath expression.</p>\\n"},{"content":"\\n&lt;p&gt;The XPath expression parameter is not a valid XPath expression.&lt;/p&gt;\\n","pos":[17564,17638],"source":"\\n<p>The XPath expression parameter is not a valid XPath expression.</p>\\n"},{"content":"\\n&lt;p&gt;The XPath expression is not valid.&lt;/p&gt;\\n","pos":[17749,17794],"source":"\\n<p>The XPath expression is not valid.</p>\\n"},{"pos":[18634,18667],"content":"SetContext(IXmlNamespaceResolver)","needQuote":true,"nodes":[{"content":"SetContext(IXmlNamespaceResolver)","pos":[0,33]}]},{"pos":[21050,21081],"content":"SetContext(XmlNamespaceManager)","needQuote":true,"nodes":[{"content":"SetContext(XmlNamespaceManager)","pos":[0,31]}]},{"pos":[23280,23296],"content":"System.Xml.XPath","needQuote":true,"nodes":[{"content":"System.Xml.XPath","pos":[0,16]}]},{"pos":[23457,23463],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23623,23633],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23728,23736],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23805,23806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23833,23834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23904,23912],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23981,23982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24009,24010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24193,24207],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24326,24332],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24399,24400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24450,24456],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24516,24517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24600,24606],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24673,24674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24724,24730],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24790,24791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25005,25027],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[25175,25181],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25248,25249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25299,25305],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25366,25367]},{"pos":[25422,25428],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25488,25489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25586,25592],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25659,25660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25710,25716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[25777,25778]},{"pos":[25833,25839],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25899,25900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26145,26176],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[26342,26357],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26433,26434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26484,26490],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26551,26552]},{"pos":[26607,26613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26673,26674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26780,26795],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[26871,26872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26922,26928],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[26989,26990]},{"pos":[27045,27051],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27111,27112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27342,27355],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[27456,27467],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27539,27540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27567,27568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27641,27652],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[27724,27725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27752,27753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27928,27937],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[28030,28037],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28105,28106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28133,28134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28203,28210],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[28278,28279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28306,28307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28482,28499],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[28608,28623],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28699,28700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28727,28728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28805,28820],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[28896,28897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28924,28925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29070,29076],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[29207,29213],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29387,29402],"content":"XPathResultType","needQuote":true,"nodes":[{"content":"XPathResultType","pos":[0,15]}]},{"pos":[29621,29630],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[29796,29814],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[30007,30019],"content":"XmlSortOrder","needQuote":true,"nodes":[{"content":"XmlSortOrder","pos":[0,12]}]},{"pos":[30228,30240],"content":"XmlCaseOrder","needQuote":true,"nodes":[{"content":"XmlCaseOrder","pos":[0,12]}]},{"pos":[30448,30459],"content":"XmlDataType","needQuote":true,"nodes":[{"content":"XmlDataType","pos":[0,11]}]},{"pos":[30668,30683],"content":"XPathExpression","needQuote":true,"nodes":[{"content":"XPathExpression","pos":[0,15]}]},{"pos":[30898,30919],"content":"IXmlNamespaceResolver","needQuote":true,"nodes":[{"content":"IXmlNamespaceResolver","pos":[0,21]}]},{"pos":[31097,31107],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[31271,31290],"content":"XmlNamespaceManager","needQuote":true,"nodes":[{"content":"XmlNamespaceManager","pos":[0,19]}]},{"pos":[31483,31497],"content":"XPathException","needQuote":true,"nodes":[{"content":"XPathException","pos":[0,14]}]},{"pos":[31697,31714],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Xml.XPath.XPathExpression\n  commentId: T:System.Xml.XPath.XPathExpression\n  id: XPathExpression\n  parent: System.Xml.XPath\n  children:\n  - System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)\n  - System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)\n  - System.Xml.XPath.XPathExpression.Clone\n  - System.Xml.XPath.XPathExpression.Compile(System.String)\n  - System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.XPathExpression.Expression\n  - System.Xml.XPath.XPathExpression.ReturnType\n  - System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  - System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  langs:\n  - csharp\n  - vb\n  name: XPathExpression\n  fullName: System.Xml.XPath.XPathExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XPathExpression\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 56\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>Provides a typed class that represents a compiled XPath expression.</p>\\n\"\n  syntax:\n    content: public abstract class XPathExpression\n    content.vb: Public MustInherit Class XPathExpression\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: XPathExpression\n- uid: System.Xml.XPath.XPathExpression.Expression\n  commentId: P:System.Xml.XPath.XPathExpression.Expression\n  id: Expression\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: Expression\n  fullName: System.Xml.XPath.XPathExpression.Expression\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Expression\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 59\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets a <strong>string</strong> representation of the <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract string Expression { get; }\n    content.vb: Public MustOverride ReadOnly Property Expression As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <strong>string</strong> representation of the <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathExpression.Expression\n- uid: System.Xml.XPath.XPathExpression.ReturnType\n  commentId: P:System.Xml.XPath.XPathExpression.ReturnType\n  id: ReturnType\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: ReturnType\n  fullName: System.Xml.XPath.XPathExpression.ReturnType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReturnType\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 60\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, gets the result type of the XPath expression.</p>\\n\"\n  syntax:\n    content: public abstract XPathResultType ReturnType { get; }\n    content.vb: Public MustOverride ReadOnly Property ReturnType As XPathResultType\n    parameters: []\n    return:\n      type: System.Xml.XPath.XPathResultType\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XPathResultType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value representing the result type of the XPath expression.</p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XPathResultType\n    commentId: T:System.Xml.XPath.XPathResultType\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: XPathExpression.ReturnType\n- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)\n  commentId: M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)\n  id: AddSort(System.Object,System.Collections.IComparer)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: AddSort(Object, IComparer)\n  fullName: System.Xml.XPath.XPathExpression.AddSort(System.Object, System.Collections.IComparer)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddSort\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 61\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, sorts the nodes selected by the XPath expression according to the specified <xref href=\\\"System.Collections.IComparer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public abstract void AddSort(object expr, IComparer comparer)\n    content.vb: Public MustOverride Sub AddSort(expr As Object, comparer As IComparer)\n    parameters:\n    - id: expr\n      type: System.Object\n      description: \"\\n<p>An object representing the sort key. This can be the <strong>string</strong> value of the node or an <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object with a compiled XPath expression.</p>\\n\"\n    - id: comparer\n      type: System.Collections.IComparer\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IComparer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that provides the specific data type comparisons for comparing two objects for equivalence. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or sort key includes a prefix and either an <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not provided, or the prefix cannot be found in the supplied <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.Collections.IComparer\n    commentId: T:System.Collections.IComparer\n  - type: System.Xml.XmlNamespaceManager\n    commentId: T:System.Xml.XmlNamespaceManager\n  - type: System.Collections.IComparer.Compare(System.Object,System.Object)\n    commentId: M:System.Collections.IComparer.Compare(System.Object,System.Object)\n  - type: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n    commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathExpression.AddSort(Object, IComparer)\n- uid: System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)\n  commentId: M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)\n  id: AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: AddSort(Object, XmlSortOrder, XmlCaseOrder, String, XmlDataType)\n  fullName: System.Xml.XPath.XPathExpression.AddSort(System.Object, System.Xml.XPath.XmlSortOrder, System.Xml.XPath.XmlCaseOrder, System.String, System.Xml.XPath.XmlDataType)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddSort\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 62\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, sorts the nodes selected by the XPath expression according to the supplied parameters.</p>\\n\"\n  syntax:\n    content: public abstract void AddSort(object expr, XmlSortOrder order, XmlCaseOrder caseOrder, string lang, XmlDataType dataType)\n    content.vb: Public MustOverride Sub AddSort(expr As Object, order As XmlSortOrder, caseOrder As XmlCaseOrder, lang As String, dataType As XmlDataType)\n    parameters:\n    - id: expr\n      type: System.Object\n      description: \"\\n<p>An object representing the sort key. This can be the <strong>string</strong> value of the node or an <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object with a compiled XPath expression. </p>\\n\"\n    - id: order\n      type: System.Xml.XPath.XmlSortOrder\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XmlSortOrder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the sort order. </p>\\n\"\n    - id: caseOrder\n      type: System.Xml.XPath.XmlCaseOrder\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XmlCaseOrder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating how to sort uppercase and lowercase letters.</p>\\n\"\n    - id: lang\n      type: System.String\n      description: \"\\n<p>The language to use for comparison. Uses the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that can be passed to the <xref href=\\\"System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method for the language types, for example, \\\"us-en\\\" for U.S. English. If an empty string is specified, the system environment is used to determine the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: dataType\n      type: System.Xml.XPath.XmlDataType\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XmlDataType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the sort order for the data type. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or sort key includes a prefix and either an <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not provided, or the prefix cannot be found in the supplied <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XmlSortOrder\n    commentId: T:System.Xml.XPath.XmlSortOrder\n  - type: System.Xml.XPath.XmlCaseOrder\n    commentId: T:System.Xml.XPath.XmlCaseOrder\n  - type: System.Xml.XPath.XmlDataType\n    commentId: T:System.Xml.XPath.XmlDataType\n  - type: System.Xml.XmlNamespaceManager\n    commentId: T:System.Xml.XmlNamespaceManager\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)\n    commentId: M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)\n  - type: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n    commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathExpression.AddSort(Object, XmlSortOrder, XmlCaseOrder, String, XmlDataType)\n- uid: System.Xml.XPath.XPathExpression.Clone\n  commentId: M:System.Xml.XPath.XPathExpression.Clone\n  id: Clone\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Xml.XPath.XPathExpression.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clone\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 63\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, returns a clone of this <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public abstract XPathExpression Clone()\n    content.vb: Public MustOverride Function Clone As XPathExpression\n    return:\n      type: System.Xml.XPath.XPathExpression\n      description: \"\\n<p>A new <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathExpression.Clone()\n- uid: System.Xml.XPath.XPathExpression.Compile(System.String)\n  commentId: M:System.Xml.XPath.XPathExpression.Compile(System.String)\n  id: Compile(System.String)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: Compile(String)\n  fullName: System.Xml.XPath.XPathExpression.Compile(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Compile\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 64\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>Compiles the XPath expression specified and returns an <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the XPath expression.</p>\\n\"\n  syntax:\n    content: public static XPathExpression Compile(string xpath)\n    content.vb: Public Shared Function Compile(xpath As String) As XPathExpression\n    parameters:\n    - id: xpath\n      type: System.String\n      description: \"\\n<p>An XPath expression.</p>\\n\"\n    return:\n      type: System.Xml.XPath.XPathExpression\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The XPath expression parameter is not a valid XPath expression.</p>\\n\"\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The XPath expression is not valid.</p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XPathResultType\n    commentId: T:System.Xml.XPath.XPathResultType\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XPathExpression.Compile(String)\n- uid: System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  id: Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: Compile(String, IXmlNamespaceResolver)\n  fullName: System.Xml.XPath.XPathExpression.Compile(System.String, System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Compile\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 65\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>Compiles the specified XPath expression, with the <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified for namespace resolution, and returns an <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the XPath expression.</p>\\n\"\n  syntax:\n    content: public static XPathExpression Compile(string xpath, IXmlNamespaceResolver nsResolver)\n    content.vb: Public Shared Function Compile(xpath As String, nsResolver As IXmlNamespaceResolver) As XPathExpression\n    parameters:\n    - id: xpath\n      type: System.String\n      description: \"\\n<p>An XPath expression.</p>\\n\"\n    - id: nsResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface for namespace resolution.</p>\\n\"\n    return:\n      type: System.Xml.XPath.XPathExpression\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XPath.XPathExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The XPath expression parameter is not a valid XPath expression.</p>\\n\"\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The XPath expression is not valid.</p>\\n\"\n  seealso:\n  - type: System.Xml.IXmlNamespaceResolver\n    commentId: T:System.Xml.IXmlNamespaceResolver\n  - type: System.Xml.XPath.XPathResultType\n    commentId: T:System.Xml.XPath.XPathResultType\n  - type: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n    commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: XPathExpression.Compile(String, IXmlNamespaceResolver)\n- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  id: SetContext(System.Xml.IXmlNamespaceResolver)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: SetContext(IXmlNamespaceResolver)\n  fullName: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetContext\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 66\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, specifies the <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for namespace resolution.</p>\\n\"\n  syntax:\n    content: public abstract void SetContext(IXmlNamespaceResolver nsResolver)\n    content.vb: Public MustOverride Sub SetContext(nsResolver As IXmlNamespaceResolver)\n    parameters:\n    - id: nsResolver\n      type: System.Xml.IXmlNamespaceResolver\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface to use for namespace resolution.</p>\\n\"\n  exceptions:\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object parameter is not derived from <xref href=\\\"System.Xml.IXmlNamespaceResolver\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n    commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  - type: System.Xml.IXmlNamespaceResolver\n    commentId: T:System.Xml.IXmlNamespaceResolver\n  - type: System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n    commentId: M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathExpression.SetContext(IXmlNamespaceResolver)\n- uid: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  id: SetContext(System.Xml.XmlNamespaceManager)\n  parent: System.Xml.XPath.XPathExpression\n  langs:\n  - csharp\n  - vb\n  name: SetContext(XmlNamespaceManager)\n  fullName: System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetContext\n    path: src/System.Xml.XPath/ref/System.Xml.XPath.cs\n    startLine: 67\n  assemblies:\n  - System.Xml.XPath\n  namespace: System.Xml.XPath\n  summary: \"\\n<p>When overridden in a derived class, specifies the <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for namespace resolution.</p>\\n\"\n  syntax:\n    content: public abstract void SetContext(XmlNamespaceManager nsManager)\n    content.vb: Public MustOverride Sub SetContext(nsManager As XmlNamespaceManager)\n    parameters:\n    - id: nsManager\n      type: System.Xml.XmlNamespaceManager\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for namespace resolution. </p>\\n\"\n  exceptions:\n  - type: System.Xml.XPath.XPathException\n    commentId: T:System.Xml.XPath.XPathException\n    description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object parameter is not derived from the <xref href=\\\"System.Xml.XmlNamespaceManager\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  seealso:\n  - type: System.Xml.XmlNamespaceManager\n    commentId: T:System.Xml.XmlNamespaceManager\n  - type: System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n    commentId: M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)\n  - type: System.Xml.IXmlNamespaceResolver\n    commentId: T:System.Xml.IXmlNamespaceResolver\n  - type: System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n    commentId: M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: XPathExpression.SetContext(XmlNamespaceManager)\nreferences:\n- uid: System.Xml.XPath\n  isExternal: false\n  name: System.Xml.XPath\n  fullName: System.Xml.XPath\n  commentId: N:System.Xml.XPath\n  nameWithType: System.Xml.XPath\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XPath.XPathResultType\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathResultType\n  fullName: System.Xml.XPath.XPathResultType\n  commentId: T:System.Xml.XPath.XPathResultType\n  nameWithType: XPathResultType\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  fullName: System.Collections.IComparer\n  commentId: T:System.Collections.IComparer\n  nameWithType: IComparer\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Xml.XPath.XmlSortOrder\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XmlSortOrder\n  fullName: System.Xml.XPath.XmlSortOrder\n  commentId: T:System.Xml.XPath.XmlSortOrder\n  nameWithType: XmlSortOrder\n- uid: System.Xml.XPath.XmlCaseOrder\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XmlCaseOrder\n  fullName: System.Xml.XPath.XmlCaseOrder\n  commentId: T:System.Xml.XPath.XmlCaseOrder\n  nameWithType: XmlCaseOrder\n- uid: System.Xml.XPath.XmlDataType\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XmlDataType\n  fullName: System.Xml.XPath.XmlDataType\n  commentId: T:System.Xml.XPath.XmlDataType\n  nameWithType: XmlDataType\n- uid: System.Xml.XPath.XPathExpression\n  parent: System.Xml.XPath\n  isExternal: false\n  name: XPathExpression\n  fullName: System.Xml.XPath.XPathExpression\n  commentId: T:System.Xml.XPath.XPathExpression\n  nameWithType: XPathExpression\n- uid: System.Xml.IXmlNamespaceResolver\n  parent: System.Xml\n  isExternal: false\n  name: IXmlNamespaceResolver\n  fullName: System.Xml.IXmlNamespaceResolver\n  commentId: T:System.Xml.IXmlNamespaceResolver\n  nameWithType: IXmlNamespaceResolver\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Xml.XmlNamespaceManager\n  parent: System.Xml\n  isExternal: false\n  name: XmlNamespaceManager\n  fullName: System.Xml.XmlNamespaceManager\n  commentId: T:System.Xml.XmlNamespaceManager\n  nameWithType: XmlNamespaceManager\n- uid: System.Xml.XPath.XPathException\n  isExternal: false\n  name: XPathException\n  fullName: System.Xml.XPath.XPathException\n  commentId: T:System.Xml.XPath.XPathException\n  nameWithType: XPathException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}