{"nodes":[{"pos":[3011,3034],"content":"DirectoryObjectSecurity","needQuote":true,"nodes":[{"content":"DirectoryObjectSecurity","pos":[0,23]}]},{"pos":[8831,8856],"content":"DirectoryObjectSecurity()","needQuote":true,"nodes":[{"content":"DirectoryObjectSecurity()","pos":[0,25]}]},{"pos":[10198,10247],"content":"DirectoryObjectSecurity(CommonSecurityDescriptor)","needQuote":true,"nodes":[{"content":"DirectoryObjectSecurity(CommonSecurityDescriptor)","pos":[0,49]}]},{"pos":[12699,12818],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)","pos":[0,119]}]},{"content":"\\n&lt;p&gt;The access mask of this rule.","pos":[14757,14791],"source":"\\n<p>The access mask of this rule."},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.&lt;/p&gt;\\n","pos":[14792,14918],"source":" The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\\n"},{"content":"\\n&lt;p&gt;true if this rule is inherited from a parent container.&lt;/p&gt;\\n","pos":[14989,15055],"source":"\\n<p>true if this rule is inherited from a parent container.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the inheritance properties of the access rule.&lt;/p&gt;\\n","pos":[15163,15230],"source":"\\n<p>Specifies the inheritance properties of the access rule.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the valid access control type.&lt;/p&gt;\\n","pos":[15702,15753],"source":"\\n<p>Specifies the valid access control type.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the new access rule applies.&lt;/p&gt;\\n","pos":[15820,15905],"source":"\\n<p>The identity of the class of objects to which the new access rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the new access rule.&lt;/p&gt;\\n","pos":[15981,16073],"source":"\\n<p>The identity of the class of child objects which can inherit the new access rule.</p>\\n"},{"pos":[16977,17008],"content":"AddAccessRule(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(ObjectAccessRule)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The access rule to add.&lt;/p&gt;\\n","pos":[18065,18099],"source":"\\n<p>The access rule to add.</p>\\n"},{"pos":[18652,18681],"content":"AddAuditRule(ObjectAuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(ObjectAuditRule)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The audit rule to add.&lt;/p&gt;\\n","pos":[19722,19755],"source":"\\n<p>The audit rule to add.</p>\\n"},{"pos":[20873,20984],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)","pos":[0,111]}]},{"content":"\\n&lt;p&gt;The access mask of this rule.","pos":[22896,22930],"source":"\\n<p>The access mask of this rule."},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.&lt;/p&gt;\\n","pos":[22931,23057],"source":" The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this rule is inherited from a parent container.&lt;/p&gt;\\n","pos":[23128,23213],"source":"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the inheritance properties of the audit rule.&lt;/p&gt;\\n","pos":[23321,23387],"source":"\\n<p>Specifies the inheritance properties of the audit rule.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the conditions for which the rule is audited.&lt;/p&gt;\\n","pos":[23852,23918],"source":"\\n<p>Specifies the conditions for which the rule is audited.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of objects to which the new audit rule applies.&lt;/p&gt;\\n","pos":[23985,24069],"source":"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n"},{"content":"\\n&lt;p&gt;The identity of the class of child objects which can inherit the new audit rule.&lt;/p&gt;\\n","pos":[24145,24236],"source":"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n"},{"pos":[25118,25156],"content":"GetAccessRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAccessRules(Boolean, Boolean, Type)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to include access rules explicitly set for the object.&lt;/p&gt;\\n","pos":[26203,26292],"source":"\\n<p>\\n<strong>true</strong> to include access rules explicitly set for the object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to include inherited access rules.&lt;/p&gt;\\n","pos":[26368,26437],"source":"\\n<p>\\n<strong>true</strong> to include inherited access rules.</p>\\n"},{"pos":[27565,27602],"content":"GetAuditRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAuditRules(Boolean, Boolean, Type)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to include audit rules explicitly set for the object.&lt;/p&gt;\\n","pos":[28644,28732],"source":"\\n<p>\\n<strong>true</strong> to include audit rules explicitly set for the object.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to include inherited audit rules.&lt;/p&gt;\\n","pos":[28808,28876],"source":"\\n<p>\\n<strong>true</strong> to include inherited audit rules.</p>\\n"},{"pos":[30211,30275],"content":"ModifyAccess(AccessControlModification, AccessRule, out Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, out Boolean)","pos":[0,64]}]},{"content":"\\n&lt;p&gt;The modification to apply to the DACL.&lt;/p&gt;\\n","pos":[31572,31621],"source":"\\n<p>The modification to apply to the DACL.</p>\\n"},{"content":"\\n&lt;p&gt;The access rule to modify.&lt;/p&gt;\\n","pos":[31711,31748],"source":"\\n<p>The access rule to modify.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the DACL is successfully modified; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[31816,31923],"source":"\\n<p>\\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the DACL is successfully modified; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[31984,32091],"source":"\\n<p>\\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[33476,33538],"content":"ModifyAudit(AccessControlModification, AuditRule, out Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, out Boolean)","pos":[0,62]}]},{"content":"\\n&lt;p&gt;The modification to apply to the SACL.&lt;/p&gt;\\n","pos":[34821,34870],"source":"\\n<p>The modification to apply to the SACL.</p>\\n"},{"content":"\\n&lt;p&gt;The audit rule to modify.&lt;/p&gt;\\n","pos":[34959,34995],"source":"\\n<p>The audit rule to modify.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the SACL is successfully modified; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35063,35170],"source":"\\n<p>\\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the SACL is successfully modified; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35231,35338],"source":"\\n<p>\\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[36533,36567],"content":"RemoveAccessRule(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(ObjectAccessRule)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[37731,37768],"source":"\\n<p>The access rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the access rule was successfully removed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[37829,37943],"source":"\\n<p>\\n<strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[38523,38560],"content":"RemoveAccessRuleAll(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(ObjectAccessRule)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[39705,39742],"source":"\\n<p>The access rule to remove.</p>\\n"},{"pos":[40340,40382],"content":"RemoveAccessRuleSpecific(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(ObjectAccessRule)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[41524,41561],"source":"\\n<p>The access rule to remove.</p>\\n"},{"pos":[42134,42166],"content":"RemoveAuditRule(ObjectAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(ObjectAuditRule)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[43310,43346],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the audit rule was successfully removed; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43407,43520],"source":"\\n<p>\\n<strong>true</strong> if the audit rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[44092,44127],"content":"RemoveAuditRuleAll(ObjectAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(ObjectAuditRule)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[45255,45291],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"pos":[45881,45921],"content":"RemoveAuditRuleSpecific(ObjectAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(ObjectAuditRule)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[47046,47082],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"pos":[47656,47689],"content":"ResetAccessRule(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(ObjectAccessRule)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The access rule to reset.&lt;/p&gt;\\n","pos":[48788,48824],"source":"\\n<p>The access rule to reset.</p>\\n"},{"pos":[49385,49416],"content":"SetAccessRule(ObjectAccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(ObjectAccessRule)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The access rule to set.&lt;/p&gt;\\n","pos":[50592,50626],"source":"\\n<p>The access rule to set.</p>\\n"},{"pos":[51179,51208],"content":"SetAuditRule(ObjectAuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(ObjectAuditRule)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The audit rule to set.&lt;/p&gt;\\n","pos":[52366,52399],"source":"\\n<p>The audit rule to set.</p>\\n"},{"pos":[52612,52641],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[52841,52847],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53046,53060],"content":"ObjectSecurity","needQuote":true,"nodes":[{"content":"ObjectSecurity","pos":[0,14]}]},{"pos":[53353,53363],"content":"ReadLock()","needQuote":true,"nodes":[{"content":"ReadLock()","pos":[0,10]}]},{"pos":[53520,53528],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[53607,53608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53635,53636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53737,53745],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[53824,53825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53852,53853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54127,54139],"content":"ReadUnlock()","needQuote":true,"nodes":[{"content":"ReadUnlock()","pos":[0,12]}]},{"pos":[54300,54310],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[54391,54392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54419,54420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54523,54533],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[54614,54615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54642,54643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54920,54931],"content":"WriteLock()","needQuote":true,"nodes":[{"content":"WriteLock()","pos":[0,11]}]},{"pos":[55090,55099],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[55179,55180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55207,55208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55310,55319],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[55399,55400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55427,55428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55705,55718],"content":"WriteUnlock()","needQuote":true,"nodes":[{"content":"WriteUnlock()","pos":[0,13]}]},{"pos":[55881,55892],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[55974,55975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56002,56003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56107,56118],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[56200,56201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56228,56229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56572,56610],"content":"Persist(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections)","pos":[0,38]}]},{"pos":[56898,56905],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[56983,56984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57034,57040],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[57101,57102]},{"pos":[57195,57216],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[57293,57294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57461,57468],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[57546,57547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57597,57603],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[57664,57665]},{"pos":[57758,57779],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[57856,57857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58303,58350],"content":"Persist(Boolean, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(Boolean, String, AccessControlSections)","pos":[0,47]}]},{"pos":[58669,58676],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[58754,58755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58806,58813],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[58875,58876]},{"pos":[58931,58937],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[58998,58999]},{"pos":[59092,59113],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[59190,59191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59373,59380],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[59458,59459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59510,59517],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[59579,59580]},{"pos":[59635,59641],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[59702,59703]},{"pos":[59796,59817],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[59894,59895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60378,60420],"content":"Persist(SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections)","pos":[0,42]}]},{"pos":[60764,60771],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[60849,60850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60928,60938],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[61027,61028]},{"pos":[61121,61142],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[61219,61220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61415,61422],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[61500,61501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61579,61589],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[61678,61679]},{"pos":[61772,61793],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[61870,61871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62281,62295],"content":"GetOwner(Type)","needQuote":true,"nodes":[{"content":"GetOwner(Type)","pos":[0,14]}]},{"pos":[62476,62484],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[62563,62564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62612,62616],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62674,62675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62789,62797],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[62876,62877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62925,62929],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62987,62988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63321,63348],"content":"SetOwner(IdentityReference)","needQuote":true,"nodes":[{"content":"SetOwner(IdentityReference)","pos":[0,27]}]},{"pos":[63593,63601],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[63680,63681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63761,63778],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[63868,63869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64015,64023],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[64102,64103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64183,64200],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[64290,64291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64637,64651],"content":"GetGroup(Type)","needQuote":true,"nodes":[{"content":"GetGroup(Type)","pos":[0,14]}]},{"pos":[64832,64840],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[64919,64920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64968,64972],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65030,65031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65145,65153],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[65232,65233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65281,65285],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65343,65344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65677,65704],"content":"SetGroup(IdentityReference)","needQuote":true,"nodes":[{"content":"SetGroup(IdentityReference)","pos":[0,27]}]},{"pos":[65949,65957],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[66036,66037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66117,66134],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[66224,66225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66371,66379],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[66458,66459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66539,66556],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[66646,66647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67033,67068],"content":"PurgeAccessRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAccessRules(IdentityReference)","pos":[0,35]}]},{"pos":[67329,67345],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[67432,67433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67513,67530],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[67620,67621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67775,67791],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[67878,67879],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67959,67976],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[68066,68067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68468,68502],"content":"PurgeAuditRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAuditRules(IdentityReference)","pos":[0,34]}]},{"pos":[68761,68776],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[68862,68863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68943,68960],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[69050,69051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69204,69219],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[69305,69306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69386,69403],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[69493,69494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69887,69928],"content":"SetAccessRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection(Boolean, Boolean)","pos":[0,41]}]},{"pos":[70176,70199],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[70293,70294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70345,70352],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[70414,70415]},{"pos":[70471,70478],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70539,70540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70687,70710],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[70804,70805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70856,70863],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[70925,70926]},{"pos":[70982,70989],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71050,71051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71444,71484],"content":"SetAuditRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection(Boolean, Boolean)","pos":[0,40]}]},{"pos":[71730,71752],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[71845,71846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71897,71904],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[71966,71967]},{"pos":[72023,72030],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72091,72092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72238,72260],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[72353,72354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72405,72412],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[72474,72475]},{"pos":[72531,72538],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72599,72600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72964,72991],"content":"IsSddlConversionSupported()","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported()","pos":[0,27]}]},{"pos":[73182,73207],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[73303,73304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73331,73332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73450,73475],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[73571,73572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73599,73600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73980,74032],"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","pos":[0,52]}]},{"pos":[74335,74364],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[74464,74465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74553,74574],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[74651,74652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74827,74856],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[74956,74957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75045,75066],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[75143,75144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75567,75604],"content":"SetSecurityDescriptorSddlForm(String)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String)","pos":[0,37]}]},{"pos":[75831,75860],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[75960,75961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76011,76017],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76077,76078],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76215,76244],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[76344,76345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76395,76401],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[76461,76462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76884,76944],"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","pos":[0,60]}]},{"pos":[77276,77305],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[77405,77406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77456,77462],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[77523,77524]},{"pos":[77617,77638],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[77715,77716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77905,77934],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[78034,78035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78085,78091],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[78152,78153]},{"pos":[78246,78267],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[78344,78345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78778,78811],"content":"GetSecurityDescriptorBinaryForm()","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm()","pos":[0,33]}]},{"pos":[79014,79045],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[79147,79148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79175,79176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79300,79331],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[79433,79434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79461,79462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79817,79856],"content":"SetSecurityDescriptorBinaryForm(Byte[])","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[])","pos":[0,39]}]},{"pos":[80245,80276],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[80378,80379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80427,80431],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[80490,80492]},{"pos":[80523,80524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80663,80694],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[80796,80797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80845,80849],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[80907,80909],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[80937,80938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81440,81502],"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","pos":[0,62]}]},{"pos":[82072,82103],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[82205,82206],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82254,82258],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[82317,82319]},{"content":",","pos":[82351,82352]},{"pos":[82445,82466],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[82543,82544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82735,82766],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[82868,82869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82917,82921],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[82979,82981],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[83010,83011]},{"pos":[83104,83125],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[83202,83203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83835,83899],"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","pos":[0,64]}]},{"pos":[84299,84315],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[84402,84403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84495,84520],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[84602,84603]},{"pos":[84685,84695],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[84762,84763]},{"pos":[84819,84826],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84887,84888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85111,85127],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[85214,85215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85307,85332],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[85414,85415]},{"pos":[85497,85507],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[85574,85575]},{"pos":[85631,85638],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[85699,85700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86267,86329],"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","pos":[0,62]}]},{"pos":[86725,86740],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[86826,86827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86919,86944],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[87026,87027]},{"pos":[87108,87117],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[87183,87184]},{"pos":[87240,87247],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87308,87309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87530,87545],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[87631,87632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87724,87749],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[87831,87832]},{"pos":[87913,87922],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[87988,87989]},{"pos":[88045,88052],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[88113,88114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88781,88888],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"pos":[89496,89513],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[89601,89602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89682,89699],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[89790,89791]},{"pos":[89845,89850],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[89910,89911]},{"pos":[89967,89974],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[90036,90037]},{"pos":[90125,90141],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[90214,90215]},{"pos":[90303,90319],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[90392,90393]},{"pos":[90482,90499],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[90572,90573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90898,90915],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[91003,91004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91084,91101],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[91192,91193]},{"pos":[91247,91252],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91312,91313]},{"pos":[91369,91376],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[91438,91439]},{"pos":[91527,91543],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[91616,91617]},{"pos":[91705,91721],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[91794,91795]},{"pos":[91884,91901],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[91974,91975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92783,92882],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"pos":[93474,93490],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[93577,93578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93658,93675],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[93766,93767]},{"pos":[93821,93826],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93886,93887]},{"pos":[93943,93950],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[94012,94013]},{"pos":[94101,94117],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[94190,94191]},{"pos":[94279,94295],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[94368,94369]},{"pos":[94451,94461],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[94527,94528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94845,94861],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[94948,94949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95029,95046],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[95137,95138]},{"pos":[95192,95197],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[95257,95258]},{"pos":[95314,95321],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[95383,95384]},{"pos":[95472,95488],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[95561,95562]},{"pos":[95650,95666],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[95739,95740]},{"pos":[95822,95832],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[95898,95899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96481,96494],"content":"OwnerModified","needQuote":true,"nodes":[{"content":"OwnerModified","pos":[0,13]}]},{"pos":[96834,96847],"content":"GroupModified","needQuote":true,"nodes":[{"content":"GroupModified","pos":[0,13]}]},{"pos":[97192,97210],"content":"AuditRulesModified","needQuote":true,"nodes":[{"content":"AuditRulesModified","pos":[0,18]}]},{"pos":[97571,97590],"content":"AccessRulesModified","needQuote":true,"nodes":[{"content":"AccessRulesModified","pos":[0,19]}]},{"pos":[97946,97957],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[98282,98286],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[98609,98632],"content":"AreAccessRulesProtected","needQuote":true,"nodes":[{"content":"AreAccessRulesProtected","pos":[0,23]}]},{"pos":[99011,99033],"content":"AreAuditRulesProtected","needQuote":true,"nodes":[{"content":"AreAuditRulesProtected","pos":[0,22]}]},{"pos":[99410,99433],"content":"AreAccessRulesCanonical","needQuote":true,"nodes":[{"content":"AreAccessRulesCanonical","pos":[0,23]}]},{"pos":[99812,99834],"content":"AreAuditRulesCanonical","needQuote":true,"nodes":[{"content":"AreAuditRulesCanonical","pos":[0,22]}]},{"pos":[100203,100218],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[100565,100579],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[100922,100935],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[101207,101217],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[101312,101320],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[101389,101390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101417,101418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101488,101496],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[101565,101566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101593,101594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101777,101791],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[101910,101916],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[101983,101984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102034,102040],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102100,102101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102184,102190],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[102257,102258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102308,102314],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102374,102375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102589,102611],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[102759,102765],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[102832,102833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102883,102889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[102950,102951]},{"pos":[103006,103012],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[103072,103073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103170,103176],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[103243,103244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103294,103300],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[103361,103362]},{"pos":[103417,103423],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[103483,103484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103729,103760],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[103926,103941],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[104017,104018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104068,104074],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[104135,104136]},{"pos":[104191,104197],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[104257,104258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104364,104379],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[104455,104456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104506,104512],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[104573,104574]},{"pos":[104629,104635],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[104695,104696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104926,104939],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[105040,105051],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[105123,105124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105151,105152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105225,105236],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[105308,105309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105336,105337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105512,105521],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[105614,105621],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[105689,105690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105717,105718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105787,105794],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[105862,105863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105890,105891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106066,106083],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[106192,106207],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[106283,106284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106311,106312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106389,106404],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[106480,106481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106508,106509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106654,106660],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[106855,106879],"content":"CommonSecurityDescriptor","needQuote":true,"nodes":[{"content":"CommonSecurityDescriptor","pos":[0,24]}]},{"pos":[107173,107190],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[107405,107410],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[107553,107560],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[107764,107780],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[108057,108073],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[108351,108368],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[108590,108594],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[108783,108793],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[108991,109016],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[109260,109276],"content":"ObjectAccessRule","needQuote":true,"nodes":[{"content":"ObjectAccessRule","pos":[0,16]}]},{"pos":[109552,109567],"content":"ObjectAuditRule","needQuote":true,"nodes":[{"content":"ObjectAuditRule","pos":[0,15]}]},{"pos":[109835,109845],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[110097,110106],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[110304,110308],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[110514,110541],"content":"AuthorizationRuleCollection","needQuote":true,"nodes":[{"content":"AuthorizationRuleCollection","pos":[0,27]}]},{"pos":[110990,111050],"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","pos":[0,60]}]},{"pos":[111442,111454],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[111537,111538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111630,111655],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[111737,111738]},{"pos":[111820,111830],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[111897,111898]},{"pos":[111954,111961],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[112022,112023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112242,112254],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[112337,112338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112430,112455],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[112537,112538]},{"pos":[112620,112630],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[112697,112698]},{"pos":[112754,112761],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[112822,112823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113250,113275],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"pos":[113716,113774],"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","pos":[0,58]}]},{"pos":[114162,114173],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[114255,114256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114348,114373],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[114455,114456]},{"pos":[114537,114546],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[114612,114613]},{"pos":[114669,114676],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[114737,114738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114955,114966],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[115048,115049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115141,115166],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[115248,115249]},{"pos":[115330,115339],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[115405,115406]},{"pos":[115462,115469],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[115530,115531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Security.AccessControl.DirectoryObjectSecurity\n  commentId: T:System.Security.AccessControl.DirectoryObjectSecurity\n  id: DirectoryObjectSecurity\n  parent: System.Security.AccessControl\n  children:\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  langs:\n  - csharp\n  - vb\n  name: DirectoryObjectSecurity\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DirectoryObjectSecurity\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 25\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public abstract class DirectoryObjectSecurity : ObjectSecurity\n    content.vb: >-\n      <SecurityCritical>\n\n      Public MustInherit Class DirectoryObjectSecurity\n          Inherits ObjectSecurity\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  inheritedMembers:\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DirectoryObjectSecurity\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: DirectoryObjectSecurity()\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 28\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DirectoryObjectSecurity()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: DirectoryObjectSecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(System.Security.AccessControl.CommonSecurityDescriptor)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 29\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified security descriptor.</p>\\n\"\n  syntax:\n    content: protected DirectoryObjectSecurity(CommonSecurityDescriptor securityDescriptor)\n    content.vb: Protected Sub New(securityDescriptor As CommonSecurityDescriptor)\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: \"\\n<p>The security descriptor to be associated with the new <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>object.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleFactory\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 30\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.AccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public virtual AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Overridable Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType, objectType As Guid, inheritedObjectType As Guid) As AccessRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>true if this rule is inherited from a parent container.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Specifies the inheritance properties of the access rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\\\"System.Security.AccessControl.InheritanceFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>Specifies the valid access control type.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the new access rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the new access rule.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.AccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that this method creates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAccessRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 31\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void AddAccessRule(ObjectAccessRule rule)\n    content.vb: Protected Sub AddAccessRule(rule As ObjectAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to add.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAuditRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 32\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void AddAuditRule(ObjectAuditRule rule)\n    content.vb: Protected Sub AddAuditRule(rule As ObjectAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The audit rule to add.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags, System.Guid, System.Guid)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleFactory\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 33\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public virtual AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectType, Guid inheritedObjectType)\n    content.vb: Public Overridable Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags, objectType As Guid, inheritedObjectType As Guid) As AuditRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>Specifies the inheritance properties of the audit rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\\\"System.Security.AccessControl.InheritanceFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>Specifies the conditions for which the rule is audited.</p>\\n\"\n    - id: objectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of objects to which the new audit rule applies.</p>\\n\"\n    - id: inheritedObjectType\n      type: System.Guid\n      description: \"\\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that this method creates.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: GetAccessRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAccessRules\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 34\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets a collection of the access rules associated with the specified security identifier.</p>\\n\"\n  syntax:\n    content: public AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)\n    content.vb: Public Function GetAccessRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to include access rules explicitly set for the object.</p>\\n\"\n    - id: includeInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to include inherited access rules.</p>\\n\"\n    - id: targetType\n      type: System.Type\n      description: \"\\n<p>The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: \"\\n<p>The collection of access rules associated with the specified <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: GetAuditRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetAuditRules\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 35\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Gets a collection of the audit rules associated with the specified security identifier.</p>\\n\"\n  syntax:\n    content: public AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)\n    content.vb: Public Function GetAuditRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection\n    parameters:\n    - id: includeExplicit\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to include audit rules explicitly set for the object.</p>\\n\"\n    - id: includeInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to include inherited audit rules.</p>\\n\"\n    - id: targetType\n      type: System.Type\n      description: \"\\n<p>The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuthorizationRuleCollection\n      description: \"\\n<p>The collection of audit rules associated with the specified <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: ModifyAccess(AccessControlModification, AccessRule, out Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, out System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ModifyAccess\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 36\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected override bool ModifyAccess(AccessControlModification modification, AccessRule rule, out bool modified)\n    content.vb: Protected Overrides Function ModifyAccess(modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: \"\\n<p>The modification to apply to the DACL.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>The access rule to modify.</p>\\n\"\n    - id: modified\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  fullName.vb: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, ByRef System.Boolean)\n  name.vb: ModifyAccess(AccessControlModification, AccessRule, ByRef Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, out Boolean)\n  nameWithType.vb: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, ByRef Boolean)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: ModifyAudit(AccessControlModification, AuditRule, out Boolean)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, out System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ModifyAudit\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 37\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected override bool ModifyAudit(AccessControlModification modification, AuditRule rule, out bool modified)\n    content.vb: Protected Overrides Function ModifyAudit(modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: \"\\n<p>The modification to apply to the SACL.</p>\\n\"\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>The audit rule to modify.</p>\\n\"\n    - id: modified\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  fullName.vb: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, ByRef System.Boolean)\n  name.vb: ModifyAudit(AccessControlModification, AuditRule, ByRef Boolean)\n  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, out Boolean)\n  nameWithType.vb: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, ByRef Boolean)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 38\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected bool RemoveAccessRule(ObjectAccessRule rule)\n    content.vb: Protected Function RemoveAccessRule(rule As ObjectAccessRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleAll(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleAll\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 39\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void RemoveAccessRuleAll(ObjectAccessRule rule)\n    content.vb: Protected Sub RemoveAccessRuleAll(rule As ObjectAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleSpecific(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleSpecific\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 40\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void RemoveAccessRuleSpecific(ObjectAccessRule rule)\n    content.vb: Protected Sub RemoveAccessRuleSpecific(rule As ObjectAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 41\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.CommonObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected bool RemoveAuditRule(ObjectAuditRule rule)\n    content.vb: Protected Function RemoveAuditRule(rule As ObjectAuditRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the audit rule was successfully removed; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleAll(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleAll\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 42\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void RemoveAuditRuleAll(ObjectAuditRule rule)\n    content.vb: Protected Sub RemoveAuditRuleAll(rule As ObjectAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleSpecific(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleSpecific\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 43\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected void RemoveAuditRuleSpecific(ObjectAuditRule rule)\n    content.vb: Protected Sub RemoveAuditRuleSpecific(rule As ObjectAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: ResetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetAccessRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 44\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and then adds the specified access rule.</p>\\n\"\n  syntax:\n    content: protected void ResetAccessRule(ObjectAccessRule rule)\n    content.vb: Protected Sub ResetAccessRule(rule As ObjectAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to reset.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAccessRule(ObjectAccessRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 45\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and then adds the specified access rule.</p>\\n\"\n  syntax:\n    content: protected void SetAccessRule(ObjectAccessRule rule)\n    content.vb: Protected Sub SetAccessRule(rule As ObjectAccessRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAccessRule\n      description: \"\\n<p>The access rule to set.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)\n- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  parent: System.Security.AccessControl.DirectoryObjectSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAuditRule(ObjectAuditRule)\n  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAuditRule\n    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs\n    startLine: 46\n  assemblies:\n  - System.IO.FileSystem.AccessControl\n  namespace: System.Security.AccessControl\n  summary: \"\\n<p>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\\\"System.Security.AccessControl.DirectoryObjectSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and then adds the specified audit rule.</p>\\n\"\n  syntax:\n    content: protected void SetAuditRule(ObjectAuditRule rule)\n    content.vb: Protected Sub SetAuditRule(rule As ObjectAuditRule)\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.ObjectAuditRule\n      description: \"\\n<p>The audit rule to set.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)\nreferences:\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  nameWithType: ObjectSecurity\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  nameWithType: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  nameWithType: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(Boolean, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())\n  name.vb: SetSecurityDescriptorBinaryForm(Byte())\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)\n  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n  commentId: T:System.Security.AccessControl.CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  fullName: System.Guid\n  commentId: T:System.Guid\n  nameWithType: Guid\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.Security.AccessControl.ObjectAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAccessRule\n  fullName: System.Security.AccessControl.ObjectAccessRule\n  commentId: T:System.Security.AccessControl.ObjectAccessRule\n  nameWithType: ObjectAccessRule\n- uid: System.Security.AccessControl.ObjectAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAuditRule\n  fullName: System.Security.AccessControl.ObjectAuditRule\n  commentId: T:System.Security.AccessControl.ObjectAuditRule\n  nameWithType: ObjectAuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Security.AccessControl.AuthorizationRuleCollection\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuthorizationRuleCollection\n  fullName: System.Security.AccessControl.AuthorizationRuleCollection\n  commentId: T:System.Security.AccessControl.AuthorizationRuleCollection\n  nameWithType: AuthorizationRuleCollection\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n  commentId: T:System.Security.AccessControl.AccessControlModification\n  nameWithType: AccessControlModification\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n"}