{"nodes":[{"pos":[311,319],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[1586,1596],"content":"EndPoint()","needQuote":true,"nodes":[{"content":"EndPoint()","pos":[0,10]}]},{"pos":[2480,2493],"content":"AddressFamily","needQuote":true,"nodes":[{"content":"AddressFamily","pos":[0,13]}]},{"content":"\\n&lt;p&gt;Any attempt is made to get or set the property when the property is not overridden in a descendant class.","pos":[3465,3575],"source":"\\n<p>Any attempt is made to get or set the property when the property is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[3576,3582],"source":" </p>\\n"},{"pos":[3962,3983],"content":"Create(SocketAddress)","needQuote":true,"nodes":[{"content":"Create(SocketAddress)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The socket address that serves as the endpoint for a connection.","pos":[4878,4947],"source":"\\n<p>The socket address that serves as the endpoint for a connection."},{"content":"&lt;/p&gt;\\n","pos":[4948,4954],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Any attempt is made to access the method when the method is not overridden in a descendant class.","pos":[5382,5484],"source":"\\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[5485,5491],"source":" </p>\\n"},{"pos":[5789,5800],"content":"Serialize()","needQuote":true,"nodes":[{"content":"Serialize()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;Any attempt is made to access the method when the method is not overridden in a descendant class.","pos":[6816,6918],"source":"\\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class."},{"content":"&lt;/p&gt;\\n","pos":[6919,6925],"source":" </p>\\n"},{"pos":[7108,7118],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[7261,7267],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7427,7437],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7532,7540],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7609,7610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7637,7638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7708,7716],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7785,7786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7813,7814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7997,8011],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8130,8136],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8203,8204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8254,8260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8320,8321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8404,8410],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8477,8478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8528,8534],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8594,8595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8809,8831],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8979,8985],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9052,9053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9103,9109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9170,9171]},{"pos":[9226,9232],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9292,9293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9390,9396],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9463,9464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9514,9520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9581,9582]},{"pos":[9637,9643],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9703,9704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9949,9980],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10146,10161],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10237,10238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10288,10294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10355,10356]},{"pos":[10411,10417],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10477,10478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10584,10599],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10675,10676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10726,10732],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10793,10794]},{"pos":[10849,10855],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10915,10916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11146,11159],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11260,11271],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11343,11344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11371,11372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11445,11456],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11528,11529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11556,11557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11732,11741],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11834,11841],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11909,11910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11937,11938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12007,12014],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12082,12083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12110,12111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12286,12303],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12412,12427],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12503,12504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12531,12532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12609,12624],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12700,12701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12728,12729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12874,12880],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13042,13055],"content":"AddressFamily","needQuote":true,"nodes":[{"content":"AddressFamily","pos":[0,13]}]},{"pos":[13233,13251],"content":"System.Net.Sockets","needQuote":true,"nodes":[{"content":"System.Net.Sockets","pos":[0,18]}]},{"pos":[13433,13446],"content":"SocketAddress","needQuote":true,"nodes":[{"content":"SocketAddress","pos":[0,13]}]},{"pos":[13630,13638],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[13797,13820],"content":"NotImplementedException","needQuote":true,"nodes":[{"content":"NotImplementedException","pos":[0,23]}]}],"content":"items:\n- uid: System.Net.EndPoint\n  commentId: T:System.Net.EndPoint\n  id: EndPoint\n  parent: System.Net\n  children:\n  - System.Net.EndPoint.#ctor\n  - System.Net.EndPoint.AddressFamily\n  - System.Net.EndPoint.Create(System.Net.SocketAddress)\n  - System.Net.EndPoint.Serialize\n  langs:\n  - csharp\n  - vb\n  name: EndPoint\n  fullName: System.Net.EndPoint\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EndPoint\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 108\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Identifies a network address. This is an <strong>abstract</strong> class.</p>\\n\"\n  syntax:\n    content: public abstract class EndPoint\n    content.vb: Public MustInherit Class EndPoint\n  seealso:\n  - type: System.Net.IPEndPoint\n    commentId: T:System.Net.IPEndPoint\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: EndPoint\n- uid: System.Net.EndPoint.#ctor\n  commentId: M:System.Net.EndPoint.#ctor\n  id: '#ctor'\n  parent: System.Net.EndPoint\n  langs:\n  - csharp\n  - vb\n  name: EndPoint()\n  fullName: System.Net.EndPoint.EndPoint()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 110\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: protected EndPoint()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: EndPoint.EndPoint()\n- uid: System.Net.EndPoint.AddressFamily\n  commentId: P:System.Net.EndPoint.AddressFamily\n  id: AddressFamily\n  parent: System.Net.EndPoint\n  langs:\n  - csharp\n  - vb\n  name: AddressFamily\n  fullName: System.Net.EndPoint.AddressFamily\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddressFamily\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 111\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Gets the address family to which the endpoint belongs.</p>\\n\"\n  syntax:\n    content: public virtual AddressFamily AddressFamily { get; }\n    content.vb: Public Overridable ReadOnly Property AddressFamily As AddressFamily\n    parameters: []\n    return:\n      type: System.Net.Sockets.AddressFamily\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.AddressFamily\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to get or set the property when the property is not overridden in a descendant class. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: EndPoint.AddressFamily\n- uid: System.Net.EndPoint.Create(System.Net.SocketAddress)\n  commentId: M:System.Net.EndPoint.Create(System.Net.SocketAddress)\n  id: Create(System.Net.SocketAddress)\n  parent: System.Net.EndPoint\n  langs:\n  - csharp\n  - vb\n  name: Create(SocketAddress)\n  fullName: System.Net.EndPoint.Create(System.Net.SocketAddress)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 112\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance from a <xref href=\\\"System.Net.SocketAddress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public virtual EndPoint Create(SocketAddress socketAddress)\n    content.vb: Public Overridable Function Create(socketAddress As SocketAddress) As\n    parameters:\n    - id: socketAddress\n      type: System.Net.SocketAddress\n      description: \"\\n<p>The socket address that serves as the endpoint for a connection. </p>\\n\"\n    return:\n      type: System.Net.EndPoint\n      description: \"\\n<p>A new <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that is initialized from the specified <xref href=\\\"System.Net.SocketAddress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: EndPoint.Create(SocketAddress)\n- uid: System.Net.EndPoint.Serialize\n  commentId: M:System.Net.EndPoint.Serialize\n  id: Serialize\n  parent: System.Net.EndPoint\n  langs:\n  - csharp\n  - vb\n  name: Serialize()\n  fullName: System.Net.EndPoint.Serialize()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Serialize\n    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs\n    startLine: 113\n  assemblies:\n  - System.Net.Primitives\n  namespace: System.Net\n  summary: \"\\n<p>Serializes endpoint information into a <xref href=\\\"System.Net.SocketAddress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public virtual SocketAddress Serialize()\n    content.vb: Public Overridable Function Serialize As SocketAddress\n    return:\n      type: System.Net.SocketAddress\n      description: \"\\n<p>A <xref href=\\\"System.Net.SocketAddress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance that contains the endpoint information.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: EndPoint.Serialize()\nreferences:\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Sockets.AddressFamily\n  parent: System.Net.Sockets\n  isExternal: false\n  name: AddressFamily\n  fullName: System.Net.Sockets.AddressFamily\n  commentId: T:System.Net.Sockets.AddressFamily\n  nameWithType: AddressFamily\n- uid: System.Net.Sockets\n  isExternal: false\n  name: System.Net.Sockets\n  fullName: System.Net.Sockets\n  commentId: N:System.Net.Sockets\n  nameWithType: System.Net.Sockets\n- uid: System.Net.SocketAddress\n  parent: System.Net\n  isExternal: false\n  name: SocketAddress\n  fullName: System.Net.SocketAddress\n  commentId: T:System.Net.SocketAddress\n  nameWithType: SocketAddress\n- uid: System.Net.EndPoint\n  parent: System.Net\n  isExternal: false\n  name: EndPoint\n  fullName: System.Net.EndPoint\n  commentId: T:System.Net.EndPoint\n  nameWithType: EndPoint\n- uid: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException\n  fullName: System.NotImplementedException\n  nameWithType: NotImplementedException\n  commentId: T:System.NotImplementedException\n"}