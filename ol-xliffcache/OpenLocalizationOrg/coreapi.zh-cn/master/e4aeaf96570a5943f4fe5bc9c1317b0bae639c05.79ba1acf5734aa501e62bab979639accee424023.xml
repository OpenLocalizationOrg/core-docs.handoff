{"nodes":[{"pos":[564,596],"content":"UnobservedTaskExceptionEventArgs","needQuote":true,"nodes":[{"content":"UnobservedTaskExceptionEventArgs","pos":[0,32]}]},{"pos":[2271,2323],"content":"UnobservedTaskExceptionEventArgs(AggregateException)","needQuote":true,"nodes":[{"content":"UnobservedTaskExceptionEventArgs(AggregateException)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;The Exception that has gone unobserved.&lt;/p&gt;\\n","pos":[3273,3323],"source":"\\n<p>The Exception that has gone unobserved.</p>\\n"},{"pos":[3756,3765],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The Exception that went unobserved.&lt;/p&gt;\\n","pos":[4494,4540],"source":"\\n<p>The Exception that went unobserved.</p>\\n"},{"pos":[4948,4956],"content":"Observed","needQuote":true,"nodes":[{"content":"Observed","pos":[0,8]}]},{"pos":[6169,6182],"content":"SetObserved()","needQuote":true,"nodes":[{"content":"SetObserved()","pos":[0,13]}]},{"pos":[7187,7209],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[7388,7394],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7542,7551],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[7723,7728],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[7915,7925],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8020,8028],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8097,8098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8125,8126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8196,8204],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8273,8274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8301,8302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8485,8499],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8618,8624],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8691,8692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8742,8748],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8808,8809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8892,8898],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8965,8966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9016,9022],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9082,9083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9297,9319],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9467,9473],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9540,9541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9591,9597],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9658,9659]},{"pos":[9714,9720],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9780,9781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9878,9884],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9951,9952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10002,10008],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10069,10070]},{"pos":[10125,10131],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10191,10192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10437,10468],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10634,10649],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10725,10726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10776,10782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10843,10844]},{"pos":[10899,10905],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10965,10966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11072,11087],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11163,11164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11214,11220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11281,11282]},{"pos":[11337,11343],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11403,11404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11634,11647],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11748,11759],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11831,11832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11859,11860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11933,11944],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12016,12017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12044,12045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12220,12229],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12322,12329],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12397,12398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12425,12426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12495,12502],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12570,12571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12598,12599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12774,12791],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12900,12915],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12991,12992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13019,13020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13097,13112],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13188,13189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13216,13217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13362,13368],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13511,13529],"content":"AggregateException","needQuote":true,"nodes":[{"content":"AggregateException","pos":[0,18]}]},{"pos":[13711,13718],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  commentId: T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  id: UnobservedTaskExceptionEventArgs\n  parent: System.Threading.Tasks\n  children:\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  - System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  langs:\n  - csharp\n  - vb\n  name: UnobservedTaskExceptionEventArgs\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnobservedTaskExceptionEventArgs\n    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n    startLine: 728\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Provides data for the event that is raised when a faulted <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>'s exception goes unobserved.</p>\\n\"\n  syntax:\n    content: 'public class UnobservedTaskExceptionEventArgs : EventArgs'\n    content.vb: >-\n      Public Class UnobservedTaskExceptionEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: UnobservedTaskExceptionEventArgs\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)\n  id: '#ctor(System.AggregateException)'\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  - vb\n  name: UnobservedTaskExceptionEventArgs(AggregateException)\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(System.AggregateException)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n    startLine: 738\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the unobserved exception.</p>\\n\"\n  syntax:\n    content: public UnobservedTaskExceptionEventArgs(AggregateException exception)\n    content.vb: Public Sub New(exception As AggregateException)\n    parameters:\n    - id: exception\n      type: System.AggregateException\n      description: \"\\n<p>The Exception that has gone unobserved.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnobservedTaskExceptionEventArgs.UnobservedTaskExceptionEventArgs(AggregateException)\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  id: Exception\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Exception\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Exception\n    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n    startLine: 754\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>The Exception that went unobserved.</p>\\n\"\n  syntax:\n    content: public AggregateException Exception { get; }\n    content.vb: Public ReadOnly Property Exception As AggregateException\n    parameters: []\n    return:\n      type: System.AggregateException\n      description: \"\\n<p>The Exception that went unobserved.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnobservedTaskExceptionEventArgs.Exception\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  commentId: P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  id: Observed\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Observed\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Observed\n    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n    startLine: 749\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Gets whether this exception has been marked as \\\"observed.\\\"</p>\\n\"\n  syntax:\n    content: public bool Observed { get; }\n    content.vb: Public ReadOnly Property Observed As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>true if this exception has been marked as \\\"observed\\\"; otherwise false.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: UnobservedTaskExceptionEventArgs.Observed\n- uid: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  commentId: M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved\n  id: SetObserved\n  parent: System.Threading.Tasks.UnobservedTaskExceptionEventArgs\n  langs:\n  - csharp\n  - vb\n  name: SetObserved()\n  fullName: System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetObserved\n    path: src/mscorlib/src/System/Threading/Tasks/TaskScheduler.cs\n    startLine: 744\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Threading.Tasks\n  summary: \"\\n<p>Marks the <xref href=\\\"System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> as \\\"observed,\\\" thus preventing it from triggering exception escalation policy which, by default, terminates the process.</p>\\n\"\n  syntax:\n    content: public void SetObserved()\n    content.vb: Public Sub SetObserved\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: UnobservedTaskExceptionEventArgs.SetObserved()\nreferences:\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.AggregateException\n  parent: System\n  isExternal: false\n  name: AggregateException\n  fullName: System.AggregateException\n  nameWithType: AggregateException\n  commentId: T:System.AggregateException\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}