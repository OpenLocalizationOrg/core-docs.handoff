{"nodes":[{"pos":[632,666],"content":"DebuggableAttribute.DebuggingModes","needQuote":true,"nodes":[{"content":"DebuggableAttribute.DebuggingModes","pos":[0,34]}]},{"pos":[1854,1861],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[3236,3256],"content":"DisableOptimizations","needQuote":true,"nodes":[{"content":"DisableOptimizations","pos":[0,20]}]},{"pos":[4713,4734],"content":"EnableEditAndContinue","needQuote":true,"nodes":[{"content":"EnableEditAndContinue","pos":[0,21]}]},{"pos":[6000,6031],"content":"IgnoreSymbolStoreSequencePoints","needQuote":true,"nodes":[{"content":"IgnoreSymbolStoreSequencePoints","pos":[0,31]}]},{"pos":[7479,7483],"content":"None","needQuote":true,"nodes":[{"content":"None","pos":[0,4]}]},{"pos":[9096,9114],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[9333,9367],"content":"DebuggableAttribute.DebuggingModes","needQuote":true,"nodes":[{"content":"DebuggableAttribute.DebuggingModes","pos":[0,34]}]}],"content":"items:\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  commentId: T:System.Diagnostics.DebuggableAttribute.DebuggingModes\n  id: DebuggableAttribute.DebuggingModes\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints\n  - System.Diagnostics.DebuggableAttribute.DebuggingModes.None\n  langs:\n  - csharp\n  - vb\n  name: DebuggableAttribute.DebuggingModes\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DebuggingModes\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 63\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Specifies the debugging mode for the just-in-time (JIT) compiler.</p>\\n\"\n  syntax:\n    content: >-\n      [Flags]\n\n      [ComVisible(true)]\n\n      public enum DebuggingModes\n    content.vb: >-\n      <Flags>\n\n      <ComVisible(True)>\n\n      Public Enum DebuggingModes\n  attributes:\n  - type: System.FlagsAttribute\n    ctor: System.FlagsAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: DebuggableAttribute.DebuggingModes\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\n  commentId: F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\n  id: Default\n  parent: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  langs:\n  - csharp\n  - vb\n  name: Default\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Default\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 68\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Instructs the just-in-time (JIT) compiler to use its default behavior, which includes enabling optimizations, disabling Edit and Continue support, and using symbol store sequence points if present. Starting with the .NET Framework version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.</p>\\n\"\n  syntax:\n    content: Default = 1\n    return:\n      type: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: DebuggableAttribute.DebuggingModes.Default\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations\n  commentId: F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations\n  id: DisableOptimizations\n  parent: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  langs:\n  - csharp\n  - vb\n  name: DisableOptimizations\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DisableOptimizations\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 69\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Disable optimizations performed by the compiler to make your output file smaller, faster, and more efficient. Optimizations result in code rearrangement in the output file, which can make debugging difficult. Typically optimization should be disabled while debugging. In versions 2.0 or later, combine this value with Default (Default | DisableOptimizations) to enable JIT tracking and disable optimizations.</p>\\n\"\n  syntax:\n    content: DisableOptimizations = 256\n    return:\n      type: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: DebuggableAttribute.DebuggingModes.DisableOptimizations\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue\n  commentId: F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue\n  id: EnableEditAndContinue\n  parent: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  langs:\n  - csharp\n  - vb\n  name: EnableEditAndContinue\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EnableEditAndContinue\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 71\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Enable edit and continue. Edit and continue enables you to make changes to your source code while your program is in break mode. The ability to edit and continue is compiler dependent. </p>\\n\"\n  syntax:\n    content: EnableEditAndContinue = 4\n    return:\n      type: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: DebuggableAttribute.DebuggingModes.EnableEditAndContinue\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints\n  commentId: F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints\n  id: IgnoreSymbolStoreSequencePoints\n  parent: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  langs:\n  - csharp\n  - vb\n  name: IgnoreSymbolStoreSequencePoints\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IgnoreSymbolStoreSequencePoints\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 70\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Use the implicit MSIL sequence points, not the program database (PDB) sequence points. The symbolic information normally includes at least one Microsoft intermediate language (MSIL) offset for each source line. When the just-in-time (JIT) compiler is about to compile a method, it asks the profiling services for a list of MSIL offsets that should be preserved. These MSIL offsets are called sequence points.</p>\\n\"\n  syntax:\n    content: IgnoreSymbolStoreSequencePoints = 2\n    return:\n      type: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes.None\n  commentId: F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None\n  id: None\n  parent: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  langs:\n  - csharp\n  - vb\n  name: None\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes.None\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: None\n    path: src/mscorlib/src/System/Diagnostics/DebuggerAttributes.cs\n    startLine: 67\n  assemblies:\n  - System.Runtime\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Starting with the .NET Framework version 2.0, JIT tracking information is always generated, and this flag has the same effect as <xref href=\\\"System.Diagnostics.DebuggableAttribute.DebuggingModes.Default\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, except that it sets the <xref href=\\\"System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to <strong>false</strong>. However, because JIT tracking is always enabled, the property value is ignored in version 2.0 or later. </p>\\n<p>Note that, unlike the <xref href=\\\"System.Diagnostics.DebuggableAttribute.DebuggingModes.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag, the <xref href=\\\"System.Diagnostics.DebuggableAttribute.DebuggingModes.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> flag cannot be used to disable JIT optimizations. </p>\\n\"\n  syntax:\n    content: None = 0\n    return:\n      type: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: DebuggableAttribute.DebuggingModes.None\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  parent: System.Diagnostics\n  isExternal: false\n  name: DebuggableAttribute.DebuggingModes\n  fullName: System.Diagnostics.DebuggableAttribute.DebuggingModes\n  nameWithType: DebuggableAttribute.DebuggingModes\n  commentId: T:System.Diagnostics.DebuggableAttribute.DebuggingModes\n"}