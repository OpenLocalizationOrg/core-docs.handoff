{"nodes":[{"pos":[1549,1559],"content":"GZipStream","needQuote":true,"nodes":[{"content":"GZipStream","pos":[0,10]}]},{"pos":[4855,4891],"content":"GZipStream(Stream, CompressionLevel)","needQuote":true,"nodes":[{"content":"GZipStream(Stream, CompressionLevel)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The stream to write the compressed data to.&lt;/p&gt;\\n","pos":[5827,5881],"source":"\\n<p>The stream to write the compressed data to.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.&lt;/p&gt;\\n","pos":[5981,6118],"source":"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6237,6291],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[7145,7190],"content":"GZipStream(Stream, CompressionLevel, Boolean)","needQuote":true,"nodes":[{"content":"GZipStream(Stream, CompressionLevel, Boolean)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The stream to write the compressed data to.&lt;/p&gt;\\n","pos":[8219,8273],"source":"\\n<p>The stream to write the compressed data to.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.&lt;/p&gt;\\n","pos":[8373,8510],"source":"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8920,8974],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[9789,9824],"content":"GZipStream(Stream, CompressionMode)","needQuote":true,"nodes":[{"content":"GZipStream(Stream, CompressionMode)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The stream the compressed or decompressed data is written to.&lt;/p&gt;\\n","pos":[10732,10804],"source":"\\n<p>The stream the compressed or decompressed data is written to.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to compress or decompress the stream.&lt;/p&gt;\\n","pos":[10891,10992],"source":"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11111,11165],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[12647,12691],"content":"GZipStream(Stream, CompressionMode, Boolean)","needQuote":true,"nodes":[{"content":"GZipStream(Stream, CompressionMode, Boolean)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The stream the compressed or decompressed data is written to.&lt;/p&gt;\\n","pos":[13692,13764],"source":"\\n<p>The stream the compressed or decompressed data is written to.</p>\\n"},{"content":"\\n&lt;p&gt;One of the enumeration values that indicates whether to compress or decompress the stream.&lt;/p&gt;\\n","pos":[13851,13952],"source":"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stream&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[14355,14409],"source":"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n"},{"pos":[15688,15698],"content":"BaseStream","needQuote":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A stream object that represents the underlying stream.&lt;/p&gt;\\n","pos":[16374,16439],"source":"\\n<p>A stream object that represents the underlying stream.</p>\\n"},{"content":"\\n&lt;p&gt;The underlying stream is closed.&lt;/p&gt;\\n","pos":[16562,16605],"source":"\\n<p>The underlying stream is closed.</p>\\n"},{"pos":[16920,16927],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[18304,18311],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;false&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[19009,19058],"source":"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n"},{"pos":[19439,19447],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[20798,20804],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[21573,21597],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[21754,21811],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[22152,22160],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[22933,22957],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[23116,23173],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[23556,23572],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[24423,24566],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[24948,24955],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[25696,25728],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[26160,26186],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The array used to store decompressed bytes.&lt;/p&gt;\\n","pos":[26992,27046],"source":"\\n<p>The array used to store decompressed bytes.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;array&lt;/em&gt; at which the read bytes will be placed.&lt;/p&gt;\\n","pos":[27110,27194],"source":"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of decompressed bytes to read.&lt;/p&gt;\\n","pos":[27257,27317],"source":"\\n<p>The maximum number of decompressed bytes to read.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes that were decompressed into the byte array.","pos":[27376,27444],"source":"\\n<p>The number of bytes that were decompressed into the byte array."},{"content":"If the end of the stream has been reached, zero or the number of bytes read is returned.&lt;/p&gt;\\n","pos":[27445,27539],"source":" If the end of the stream has been reached, zero or the number of bytes read is returned.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[27735,27788],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; length minus the index starting point is less than &lt;em&gt;count&lt;/em&gt;.&lt;/p&gt;\\n","pos":[28266,28436],"source":"\\n<p>\\n<em>offset</em> or <em>count</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> length minus the index starting point is less than <em>count</em>.</p>\\n"},{"content":"\\n&lt;p&gt;The data is in an invalid format.&lt;/p&gt;\\n","pos":[28545,28589],"source":"\\n<p>The data is in an invalid format.</p>\\n"},{"content":"\\n&lt;p&gt;The stream is closed.&lt;/p&gt;\\n","pos":[28698,28730],"source":"\\n<p>The stream is closed.</p>\\n"},{"pos":[29492,29542],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[31460,31483],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The location in the stream.&lt;/p&gt;\\n","pos":[32332,32370],"source":"\\n<p>The location in the stream.</p>\\n"},{"content":"\\n&lt;p&gt;A long value.&lt;/p&gt;\\n","pos":[32611,32635],"source":"\\n<p>A long value.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[32825,32882],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[33264,33280],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The length of the stream.&lt;/p&gt;\\n","pos":[34070,34106],"source":"\\n<p>The length of the stream.</p>\\n"},{"content":"\\n&lt;p&gt;This property is not supported on this stream.&lt;/p&gt;\\n","pos":[34280,34337],"source":"\\n<p>This property is not supported on this stream.</p>\\n"},{"pos":[34781,34808],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The buffer that contains the data to compress.&lt;/p&gt;\\n","pos":[35615,35672],"source":"\\n<p>The buffer that contains the data to compress.</p>\\n"},{"content":"\\n&lt;p&gt;The byte offset in &lt;em&gt;array&lt;/em&gt; from which the bytes will be read.&lt;/p&gt;\\n","pos":[35736,35815],"source":"\\n<p>The byte offset in <em>array</em> from which the bytes will be read.</p>\\n"},{"content":"\\n&lt;p&gt;The maximum number of bytes to write.&lt;/p&gt;\\n","pos":[35878,35926],"source":"\\n<p>The maximum number of bytes to write.</p>\\n"},{"content":"\\n&lt;p&gt;The write operation cannot be performed because the stream is closed.&lt;/p&gt;\\n","pos":[36127,36207],"source":"\\n<p>The write operation cannot be performed because the stream is closed.</p>\\n"},{"pos":[36976,37027],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[38700,38721],"content":"System.IO.Compression","needQuote":true,"nodes":[{"content":"System.IO.Compression","pos":[0,21]}]},{"pos":[38897,38903],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39059,39077],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[39264,39270],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[39426,39437],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[39815,39834],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[39975,39986],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40040,40041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40094,40100],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[40142,40143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40237,40248],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40302,40303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40356,40362],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[40404,40405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40648,40674],"content":"CopyToAsync(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32)","pos":[0,26]}]},{"pos":[40842,40853],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[40907,40908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40961,40967],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[41010,41011]},{"pos":[41065,41070],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41129,41130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41237,41248],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[41302,41303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41356,41362],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[41405,41406]},{"pos":[41460,41465],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41524,41525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41823,41868],"content":"CopyToAsync(Stream, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, Int32, CancellationToken)","pos":[0,45]}]},{"pos":[42107,42118],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42172,42173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42226,42232],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[42275,42276]},{"pos":[42330,42335],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[42395,42396]},{"pos":[42472,42489],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[42570,42571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42713,42724],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[42778,42779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42832,42838],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[42881,42882]},{"pos":[42936,42941],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[43001,43002]},{"pos":[43078,43095],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[43176,43177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43477,43491],"content":"CopyTo(Stream)","needQuote":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[43622,43628],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[43677,43678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43731,43737],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[43779,43780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43869,43875],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[43924,43925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43978,43984],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[44026,44027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44255,44276],"content":"CopyTo(Stream, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Stream, Int32)","pos":[0,21]}]},{"pos":[44434,44440],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[44489,44490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44543,44549],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[44592,44593]},{"pos":[44647,44652],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44711,44712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44814,44820],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[44869,44870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44923,44929],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[44972,44973]},{"pos":[45027,45032],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45091,45092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45308,45315],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[45410,45415],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[45484,45485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45512,45513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45583,45588],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[45657,45658],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45685,45686],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45859,45868],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[45967,45974],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[46024,46025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46052,46053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46125,46132],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[46182,46183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46210,46211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46391,46403],"content":"FlushAsync()","needQuote":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[46508,46518],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[46571,46572],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46599,46600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46675,46685],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[46738,46739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46766,46767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46988,47017],"content":"FlushAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[47192,47202],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[47255,47256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47327,47344],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[47425,47426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47537,47547],"content":"FlushAsync","needQuote":true,"nodes":[{"content":"FlushAsync","pos":[0,10]}]},{"pos":[47600,47601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47672,47689],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[47770,47771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48015,48033],"content":"CreateWaitHandle()","needQuote":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[48150,48166],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[48246,48247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48274,48275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48356,48372],"content":"CreateWaitHandle","needQuote":true,"nodes":[{"content":"CreateWaitHandle","pos":[0,16]}]},{"pos":[48452,48453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48480,48481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48753,48807],"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,54]}]},{"pos":[49252,49261],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[49334,49335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49383,49387],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[49446,49448]},{"content":",","pos":[49480,49481]},{"pos":[49535,49540],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[49600,49601]},{"pos":[49655,49660],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[49720,49721]},{"pos":[49783,49796],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[49864,49865]},{"pos":[49920,49926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49986,49987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50137,50146],"content":"BeginRead","needQuote":true,"nodes":[{"content":"BeginRead","pos":[0,9]}]},{"pos":[50219,50220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50268,50272],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[50330,50332],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[50361,50362]},{"pos":[50416,50421],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[50481,50482]},{"pos":[50536,50541],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[50601,50602]},{"pos":[50664,50677],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[50745,50746]},{"pos":[50801,50807],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50867,50868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51269,51290],"content":"EndRead(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[51429,51436],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[51507,51508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51564,51576],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[51642,51643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51736,51743],"content":"EndRead","needQuote":true,"nodes":[{"content":"EndRead","pos":[0,7]}]},{"pos":[51814,51815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51871,51883],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[51949,51950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52202,52233],"content":"ReadAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32)","pos":[0,31]}]},{"pos":[52546,52555],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[52607,52608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52656,52660],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[52719,52721]},{"content":",","pos":[52753,52754]},{"pos":[52808,52813],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[52873,52874]},{"pos":[52928,52933],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52992,52993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53108,53117],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[53169,53170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53218,53222],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53280,53282],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[53311,53312]},{"pos":[53366,53371],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[53431,53432]},{"pos":[53486,53491],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53550,53551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53929,53984],"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","needQuote":true,"nodes":[{"content":"BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)","pos":[0,55]}]},{"pos":[54433,54443],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[54517,54518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54566,54570],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[54629,54631]},{"content":",","pos":[54663,54664]},{"pos":[54718,54723],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54783,54784]},{"pos":[54838,54843],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[54903,54904]},{"pos":[54966,54979],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[55047,55048]},{"pos":[55103,55109],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55169,55170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55321,55331],"content":"BeginWrite","needQuote":true,"nodes":[{"content":"BeginWrite","pos":[0,10]}]},{"pos":[55405,55406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55454,55458],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[55516,55518],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[55547,55548]},{"pos":[55602,55607],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[55667,55668]},{"pos":[55722,55727],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[55787,55788]},{"pos":[55850,55863],"content":"AsyncCallback","needQuote":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"content":",","pos":[55931,55932]},{"pos":[55987,55993],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56053,56054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56459,56481],"content":"EndWrite(IAsyncResult)","needQuote":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[56622,56630],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[56702,56703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56759,56771],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[56837,56838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56932,56940],"content":"EndWrite","needQuote":true,"nodes":[{"content":"EndWrite","pos":[0,8]}]},{"pos":[57012,57013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57069,57081],"content":"IAsyncResult","needQuote":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[57147,57148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57403,57435],"content":"WriteAsync(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32)","pos":[0,32]}]},{"pos":[57752,57762],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[57815,57816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57864,57868],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[57927,57929]},{"content":",","pos":[57961,57962]},{"pos":[58016,58021],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[58081,58082]},{"pos":[58136,58141],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58200,58201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58317,58327],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[58380,58381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58429,58433],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58491,58493],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[58522,58523]},{"pos":[58577,58582],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[58642,58643]},{"pos":[58697,58702],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58761,58762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59066,59076],"content":"ReadByte()","needQuote":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[59177,59185],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[59236,59237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59264,59265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59338,59346],"content":"ReadByte","needQuote":true,"nodes":[{"content":"ReadByte","pos":[0,8]}]},{"pos":[59397,59398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59425,59426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59619,59634],"content":"WriteByte(Byte)","needQuote":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[59761,59770],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[59822,59823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59871,59875],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[59933,59934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60021,60030],"content":"WriteByte","needQuote":true,"nodes":[{"content":"WriteByte","pos":[0,9]}]},{"pos":[60082,60083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60131,60135],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[60193,60194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60414,60434],"content":"Synchronized(Stream)","needQuote":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[60577,60589],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[60665,60666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60719,60725],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[60788,60789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60884,60896],"content":"Synchronized","needQuote":true,"nodes":[{"content":"Synchronized","pos":[0,12]}]},{"pos":[60972,60973],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61026,61032],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[61095,61096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61314,61331],"content":"ObjectInvariant()","needQuote":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[61446,61461],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[61540,61541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61568,61569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61649,61664],"content":"ObjectInvariant","needQuote":true,"nodes":[{"content":"ObjectInvariant","pos":[0,15]}]},{"pos":[61743,61744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61771,61772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61968,61978],"content":"CanTimeout","needQuote":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[62187,62198],"content":"ReadTimeout","needQuote":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[62411,62423],"content":"WriteTimeout","needQuote":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[62675,62699],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[62862,62877],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[62965,62966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63017,63024],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63085,63086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63191,63206],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[63294,63295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63346,63353],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63414,63415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63680,63700],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[63839,63857],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[63948,63949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63976,63977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64069,64087],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[64178,64179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64206,64207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64462,64489],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[64642,64667],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[64765,64766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64793,64794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64893,64918],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[65016,65017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65044,65045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65314,65332],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[65483,65495],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[65580,65581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65629,65633],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65691,65692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65791,65803],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[65888,65889],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65937,65941],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65999,66000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66219,66229],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[66324,66332],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[66401,66402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66429,66430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66500,66508],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[66577,66578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66605,66606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66789,66803],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[66922,66928],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66995,66996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67046,67052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67112,67113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67196,67202],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67269,67270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67320,67326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67386,67387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67601,67623],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[67771,67777],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67844,67845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67895,67901],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67962,67963]},{"pos":[68018,68024],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68084,68085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68182,68188],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[68255,68256],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68306,68312],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68373,68374]},{"pos":[68429,68435],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68495,68496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68741,68772],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[68938,68953],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[69029,69030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69080,69086],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69147,69148]},{"pos":[69203,69209],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69269,69270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69376,69391],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[69467,69468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69518,69524],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69585,69586]},{"pos":[69641,69647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69707,69708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69938,69951],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[70052,70063],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70135,70136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70163,70164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70237,70248],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[70320,70321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70348,70349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70524,70533],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[70626,70633],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70701,70702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70729,70730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70799,70806],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70874,70875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70902,70903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71078,71095],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[71204,71219],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[71295,71296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71323,71324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71401,71416],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[71492,71493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71520,71521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71849,71864],"content":"AsInputStream()","needQuote":true,"nodes":[{"content":"AsInputStream()","pos":[0,15]}]},{"pos":[72023,72036],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[72116,72117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72144,72145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72247,72260],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[72340,72341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72368,72369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72764,72780],"content":"AsOutputStream()","needQuote":true,"nodes":[{"content":"AsOutputStream()","pos":[0,16]}]},{"pos":[72941,72955],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[73036,73037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73064,73065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73168,73182],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[73263,73264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73291,73292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73701,73723],"content":"AsRandomAccessStream()","needQuote":true,"nodes":[{"content":"AsRandomAccessStream()","pos":[0,22]}]},{"pos":[73896,73916],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[74003,74004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74031,74032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74141,74161],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[74248,74249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74276,74277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74501,74507],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[74617,74626],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[74807,74828],"content":"AsInputStream(Stream)","needQuote":true,"nodes":[{"content":"AsInputStream(Stream)","pos":[0,21]}]},{"pos":[75021,75034],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[75114,75115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75168,75174],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[75237,75238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75358,75371],"content":"AsInputStream","needQuote":true,"nodes":[{"content":"AsInputStream","pos":[0,13]}]},{"pos":[75451,75452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75505,75511],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[75574,75575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75845,75875],"content":"WindowsRuntimeStreamExtensions","needQuote":true,"nodes":[{"content":"WindowsRuntimeStreamExtensions","pos":[0,30]}]},{"pos":[76140,76162],"content":"AsOutputStream(Stream)","needQuote":true,"nodes":[{"content":"AsOutputStream(Stream)","pos":[0,22]}]},{"pos":[76357,76371],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[76452,76453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76506,76512],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[76575,76576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76697,76711],"content":"AsOutputStream","needQuote":true,"nodes":[{"content":"AsOutputStream","pos":[0,14]}]},{"pos":[76792,76793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76846,76852],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[76915,76916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77206,77234],"content":"AsRandomAccessStream(Stream)","needQuote":true,"nodes":[{"content":"AsRandomAccessStream(Stream)","pos":[0,28]}]},{"pos":[77441,77461],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[77548,77549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77602,77608],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[77671,77672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77799,77819],"content":"AsRandomAccessStream","needQuote":true,"nodes":[{"content":"AsRandomAccessStream","pos":[0,20]}]},{"pos":[77906,77907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77960,77966],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[78029,78030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78324,78340],"content":"CompressionLevel","needQuote":true,"nodes":[{"content":"CompressionLevel","pos":[0,16]}]},{"pos":[78546,78553],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78740,78755],"content":"CompressionMode","needQuote":true,"nodes":[{"content":"CompressionMode","pos":[0,15]}]},{"pos":[78978,78985],"content":"CanRead","needQuote":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[79181,79188],"content":"CanSeek","needQuote":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[79385,79393],"content":"CanWrite","needQuote":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[79591,79597],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[79768,79773],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[79937,79945],"content":"Position","needQuote":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[80159,80175],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[80304,80311],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[80361,80362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80413,80420],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80481,80482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80570,80577],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[80627,80628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80679,80686],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80747,80748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80946,80953],"content":"Flush()","needQuote":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[81048,81053],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[81101,81102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81129,81130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81200,81205],"content":"Flush","needQuote":true,"nodes":[{"content":"Flush","pos":[0,5]}]},{"pos":[81253,81254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81281,81282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81492,81518],"content":"Read(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, Int32)","pos":[0,26]}]},{"pos":[81811,81815],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[81862,81863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81911,81915],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[81974,81976]},{"content":",","pos":[82008,82009]},{"pos":[82063,82068],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82128,82129]},{"pos":[82183,82188],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82247,82248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82358,82362],"content":"Read","needQuote":true,"nodes":[{"content":"Read","pos":[0,4]}]},{"pos":[82409,82410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82458,82462],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[82520,82522],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[82551,82552]},{"pos":[82606,82611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82671,82672]},{"pos":[82726,82731],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82790,82791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83018,83024],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[83144,83148],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[83207,83209]},{"pos":[83272,83276],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[83334,83336],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[83468,83473],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[83713,83763],"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"ReadAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,50]}]},{"pos":[84202,84211],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[84263,84264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84312,84316],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[84375,84377]},{"content":",","pos":[84409,84410]},{"pos":[84464,84469],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84529,84530]},{"pos":[84584,84589],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[84649,84650]},{"pos":[84726,84743],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[84824,84825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84975,84984],"content":"ReadAsync","needQuote":true,"nodes":[{"content":"ReadAsync","pos":[0,9]}]},{"pos":[85036,85037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85085,85089],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[85147,85149],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[85178,85179]},{"pos":[85233,85238],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85298,85299]},{"pos":[85353,85358],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[85418,85419]},{"pos":[85495,85512],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[85593,85594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85977,85994],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[86260,86271],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[86476,86480],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[86554,86555],"content":"<","needQuote":true,"nodes":[]},{"pos":[86604,86609],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86750,86754],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[86829,86832]},{"pos":[86888,86893],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86952,86953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87141,87157],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[87317,87330],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[87527,87531],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[87584,87585],"content":"<","needQuote":true,"nodes":[]},{"pos":[87612,87619],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[87734,87738],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[87792,87795]},{"pos":[87829,87836],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[87869,87870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88056,88078],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[88309,88332],"content":"Seek(Int64, SeekOrigin)","needQuote":true,"nodes":[{"content":"Seek(Int64, SeekOrigin)","pos":[0,23]}]},{"pos":[88494,88498],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[88545,88546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88595,88600],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[88660,88661]},{"pos":[88723,88733],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[88779,88780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88884,88888],"content":"Seek","needQuote":true,"nodes":[{"content":"Seek","pos":[0,4]}]},{"pos":[88935,88936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88985,88990],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"content":",","pos":[89050,89051]},{"pos":[89113,89123],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[89169,89170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89382,89392],"content":"SeekOrigin","needQuote":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[89591,89607],"content":"SetLength(Int64)","needQuote":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[89736,89745],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[89797,89798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89847,89852],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[89911,89912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90000,90009],"content":"SetLength","needQuote":true,"nodes":[{"content":"SetLength","pos":[0,9]}]},{"pos":[90061,90062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90111,90116],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[90175,90176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90414,90441],"content":"Write(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, Int32)","pos":[0,27]}]},{"pos":[90738,90743],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[90791,90792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90840,90844],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[90903,90905]},{"content":",","pos":[90937,90938]},{"pos":[90992,90997],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91057,91058]},{"pos":[91112,91117],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91176,91177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91288,91293],"content":"Write","needQuote":true,"nodes":[{"content":"Write","pos":[0,5]}]},{"pos":[91341,91342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91390,91394],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[91452,91454],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[91483,91484]},{"pos":[91538,91543],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[91603,91604]},{"pos":[91658,91663],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[91722,91723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92089,92140],"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","needQuote":true,"nodes":[{"content":"WriteAsync(Byte[], Int32, Int32, CancellationToken)","pos":[0,51]}]},{"pos":[92583,92593],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[92646,92647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92695,92699],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[92758,92760]},{"content":",","pos":[92792,92793]},{"pos":[92847,92852],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[92912,92913]},{"pos":[92967,92972],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93032,93033]},{"pos":[93109,93126],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[93207,93208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93359,93369],"content":"WriteAsync","needQuote":true,"nodes":[{"content":"WriteAsync","pos":[0,10]}]},{"pos":[93422,93423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93471,93475],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[93533,93535],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[93564,93565]},{"pos":[93619,93624],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93684,93685]},{"pos":[93739,93744],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[93804,93805]},{"pos":[93881,93898],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[93979,93980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94365,94369],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[94538,94559],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[94760,94777],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[94955,94978],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[95189,95210],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[95419,95444],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[95650,95677],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[95885,95905],"content":"InvalidDataException","needQuote":true,"nodes":[{"content":"InvalidDataException","pos":[0,20]}]}],"content":"items:\n- uid: System.IO.Compression.GZipStream\n  commentId: T:System.IO.Compression.GZipStream\n  id: GZipStream\n  parent: System.IO.Compression\n  children:\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  - System.IO.Compression.GZipStream.BaseStream\n  - System.IO.Compression.GZipStream.CanRead\n  - System.IO.Compression.GZipStream.CanSeek\n  - System.IO.Compression.GZipStream.CanWrite\n  - System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  - System.IO.Compression.GZipStream.Flush\n  - System.IO.Compression.GZipStream.Length\n  - System.IO.Compression.GZipStream.Position\n  - System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Compression.GZipStream.SetLength(System.Int64)\n  - System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  - vb\n  name: GZipStream\n  fullName: System.IO.Compression.GZipStream\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GZipStream\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 42\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Provides methods and properties used to compress and decompress streams.</p>\\n\"\n  syntax:\n    content: 'public class GZipStream : Stream, IDisposable'\n    content.vb: >-\n      Public Class GZipStream\n          Inherits Stream\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.IO.Stream.Null\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.Close\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: GZipStream\n  extensionMethods:\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: GZipStream(Stream, CompressionLevel)\n  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 44\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression level.</p>\\n\"\n  syntax:\n    content: public GZipStream(Stream stream, CompressionLevel compressionLevel)\n    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write the compressed data to.</p>\\n\"\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: \"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The stream does not support write operations such as compression. (The <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property on the stream object is <strong>false</strong>.)</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel)\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: GZipStream(Stream, CompressionLevel, Boolean)\n  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 45\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.</p>\\n\"\n  syntax:\n    content: public GZipStream(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)\n    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel, leaveOpen As Boolean)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream to write the compressed data to.</p>\\n\"\n    - id: compressionLevel\n      type: System.IO.Compression.CompressionLevel\n      description: \"\\n<p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\\n\"\n    - id: leaveOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to leave the stream object open after disposing the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The stream does not support write operations such as compression. (The <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property on the stream object is <strong>false</strong>.)</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GZipStream.GZipStream(Stream, CompressionLevel, Boolean)\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: GZipStream(Stream, CompressionMode)\n  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 46\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression mode.</p>\\n\"\n  syntax:\n    content: public GZipStream(Stream stream, CompressionMode mode)\n    content.vb: Public Sub New(stream As Stream, mode As CompressionMode)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream the compressed or decompressed data is written to.</p>\\n\"\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: \"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>mode</em> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration value.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode)\n- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: GZipStream(Stream, CompressionMode, Boolean)\n  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 47\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.</p>\\n\"\n  syntax:\n    content: public GZipStream(Stream stream, CompressionMode mode, bool leaveOpen)\n    content.vb: Public Sub New(stream As Stream, mode As CompressionMode, leaveOpen As Boolean)\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The stream the compressed or decompressed data is written to.</p>\\n\"\n    - id: mode\n      type: System.IO.Compression.CompressionMode\n      description: \"\\n<p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\\n\"\n    - id: leaveOpen\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to leave the stream open after disposing the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stream</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>mode</em> is not a valid <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Compress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.IO.Compression.CompressionMode.Decompress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  and <xref href=\\\"System.IO.Stream.CanRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: GZipStream.GZipStream(Stream, CompressionMode, Boolean)\n- uid: System.IO.Compression.GZipStream.BaseStream\n  commentId: P:System.IO.Compression.GZipStream.BaseStream\n  id: BaseStream\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: BaseStream\n  fullName: System.IO.Compression.GZipStream.BaseStream\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BaseStream\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 48\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a reference to the underlying stream.</p>\\n\"\n  syntax:\n    content: public Stream BaseStream { get; }\n    content.vb: Public ReadOnly Property BaseStream As Stream\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: \"\\n<p>A stream object that represents the underlying stream.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The underlying stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: GZipStream.BaseStream\n- uid: System.IO.Compression.GZipStream.CanRead\n  commentId: P:System.IO.Compression.GZipStream.CanRead\n  id: CanRead\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: CanRead\n  fullName: System.IO.Compression.GZipStream.CanRead\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanRead\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 49\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports reading while decompressing a file.</p>\\n\"\n  syntax:\n    content: public override bool CanRead { get; }\n    content.vb: Public Overrides ReadOnly Property CanRead As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value is <strong>Decompress,</strong> and the underlying stream supports reading and is not closed; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanRead\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GZipStream.CanRead\n- uid: System.IO.Compression.GZipStream.CanSeek\n  commentId: P:System.IO.Compression.GZipStream.CanSeek\n  id: CanSeek\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: CanSeek\n  fullName: System.IO.Compression.GZipStream.CanSeek\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanSeek\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 50\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports seeking.</p>\\n\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> in all cases.</p>\\n\"\n  overridden: System.IO.Stream.CanSeek\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GZipStream.CanSeek\n- uid: System.IO.Compression.GZipStream.CanWrite\n  commentId: P:System.IO.Compression.GZipStream.CanWrite\n  id: CanWrite\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: CanWrite\n  fullName: System.IO.Compression.GZipStream.CanWrite\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CanWrite\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 51\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Gets a value indicating whether the stream supports writing.</p>\\n\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value is <strong>Compress</strong>, and the underlying stream supports writing and is not closed; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.IO.Stream.CanWrite\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GZipStream.CanWrite\n- uid: System.IO.Compression.GZipStream.Length\n  commentId: P:System.IO.Compression.GZipStream.Length\n  id: Length\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Length\n  fullName: System.IO.Compression.GZipStream.Length\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Length\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 52\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Length { get; }\n    content.vb: Public Overrides ReadOnly Property Length As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Length\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: GZipStream.Length\n- uid: System.IO.Compression.GZipStream.Position\n  commentId: P:System.IO.Compression.GZipStream.Position\n  id: Position\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Position\n  fullName: System.IO.Compression.GZipStream.Position\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Position\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 53\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Position { get; set; }\n    content.vb: Public Overrides Property Position As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Position\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GZipStream.Position\n- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  commentId: M:System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.Compression.GZipStream.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 54\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.Compression.GZipStream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  overridden: System.IO.Stream.Dispose(System.Boolean)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: GZipStream.Dispose(Boolean)\n- uid: System.IO.Compression.GZipStream.Flush\n  commentId: M:System.IO.Compression.GZipStream.Flush\n  id: Flush\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Flush()\n  fullName: System.IO.Compression.GZipStream.Flush()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Flush\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 55\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>The current implementation of this method has no functionality.</p>\\n\"\n  syntax:\n    content: public override void Flush()\n    content.vb: Public Overrides Sub Flush\n  overridden: System.IO.Stream.Flush\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GZipStream.Flush()\n- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Compression.GZipStream.Read(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Read\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 56\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Reads a number of decompressed bytes into the specified byte array.</p>\\n\"\n  syntax:\n    content: public override int Read(byte[] array, int offset, int count)\n    content.vb: Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>The array used to store decompressed bytes.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>array</em> at which the read bytes will be placed.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of decompressed bytes to read.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.</p>\\n\"\n  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Compression.CompressionMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value was <strong>Compress</strong> when the object was created.</p>\\n<p>- or -</p>\\n<p>The underlying stream does not support reading.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> or <em>count</em> is less than zero.</p>\\n<p>-or-</p>\\n<p>\\n<em>array</em> length minus the index starting point is less than <em>count</em>.</p>\\n\"\n  - type: System.IO.InvalidDataException\n    commentId: T:System.IO.InvalidDataException\n    description: \"\\n<p>The data is in an invalid format.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.GZipStream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  nameWithType: GZipStream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: GZipStream.Read(Byte(), Int32, Int32)\n- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Compression.GZipStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadAsync\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 57\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override Task<int> ReadAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ReadAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: array\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.GZipStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: GZipStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Compression.GZipStream.Seek(System.Int64, System.IO.SeekOrigin)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Seek\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 58\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override long Seek(long offset, SeekOrigin origin)\n    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: \"\\n<p>The location in the stream.</p>\\n\"\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.SeekOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Int64\n      description: \"\\n<p>A long value.</p>\\n\"\n  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GZipStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)\n  commentId: M:System.IO.Compression.GZipStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: SetLength(Int64)\n  fullName: System.IO.Compression.GZipStream.SetLength(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetLength\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 59\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>This property is not supported and always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void SetLength(long value)\n    content.vb: Public Overrides Sub SetLength(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The length of the stream.</p>\\n\"\n  overridden: System.IO.Stream.SetLength(System.Int64)\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property is not supported on this stream.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: GZipStream.SetLength(Int64)\n- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Compression.GZipStream.Write(System.Byte[], System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Write\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 60\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  summary: \"\\n<p>Writes compressed bytes to the underlying stream from the specified byte array.</p>\\n\"\n  syntax:\n    content: public override void Write(byte[] array, int offset, int count)\n    content.vb: Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: array\n      type: System.Byte[]\n      description: \"\\n<p>The buffer that contains the data to compress.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The byte offset in <em>array</em> from which the bytes will be read.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The maximum number of bytes to write.</p>\\n\"\n  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The write operation cannot be performed because the stream is closed.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.GZipStream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  nameWithType: GZipStream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: GZipStream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Compression.GZipStream\n  langs:\n  - csharp\n  - vb\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Compression.GZipStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Compression/ref/System.IO.Compression.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteAsync\n    path: src/System.IO.Compression/ref/System.IO.Compression.cs\n    startLine: 61\n  assemblies:\n  - System.IO.Compression\n  namespace: System.IO.Compression\n  syntax:\n    content: public override Task WriteAsync(byte[] array, int offset, int count, CancellationToken cancellationToken)\n    content.vb: Public Overrides Function WriteAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task\n    parameters:\n    - id: array\n      type: System.Byte[]\n    - id: offset\n      type: System.Int32\n    - id: count\n      type: System.Int32\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task\n  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  fullName.vb: System.IO.Compression.GZipStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  nameWithType: GZipStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: GZipStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\nreferences:\n- uid: System.IO.Compression\n  isExternal: false\n  name: System.IO.Compression\n  fullName: System.IO.Compression\n  commentId: N:System.IO.Compression\n  nameWithType: System.IO.Compression\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  fullName: System.IO.Stream.Null\n  commentId: F:System.IO.Stream.Null\n  nameWithType: Stream.Null\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n    name: CopyToAsync\n    fullName: System.IO.Stream.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)\n  nameWithType: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: CopyTo(Stream, Int32)\n  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n    name: CopyTo\n    fullName: System.IO.Stream.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: true\n  name: Close()\n  fullName: System.IO.Stream.Close()\n  spec.csharp:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Close\n    name: Close\n    fullName: System.IO.Stream.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Close\n  nameWithType: Stream.Close()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  fullName: System.IO.Stream.Dispose()\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose\n  nameWithType: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync\n  nameWithType: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n    name: FlushAsync\n    fullName: System.IO.Stream.FlushAsync\n  - name: (\n    fullName: (\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: true\n  name: CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  spec.csharp:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.CreateWaitHandle\n    name: CreateWaitHandle\n    fullName: System.IO.Stream.CreateWaitHandle\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.CreateWaitHandle\n  nameWithType: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginRead\n    fullName: System.IO.Stream.BeginRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndRead(System.IAsyncResult)\n    name: EndRead\n    fullName: System.IO.Stream.EndRead\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: ReadAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: true\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)\n  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n  spec.csharp:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n    name: BeginWrite\n    fullName: System.IO.Stream.BeginWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.AsyncCallback\n    name: AsyncCallback\n    fullName: System.AsyncCallback\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: true\n  name: EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)\n  spec.csharp:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n    name: EndWrite\n    fullName: System.IO.Stream.EndWrite\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IAsyncResult\n    name: IAsyncResult\n    fullName: System.IAsyncResult\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)\n  name.vb: WriteAsync(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  spec.csharp:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadByte\n    name: ReadByte\n    fullName: System.IO.Stream.ReadByte\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadByte\n  nameWithType: Stream.ReadByte()\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(System.Byte)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteByte(System.Byte)\n    name: WriteByte\n    fullName: System.IO.Stream.WriteByte\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteByte(System.Byte)\n  nameWithType: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Synchronized(System.IO.Stream)\n    name: Synchronized\n    fullName: System.IO.Stream.Synchronized\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)\n  nameWithType: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: true\n  name: ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  spec.csharp:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ObjectInvariant\n    name: ObjectInvariant\n    fullName: System.IO.Stream.ObjectInvariant\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ObjectInvariant\n  nameWithType: Stream.ObjectInvariant()\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  commentId: P:System.IO.Stream.CanTimeout\n  nameWithType: Stream.CanTimeout\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  commentId: P:System.IO.Stream.ReadTimeout\n  nameWithType: Stream.ReadTimeout\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  commentId: P:System.IO.Stream.WriteTimeout\n  nameWithType: Stream.WriteTimeout\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  name: AsInputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  name: AsOutputStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()\n- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  parent: System.IO.WindowsRuntimeStreamExtensions\n  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  name: AsRandomAccessStream()\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  isExternal: true\n  name: AsInputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n    name: AsInputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions\n  parent: System.IO\n  isExternal: false\n  name: WindowsRuntimeStreamExtensions\n  fullName: System.IO.WindowsRuntimeStreamExtensions\n  commentId: T:System.IO.WindowsRuntimeStreamExtensions\n  nameWithType: WindowsRuntimeStreamExtensions\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  isExternal: true\n  name: AsOutputStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n    name: AsOutputStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)\n- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  isExternal: true\n  name: AsRandomAccessStream(Stream)\n  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  spec.csharp:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n    name: AsRandomAccessStream\n    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)\n  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)\n- uid: System.IO.Compression.CompressionLevel\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionLevel\n  fullName: System.IO.Compression.CompressionLevel\n  commentId: T:System.IO.Compression.CompressionLevel\n  nameWithType: CompressionLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IO.Compression.CompressionMode\n  parent: System.IO.Compression\n  isExternal: false\n  name: CompressionMode\n  fullName: System.IO.Compression.CompressionMode\n  commentId: T:System.IO.Compression.CompressionMode\n  nameWithType: CompressionMode\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  fullName: System.IO.Stream.CanRead\n  commentId: P:System.IO.Stream.CanRead\n  nameWithType: Stream.CanRead\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  fullName: System.IO.Stream.CanSeek\n  commentId: P:System.IO.Stream.CanSeek\n  nameWithType: Stream.CanSeek\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  fullName: System.IO.Stream.CanWrite\n  commentId: P:System.IO.Stream.CanWrite\n  nameWithType: Stream.CanWrite\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  fullName: System.IO.Stream.Length\n  commentId: P:System.IO.Stream.Length\n  nameWithType: Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  fullName: System.IO.Stream.Position\n  commentId: P:System.IO.Stream.Position\n  nameWithType: Stream.Position\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.IO.Stream.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Dispose(System.Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  fullName: System.IO.Stream.Flush()\n  spec.csharp:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Flush\n    name: Flush\n    fullName: System.IO.Stream.Flush\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Flush\n  nameWithType: Stream.Flush()\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Read(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)\n  name.vb: Read(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n    name: Read\n    fullName: System.IO.Stream.Read\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Read(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: ReadAsync\n    fullName: System.IO.Stream.ReadAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  commentId: T:System.Threading.CancellationToken\n  nameWithType: CancellationToken\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  commentId: N:System.Threading\n  nameWithType: System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Seek(Int64, SeekOrigin)\n  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)\n  spec.csharp:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n    name: Seek\n    fullName: System.IO.Stream.Seek\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IO.SeekOrigin\n    name: SeekOrigin\n    fullName: System.IO.SeekOrigin\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  nameWithType: Stream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  fullName: System.IO.SeekOrigin\n  commentId: T:System.IO.SeekOrigin\n  nameWithType: SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: true\n  name: SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(System.Int64)\n  spec.csharp:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.SetLength(System.Int64)\n    name: SetLength\n    fullName: System.IO.Stream.SetLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.SetLength(System.Int64)\n  nameWithType: Stream.SetLength(Int64)\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: true\n  name: Write(Byte[], Int32, Int32)\n  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)\n  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)\n  name.vb: Write(Byte(), Int32, Int32)\n  spec.csharp:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n    name: Write\n    fullName: System.IO.Stream.Write\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  nameWithType: Stream.Write(Byte[], Int32, Int32)\n  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: true\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)\n  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)\n  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)\n  spec.csharp:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n    name: WriteAsync\n    fullName: System.IO.Stream.WriteAsync\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.CancellationToken\n    name: CancellationToken\n    fullName: System.Threading.CancellationToken\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.IO.InvalidDataException\n  isExternal: false\n  name: InvalidDataException\n  fullName: System.IO.InvalidDataException\n  nameWithType: InvalidDataException\n  commentId: T:System.IO.InvalidDataException\n"}