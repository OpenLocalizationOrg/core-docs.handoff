{"nodes":[{"pos":[407,424],"content":"VARDESC.DESCUNION","needQuote":true,"nodes":[{"content":"VARDESC.DESCUNION","pos":[0,17]}]},{"pos":[2153,2163],"content":"lpvarValue","needQuote":true,"nodes":[{"content":"lpvarValue","pos":[0,10]}]},{"pos":[3486,3491],"content":"oInst","needQuote":true,"nodes":[{"content":"oInst","pos":[0,5]}]},{"pos":[4636,4675],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[4939,4953],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5078,5084],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5133,5134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5184,5190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5250,5251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5337,5343],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5392,5393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5443,5449],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5509,5510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5713,5726],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5833,5844],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5898,5899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5926,5927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6003,6014],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6068,6069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6096,6097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6286,6296],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6397,6405],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6456,6457],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6484,6485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6558,6566],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6617,6618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6645,6646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6849,6871],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7019,7025],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7092,7093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7143,7149],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7210,7211]},{"pos":[7266,7272],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7332,7333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7430,7436],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7503,7504],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7554,7560],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7621,7622]},{"pos":[7677,7683],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7743,7744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7989,8020],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8186,8201],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8277,8278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8328,8334],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8395,8396]},{"pos":[8451,8457],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8517,8518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8624,8639],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8715,8716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8766,8772],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8833,8834]},{"pos":[8889,8895],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8955,8956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9182,9191],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9284,9291],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9359,9360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9387,9388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9457,9464],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9532,9533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9560,9561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9717,9726],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[9880,9886],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10007,10013],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10144,10150],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[10294,10299],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION\n  commentId: T:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION\n  id: VARDESC.DESCUNION\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue\n  - System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst\n  langs:\n  - csharp\n  - vb\n  name: VARDESC.DESCUNION\n  fullName: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DESCUNION\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 191\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Contains information about a variable.</p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Explicit, CharSet = CharSet.Unicode)]\n\n      public struct DESCUNION\n    content.vb: >-\n      <StructLayout(LayoutKind.Explicit, CharSet:=CharSet.Unicode)>\n\n      Public Structure DESCUNION\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 2\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: VARDESC.DESCUNION\n- uid: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue\n  commentId: F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue\n  id: lpvarValue\n  parent: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION\n  langs:\n  - csharp\n  - vb\n  name: lpvarValue\n  fullName: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.lpvarValue\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: lpvarValue\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 198\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Describes a symbolic constant.</p>\\n\"\n  syntax:\n    content: >-\n      [FieldOffset(0)]\n\n      public IntPtr lpvarValue\n    content.vb: >-\n      <FieldOffset(0)>\n\n      Public lpvarValue As IntPtr\n    return:\n      type: System.IntPtr\n  attributes:\n  - type: System.Runtime.InteropServices.FieldOffsetAttribute\n    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)\n    arguments:\n    - type: System.Int32\n      value: 0\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: VARDESC.DESCUNION.lpvarValue\n- uid: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst\n  commentId: F:System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst\n  id: oInst\n  parent: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION\n  langs:\n  - csharp\n  - vb\n  name: oInst\n  fullName: System.Runtime.InteropServices.ComTypes.VARDESC.DESCUNION.oInst\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: oInst\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeInfo.cs\n    startLine: 196\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Indicates the offset of this variable within the instance.</p>\\n\"\n  syntax:\n    content: >-\n      [FieldOffset(0)]\n\n      public int oInst\n    content.vb: >-\n      <FieldOffset(0)>\n\n      Public oInst As Integer\n    return:\n      type: System.Int32\n  attributes:\n  - type: System.Runtime.InteropServices.FieldOffsetAttribute\n    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)\n    arguments:\n    - type: System.Int32\n      value: 0\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: VARDESC.DESCUNION.oInst\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n"}