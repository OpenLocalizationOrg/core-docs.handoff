{"nodes":[{"pos":[499,511],"content":"XDeclaration","needQuote":true,"nodes":[{"content":"XDeclaration","pos":[0,12]}]},{"pos":[1871,1907],"content":"XDeclaration(String, String, String)","needQuote":true,"nodes":[{"content":"XDeclaration(String, String, String)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The encoding for the XML document.&lt;/p&gt;\\n","pos":[2947,2992],"source":"\\n<p>The encoding for the XML document.</p>\\n"},{"pos":[3710,3736],"content":"XDeclaration(XDeclaration)","needQuote":true,"nodes":[{"content":"XDeclaration(XDeclaration)","pos":[0,26]}]},{"pos":[5277,5285],"content":"Encoding","needQuote":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[6490,6500],"content":"Standalone","needQuote":true,"nodes":[{"content":"Standalone","pos":[0,10]}]},{"pos":[7720,7727],"content":"Version","needQuote":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[8935,8945],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9938,9953],"content":"System.Xml.Linq","needQuote":true,"nodes":[{"content":"System.Xml.Linq","pos":[0,15]}]},{"pos":[10111,10117],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10290,10304],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10423,10429],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10496,10497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10547,10553],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10613,10614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10697,10703],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10770,10771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10821,10827],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10887,10888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11102,11124],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11272,11278],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11345,11346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11396,11402],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11463,11464]},{"pos":[11519,11525],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11585,11586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11683,11689],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11756,11757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11807,11813],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11874,11875]},{"pos":[11930,11936],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11996,11997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12242,12273],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12439,12454],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12530,12531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12581,12587],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12648,12649]},{"pos":[12704,12710],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12770,12771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12877,12892],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12968,12969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13019,13025],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13086,13087]},{"pos":[13142,13148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13208,13209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13439,13452],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13553,13564],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13636,13637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13664,13665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13738,13749],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13821,13822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13849,13850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14025,14034],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[14127,14134],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14202,14203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14230,14231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14300,14307],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14375,14376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14403,14404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14579,14596],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[14705,14720],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14796,14797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14824,14825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14902,14917],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14993,14994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15021,15022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15167,15173],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15304,15310],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15479,15491],"content":"XDeclaration","needQuote":true,"nodes":[{"content":"XDeclaration","pos":[0,12]}]},{"pos":[15687,15697],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15792,15800],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15869,15870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15897,15898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15968,15976],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16045,16046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16073,16074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Xml.Linq.XDeclaration\n  commentId: T:System.Xml.Linq.XDeclaration\n  id: XDeclaration\n  parent: System.Xml.Linq\n  children:\n  - System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)\n  - System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)\n  - System.Xml.Linq.XDeclaration.Encoding\n  - System.Xml.Linq.XDeclaration.Standalone\n  - System.Xml.Linq.XDeclaration.ToString\n  - System.Xml.Linq.XDeclaration.Version\n  langs:\n  - csharp\n  - vb\n  name: XDeclaration\n  fullName: System.Xml.Linq.XDeclaration\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XDeclaration\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 153\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Represents an XML declaration.</p>\\n\"\n  syntax:\n    content: public class XDeclaration\n    content.vb: Public Class XDeclaration\n  seealso:\n  - type: System.Xml.Linq.XDocument.Declaration\n    commentId: P:System.Xml.Linq.XDocument.Declaration\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XDeclaration\n- uid: System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: XDeclaration(String, String, String)\n  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.String, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 155\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified version, encoding, and standalone status.</p>\\n\"\n  syntax:\n    content: public XDeclaration(string version, string encoding, string standalone)\n    content.vb: Public Sub New(version As String, encoding As String, standalone As String)\n    parameters:\n    - id: version\n      type: System.String\n      description: \"\\n<p>The version of the XML, usually \\\"1.0\\\".</p>\\n\"\n    - id: encoding\n      type: System.String\n      description: \"\\n<p>The encoding for the XML document.</p>\\n\"\n    - id: standalone\n      type: System.String\n      description: \"\\n<p>A string containing \\\"yes\\\" or \\\"no\\\" that specifies whether the XML is standalone or requires external entities to be resolved.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration.ToString\n    commentId: M:System.Xml.Linq.XDeclaration.ToString\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDeclaration.XDeclaration(String, String, String)\n- uid: System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)\n  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)\n  id: '#ctor(System.Xml.Linq.XDeclaration)'\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: XDeclaration(XDeclaration)\n  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.Xml.Linq.XDeclaration)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 156\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class from another <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object. </p>\\n\"\n  syntax:\n    content: public XDeclaration(XDeclaration other)\n    content.vb: Public Sub New(other As XDeclaration)\n    parameters:\n    - id: other\n      type: System.Xml.Linq.XDeclaration\n      description: \"\\n<p>The <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to initialize this <xref href=\\\"System.Xml.Linq.XDeclaration\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration.ToString\n    commentId: M:System.Xml.Linq.XDeclaration.ToString\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XDeclaration.XDeclaration(XDeclaration)\n- uid: System.Xml.Linq.XDeclaration.Encoding\n  commentId: P:System.Xml.Linq.XDeclaration.Encoding\n  id: Encoding\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: Encoding\n  fullName: System.Xml.Linq.XDeclaration.Encoding\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Encoding\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 157\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the encoding for this document.</p>\\n\"\n  syntax:\n    content: public string Encoding { get; set; }\n    content.vb: Public Property Encoding As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the code page name for this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration.ToString\n    commentId: M:System.Xml.Linq.XDeclaration.ToString\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XDeclaration.Encoding\n- uid: System.Xml.Linq.XDeclaration.Standalone\n  commentId: P:System.Xml.Linq.XDeclaration.Standalone\n  id: Standalone\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: Standalone\n  fullName: System.Xml.Linq.XDeclaration.Standalone\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Standalone\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 158\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the standalone property for this document.</p>\\n\"\n  syntax:\n    content: public string Standalone { get; set; }\n    content.vb: Public Property Standalone As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the standalone property for this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration.Version\n    commentId: P:System.Xml.Linq.XDeclaration.Version\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XDeclaration.Standalone\n- uid: System.Xml.Linq.XDeclaration.Version\n  commentId: P:System.Xml.Linq.XDeclaration.Version\n  id: Version\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: Version\n  fullName: System.Xml.Linq.XDeclaration.Version\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Version\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 159\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Gets or sets the version property for this document.</p>\\n\"\n  syntax:\n    content: public string Version { get; set; }\n    content.vb: Public Property Version As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the version property for this document.</p>\\n\"\n  seealso:\n  - type: System.Xml.Linq.XDeclaration.Standalone\n    commentId: P:System.Xml.Linq.XDeclaration.Standalone\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: XDeclaration.Version\n- uid: System.Xml.Linq.XDeclaration.ToString\n  commentId: M:System.Xml.Linq.XDeclaration.ToString\n  id: ToString\n  parent: System.Xml.Linq.XDeclaration\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Xml.Linq.XDeclaration.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs\n    startLine: 160\n  assemblies:\n  - System.Xml.XDocument\n  namespace: System.Xml.Linq\n  summary: \"\\n<p>Provides the declaration as a formatted string.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the formatted XML string.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XDeclaration.ToString()\nreferences:\n- uid: System.Xml.Linq\n  isExternal: false\n  name: System.Xml.Linq\n  fullName: System.Xml.Linq\n  commentId: N:System.Xml.Linq\n  nameWithType: System.Xml.Linq\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.Linq.XDeclaration\n  parent: System.Xml.Linq\n  isExternal: false\n  name: XDeclaration\n  fullName: System.Xml.Linq.XDeclaration\n  commentId: T:System.Xml.Linq.XDeclaration\n  nameWithType: XDeclaration\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n"}