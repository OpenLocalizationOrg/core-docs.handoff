{"nodes":[{"pos":[374,390],"content":"HandledEventArgs","needQuote":true,"nodes":[{"content":"HandledEventArgs","pos":[0,16]}]},{"pos":[2503,2521],"content":"HandledEventArgs()","needQuote":true,"nodes":[{"content":"HandledEventArgs()","pos":[0,18]}]},{"pos":[3794,3819],"content":"HandledEventArgs(Boolean)","needQuote":true,"nodes":[{"content":"HandledEventArgs(Boolean)","pos":[0,25]}]},{"pos":[5367,5374],"content":"Handled","needQuote":true,"nodes":[{"content":"Handled","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the event has been completely handled; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6223,6334],"source":"\\n<p>\\n<strong>true</strong> if the event has been completely handled; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[6520,6541],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[6717,6723],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6871,6880],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[7052,7057],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[7244,7254],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7349,7357],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7426,7427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7454,7455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7525,7533],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7602,7603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7630,7631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7814,7828],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7947,7953],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8020,8021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8071,8077],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8137,8138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8221,8227],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8294,8295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8345,8351],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8411,8412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8626,8648],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8796,8802],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8869,8870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8920,8926],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8987,8988]},{"pos":[9043,9049],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9109,9110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9207,9213],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9280,9281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9331,9337],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9398,9399]},{"pos":[9454,9460],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9520,9521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9766,9797],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9963,9978],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10054,10055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10105,10111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10172,10173]},{"pos":[10228,10234],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10294,10295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10401,10416],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10492,10493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10543,10549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10610,10611]},{"pos":[10666,10672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10732,10733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10963,10976],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11077,11088],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11160,11161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11188,11189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11262,11273],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11345,11346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11373,11374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11549,11558],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11651,11658],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11726,11727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11754,11755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11824,11831],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11899,11900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11927,11928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12103,12120],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12229,12244],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12320,12321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12348,12349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12426,12441],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12517,12518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12545,12546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12691,12697],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12829,12836],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.ComponentModel.HandledEventArgs\n  commentId: T:System.ComponentModel.HandledEventArgs\n  id: HandledEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.HandledEventArgs.#ctor\n  - System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)\n  - System.ComponentModel.HandledEventArgs.Handled\n  langs:\n  - csharp\n  - vb\n  name: HandledEventArgs\n  fullName: System.ComponentModel.HandledEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HandledEventArgs\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for events that can be handled completely in an event handler. </p>\\n\"\n  syntax:\n    content: 'public class HandledEventArgs : EventArgs'\n    content.vb: >-\n      Public Class HandledEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.ComponentModel.HandledEventHandler\n    commentId: T:System.ComponentModel.HandledEventHandler\n  - type: System.Windows.Forms.DataGridViewCellPaintingEventArgs\n    commentId: T:System.Windows.Forms.DataGridViewCellPaintingEventArgs\n  - type: System.Windows.Forms.DataGridViewRowPrePaintEventArgs\n    commentId: T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs\n  - type: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs\n    commentId: T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs\n  - type: System.Windows.Forms.DataGridViewSortCompareEventArgs\n    commentId: T:System.Windows.Forms.DataGridViewSortCompareEventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: HandledEventArgs\n- uid: System.ComponentModel.HandledEventArgs.#ctor\n  commentId: M:System.ComponentModel.HandledEventArgs.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.HandledEventArgs\n  langs:\n  - csharp\n  - vb\n  name: HandledEventArgs()\n  fullName: System.ComponentModel.HandledEventArgs.HandledEventArgs()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n    startLine: 20\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.HandledEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a default <xref href=\\\"System.ComponentModel.HandledEventArgs.Handled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property value of <strong>false</strong>.</p>\\n\"\n  syntax:\n    content: public HandledEventArgs()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HandledEventArgs.HandledEventArgs()\n- uid: System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.HandledEventArgs\n  langs:\n  - csharp\n  - vb\n  name: HandledEventArgs(Boolean)\n  fullName: System.ComponentModel.HandledEventArgs.HandledEventArgs(System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n    startLine: 30\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.HandledEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified default value for the <xref href=\\\"System.ComponentModel.HandledEventArgs.Handled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public HandledEventArgs(bool defaultHandledValue)\n    content.vb: Public Sub New(defaultHandledValue As Boolean)\n    parameters:\n    - id: defaultHandledValue\n      type: System.Boolean\n      description: \"\\n<p>The default value for the <xref href=\\\"System.ComponentModel.HandledEventArgs.Handled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HandledEventArgs.HandledEventArgs(Boolean)\n- uid: System.ComponentModel.HandledEventArgs.Handled\n  commentId: P:System.ComponentModel.HandledEventArgs.Handled\n  id: Handled\n  parent: System.ComponentModel.HandledEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Handled\n  fullName: System.ComponentModel.HandledEventArgs.Handled\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Handled\n    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs\n    startLine: 41\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own processing.</p>\\n\"\n  syntax:\n    content: public bool Handled { get; set; }\n    content.vb: Public Property Handled As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the event has been completely handled; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: HandledEventArgs.Handled\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}