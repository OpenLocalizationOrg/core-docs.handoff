{"nodes":[{"pos":[411,433],"content":"SqlRowsCopiedEventArgs","needQuote":true,"nodes":[{"content":"SqlRowsCopiedEventArgs","pos":[0,22]}]},{"pos":[1997,2026],"content":"SqlRowsCopiedEventArgs(Int64)","needQuote":true,"nodes":[{"content":"SqlRowsCopiedEventArgs(Int64)","pos":[0,29]}]},{"pos":[3405,3410],"content":"Abort","needQuote":true,"nodes":[{"content":"Abort","pos":[0,5]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the bulk copy operation should be aborted; otherwise &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[4155,4269],"source":"\\n<p>\\n<strong>true</strong> if the bulk copy operation should be aborted; otherwise <strong>false</strong>.</p>\\n"},{"pos":[4631,4641],"content":"RowsCopied","needQuote":true,"nodes":[{"content":"RowsCopied","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;int&lt;/strong&gt; that returns the number of rows copied.&lt;/p&gt;\\n","pos":[5410,5483],"source":"\\n<p>\\n<strong>int</strong> that returns the number of rows copied.</p>\\n"},{"pos":[5683,5704],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[5880,5886],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6034,6043],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[6215,6220],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6407,6417],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6512,6520],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6589,6590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6617,6618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6688,6696],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6765,6766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6793,6794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6977,6991],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7110,7116],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7183,7184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7234,7240],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7300,7301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7384,7390],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7457,7458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7508,7514],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7574,7575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7789,7811],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7959,7965],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8032,8033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8083,8089],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8150,8151]},{"pos":[8206,8212],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8272,8273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8370,8376],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8443,8444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8494,8500],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8561,8562]},{"pos":[8617,8623],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8683,8684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8929,8960],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9126,9141],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9217,9218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9268,9274],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9335,9336]},{"pos":[9391,9397],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9457,9458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9564,9579],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9655,9656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9706,9712],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9773,9774]},{"pos":[9829,9835],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9895,9896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10126,10139],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10240,10251],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10323,10324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10351,10352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10425,10436],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10508,10509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10536,10537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10712,10721],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10814,10821],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10889,10890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10917,10918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10987,10994],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11062,11063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11090,11091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11266,11283],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11392,11407],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11483,11484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11511,11512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11589,11604],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11680,11681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11708,11709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11854,11860],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11990,11995],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[12138,12145],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs\n  commentId: T:System.Data.SqlClient.SqlRowsCopiedEventArgs\n  id: SqlRowsCopiedEventArgs\n  parent: System.Data.SqlClient\n  children:\n  - System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)\n  - System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\n  - System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied\n  langs:\n  - csharp\n  - vb\n  name: SqlRowsCopiedEventArgs\n  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlRowsCopiedEventArgs\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n    startLine: 10\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Represents the set of arguments passed to the <xref href=\\\"System.Data.SqlClient.SqlRowsCopiedEventHandler\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: 'public class SqlRowsCopiedEventArgs : EventArgs'\n    content.vb: >-\n      Public Class SqlRowsCopiedEventArgs\n          Inherits EventArgs\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: SqlRowsCopiedEventArgs\n- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)\n  commentId: M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: SqlRowsCopiedEventArgs(Int64)\n  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.SqlRowsCopiedEventArgs(System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n    startLine: 15\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Data.SqlClient.SqlRowsCopiedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public SqlRowsCopiedEventArgs(long rowsCopied)\n    content.vb: Public Sub New(rowsCopied As Long)\n    parameters:\n    - id: rowsCopied\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that indicates the number of rows copied during the current bulk copy operation. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlRowsCopiedEventArgs.SqlRowsCopiedEventArgs(Int64)\n- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\n  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\n  id: Abort\n  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Abort\n  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Abort\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n    startLine: 20\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets a value that indicates whether the bulk copy operation should be aborted.</p>\\n\"\n  syntax:\n    content: public bool Abort { get; set; }\n    content.vb: Public Property Abort As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the bulk copy operation should be aborted; otherwise <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlRowsCopiedEventArgs.Abort\n- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied\n  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied\n  id: RowsCopied\n  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: RowsCopied\n  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RowsCopied\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs\n    startLine: 32\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets a value that returns the number of rows copied during the current bulk copy operation.</p>\\n\"\n  syntax:\n    content: public long RowsCopied { get; }\n    content.vb: Public ReadOnly Property RowsCopied As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>\\n<strong>int</strong> that returns the number of rows copied.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlRowsCopiedEventArgs.RowsCopied\nreferences:\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}