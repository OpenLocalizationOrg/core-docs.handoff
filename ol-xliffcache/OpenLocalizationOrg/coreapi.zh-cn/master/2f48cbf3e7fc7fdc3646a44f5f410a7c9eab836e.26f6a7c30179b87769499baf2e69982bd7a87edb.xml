{"nodes":[{"pos":[848,870],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[2781,2830],"content":"CustomAttributeBuilder(ConstructorInfo, Object[])","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder(ConstructorInfo, Object[])","pos":[0,49]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[3819,3865],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[3866,3872],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments to the constructor of the custom attribute.","pos":[3948,4010],"source":"\\n<p>The arguments to the constructor of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[4011,4017],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;constructorArgs&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[4797,4870],"source":"\\n<p>\\n<em>con</em> or <em>constructorArgs</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4871,4877],"source":" </p>\\n"},{"pos":[5837,5909],"content":"CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])","pos":[0,72]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[7081,7127],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[7128,7134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments to the constructor of the custom attribute.","pos":[7210,7272],"source":"\\n<p>The arguments to the constructor of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[7273,7279],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Named fields of the custom attribute.","pos":[7365,7407],"source":"\\n<p>Named fields of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[7408,7414],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Values for the named fields of the custom attribute.","pos":[7486,7543],"source":"\\n<p>Values for the named fields of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[7544,7550],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the parameters is &lt;strong&gt;null&lt;/strong&gt;.","pos":[8650,8702],"source":"\\n<p>One of the parameters is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[8703,8709],"source":" </p>\\n"},{"pos":[9795,9870],"content":"CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])","pos":[0,75]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[11071,11117],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[11118,11124],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments to the constructor of the custom attribute.","pos":[11200,11262],"source":"\\n<p>The arguments to the constructor of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[11263,11269],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Named properties of the custom attribute.","pos":[11362,11408],"source":"\\n<p>Named properties of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[11409,11415],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Values for the named properties of the custom attribute.","pos":[11490,11551],"source":"\\n<p>Values for the named properties of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[11552,11558],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the parameters is &lt;strong&gt;null&lt;/strong&gt;.","pos":[12733,12785],"source":"\\n<p>One of the parameters is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12786,12792],"source":" </p>\\n"},{"pos":[14028,14126],"content":"CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])","pos":[0,98]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[15512,15558],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[15559,15565],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The arguments to the constructor of the custom attribute.","pos":[15641,15703],"source":"\\n<p>The arguments to the constructor of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[15704,15710],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Named properties of the custom attribute.","pos":[15803,15849],"source":"\\n<p>Named properties of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[15850,15856],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Values for the named properties of the custom attribute.","pos":[15931,15992],"source":"\\n<p>Values for the named properties of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[15993,15999],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Named fields of the custom attribute.","pos":[16085,16127],"source":"\\n<p>Named fields of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[16128,16134],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Values for the named fields of the custom attribute.","pos":[16206,16263],"source":"\\n<p>Values for the named fields of the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[16264,16270],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;One of the parameters is &lt;strong&gt;null&lt;/strong&gt;.","pos":[17679,17731],"source":"\\n<p>One of the parameters is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[17732,17738],"source":" </p>\\n"},{"pos":[18492,18514],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[18693,18699],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18859,18869],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[18964,18972],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19041,19042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19069,19070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19140,19148],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[19217,19218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19245,19246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19429,19443],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[19562,19568],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19635,19636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19686,19692],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19752,19753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19836,19842],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19909,19910],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19960,19966],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20026,20027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20241,20263],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[20411,20417],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20484,20485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20535,20541],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20602,20603]},{"pos":[20658,20664],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20724,20725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20822,20828],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20895,20896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20946,20952],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21013,21014]},{"pos":[21069,21075],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21135,21136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21381,21412],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[21578,21593],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[21669,21670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21720,21726],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21787,21788]},{"pos":[21843,21849],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21909,21910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22016,22031],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22107,22108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22158,22164],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22225,22226]},{"pos":[22281,22287],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22347,22348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22578,22591],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22692,22703],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22775,22776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22803,22804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22877,22888],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22960,22961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22988,22989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23164,23173],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23266,23273],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23341,23342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23369,23370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23439,23446],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23514,23515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23542,23543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23718,23735],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[23844,23859],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23935,23936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23963,23964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24041,24056],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24132,24133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24160,24161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24306,24312],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24474,24489],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[24648,24656],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[24784,24790],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[24851,24853]},{"pos":[24918,24924],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24984,24986],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[25110,25127],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[25270,25281],"content":"FieldInfo[]","needQuote":true,"nodes":[{"content":"FieldInfo[]","pos":[0,11]}]},{"pos":[25454,25463],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"content":"[]","pos":[25517,25519]},{"pos":[25598,25607],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[25660,25662],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[25787,25801],"content":"PropertyInfo[]","needQuote":true,"nodes":[{"content":"PropertyInfo[]","pos":[0,14]}]},{"pos":[25986,25998],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":"[]","pos":[26055,26057]},{"pos":[26139,26151],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[26207,26209],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[26369,26386],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[26562,26583],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n  id: CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])\n  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])\n  - System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CustomAttributeBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Helps build custom attributes.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_CustomAttributeBuilder))]\n\n      [ComVisible(true)]\n\n      public class CustomAttributeBuilder : _CustomAttributeBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_CustomAttributeBuilder))>\n\n      <ComVisible(True)>\n\n      Public Class CustomAttributeBuilder\n          Implements _CustomAttributeBuilder\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: CustomAttributeBuilder\n- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])\n  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])\n  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[])'\n  parent: System.Reflection.Emit.CustomAttributeBuilder\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeBuilder(ConstructorInfo, Object[])\n  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an instance of the <strong>CustomAttributeBuilder</strong> class given the constructor for the custom attribute and the arguments to the constructor.</p>\\n\"\n  syntax:\n    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs)\n    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: constructorArgs\n      type: System.Object[]\n      description: \"\\n<p>The arguments to the constructor of the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>con</em> is static or private.</p>\\n<p>-or- </p>\\n<p>The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</p>\\n<p>-or- </p>\\n<p>The type of supplied argument does not match the type of the parameter declared in the constructor. </p>\\n<p>-or-</p>\\n<p>A supplied argument is a reference type other than <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>constructorArgs</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object())\n  name.vb: CustomAttributeBuilder(ConstructorInfo, Object())\n  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[])\n  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object())\n- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])'\n  parent: System.Reflection.Emit.CustomAttributeBuilder\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])\n  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.FieldInfo[], System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n    startLine: 52\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an instance of the <strong>CustomAttributeBuilder</strong> class given the constructor for the custom attribute, the arguments to the constructor, and a set of named field/value pairs.</p>\\n\"\n  syntax:\n    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, FieldInfo[] namedFields, object[] fieldValues)\n    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedFields As FieldInfo(), fieldValues As Object())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: constructorArgs\n      type: System.Object[]\n      description: \"\\n<p>The arguments to the constructor of the custom attribute. </p>\\n\"\n    - id: namedFields\n      type: System.Reflection.FieldInfo[]\n      description: \"\\n<p>Named fields of the custom attribute. </p>\\n\"\n    - id: fieldValues\n      type: System.Object[]\n      description: \"\\n<p>Values for the named fields of the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The lengths of the <em>namedFields</em> and <em>fieldValues</em> arrays are different.</p>\\n<p>-or- </p>\\n<p>\\n<em>con</em> is static or private.</p>\\n<p>-or- </p>\\n<p>The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</p>\\n<p>-or- </p>\\n<p>The type of supplied argument does not match the type of the parameter declared in the constructor.</p>\\n<p>-or- </p>\\n<p>The types of the field values do not match the types of the named fields.</p>\\n<p>-or- </p>\\n<p>The field does not belong to the same class or base class as the constructor. </p>\\n<p>-or-</p>\\n<p>A supplied argument or named field is a reference type other than <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One of the parameters is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.FieldInfo(), System.Object())\n  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), FieldInfo(), Object())\n  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], FieldInfo[], Object[])\n  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), FieldInfo(), Object())\n- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])\n  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])\n  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])'\n  parent: System.Reflection.Emit.CustomAttributeBuilder\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])\n  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n    startLine: 43\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an instance of the <strong>CustomAttributeBuilder</strong> class given the constructor for the custom attribute, the arguments to the constructor, and a set of named property or value pairs.</p>\\n\"\n  syntax:\n    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues)\n    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: constructorArgs\n      type: System.Object[]\n      description: \"\\n<p>The arguments to the constructor of the custom attribute. </p>\\n\"\n    - id: namedProperties\n      type: System.Reflection.PropertyInfo[]\n      description: \"\\n<p>Named properties of the custom attribute. </p>\\n\"\n    - id: propertyValues\n      type: System.Object[]\n      description: \"\\n<p>Values for the named properties of the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The lengths of the <em>namedProperties</em> and <em>propertyValues</em> arrays are different.</p>\\n<p>-or- </p>\\n<p>\\n<em>con</em> is static or private.</p>\\n<p>-or- </p>\\n<p>The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</p>\\n<p>-or- </p>\\n<p>The type of supplied argument does not match the type of the parameter declared in the constructor.</p>\\n<p>-or- </p>\\n<p>The types of the property values do not match the types of the named properties.</p>\\n<p>-or- </p>\\n<p>A property has no setter method.</p>\\n<p>-or- </p>\\n<p>The property does not belong to the same class or base class as the constructor. </p>\\n<p>-or-</p>\\n<p>A supplied argument or named property is a reference type other than <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One of the parameters is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.PropertyInfo(), System.Object())\n  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object())\n  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[])\n  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object())\n- uid: System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  commentId: M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])\n  id: '#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])'\n  parent: System.Reflection.Emit.CustomAttributeBuilder\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])\n  fullName: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object[], System.Reflection.PropertyInfo[], System.Object[], System.Reflection.FieldInfo[], System.Object[])\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Reflection/Emit/CustomAttributeBuilder.cs\n    startLine: 61\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Initializes an instance of the <strong>CustomAttributeBuilder</strong> class given the constructor for the custom attribute, the arguments to the constructor, a set of named property or value pairs, and a set of named field or value pairs.</p>\\n\"\n  syntax:\n    content: public CustomAttributeBuilder(ConstructorInfo con, object[] constructorArgs, PropertyInfo[] namedProperties, object[] propertyValues, FieldInfo[] namedFields, object[] fieldValues)\n    content.vb: Public Sub New(con As ConstructorInfo, constructorArgs As Object(), namedProperties As PropertyInfo(), propertyValues As Object(), namedFields As FieldInfo(), fieldValues As Object())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: constructorArgs\n      type: System.Object[]\n      description: \"\\n<p>The arguments to the constructor of the custom attribute. </p>\\n\"\n    - id: namedProperties\n      type: System.Reflection.PropertyInfo[]\n      description: \"\\n<p>Named properties of the custom attribute. </p>\\n\"\n    - id: propertyValues\n      type: System.Object[]\n      description: \"\\n<p>Values for the named properties of the custom attribute. </p>\\n\"\n    - id: namedFields\n      type: System.Reflection.FieldInfo[]\n      description: \"\\n<p>Named fields of the custom attribute. </p>\\n\"\n    - id: fieldValues\n      type: System.Object[]\n      description: \"\\n<p>Values for the named fields of the custom attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The lengths of the <em>namedProperties</em> and <em>propertyValues</em> arrays are different.</p>\\n<p>-or- </p>\\n<p>The lengths of the <em>namedFields</em> and <em>fieldValues</em> arrays are different.</p>\\n<p>-or- </p>\\n<p>\\n<em>con</em> is static or private.</p>\\n<p>-or- </p>\\n<p>The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</p>\\n<p>-or- </p>\\n<p>The type of supplied argument does not match the type of the parameter declared in the constructor.</p>\\n<p>-or- </p>\\n<p>The types of the property values do not match the types of the named properties.</p>\\n<p>-or- </p>\\n<p>The types of the field values do not match the types of the corresponding field types.</p>\\n<p>-or- </p>\\n<p>A property has no setter.</p>\\n<p>-or- </p>\\n<p>The property or field does not belong to the same class or base class as the constructor. </p>\\n<p>-or-</p>\\n<p>A supplied argument, named property, or named field is a reference type other than <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>One of the parameters is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.CustomAttributeBuilder.CustomAttributeBuilder(System.Reflection.ConstructorInfo, System.Object(), System.Reflection.PropertyInfo(), System.Object(), System.Reflection.FieldInfo(), System.Object())\n  name.vb: CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object(), FieldInfo(), Object())\n  nameWithType: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object[], PropertyInfo[], Object[], FieldInfo[], Object[])\n  nameWithType.vb: CustomAttributeBuilder.CustomAttributeBuilder(ConstructorInfo, Object(), PropertyInfo(), Object(), FieldInfo(), Object())\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Reflection.FieldInfo[]\n  name: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  fullname.vb: System.Reflection.FieldInfo()\n  name.vb: FieldInfo()\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: ()\n    fullName: ()\n  nameWithType: FieldInfo[]\n  nameWithType.vb: FieldInfo()\n- uid: System.Reflection.PropertyInfo[]\n  name: PropertyInfo[]\n  fullName: System.Reflection.PropertyInfo[]\n  fullname.vb: System.Reflection.PropertyInfo()\n  name.vb: PropertyInfo()\n  spec.csharp:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: ()\n    fullName: ()\n  nameWithType: PropertyInfo[]\n  nameWithType.vb: PropertyInfo()\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}