{"nodes":[{"pos":[670,691],"content":"XmlAttributeOverrides","needQuote":true,"nodes":[{"content":"XmlAttributeOverrides","pos":[0,21]}]},{"pos":[2739,2762],"content":"XmlAttributeOverrides()","needQuote":true,"nodes":[{"content":"XmlAttributeOverrides()","pos":[0,23]}]},{"pos":[3861,3871],"content":"Item[Type]","needQuote":true,"nodes":[{"content":"Item[Type]","pos":[0,10]}]},{"pos":[5868,5886],"content":"Item[Type, String]","needQuote":true,"nodes":[{"content":"Item[Type, String]","pos":[0,18]}]},{"pos":[8384,8416],"content":"Add(Type, String, XmlAttributes)","needQuote":true,"nodes":[{"content":"Add(Type, String, XmlAttributes)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The name of the member to override.","pos":[9761,9801],"source":"\\n<p>The name of the member to override."},{"content":"&lt;/p&gt;\\n","pos":[9802,9808],"source":" </p>\\n"},{"pos":[10799,10823],"content":"Add(Type, XmlAttributes)","needQuote":true,"nodes":[{"content":"Add(Type, XmlAttributes)","pos":[0,24]}]},{"pos":[12767,12791],"content":"System.Xml.Serialization","needQuote":true,"nodes":[{"content":"System.Xml.Serialization","pos":[0,24]}]},{"pos":[12976,12982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13142,13152],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13247,13255],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13324,13325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13352,13353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13423,13431],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[13500,13501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13528,13529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13712,13726],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13845,13851],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13918,13919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13969,13975],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14035,14036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14119,14125],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14192,14193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14243,14249],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14309,14310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14524,14546],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14694,14700],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14767,14768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14818,14824],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14885,14886]},{"pos":[14941,14947],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15007,15008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15105,15111],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15178,15179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15229,15235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15296,15297]},{"pos":[15352,15358],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15418,15419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15664,15695],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15861,15876],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15952,15953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16003,16009],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16070,16071]},{"pos":[16126,16132],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16192,16193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16299,16314],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16390,16391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16441,16447],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16508,16509]},{"pos":[16564,16570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16630,16631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16861,16874],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16975,16986],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17058,17059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17086,17087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17160,17171],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17243,17244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17271,17272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17447,17456],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[17549,17556],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17624,17625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17652,17653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17722,17729],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17797,17798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17825,17826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18001,18018],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18127,18142],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18218,18219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18246,18247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18324,18339],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18415,18416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18443,18444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18589,18595],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18724,18728],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18910,18923],"content":"XmlAttributes","needQuote":true,"nodes":[{"content":"XmlAttributes","pos":[0,13]}]},{"pos":[19125,19131],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: System.Xml.Serialization.XmlAttributeOverrides\n  commentId: T:System.Xml.Serialization.XmlAttributeOverrides\n  id: XmlAttributeOverrides\n  parent: System.Xml.Serialization\n  children:\n  - System.Xml.Serialization.XmlAttributeOverrides.#ctor\n  - System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)\n  - System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\n  - System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)\n  - System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)\n  langs:\n  - csharp\n  - vb\n  name: XmlAttributeOverrides\n  fullName: System.Xml.Serialization.XmlAttributeOverrides\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlAttributeOverrides\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 86\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Allows you to override property, field, and class attributes when you use the <xref href=\\\"System.Xml.Serialization.XmlSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to serialize or deserialize an object.</p>\\n\"\n  syntax:\n    content: public class XmlAttributeOverrides\n    content.vb: Public Class XmlAttributeOverrides\n  seealso:\n  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\n  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlAttributeOverrides\n- uid: System.Xml.Serialization.XmlAttributeOverrides.#ctor\n  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.#ctor\n  id: '#ctor'\n  parent: System.Xml.Serialization.XmlAttributeOverrides\n  langs:\n  - csharp\n  - vb\n  name: XmlAttributeOverrides()\n  fullName: System.Xml.Serialization.XmlAttributeOverrides.XmlAttributeOverrides()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 88\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.Serialization.XmlAttributeOverrides\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public XmlAttributeOverrides()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeOverrides.XmlAttributeOverrides()\n- uid: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)\n  commentId: P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)\n  id: Item(System.Type)\n  parent: System.Xml.Serialization.XmlAttributeOverrides\n  langs:\n  - csharp\n  - vb\n  name: Item[Type]\n  fullName: System.Xml.Serialization.XmlAttributeOverrides.Item[System.Type]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 89\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets the object associated with the specified, base-class, type.</p>\\n\"\n  syntax:\n    content: public XmlAttributes this[Type type] { get; }\n    content.vb: Public ReadOnly Property Item(type As Type) As XmlAttributes\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The base class <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with the collection of attributes you want to retrieve. </p>\\n\"\n    return:\n      type: System.Xml.Serialization.XmlAttributes\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the collection of overriding attributes.</p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)\n  name.vb: Item(Type)\n  nameWithType: XmlAttributeOverrides.Item[Type]\n  nameWithType.vb: XmlAttributeOverrides.Item(Type)\n- uid: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)\n  commentId: P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)\n  id: Item(System.Type,System.String)\n  parent: System.Xml.Serialization.XmlAttributeOverrides\n  langs:\n  - csharp\n  - vb\n  name: Item[Type, String]\n  fullName: System.Xml.Serialization.XmlAttributeOverrides.Item[System.Type, System.String]\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 90\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.</p>\\n\"\n  syntax:\n    content: public XmlAttributes this[Type type, string member] { get; }\n    content.vb: Public ReadOnly Property Item(type As Type, member As String) As XmlAttributes\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The base class <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is associated with the collection of attributes you want. </p>\\n\"\n    - id: member\n      type: System.String\n      description: \"\\n<p>The name of the overridden member that specifies the <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to return. </p>\\n\"\n    return:\n      type: System.Xml.Serialization.XmlAttributes\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the collection of overriding attributes.</p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type, System.String)\n  name.vb: Item(Type, String)\n  nameWithType: XmlAttributeOverrides.Item[Type, String]\n  nameWithType.vb: XmlAttributeOverrides.Item(Type, String)\n- uid: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)\n  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)\n  id: Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)\n  parent: System.Xml.Serialization.XmlAttributeOverrides\n  langs:\n  - csharp\n  - vb\n  name: Add(Type, String, XmlAttributes)\n  fullName: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type, System.String, System.Xml.Serialization.XmlAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 91\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Adds an <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the collection of <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. The <em>type</em> parameter specifies an object to be overridden. The <em>member</em> parameter specifies the name of a member that is overridden.</p>\\n\"\n  syntax:\n    content: public void Add(Type type, string member, XmlAttributes attributes)\n    content.vb: Public Sub Add(type As Type, member As String, attributes As XmlAttributes)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object to override. </p>\\n\"\n    - id: member\n      type: System.String\n      description: \"\\n<p>The name of the member to override. </p>\\n\"\n    - id: attributes\n      type: System.Xml.Serialization.XmlAttributes\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the overriding attributes. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeOverrides.Add(Type, String, XmlAttributes)\n- uid: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\n  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\n  id: Add(System.Type,System.Xml.Serialization.XmlAttributes)\n  parent: System.Xml.Serialization.XmlAttributeOverrides\n  langs:\n  - csharp\n  - vb\n  name: Add(Type, XmlAttributes)\n  fullName: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type, System.Xml.Serialization.XmlAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs\n    startLine: 92\n  assemblies:\n  - System.Xml.XmlSerializer\n  namespace: System.Xml.Serialization\n  summary: \"\\n<p>Adds an <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the collection of <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects. The <em>type</em> parameter specifies an object to be overridden by the <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void Add(Type type, XmlAttributes attributes)\n    content.vb: Public Sub Add(type As Type, attributes As XmlAttributes)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object that is overridden. </p>\\n\"\n    - id: attributes\n      type: System.Xml.Serialization.XmlAttributes\n      description: \"\\n<p>An <xref href=\\\"System.Xml.Serialization.XmlAttributes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the overriding attributes. </p>\\n\"\n  seealso:\n  - type: System.Xml.Serialization.XmlAttributes\n    commentId: T:System.Xml.Serialization.XmlAttributes\n  - type: System.Xml.Serialization.XmlSerializer\n    commentId: T:System.Xml.Serialization.XmlSerializer\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: XmlAttributeOverrides.Add(Type, XmlAttributes)\nreferences:\n- uid: System.Xml.Serialization\n  isExternal: false\n  name: System.Xml.Serialization\n  fullName: System.Xml.Serialization\n  commentId: N:System.Xml.Serialization\n  nameWithType: System.Xml.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Xml.Serialization.XmlAttributes\n  parent: System.Xml.Serialization\n  isExternal: false\n  name: XmlAttributes\n  fullName: System.Xml.Serialization.XmlAttributes\n  commentId: T:System.Xml.Serialization.XmlAttributes\n  nameWithType: XmlAttributes\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n"}