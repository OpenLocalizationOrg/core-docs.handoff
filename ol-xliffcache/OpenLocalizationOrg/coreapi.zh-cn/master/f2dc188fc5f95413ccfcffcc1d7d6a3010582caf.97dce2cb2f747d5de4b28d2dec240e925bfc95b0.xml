{"nodes":[{"pos":[655,668],"content":"DbTransaction","needQuote":true,"nodes":[{"content":"DbTransaction","pos":[0,13]}]},{"pos":[2064,2079],"content":"DbTransaction()","needQuote":true,"nodes":[{"content":"DbTransaction()","pos":[0,15]}]},{"pos":[3043,3053],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"pos":[4348,4360],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[5735,5749],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[7218,7243],"content":"IDbTransaction.Connection","needQuote":true,"nodes":[{"content":"IDbTransaction.Connection","pos":[0,25]}]},{"pos":[8868,8876],"content":"Commit()","needQuote":true,"nodes":[{"content":"Commit()","pos":[0,8]}]},{"pos":[9821,9830],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[10874,10890],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[12306,12316],"content":"Rollback()","needQuote":true,"nodes":[{"content":"Rollback()","pos":[0,10]}]},{"pos":[13156,13174],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[13341,13347],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13510,13524],"content":"IDbTransaction","needQuote":true,"nodes":[{"content":"IDbTransaction","pos":[0,14]}]},{"pos":[13708,13719],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[13894,13904],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13999,14007],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14076,14077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14104,14105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14175,14183],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14252,14253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14280,14281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14464,14478],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14597,14603],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14670,14671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14721,14727],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14787,14788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14871,14877],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14944,14945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14995,15001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15061,15062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15276,15298],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15446,15452],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15519,15520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15570,15576],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15637,15638]},{"pos":[15693,15699],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15759,15760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15857,15863],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15930,15931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15981,15987],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16048,16049]},{"pos":[16104,16110],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16170,16171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16416,16447],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16613,16628],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16704,16705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16755,16761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16822,16823]},{"pos":[16878,16884],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16944,16945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17051,17066],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17142,17143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17193,17199],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17260,17261]},{"pos":[17316,17322],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17382,17383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17613,17626],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17727,17738],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17810,17811],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17838,17839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17912,17923],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17995,17996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18023,18024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18199,18208],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18301,18308],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18376,18377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18404,18405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18474,18481],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18549,18550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18577,18578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18753,18770],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[18879,18894],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[18970,18971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18998,18999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19076,19091],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19167,19168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19195,19196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19341,19347],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19459,19470],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[19646,19658],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[19893,19907],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[20149,20163],"content":"IsolationLevel","needQuote":true,"nodes":[{"content":"IsolationLevel","pos":[0,14]}]},{"pos":[20386,20396],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"pos":[20625,20638],"content":"IDbConnection","needQuote":true,"nodes":[{"content":"IDbConnection","pos":[0,13]}]},{"pos":[20854,20862],"content":"Commit()","needQuote":true,"nodes":[{"content":"Commit()","pos":[0,8]}]},{"pos":[20979,20985],"content":"Commit","needQuote":true,"nodes":[{"content":"Commit","pos":[0,6]}]},{"pos":[21044,21045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21072,21073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21154,21160],"content":"Commit","needQuote":true,"nodes":[{"content":"Commit","pos":[0,6]}]},{"pos":[21219,21220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21247,21248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21445,21454],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[21557,21564],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[21616,21617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21644,21645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21719,21726],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[21778,21779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21806,21807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21971,21978],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22168,22178],"content":"Rollback()","needQuote":true,"nodes":[{"content":"Rollback()","pos":[0,10]}]},{"pos":[22299,22307],"content":"Rollback","needQuote":true,"nodes":[{"content":"Rollback","pos":[0,8]}]},{"pos":[22368,22369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22396,22397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22480,22488],"content":"Rollback","needQuote":true,"nodes":[{"content":"Rollback","pos":[0,8]}]},{"pos":[22549,22550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22577,22578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Data.Common.DbTransaction\n  commentId: T:System.Data.Common.DbTransaction\n  id: DbTransaction\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbTransaction.#ctor\n  - System.Data.Common.DbTransaction.Commit\n  - System.Data.Common.DbTransaction.Connection\n  - System.Data.Common.DbTransaction.DbConnection\n  - System.Data.Common.DbTransaction.Dispose\n  - System.Data.Common.DbTransaction.Dispose(System.Boolean)\n  - System.Data.Common.DbTransaction.IsolationLevel\n  - System.Data.Common.DbTransaction.Rollback\n  - System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection\n  langs:\n  - csharp\n  - vb\n  name: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbTransaction\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 13\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>The base class for a transaction. </p>\\n\"\n  syntax:\n    content: 'public abstract class DbTransaction : IDbTransaction, IDisposable'\n    content.vb: >-\n      Public MustInherit Class DbTransaction\n          Implements IDbTransaction, IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.IDbTransaction\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DbTransaction\n- uid: System.Data.Common.DbTransaction.#ctor\n  commentId: M:System.Data.Common.DbTransaction.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: DbTransaction()\n  fullName: System.Data.Common.DbTransaction.DbTransaction()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 16\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new <xref href=\\\"System.Data.Common.DbTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected DbTransaction()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbTransaction.DbTransaction()\n- uid: System.Data.Common.DbTransaction.Connection\n  commentId: P:System.Data.Common.DbTransaction.Connection\n  id: Connection\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Connection\n  fullName: System.Data.Common.DbTransaction.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connection\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 20\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Specifies the <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  syntax:\n    content: public DbConnection Connection { get; }\n    content.vb: Public ReadOnly Property Connection As DbConnection\n    parameters: []\n    return:\n      type: System.Data.Common.DbConnection\n      description: \"\\n<p>The <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DbTransaction.Connection\n- uid: System.Data.Common.DbTransaction.DbConnection\n  commentId: P:System.Data.Common.DbTransaction.DbConnection\n  id: DbConnection\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: DbConnection\n  fullName: System.Data.Common.DbTransaction.DbConnection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbConnection\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 29\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Specifies the <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  syntax:\n    content: protected abstract DbConnection DbConnection { get; }\n    content.vb: Protected MustOverride ReadOnly Property DbConnection As DbConnection\n    parameters: []\n    return:\n      type: System.Data.Common.DbConnection\n      description: \"\\n<p>The <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - abstract\n  - get\n  modifiers.vb:\n  - Protected\n  - MustOverride\n  - ReadOnly\n  nameWithType: DbTransaction.DbConnection\n- uid: System.Data.Common.DbTransaction.IsolationLevel\n  commentId: P:System.Data.Common.DbTransaction.IsolationLevel\n  id: IsolationLevel\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: IsolationLevel\n  fullName: System.Data.Common.DbTransaction.IsolationLevel\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsolationLevel\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 34\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Specifies the <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction.</p>\\n\"\n  syntax:\n    content: public abstract IsolationLevel IsolationLevel { get; }\n    content.vb: Public MustOverride ReadOnly Property IsolationLevel As IsolationLevel\n    parameters: []\n    return:\n      type: System.Data.IsolationLevel\n      description: \"\\n<p>The <xref href=\\\"System.Data.IsolationLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for this transaction.</p>\\n\"\n  implements:\n  - System.Data.IDbTransaction.IsolationLevel\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: DbTransaction.IsolationLevel\n- uid: System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection\n  commentId: P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection\n  id: System#Data#IDbTransaction#Connection\n  isEii: true\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: IDbTransaction.Connection\n  fullName: System.Data.Common.DbTransaction.System.Data.IDbTransaction.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Data.IDbTransaction.Connection\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 39\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction, or a null reference if the transaction is no longer valid.</p>\\n\"\n  syntax:\n    content: IDbConnection IDbTransaction.Connection { get; }\n    content.vb: ReadOnly WriteOnly Property System.Data.IDbTransaction.Connection As IDbConnection Implements IDbTransaction.Connection\n    parameters: []\n    return:\n      type: System.Data.IDbConnection\n      description: \"\\n<p>The <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the transaction.</p>\\n\"\n  implements:\n  - System.Data.IDbTransaction.Connection\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Data.IDbTransaction.Connection\n  nameWithType: DbTransaction.IDbTransaction.Connection\n  nameWithType.vb: DbTransaction.System.Data.IDbTransaction.Connection\n- uid: System.Data.Common.DbTransaction.Commit\n  commentId: M:System.Data.Common.DbTransaction.Commit\n  id: Commit\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Commit()\n  fullName: System.Data.Common.DbTransaction.Commit()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Commit\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 47\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Commits the database transaction.</p>\\n\"\n  syntax:\n    content: public abstract void Commit()\n    content.vb: Public MustOverride Sub Commit\n  implements:\n  - System.Data.IDbTransaction.Commit\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbTransaction.Commit()\n- uid: System.Data.Common.DbTransaction.Dispose\n  commentId: M:System.Data.Common.DbTransaction.Dispose\n  id: Dispose\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Data.Common.DbTransaction.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 49\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Data.Common.DbTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DbTransaction.Dispose()\n- uid: System.Data.Common.DbTransaction.Dispose(System.Boolean)\n  commentId: M:System.Data.Common.DbTransaction.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Data.Common.DbTransaction.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 54\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Data.Common.DbTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>If <strong>true</strong>, this method releases all resources held by any managed objects that this <xref href=\\\"System.Data.Common.DbTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> references.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: DbTransaction.Dispose(Boolean)\n- uid: System.Data.Common.DbTransaction.Rollback\n  commentId: M:System.Data.Common.DbTransaction.Rollback\n  id: Rollback\n  parent: System.Data.Common.DbTransaction\n  langs:\n  - csharp\n  - vb\n  name: Rollback()\n  fullName: System.Data.Common.DbTransaction.Rollback()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Rollback\n    path: src/System.Data.Common/src/System/Data/Common/DbTransaction.cs\n    startLine: 58\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Rolls back a transaction from a pending state.</p>\\n\"\n  syntax:\n    content: public abstract void Rollback()\n    content.vb: Public MustOverride Sub Rollback\n  implements:\n  - System.Data.IDbTransaction.Rollback\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  nameWithType: DbTransaction.Rollback()\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.IDbTransaction\n  parent: System.Data\n  isExternal: false\n  name: IDbTransaction\n  fullName: System.Data.IDbTransaction\n  nameWithType: IDbTransaction\n  commentId: T:System.Data.IDbTransaction\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  fullName: System.Data.Common.DbConnection\n  nameWithType: DbConnection\n  commentId: T:System.Data.Common.DbConnection\n- uid: System.Data.IDbTransaction.IsolationLevel\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: IsolationLevel\n  fullName: System.Data.IDbTransaction.IsolationLevel\n  nameWithType: IDbTransaction.IsolationLevel\n  commentId: P:System.Data.IDbTransaction.IsolationLevel\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  fullName: System.Data.IsolationLevel\n  nameWithType: IsolationLevel\n  commentId: T:System.Data.IsolationLevel\n- uid: System.Data.IDbTransaction.Connection\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Connection\n  fullName: System.Data.IDbTransaction.Connection\n  nameWithType: IDbTransaction.Connection\n  commentId: P:System.Data.IDbTransaction.Connection\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  fullName: System.Data.IDbConnection\n  nameWithType: IDbConnection\n  commentId: T:System.Data.IDbConnection\n- uid: System.Data.IDbTransaction.Commit\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Commit()\n  fullName: System.Data.IDbTransaction.Commit()\n  spec.csharp:\n  - uid: System.Data.IDbTransaction.Commit\n    name: Commit\n    fullName: System.Data.IDbTransaction.Commit\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDbTransaction.Commit\n    name: Commit\n    fullName: System.Data.IDbTransaction.Commit\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDbTransaction.Commit()\n  commentId: M:System.Data.IDbTransaction.Commit\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.IDbTransaction.Rollback\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Rollback()\n  fullName: System.Data.IDbTransaction.Rollback()\n  spec.csharp:\n  - uid: System.Data.IDbTransaction.Rollback\n    name: Rollback\n    fullName: System.Data.IDbTransaction.Rollback\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Data.IDbTransaction.Rollback\n    name: Rollback\n    fullName: System.Data.IDbTransaction.Rollback\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDbTransaction.Rollback()\n  commentId: M:System.Data.IDbTransaction.Rollback\n"}