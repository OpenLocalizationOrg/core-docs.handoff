{"nodes":[{"pos":[527,542],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[4651,4666],"content":"ConstructorName","needQuote":true,"nodes":[{"content":"ConstructorName","pos":[0,15]}]},{"pos":[5867,5886],"content":"TypeConstructorName","needQuote":true,"nodes":[{"content":"TypeConstructorName","pos":[0,19]}]},{"pos":[7116,7130],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance, or &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7860,7937],"source":"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; equals the type and value of this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[7998,8127],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[8537,8550],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[9198,9243],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[9678,9694],"content":"Invoke(Object[])","needQuote":true,"nodes":[{"content":"Invoke(Object[])","pos":[0,16]}]},{"content":"\\n&lt;p&gt;An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor.","pos":[10622,10771],"source":"\\n<p>An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor."},{"content":"If this constructor takes no parameters, then use either an array with zero elements or &lt;strong&gt;null&lt;/strong&gt;, as in Object[] parameters = new Object[0].","pos":[10772,10925],"source":" If this constructor takes no parameters, then use either an array with zero elements or <strong>null</strong>, as in Object[] parameters = new Object[0]."},{"content":"Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.","pos":[10926,11051]},{"content":"For reference-type elements, this value is &lt;strong&gt;null&lt;/strong&gt;.","pos":[11052,11117],"source":" For reference-type elements, this value is <strong>null</strong>."},{"content":"For value-type elements, this value is 0, 0.0, or &lt;strong&gt;false&lt;/strong&gt;, depending on the specific element type.","pos":[11118,11231],"source":" For value-type elements, this value is 0, 0.0, or <strong>false</strong>, depending on the specific element type."},{"content":"&lt;/p&gt;\\n","pos":[11232,11238],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An instance of the class associated with the constructor.&lt;/p&gt;\\n","pos":[11298,11366],"source":"\\n<p>An instance of the class associated with the constructor.</p>\\n"},{"content":"\\n&lt;p&gt;The class is abstract.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The constructor is a class initializer.","pos":[11485,11574],"source":"\\n<p>The class is abstract.</p>\\n<p>-or- </p>\\n<p>The constructor is a class initializer."},{"content":"&lt;/p&gt;\\n","pos":[11575,11581],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;parameters&lt;/em&gt; array does not contain values that match the types accepted by this constructor.","pos":[12254,12363],"source":"\\n<p>The <em>parameters</em> array does not contain values that match the types accepted by this constructor."},{"content":"&lt;/p&gt;\\n","pos":[12364,12370],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The invoked constructor throws an exception.","pos":[12505,12554],"source":"\\n<p>The invoked constructor throws an exception."},{"content":"&lt;/p&gt;\\n","pos":[12555,12561],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An incorrect number of parameters was passed.","pos":[12704,12754],"source":"\\n<p>An incorrect number of parameters was passed."},{"content":"&lt;/p&gt;\\n","pos":[12755,12761],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The caller does not have the necessary code access permission.&lt;/p&gt;\\n","pos":[13283,13356],"source":"\\n<p>The caller does not have the necessary code access permission.</p>\\n"},{"pos":[14236,14246],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[15654,15671],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[15835,15841],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16012,16022],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[16227,16237],"content":"MethodBase","needQuote":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[16456,16480],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[16749,16759],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[17026,17043],"content":"CallingConvention","needQuote":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[17339,17364],"content":"ContainsGenericParameters","needQuote":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[17669,17679],"content":"IsAbstract","needQuote":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[17939,17949],"content":"IsAssembly","needQuote":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[18212,18225],"content":"IsConstructor","needQuote":true,"nodes":[{"content":"IsConstructor","pos":[0,13]}]},{"pos":[18492,18500],"content":"IsFamily","needQuote":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[18763,18782],"content":"IsFamilyAndAssembly","needQuote":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[19077,19095],"content":"IsFamilyOrAssembly","needQuote":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[19376,19383],"content":"IsFinal","needQuote":true,"nodes":[{"content":"IsFinal","pos":[0,7]}]},{"pos":[19639,19654],"content":"IsGenericMethod","needQuote":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"pos":[19944,19969],"content":"IsGenericMethodDefinition","needQuote":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[20275,20286],"content":"IsHideBySig","needQuote":true,"nodes":[{"content":"IsHideBySig","pos":[0,11]}]},{"pos":[20548,20557],"content":"IsPrivate","needQuote":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[20812,20820],"content":"IsPublic","needQuote":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[21077,21090],"content":"IsSpecialName","needQuote":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[21357,21365],"content":"IsStatic","needQuote":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[21618,21627],"content":"IsVirtual","needQuote":true,"nodes":[{"content":"IsVirtual","pos":[0,9]}]},{"pos":[21899,21924],"content":"MethodImplementationFlags","needQuote":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[22238,22259],"content":"GetGenericArguments()","needQuote":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[22406,22425],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[22499,22500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22527,22528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22624,22643],"content":"GetGenericArguments","needQuote":true,"nodes":[{"content":"GetGenericArguments","pos":[0,19]}]},{"pos":[22717,22718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22745,22746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23026,23066],"content":"GetMethodFromHandle(RuntimeMethodHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle)","pos":[0,40]}]},{"pos":[23267,23286],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[23360,23361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23424,23443],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[23516,23517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23641,23660],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[23734,23735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23798,23817],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[23890,23891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24243,24302],"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","needQuote":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)","pos":[0,59]}]},{"pos":[24554,24573],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[24647,24648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24711,24730],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[24804,24805]},{"pos":[24871,24888],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[24959,24960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25109,25128],"content":"GetMethodFromHandle","needQuote":true,"nodes":[{"content":"GetMethodFromHandle","pos":[0,19]}]},{"pos":[25202,25203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25266,25285],"content":"RuntimeMethodHandle","needQuote":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"content":",","pos":[25359,25360]},{"pos":[25426,25443],"content":"RuntimeTypeHandle","needQuote":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[25514,25515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25853,25868],"content":"GetParameters()","needQuote":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[26003,26016],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[26084,26085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26112,26113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26203,26216],"content":"GetParameters","needQuote":true,"nodes":[{"content":"GetParameters","pos":[0,13]}]},{"pos":[26284,26285],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26312,26313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26571,26595],"content":"Invoke(Object, Object[])","needQuote":true,"nodes":[{"content":"Invoke(Object, Object[])","pos":[0,24]}]},{"pos":[26896,26902],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[26963,26964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27014,27020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27081,27082]},{"pos":[27137,27143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[27204,27206]},{"pos":[27237,27238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27352,27358],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[27419,27420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27470,27476],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[27537,27538]},{"pos":[27593,27599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27659,27661],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[27689,27690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28028,28058],"content":"GetMethodImplementationFlags()","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[28223,28251],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[28334,28335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28362,28363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28468,28496],"content":"GetMethodImplementationFlags","needQuote":true,"nodes":[{"content":"GetMethodImplementationFlags","pos":[0,28]}]},{"pos":[28579,28580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28607,28608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28876,28892],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[29173,29186],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"pos":[29458,29471],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[29736,29742],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[29984,29988],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[30297,30350],"content":"ICustomAttributeProvider.GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes(Boolean)","pos":[0,53]}]},{"pos":[30696,30740],"content":"ICustomAttributeProvider.GetCustomAttributes","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes","pos":[0,44]}]},{"pos":[30857,30858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30909,30916],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30977,30978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31133,31195],"content":"System.Reflection.ICustomAttributeProvider.GetCustomAttributes","needQuote":true,"nodes":[{"content":"System.Reflection.ICustomAttributeProvider.GetCustomAttributes","pos":[0,62]}]},{"pos":[31312,31313],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31364,31371],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31432,31433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31949,32008],"content":"ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)","pos":[0,59]}]},{"pos":[32385,32429],"content":"ICustomAttributeProvider.GetCustomAttributes","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes","pos":[0,44]}]},{"pos":[32546,32547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32595,32599],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[32658,32659]},{"pos":[32715,32722],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32783,32784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32951,33013],"content":"System.Reflection.ICustomAttributeProvider.GetCustomAttributes","needQuote":true,"nodes":[{"content":"System.Reflection.ICustomAttributeProvider.GetCustomAttributes","pos":[0,62]}]},{"pos":[33130,33131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33179,33183],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[33242,33243]},{"pos":[33299,33306],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33367,33368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33898,33947],"content":"ICustomAttributeProvider.IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.IsDefined(Type, Boolean)","pos":[0,49]}]},{"pos":[34294,34328],"content":"ICustomAttributeProvider.IsDefined","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.IsDefined","pos":[0,34]}]},{"pos":[34435,34436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34484,34488],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[34547,34548]},{"pos":[34604,34611],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34672,34673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34830,34882],"content":"System.Reflection.ICustomAttributeProvider.IsDefined","needQuote":true,"nodes":[{"content":"System.Reflection.ICustomAttributeProvider.IsDefined","pos":[0,52]}]},{"pos":[34989,34990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35038,35042],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[35101,35102]},{"pos":[35158,35165],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35226,35227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35625,35635],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[35730,35738],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[35807,35808],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35835,35836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35906,35914],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[35983,35984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36011,36012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36209,36231],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[36379,36385],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36452,36453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36503,36509],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36570,36571]},{"pos":[36626,36632],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36692,36693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36790,36796],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[36863,36864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36914,36920],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[36981,36982]},{"pos":[37037,37043],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37103,37104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37349,37380],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[37546,37561],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[37637,37638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37688,37694],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[37755,37756]},{"pos":[37811,37817],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37877,37878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37984,37999],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[38075,38076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38126,38132],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[38193,38194]},{"pos":[38249,38255],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38315,38316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38542,38551],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[38644,38651],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[38719,38720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38747,38748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38817,38824],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[38892,38893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38920,38921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39096,39113],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[39222,39237],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[39313,39314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39341,39342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39419,39434],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[39510,39511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39538,39539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39684,39690],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[39821,39827],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[40030,40044],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[40193,40199],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40260,40261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40311,40317],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40377,40378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40476,40482],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[40543,40544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40594,40600],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40660,40661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40853,40860],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41057,41070],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[41201,41212],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41278,41279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41306,41307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41395,41406],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[41472,41473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41500,41501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41680,41685],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41792,41800],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[41928,41934],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[41995,41997]},{"pos":[42062,42068],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42128,42130],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[42315,42325],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[42564,42575],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"pos":[42772,42793],"content":"MemberAccessException","needQuote":true,"nodes":[{"content":"MemberAccessException","pos":[0,21]}]},{"pos":[42981,43002],"content":"MethodAccessException","needQuote":true,"nodes":[{"content":"MethodAccessException","pos":[0,21]}]},{"pos":[43203,43220],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[43411,43436],"content":"TargetInvocationException","needQuote":true,"nodes":[{"content":"TargetInvocationException","pos":[0,25]}]},{"pos":[43677,43706],"content":"TargetParameterCountException","needQuote":true,"nodes":[{"content":"TargetParameterCountException","pos":[0,29]}]},{"pos":[43957,43978],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[44171,44188],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]}],"content":"items:\n- uid: System.Reflection.ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n  id: ConstructorInfo\n  parent: System.Reflection\n  children:\n  - System.Reflection.ConstructorInfo.ConstructorName\n  - System.Reflection.ConstructorInfo.Equals(System.Object)\n  - System.Reflection.ConstructorInfo.GetHashCode\n  - System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  - System.Reflection.ConstructorInfo.MemberType\n  - System.Reflection.ConstructorInfo.TypeConstructorName\n  langs:\n  - csharp\n  - vb\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ConstructorInfo\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 27\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Discovers the attributes of a class constructor and provides access to constructor metadata. </p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_ConstructorInfo))]\n\n      [PermissionSet(SecurityAction.InheritanceDemand, Name = \"FullTrust\")]\n\n      [ComVisible(true)]\n\n      public abstract class ConstructorInfo : MethodBase, ICustomAttributeProvider, _MemberInfo, _MethodBase, _ConstructorInfo\n    content.vb: >-\n      <Serializable>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_ConstructorInfo))>\n\n      <PermissionSet(SecurityAction.InheritanceDemand, Name:=\"FullTrust\")>\n\n      <ComVisible(True)>\n\n      Public MustInherit Class ConstructorInfo\n          Inherits MethodBase\n          Implements ICustomAttributeProvider, _MemberInfo, _MethodBase, _ConstructorInfo\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Reflection.MethodBase\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  inheritedMembers:\n  - System.Reflection.MethodBase.Attributes\n  - System.Reflection.MethodBase.CallingConvention\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.MethodImplementationFlags\n  - System.Reflection.MethodBase.GetGenericArguments\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.GetParameters\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.GetMethodImplementationFlags\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: ConstructorInfo\n- uid: System.Reflection.ConstructorInfo.ConstructorName\n  commentId: F:System.Reflection.ConstructorInfo.ConstructorName\n  id: ConstructorName\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: ConstructorName\n  fullName: System.Reflection.ConstructorInfo.ConstructorName\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ConstructorName\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 38\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Represents the name of the class constructor method as it is stored in metadata. This name is always \\\".ctor\\\". This field is read-only.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public static readonly string ConstructorName\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Shared ReadOnly ConstructorName As String\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: ConstructorInfo.ConstructorName\n- uid: System.Reflection.ConstructorInfo.TypeConstructorName\n  commentId: F:System.Reflection.ConstructorInfo.TypeConstructorName\n  id: TypeConstructorName\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: TypeConstructorName\n  fullName: System.Reflection.ConstructorInfo.TypeConstructorName\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TypeConstructorName\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 41\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Represents the name of the type constructor method as it is stored in metadata. This name is always \\\".cctor\\\". This property is read-only.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public static readonly string TypeConstructorName\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Shared ReadOnly TypeConstructorName As String\n    return:\n      type: System.String\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: ConstructorInfo.TypeConstructorName\n- uid: System.Reflection.ConstructorInfo.Equals(System.Object)\n  commentId: M:System.Reflection.ConstructorInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Reflection.ConstructorInfo.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 68\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.MethodBase.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ConstructorInfo.Equals(Object)\n- uid: System.Reflection.ConstructorInfo.GetHashCode\n  commentId: M:System.Reflection.ConstructorInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Reflection.ConstructorInfo.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 73\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Reflection.MethodBase.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ConstructorInfo.GetHashCode()\n- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  commentId: M:System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  id: Invoke(System.Object[])\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: Invoke(Object[])\n  fullName: System.Reflection.ConstructorInfo.Invoke(System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Invoke\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 92\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</p>\\n\"\n  syntax:\n    content: >-\n      [DebuggerStepThrough]\n\n      [DebuggerHidden]\n\n      public object Invoke(object[] parameters)\n    content.vb: >-\n      <DebuggerStepThrough>\n\n      <DebuggerHidden>\n\n      Public Function Invoke(parameters As Object()) As Object\n    parameters:\n    - id: parameters\n      type: System.Object[]\n      description: \"\\n<p>An array of values that matches the number, order and type (under the constraints of the default binder) of the parameters for this constructor. If this constructor takes no parameters, then use either an array with zero elements or <strong>null</strong>, as in Object[] parameters = new Object[0]. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference-type elements, this value is <strong>null</strong>. For value-type elements, this value is 0, 0.0, or <strong>false</strong>, depending on the specific element type. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the class associated with the constructor.</p>\\n\"\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>The class is abstract.</p>\\n<p>-or- </p>\\n<p>The constructor is a class initializer. </p>\\n\"\n  - type: System.MethodAccessException\n    commentId: T:System.MethodAccessException\n    description: \"\\n<p>In the <see href=\\\"http://go.microsoft.com/fwlink/?LinkID=247912\\\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\\\"System.MemberAccessException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, instead.</p>\\n<p>The constructor is private or protected, and the caller lacks <xref href=\\\"System.Security.Permissions.ReflectionPermissionFlag.MemberAccess\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>parameters</em> array does not contain values that match the types accepted by this constructor. </p>\\n\"\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>The invoked constructor throws an exception. </p>\\n\"\n  - type: System.Reflection.TargetParameterCountException\n    commentId: T:System.Reflection.TargetParameterCountException\n    description: \"\\n<p>An incorrect number of parameters was passed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Creation of <xref href=\\\"System.TypedReference\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.ArgIterator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and <xref href=\\\"System.RuntimeArgumentHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types is not supported.</p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>The caller does not have the necessary code access permission.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Reflection.ConstructorInfo.Invoke(System.Object())\n  name.vb: Invoke(Object())\n  nameWithType: ConstructorInfo.Invoke(Object[])\n  nameWithType.vb: ConstructorInfo.Invoke(Object())\n- uid: System.Reflection.ConstructorInfo.MemberType\n  commentId: P:System.Reflection.ConstructorInfo.MemberType\n  id: MemberType\n  parent: System.Reflection.ConstructorInfo\n  langs:\n  - csharp\n  - vb\n  name: MemberType\n  fullName: System.Reflection.ConstructorInfo.MemberType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MemberType\n    path: src/mscorlib/src/System/Reflection/ConstructorInfo.cs\n    startLine: 83\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets a <xref href=\\\"System.Reflection.MemberTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating that this member is a constructor.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(true)]\n\n      public override MemberTypes MemberType { get; }\n    content.vb: >-\n      <ComVisible(True)>\n\n      Public Overrides ReadOnly Property MemberType As MemberTypes\n    parameters: []\n    return:\n      type: System.Reflection.MemberTypes\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.MemberTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating that this member is a constructor.</p>\\n\"\n  overridden: System.Reflection.MemberInfo.MemberType\n  seealso:\n  - type: System.Reflection.MemberTypes\n    commentId: T:System.Reflection.MemberTypes\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ConstructorInfo.MemberType\nreferences:\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  nameWithType: MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  fullName: System.Reflection.MethodBase\n  nameWithType: MethodBase\n  commentId: T:System.Reflection.MethodBase\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Reflection.MethodBase.Attributes\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Attributes\n  fullName: System.Reflection.MethodBase.Attributes\n  nameWithType: MethodBase.Attributes\n  commentId: P:System.Reflection.MethodBase.Attributes\n- uid: System.Reflection.MethodBase.CallingConvention\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: CallingConvention\n  fullName: System.Reflection.MethodBase.CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  commentId: P:System.Reflection.MethodBase.CallingConvention\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  fullName: System.Reflection.MethodBase.ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  commentId: P:System.Reflection.MethodBase.ContainsGenericParameters\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  fullName: System.Reflection.MethodBase.IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  commentId: P:System.Reflection.MethodBase.IsAbstract\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  fullName: System.Reflection.MethodBase.IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  commentId: P:System.Reflection.MethodBase.IsAssembly\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  fullName: System.Reflection.MethodBase.IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  commentId: P:System.Reflection.MethodBase.IsConstructor\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  fullName: System.Reflection.MethodBase.IsFamily\n  nameWithType: MethodBase.IsFamily\n  commentId: P:System.Reflection.MethodBase.IsFamily\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyAndAssembly\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  commentId: P:System.Reflection.MethodBase.IsFamilyOrAssembly\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  fullName: System.Reflection.MethodBase.IsFinal\n  nameWithType: MethodBase.IsFinal\n  commentId: P:System.Reflection.MethodBase.IsFinal\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  fullName: System.Reflection.MethodBase.IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  commentId: P:System.Reflection.MethodBase.IsGenericMethod\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  commentId: P:System.Reflection.MethodBase.IsGenericMethodDefinition\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  fullName: System.Reflection.MethodBase.IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  commentId: P:System.Reflection.MethodBase.IsHideBySig\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  fullName: System.Reflection.MethodBase.IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  commentId: P:System.Reflection.MethodBase.IsPrivate\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  fullName: System.Reflection.MethodBase.IsPublic\n  nameWithType: MethodBase.IsPublic\n  commentId: P:System.Reflection.MethodBase.IsPublic\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  fullName: System.Reflection.MethodBase.IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  commentId: P:System.Reflection.MethodBase.IsSpecialName\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  fullName: System.Reflection.MethodBase.IsStatic\n  nameWithType: MethodBase.IsStatic\n  commentId: P:System.Reflection.MethodBase.IsStatic\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  fullName: System.Reflection.MethodBase.IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  commentId: P:System.Reflection.MethodBase.IsVirtual\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodImplementationFlags\n  fullName: System.Reflection.MethodBase.MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  commentId: P:System.Reflection.MethodBase.MethodImplementationFlags\n- uid: System.Reflection.MethodBase.GetGenericArguments\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetGenericArguments()\n  fullName: System.Reflection.MethodBase.GetGenericArguments()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodBase.GetGenericArguments\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetGenericArguments\n    name: GetGenericArguments\n    fullName: System.Reflection.MethodBase.GetGenericArguments\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetGenericArguments()\n  commentId: M:System.Reflection.MethodBase.GetGenericArguments\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle, System.RuntimeTypeHandle)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n    name: GetMethodFromHandle\n    fullName: System.Reflection.MethodBase.GetMethodFromHandle\n  - name: (\n    fullName: (\n  - uid: System.RuntimeMethodHandle\n    name: RuntimeMethodHandle\n    fullName: System.RuntimeMethodHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.RuntimeTypeHandle\n    name: RuntimeTypeHandle\n    fullName: System.RuntimeTypeHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)\n  commentId: M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase.GetParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetParameters()\n  fullName: System.Reflection.MethodBase.GetParameters()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetParameters\n    name: GetParameters\n    fullName: System.Reflection.MethodBase.GetParameters\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetParameters()\n  commentId: M:System.Reflection.MethodBase.GetParameters\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Invoke(Object, Object[])\n  fullName: System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\n  fullname.vb: System.Reflection.MethodBase.Invoke(System.Object, System.Object())\n  name.vb: Invoke(Object, Object())\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n    name: Invoke\n    fullName: System.Reflection.MethodBase.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Invoke(Object, Object[])\n  nameWithType.vb: MethodBase.Invoke(Object, Object())\n  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n    name: GetMethodImplementationFlags\n    fullName: System.Reflection.MethodBase.GetMethodImplementationFlags\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  commentId: M:System.Reflection.MethodBase.GetMethodImplementationFlags\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  fullName: System.Reflection.MemberInfo.CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  commentId: P:System.Reflection.MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.DeclaringType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: DeclaringType\n  fullName: System.Reflection.MemberInfo.DeclaringType\n  nameWithType: MemberInfo.DeclaringType\n  commentId: P:System.Reflection.MemberInfo.DeclaringType\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  fullName: System.Reflection.MemberInfo.MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  commentId: P:System.Reflection.MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.MemberInfo.Module\n  nameWithType: MemberInfo.Module\n  commentId: P:System.Reflection.MemberInfo.Module\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  fullName: System.Reflection.MemberInfo.Name\n  nameWithType: MemberInfo.Name\n  commentId: P:System.Reflection.MemberInfo.Name\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n    name: ICustomAttributeProvider.GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n    name: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n    name: ICustomAttributeProvider.GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n    name: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: true\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined(System.Type, System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n    name: ICustomAttributeProvider.IsDefined\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n    name: System.Reflection.ICustomAttributeProvider.IsDefined\n    fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.MethodBase.Equals(System.Object)\n  parent: System.Reflection.MethodBase\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Reflection.MethodBase.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodBase.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.MethodBase.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.Equals(Object)\n  commentId: M:System.Reflection.MethodBase.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.MethodBase.GetHashCode\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Reflection.MethodBase.GetHashCode()\n  spec.csharp:\n  - uid: System.Reflection.MethodBase.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodBase.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.MethodBase.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.MethodBase.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MethodBase.GetHashCode()\n  commentId: M:System.Reflection.MethodBase.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Reflection.MemberInfo.MemberType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MemberType\n  fullName: System.Reflection.MemberInfo.MemberType\n  nameWithType: MemberInfo.MemberType\n  commentId: P:System.Reflection.MemberInfo.MemberType\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  fullName: System.Reflection.MemberTypes\n  nameWithType: MemberTypes\n  commentId: T:System.Reflection.MemberTypes\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  fullName: System.MemberAccessException\n  nameWithType: MemberAccessException\n  commentId: T:System.MemberAccessException\n- uid: System.MethodAccessException\n  isExternal: false\n  name: MethodAccessException\n  fullName: System.MethodAccessException\n  nameWithType: MethodAccessException\n  commentId: T:System.MethodAccessException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.Reflection.TargetInvocationException\n  isExternal: false\n  name: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n  nameWithType: TargetInvocationException\n  commentId: T:System.Reflection.TargetInvocationException\n- uid: System.Reflection.TargetParameterCountException\n  isExternal: false\n  name: TargetParameterCountException\n  fullName: System.Reflection.TargetParameterCountException\n  nameWithType: TargetParameterCountException\n  commentId: T:System.Reflection.TargetParameterCountException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n"}