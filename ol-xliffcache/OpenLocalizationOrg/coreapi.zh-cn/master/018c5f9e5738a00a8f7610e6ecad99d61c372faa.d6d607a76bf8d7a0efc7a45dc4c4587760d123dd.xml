{"nodes":[{"pos":[482,503],"content":"ExceptionDispatchInfo","needQuote":true,"nodes":[{"content":"ExceptionDispatchInfo","pos":[0,21]}]},{"pos":[1972,1987],"content":"SourceException","needQuote":true,"nodes":[{"content":"SourceException","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The exception that is represented by the current instance.","pos":[2783,2846],"source":"\\n<p>The exception that is represented by the current instance."},{"content":"&lt;/p&gt;\\n","pos":[2847,2853],"source":" </p>\\n"},{"pos":[3304,3322],"content":"Capture(Exception)","needQuote":true,"nodes":[{"content":"Capture(Exception)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The exception whose state is captured, and which is represented by the returned object.","pos":[4301,4393],"source":"\\n<p>The exception whose state is captured, and which is represented by the returned object."},{"content":"&lt;/p&gt;\\n","pos":[4394,4400],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An object that represents the specified exception at the current point in code.","pos":[4501,4585],"source":"\\n<p>An object that represents the specified exception at the current point in code."},{"content":"&lt;/p&gt;\\n","pos":[4586,4592],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;source&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[4703,4751],"source":"\\n<p>\\n<em>source</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[4752,4758],"source":" </p>\\n"},{"pos":[5153,5160],"content":"Throw()","needQuote":true,"nodes":[{"content":"Throw()","pos":[0,7]}]},{"pos":[6170,6202],"content":"System.Runtime.ExceptionServices","needQuote":true,"nodes":[{"content":"System.Runtime.ExceptionServices","pos":[0,32]}]},{"pos":[6411,6417],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6577,6587],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6682,6690],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6759,6760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6787,6788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6858,6866],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6935,6936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6963,6964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7147,7161],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7280,7286],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7353,7354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7404,7410],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7470,7471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7554,7560],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7627,7628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7678,7684],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7744,7745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7959,7981],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8129,8135],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8202,8203],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8253,8259],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8320,8321]},{"pos":[8376,8382],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8442,8443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8540,8546],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8613,8614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8664,8670],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8731,8732]},{"pos":[8787,8793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8853,8854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9099,9130],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9296,9311],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9387,9388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9438,9444],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9505,9506]},{"pos":[9561,9567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9627,9628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9734,9749],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9825,9826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9876,9882],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9943,9944]},{"pos":[9999,10005],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10065,10066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10296,10309],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10410,10421],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10493,10494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10521,10522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10595,10606],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10678,10679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10706,10707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10882,10891],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10984,10991],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11059,11060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11087,11088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11157,11164],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11232,11233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11260,11261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11436,11453],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11562,11577],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11653,11654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11681,11682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11759,11774],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11850,11851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11878,11879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12024,12030],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12164,12173],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[12394,12415],"content":"ExceptionDispatchInfo","needQuote":true,"nodes":[{"content":"ExceptionDispatchInfo","pos":[0,21]}]},{"pos":[12668,12685],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  id: ExceptionDispatchInfo\n  parent: System.Runtime.ExceptionServices\n  children:\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  langs:\n  - csharp\n  - vb\n  name: ExceptionDispatchInfo\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ExceptionDispatchInfo\n    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.ExceptionServices\n  summary: \"\\n<p>Represents an exception whose state is captured at a certain point in code. </p>\\n\"\n  syntax:\n    content: public sealed class ExceptionDispatchInfo\n    content.vb: Public NotInheritable Class ExceptionDispatchInfo\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ExceptionDispatchInfo\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  commentId: P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  id: SourceException\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  - vb\n  name: SourceException\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SourceException\n    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n    startLine: 110\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.ExceptionServices\n  summary: \"\\n<p>Gets the exception that is represented by the current instance. </p>\\n\"\n  syntax:\n    content: public Exception SourceException { get; }\n    content.vb: Public ReadOnly Property SourceException As Exception\n    parameters: []\n    return:\n      type: System.Exception\n      description: \"\\n<p>The exception that is represented by the current instance. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: ExceptionDispatchInfo.SourceException\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  id: Capture(System.Exception)\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  - vb\n  name: Capture(Exception)\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Capture\n    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n    startLine: 99\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.ExceptionServices\n  summary: \"\\n<p>Creates an <xref href=\\\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the specified exception at the current point in code. </p>\\n\"\n  syntax:\n    content: public static ExceptionDispatchInfo Capture(Exception source)\n    content.vb: Public Shared Function Capture(source As Exception) As ExceptionDispatchInfo\n    parameters:\n    - id: source\n      type: System.Exception\n      description: \"\\n<p>The exception whose state is captured, and which is represented by the returned object. </p>\\n\"\n    return:\n      type: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n      description: \"\\n<p>An object that represents the specified exception at the current point in code. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>source</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ExceptionDispatchInfo.Capture(Exception)\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw\n  id: Throw\n  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  langs:\n  - csharp\n  - vb\n  name: Throw()\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Throw\n    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs\n    startLine: 126\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.ExceptionServices\n  summary: \"\\n<p>Throws the exception that is represented by the current <xref href=\\\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object, after restoring the state that was saved when the exception was captured. </p>\\n\"\n  syntax:\n    content: public void Throw()\n    content.vb: Public Sub Throw\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ExceptionDispatchInfo.Throw()\nreferences:\n- uid: System.Runtime.ExceptionServices\n  isExternal: false\n  name: System.Runtime.ExceptionServices\n  fullName: System.Runtime.ExceptionServices\n  nameWithType: System.Runtime.ExceptionServices\n  commentId: N:System.Runtime.ExceptionServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  parent: System.Runtime.ExceptionServices\n  isExternal: false\n  name: ExceptionDispatchInfo\n  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo\n  nameWithType: ExceptionDispatchInfo\n  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}