{"nodes":[{"pos":[179,196],"content":"ErrorEventHandler","needQuote":true,"nodes":[{"content":"ErrorEventHandler","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The source of the event.","pos":[1156,1185],"source":"\\n<p>The source of the event."},{"content":"&lt;/p&gt;\\n","pos":[1186,1192],"source":" </p>\\n"},{"pos":[1847,1856],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[2168,2183],"content":"GetMethodInfo()","needQuote":true,"nodes":[{"content":"GetMethodInfo()","pos":[0,15]}]},{"pos":[2352,2365],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2450,2451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2478,2479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2586,2599],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[2684,2685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2712,2713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2948,2954],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3113,3127],"content":"ErrorEventArgs","needQuote":true,"nodes":[{"content":"ErrorEventArgs","pos":[0,14]}]},{"pos":[3347,3370],"content":"GetMethodInfo(Delegate)","needQuote":true,"nodes":[{"content":"GetMethodInfo(Delegate)","pos":[0,23]}]},{"pos":[3571,3584],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[3669,3670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3722,3730],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[3792,3793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3917,3930],"content":"GetMethodInfo","needQuote":true,"nodes":[{"content":"GetMethodInfo","pos":[0,13]}]},{"pos":[4015,4016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4068,4076],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[4138,4139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4425,4452],"content":"RuntimeReflectionExtensions","needQuote":true,"nodes":[{"content":"RuntimeReflectionExtensions","pos":[0,27]}]},{"pos":[4658,4664],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[4782,4799],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]}],"content":"items:\n- uid: System.IO.ErrorEventHandler\n  commentId: T:System.IO.ErrorEventHandler\n  id: ErrorEventHandler\n  parent: System.IO\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: ErrorEventHandler\n  fullName: System.IO.ErrorEventHandler\n  type: Delegate\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorEventHandler\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 15\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Represents the method that will handle the <xref href=\\\"System.IO.FileSystemWatcher.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event of a <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public delegate void ErrorEventHandler(object sender, ErrorEventArgs e);\n    content.vb: Public Delegate Sub ErrorEventHandler(sender As Object, e As ErrorEventArgs)\n    parameters:\n    - id: sender\n      type: System.Object\n      description: \"\\n<p>The source of the event. </p>\\n\"\n    - id: e\n      type: System.IO.ErrorEventArgs\n      description: \"\\n<p>An <xref href=\\\"System.IO.ErrorEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.ErrorEventArgs\n    commentId: T:System.IO.ErrorEventArgs\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  modifiers.csharp:\n  - public\n  - delegate\n  modifiers.vb:\n  - Public\n  - Delegate\n  nameWithType: ErrorEventHandler\n  extensionMethods:\n  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  parent: System.Reflection.RuntimeReflectionExtensions\n  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  name: GetMethodInfo()\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IO.ErrorEventArgs\n  parent: System.IO\n  isExternal: false\n  name: ErrorEventArgs\n  fullName: System.IO.ErrorEventArgs\n  commentId: T:System.IO.ErrorEventArgs\n  nameWithType: ErrorEventArgs\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  isExternal: true\n  name: GetMethodInfo(Delegate)\n  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  spec.csharp:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n    name: GetMethodInfo\n    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n- uid: System.Reflection.RuntimeReflectionExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: RuntimeReflectionExtensions\n  fullName: System.Reflection.RuntimeReflectionExtensions\n  commentId: T:System.Reflection.RuntimeReflectionExtensions\n  nameWithType: RuntimeReflectionExtensions\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n"}