{"nodes":[{"pos":[648,662],"content":"AsyncOperation","needQuote":true,"nodes":[{"content":"AsyncOperation","pos":[0,14]}]},{"pos":[2179,2201],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"pos":[3701,3718],"content":"UserSuppliedState","needQuote":true,"nodes":[{"content":"UserSuppliedState","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The state object passed to the asynchronous method invocation.&lt;/p&gt;\\n","pos":[4534,4607],"source":"\\n<p>The state object passed to the asynchronous method invocation.</p>\\n"},{"pos":[5074,5084],"content":"Finalize()","needQuote":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[6069,6089],"content":"OperationCompleted()","needQuote":true,"nodes":[{"content":"OperationCompleted()","pos":[0,20]}]},{"pos":[7531,7563],"content":"Post(SendOrPostCallback, Object)","needQuote":true,"nodes":[{"content":"Post(SendOrPostCallback, Object)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;An argument for the delegate contained in the &lt;em&gt;d&lt;/em&gt; parameter.","pos":[8682,8754],"source":"\\n<p>An argument for the delegate contained in the <em>d</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[8755,8761],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;d&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9228,9271],"source":"\\n<p>\\n<em>d</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9272,9278],"source":" </p>\\n"},{"pos":[9934,9984],"content":"PostOperationCompleted(SendOrPostCallback, Object)","needQuote":true,"nodes":[{"content":"PostOperationCompleted(SendOrPostCallback, Object)","pos":[0,50]}]},{"content":"\\n&lt;p&gt;An argument for the delegate contained in the &lt;em&gt;d&lt;/em&gt; parameter.","pos":[11140,11212],"source":"\\n<p>An argument for the delegate contained in the <em>d</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[11213,11219],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;d&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[11622,11665],"source":"\\n<p>\\n<em>d</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[11666,11672],"source":" </p>\\n"},{"pos":[12009,12030],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[12206,12212],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12372,12382],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12477,12485],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12554,12555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12582,12583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12653,12661],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12730,12731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12758,12759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12942,12956],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13075,13081],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13148,13149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13199,13205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13265,13266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13349,13355],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13422,13423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13473,13479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13539,13540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13754,13776],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[13924,13930],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13997,13998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14048,14054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14115,14116]},{"pos":[14171,14177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14237,14238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14335,14341],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14408,14409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14459,14465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14526,14527]},{"pos":[14582,14588],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14648,14649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14894,14925],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15091,15106],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15182,15183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15233,15239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15300,15301]},{"pos":[15356,15362],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15422,15423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15529,15544],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15620,15621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15671,15677],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15738,15739]},{"pos":[15794,15800],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15860,15861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16091,16104],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16205,16216],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16288,16289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16316,16317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16390,16401],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16473,16474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16501,16502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16677,16686],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16779,16786],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16854,16855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16882,16883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16952,16959],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17027,17028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17055,17056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17231,17248],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17357,17372],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17448,17449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17476,17477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17554,17569],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17645,17646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17673,17674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17819,17825],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[17992,18014],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"pos":[18213,18229],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[18422,18440],"content":"SendOrPostCallback","needQuote":true,"nodes":[{"content":"SendOrPostCallback","pos":[0,18]}]},{"pos":[18660,18685],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[18885,18906],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.ComponentModel.AsyncOperation\n  commentId: T:System.ComponentModel.AsyncOperation\n  id: AsyncOperation\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.AsyncOperation.Finalize\n  - System.ComponentModel.AsyncOperation.OperationCompleted\n  - System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)\n  - System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\n  - System.ComponentModel.AsyncOperation.SynchronizationContext\n  - System.ComponentModel.AsyncOperation.UserSuppliedState\n  langs:\n  - csharp\n  - vb\n  name: AsyncOperation\n  fullName: System.ComponentModel.AsyncOperation\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AsyncOperation\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 8\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Tracks the lifetime of an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public sealed class AsyncOperation\n    content.vb: Public NotInheritable Class AsyncOperation\n  seealso:\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: AsyncOperation\n- uid: System.ComponentModel.AsyncOperation.SynchronizationContext\n  commentId: P:System.ComponentModel.AsyncOperation.SynchronizationContext\n  id: SynchronizationContext\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: SynchronizationContext\n  fullName: System.ComponentModel.AsyncOperation.SynchronizationContext\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SynchronizationContext\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 46\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that was passed to the constructor.</p>\\n\"\n  syntax:\n    content: public SynchronizationContext SynchronizationContext { get; }\n    content.vb: Public ReadOnly Property SynchronizationContext As SynchronizationContext\n    parameters: []\n    return:\n      type: System.Threading.SynchronizationContext\n      description: \"\\n<p>The <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that was passed to the constructor.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncOperation.SynchronizationContext\n- uid: System.ComponentModel.AsyncOperation.UserSuppliedState\n  commentId: P:System.ComponentModel.AsyncOperation.UserSuppliedState\n  id: UserSuppliedState\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: UserSuppliedState\n  fullName: System.ComponentModel.AsyncOperation.UserSuppliedState\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserSuppliedState\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 37\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets or sets an object used to uniquely identify an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public object UserSuppliedState { get; }\n    content.vb: Public ReadOnly Property UserSuppliedState As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The state object passed to the asynchronous method invocation.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: AsyncOperation.UserSuppliedState\n- uid: System.ComponentModel.AsyncOperation.Finalize\n  commentId: M:System.ComponentModel.AsyncOperation.Finalize\n  id: Finalize\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: Finalize()\n  fullName: System.ComponentModel.AsyncOperation.Finalize()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Finalize\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 29\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Finalizes the asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected void Finalize()\n    content.vb: Protected Sub Finalize\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: AsyncOperation.Finalize()\n- uid: System.ComponentModel.AsyncOperation.OperationCompleted\n  commentId: M:System.ComponentModel.AsyncOperation.OperationCompleted\n  id: OperationCompleted\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: OperationCompleted()\n  fullName: System.ComponentModel.AsyncOperation.OperationCompleted()\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OperationCompleted\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 65\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Ends the lifetime of an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public void OperationCompleted()\n    content.vb: Public Sub OperationCompleted\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.ComponentModel.AsyncOperation.OperationCompleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called previously for this task. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncOperation.OperationCompleted()\n- uid: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)\n  id: Post(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: Post(SendOrPostCallback, Object)\n  fullName: System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Post\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 54\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Invokes a delegate on the thread or context appropriate for the application model.</p>\\n\"\n  syntax:\n    content: public void Post(SendOrPostCallback d, object arg)\n    content.vb: Public Sub Post(d As SendOrPostCallback, arg As Object)\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.SendOrPostCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that wraps the delegate to be called when the operation ends. </p>\\n\"\n    - id: arg\n      type: System.Object\n      description: \"\\n<p>An argument for the delegate contained in the <em>d</em> parameter. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method has been called previously for this task. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>d</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncOperation.Post(SendOrPostCallback, Object)\n- uid: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\n  id: PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.ComponentModel.AsyncOperation\n  langs:\n  - csharp\n  - vb\n  name: PostOperationCompleted(SendOrPostCallback, Object)\n  fullName: System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PostOperationCompleted\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperation.cs\n    startLine: 59\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Ends the lifetime of an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public void PostOperationCompleted(SendOrPostCallback d, object arg)\n    content.vb: Public Sub PostOperationCompleted(d As SendOrPostCallback, arg As Object)\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.SendOrPostCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that wraps the delegate to be called when the operation ends. </p>\\n\"\n    - id: arg\n      type: System.Object\n      description: \"\\n<p>An argument for the delegate contained in the <em>d</em> parameter. </p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.ComponentModel.AsyncOperation.OperationCompleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called previously for this task. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>d</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.ComponentModel.AsyncOperationManager\n    commentId: T:System.ComponentModel.AsyncOperationManager\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncOperation.PostOperationCompleted(SendOrPostCallback, Object)\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n  nameWithType: SynchronizationContext\n  commentId: T:System.Threading.SynchronizationContext\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Threading.SendOrPostCallback\n  parent: System.Threading\n  isExternal: false\n  name: SendOrPostCallback\n  fullName: System.Threading.SendOrPostCallback\n  nameWithType: SendOrPostCallback\n  commentId: T:System.Threading.SendOrPostCallback\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}