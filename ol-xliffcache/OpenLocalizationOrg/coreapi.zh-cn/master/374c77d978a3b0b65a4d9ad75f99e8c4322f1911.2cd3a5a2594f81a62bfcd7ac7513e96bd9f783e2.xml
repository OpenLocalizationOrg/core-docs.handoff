{"nodes":[{"pos":[845,854],"content":"Thickness","needQuote":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[2457,2474],"content":"Thickness(Double)","needQuote":true,"nodes":[{"content":"Thickness(Double)","pos":[0,17]}]},{"pos":[3592,3633],"content":"Thickness(Double, Double, Double, Double)","needQuote":true,"nodes":[{"content":"Thickness(Double, Double, Double, Double)","pos":[0,41]}]},{"pos":[4839,4845],"content":"Bottom","needQuote":true,"nodes":[{"content":"Bottom","pos":[0,6]}]},{"pos":[5752,5756],"content":"Left","needQuote":true,"nodes":[{"content":"Left","pos":[0,4]}]},{"pos":[6656,6661],"content":"Right","needQuote":true,"nodes":[{"content":"Right","pos":[0,5]}]},{"pos":[7560,7563],"content":"Top","needQuote":true,"nodes":[{"content":"Top","pos":[0,3]}]},{"pos":[8506,8520],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9896,9913],"content":"Equals(Thickness)","needQuote":true,"nodes":[{"content":"Equals(Thickness)","pos":[0,17]}]},{"pos":[10947,10960],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12341,12371],"content":"Equality(Thickness, Thickness)","needQuote":true,"nodes":[{"content":"Equality(Thickness, Thickness)","pos":[0,30]}]},{"pos":[13716,13748],"content":"Inequality(Thickness, Thickness)","needQuote":true,"nodes":[{"content":"Inequality(Thickness, Thickness)","pos":[0,32]}]},{"pos":[14926,14936],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16050,16065],"content":"Windows.UI.Xaml","needQuote":true,"nodes":[{"content":"Windows.UI.Xaml","pos":[0,15]}]},{"pos":[16299,16321],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16515,16521],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16620,16621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16691,16697],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16783,16784]},{"pos":[16862,16868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16953,16954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17071,17077],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17176,17177],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17247,17253],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17339,17340]},{"pos":[17418,17424],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17509,17510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17738,17769],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17990,18005],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18122,18123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18193,18199],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18285,18286]},{"pos":[18364,18370],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18455,18456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18582,18597],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[18714,18715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18785,18791],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18877,18878]},{"pos":[18956,18962],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19047,19048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19202,19211],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[19337,19344],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19445,19446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19493,19494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19583,19590],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[19691,19692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19739,19740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19872,19878],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19992,19998],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[20136,20142],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[20346,20360],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20526,20532],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20616,20617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20687,20693],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20778,20779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20885,20891],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20975,20976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21046,21052],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21137,21138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21272,21279],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21432,21441],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[21625,21634],"content":"Thickness","needQuote":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[21834,21847],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[21994,22005],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22099,22100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22147,22148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22244,22255],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22349,22350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22397,22398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22528,22533],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22710,22720],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22858,22866],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[22954,22955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23002,23003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23096,23104],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23192,23193],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23240,23241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23373,23379],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"items:\n- uid: Windows.UI.Xaml.Thickness\n  commentId: T:Windows.UI.Xaml.Thickness\n  id: Thickness\n  parent: Windows.UI.Xaml\n  children:\n  - Windows.UI.Xaml.Thickness.#ctor(System.Double)\n  - Windows.UI.Xaml.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  - Windows.UI.Xaml.Thickness.Bottom\n  - Windows.UI.Xaml.Thickness.Equals(System.Object)\n  - Windows.UI.Xaml.Thickness.Equals(Windows.UI.Xaml.Thickness)\n  - Windows.UI.Xaml.Thickness.GetHashCode\n  - Windows.UI.Xaml.Thickness.Left\n  - Windows.UI.Xaml.Thickness.op_Equality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  - Windows.UI.Xaml.Thickness.op_Inequality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  - Windows.UI.Xaml.Thickness.Right\n  - Windows.UI.Xaml.Thickness.Top\n  - Windows.UI.Xaml.Thickness.ToString\n  langs:\n  - csharp\n  - vb\n  name: Thickness\n  nameWithType: Thickness\n  fullName: Windows.UI.Xaml.Thickness\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Thickness\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 104\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct Thickness\n    content.vb: >-\n      <SecurityCritical>\n\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure Thickness\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: Windows.UI.Xaml.Thickness.#ctor(System.Double)\n  commentId: M:Windows.UI.Xaml.Thickness.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Thickness(Double)\n  nameWithType: Thickness.Thickness(Double)\n  fullName: Windows.UI.Xaml.Thickness.Thickness(System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 108\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public Thickness(double uniformLength)\n    content.vb: Public Sub New(uniformLength As Double)\n    parameters:\n    - id: uniformLength\n      type: System.Double\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  commentId: M:Windows.UI.Xaml.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Thickness(Double, Double, Double, Double)\n  nameWithType: Thickness.Thickness(Double, Double, Double, Double)\n  fullName: Windows.UI.Xaml.Thickness.Thickness(System.Double, System.Double, System.Double, System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 109\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public Thickness(double left, double top, double right, double bottom)\n    content.vb: Public Sub New(left As Double, top As Double, right As Double, bottom As Double)\n    parameters:\n    - id: left\n      type: System.Double\n    - id: top\n      type: System.Double\n    - id: right\n      type: System.Double\n    - id: bottom\n      type: System.Double\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.Bottom\n  commentId: P:Windows.UI.Xaml.Thickness.Bottom\n  id: Bottom\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Bottom\n  nameWithType: Thickness.Bottom\n  fullName: Windows.UI.Xaml.Thickness.Bottom\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bottom\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 110\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public double Bottom { get; set; }\n    content.vb: Public Property Bottom As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.Left\n  commentId: P:Windows.UI.Xaml.Thickness.Left\n  id: Left\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Left\n  nameWithType: Thickness.Left\n  fullName: Windows.UI.Xaml.Thickness.Left\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Left\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 111\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public double Left { get; set; }\n    content.vb: Public Property Left As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.Right\n  commentId: P:Windows.UI.Xaml.Thickness.Right\n  id: Right\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Right\n  nameWithType: Thickness.Right\n  fullName: Windows.UI.Xaml.Thickness.Right\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Right\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 112\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public double Right { get; set; }\n    content.vb: Public Property Right As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.Top\n  commentId: P:Windows.UI.Xaml.Thickness.Top\n  id: Top\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Top\n  nameWithType: Thickness.Top\n  fullName: Windows.UI.Xaml.Thickness.Top\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Top\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 113\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public double Top { get; set; }\n    content.vb: Public Property Top As Double\n    parameters: []\n    return:\n      type: System.Double\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.Equals(System.Object)\n  commentId: M:Windows.UI.Xaml.Thickness.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: Thickness.Equals(Object)\n  fullName: Windows.UI.Xaml.Thickness.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 114\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override bool Equals(object obj)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Thickness.Equals(Windows.UI.Xaml.Thickness)\n  commentId: M:Windows.UI.Xaml.Thickness.Equals(Windows.UI.Xaml.Thickness)\n  id: Equals(Windows.UI.Xaml.Thickness)\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Equals(Thickness)\n  nameWithType: Thickness.Equals(Thickness)\n  fullName: Windows.UI.Xaml.Thickness.Equals(Windows.UI.Xaml.Thickness)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 116\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public bool Equals(Thickness thickness)\n    content.vb: Public Function Equals(thickness As Thickness) As Boolean\n    parameters:\n    - id: thickness\n      type: Windows.UI.Xaml.Thickness\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: Windows.UI.Xaml.Thickness.GetHashCode\n  commentId: M:Windows.UI.Xaml.Thickness.GetHashCode\n  id: GetHashCode\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: Thickness.GetHashCode()\n  fullName: Windows.UI.Xaml.Thickness.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 117\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: Windows.UI.Xaml.Thickness.op_Equality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  commentId: M:Windows.UI.Xaml.Thickness.op_Equality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  id: op_Equality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Equality(Thickness, Thickness)\n  nameWithType: Thickness.Equality(Thickness, Thickness)\n  fullName: Windows.UI.Xaml.Thickness.Equality(Windows.UI.Xaml.Thickness, Windows.UI.Xaml.Thickness)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 119\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator ==(Thickness t1, Thickness t2)\n    content.vb: Public Shared Operator =(t1 As Thickness, t2 As Thickness) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Thickness\n    - id: t2\n      type: Windows.UI.Xaml.Thickness\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Thickness.op_Inequality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  commentId: M:Windows.UI.Xaml.Thickness.op_Inequality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  id: op_Inequality(Windows.UI.Xaml.Thickness,Windows.UI.Xaml.Thickness)\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: Inequality(Thickness, Thickness)\n  nameWithType: Thickness.Inequality(Thickness, Thickness)\n  fullName: Windows.UI.Xaml.Thickness.Inequality(Windows.UI.Xaml.Thickness, Windows.UI.Xaml.Thickness)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 120\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: public static bool operator !=(Thickness t1, Thickness t2)\n    content.vb: Public Shared Operator <>(t1 As Thickness, t2 As Thickness) As Boolean\n    parameters:\n    - id: t1\n      type: Windows.UI.Xaml.Thickness\n    - id: t2\n      type: Windows.UI.Xaml.Thickness\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: Windows.UI.Xaml.Thickness.ToString\n  commentId: M:Windows.UI.Xaml.Thickness.ToString\n  id: ToString\n  parent: Windows.UI.Xaml.Thickness\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: Thickness.ToString()\n  fullName: Windows.UI.Xaml.Thickness.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs\n    startLine: 121\n  assemblies:\n  - System.Runtime.WindowsRuntime.UI.Xaml\n  namespace: Windows.UI.Xaml\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  attributes:\n  - type: System.Security.SecuritySafeCriticalAttribute\n    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\nreferences:\n- uid: Windows.UI.Xaml\n  commentId: N:Windows.UI.Xaml\n  isExternal: false\n  name: Windows.UI.Xaml\n  nameWithType: Windows.UI.Xaml\n  fullName: Windows.UI.Xaml\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Double\n  commentId: T:System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: Windows.UI.Xaml.Thickness\n  commentId: T:Windows.UI.Xaml.Thickness\n  parent: Windows.UI.Xaml\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: Windows.UI.Xaml.Thickness\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}