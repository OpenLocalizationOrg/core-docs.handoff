{"nodes":[{"pos":[1842,1854],"content":"PipeSecurity","needQuote":true,"nodes":[{"content":"PipeSecurity","pos":[0,12]}]},{"pos":[8700,8714],"content":"PipeSecurity()","needQuote":true,"nodes":[{"content":"PipeSecurity()","pos":[0,14]}]},{"pos":[9696,9711],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[11251,11265],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[12816,12829],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[15014,15121],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"content":"\\n&lt;p&gt;The access mask of this rule.","pos":[16882,16916],"source":"\\n<p>The access mask of this rule."},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators&lt;/p&gt;\\n","pos":[16917,17042],"source":" The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this rule is inherited from a parent container; otherwise false.&lt;/p&gt;\\n","pos":[17113,17215],"source":"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container; otherwise false.</p>\\n"},{"content":"\\n&lt;p&gt;Specifies the valid access control type.&lt;/p&gt;\\n","pos":[18122,18173],"source":"\\n<p>Specifies the valid access control type.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;type&lt;/em&gt; specifies an invalid value.&lt;/p&gt;\\n","pos":[18831,18963],"source":"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;identityReference&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19068,19127],"source":"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;accessMask&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[19128,19186],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n"},{"pos":[20224,20253],"content":"AddAccessRule(PipeAccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(PipeAccessRule)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The access rule to add.&lt;/p&gt;\\n","pos":[21183,21217],"source":"\\n<p>The access rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[21336,21400],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[21811,21838],"content":"AddAuditRule(PipeAuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(PipeAuditRule)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The audit rule to add.&lt;/p&gt;\\n","pos":[22751,22784],"source":"\\n<p>The audit rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22903,22967],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[23919,24018],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"content":"\\n&lt;p&gt;The access mask of this rule.","pos":[25775,25809],"source":"\\n<p>The access mask of this rule."},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators&lt;/p&gt;\\n","pos":[25810,25935],"source":" The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if this rule is inherited from a parent container; otherwise, false..&lt;/p&gt;\\n","pos":[26006,26110],"source":"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container; otherwise, false..</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;accessMask&lt;/em&gt;, &lt;em&gt;inheritanceFlags&lt;/em&gt;, &lt;em&gt;propagationFlags&lt;/em&gt;, or &lt;em&gt;flags&lt;/em&gt; properties specify an invalid value.&lt;/p&gt;\\n","pos":[27834,27978],"source":"\\n<p>The <em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> properties specify an invalid value.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;identityReference&lt;/em&gt; property is &lt;strong&gt;null&lt;/strong&gt;.","pos":[28083,28153],"source":"\\n<p>The <em>identityReference</em> property is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;accessMask&lt;/em&gt; property is zero.&lt;/p&gt;\\n","pos":[28154,28223],"source":" </p>\\n<p>-or-</p>\\n<p>The <em>accessMask</em> property is zero.</p>\\n"},{"pos":[29309,29328],"content":"Persist(SafeHandle)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle)","pos":[0,19]}]},{"pos":[31003,31018],"content":"Persist(String)","needQuote":true,"nodes":[{"content":"Persist(String)","pos":[0,15]}]},{"pos":[32695,32727],"content":"RemoveAccessRule(PipeAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(PipeAccessRule)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[33690,33727],"source":"\\n<p>The access rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33788,33889],"source":"\\n<p>\\n<strong>true</strong> if the operation is successful; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[34008,34072],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[34525,34565],"content":"RemoveAccessRuleSpecific(PipeAccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(PipeAccessRule)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The access rule to remove.&lt;/p&gt;\\n","pos":[35555,35592],"source":"\\n<p>The access rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35711,35775],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[36206,36236],"content":"RemoveAuditRule(PipeAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(PipeAuditRule)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[37183,37219],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the audit rule was removed; otherwise, &lt;strong&gt;false&lt;/strong&gt;&lt;/p&gt;\\n","pos":[37280,37379],"source":"\\n<p>\\n<strong>true</strong> if the audit rule was removed; otherwise, <strong>false</strong></p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[37498,37562],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[37992,38025],"content":"RemoveAuditRuleAll(PipeAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(PipeAuditRule)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[39037,39073],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39192,39256],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[39704,39742],"content":"RemoveAuditRuleSpecific(PipeAuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(PipeAuditRule)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The audit rule to remove.&lt;/p&gt;\\n","pos":[40716,40752],"source":"\\n<p>The audit rule to remove.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[40871,40935],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[41367,41398],"content":"ResetAccessRule(PipeAccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(PipeAccessRule)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The access rule to add.&lt;/p&gt;\\n","pos":[42381,42415],"source":"\\n<p>The access rule to add.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42534,42598],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[43017,43046],"content":"SetAccessRule(PipeAccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(PipeAccessRule)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The rule to set.&lt;/p&gt;\\n","pos":[43976,44003],"source":"\\n<p>The rule to set.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[44122,44186],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[44597,44624],"content":"SetAuditRule(PipeAuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(PipeAuditRule)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The rule to set.&lt;/p&gt;\\n","pos":[45538,45565],"source":"\\n<p>The rule to set.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;rule&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[45684,45748],"source":"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n"},{"pos":[45928,45943],"content":"System.IO.Pipes","needQuote":true,"nodes":[{"content":"System.IO.Pipes","pos":[0,15]}]},{"pos":[46101,46107],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46306,46320],"content":"ObjectSecurity","needQuote":true,"nodes":[{"content":"ObjectSecurity","pos":[0,14]}]},{"pos":[46595,46615],"content":"CommonObjectSecurity","needQuote":true,"nodes":[{"content":"CommonObjectSecurity","pos":[0,20]}]},{"pos":[46908,46928],"content":"NativeObjectSecurity","needQuote":true,"nodes":[{"content":"NativeObjectSecurity","pos":[0,20]}]},{"pos":[47316,47354],"content":"Persist(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections)","pos":[0,38]}]},{"pos":[47654,47661],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[47745,47746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47796,47802],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[47863,47864]},{"pos":[47957,47978],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[48055,48056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48229,48236],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[48320,48321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48371,48377],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[48438,48439]},{"pos":[48532,48553],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[48630,48631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49100,49146],"content":"Persist(String, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(String, AccessControlSections, Object)","pos":[0,46]}]},{"pos":[49475,49482],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[49566,49567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49617,49623],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[49684,49685]},{"pos":[49778,49799],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[49877,49878]},{"pos":[49933,49939],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49999,50000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50187,50194],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[50278,50279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50329,50335],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[50396,50397]},{"pos":[50490,50511],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[50589,50590]},{"pos":[50645,50651],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50711,50712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51217,51259],"content":"Persist(SafeHandle, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections)","pos":[0,42]}]},{"pos":[51615,51622],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[51706,51707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51785,51795],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[51884,51885]},{"pos":[51978,51999],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[52076,52077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52278,52285],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[52369,52370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52448,52458],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[52547,52548]},{"pos":[52641,52662],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[52739,52740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53269,53319],"content":"Persist(SafeHandle, AccessControlSections, Object)","needQuote":true,"nodes":[{"content":"Persist(SafeHandle, AccessControlSections, Object)","pos":[0,50]}]},{"pos":[53704,53711],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[53795,53796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53874,53884],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[53973,53974]},{"pos":[54067,54088],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[54166,54167]},{"pos":[54222,54228],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54288,54289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54504,54511],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[54595,54596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54674,54684],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"content":",","pos":[54773,54774]},{"pos":[54867,54888],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"content":",","pos":[54966,54967]},{"pos":[55022,55028],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55088,55089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55650,55710],"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccess(AccessControlModification, AccessRule, Boolean)","pos":[0,60]}]},{"pos":[56114,56126],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[56215,56216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56308,56333],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[56415,56416]},{"pos":[56498,56508],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[56575,56576]},{"pos":[56632,56639],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56700,56701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56926,56938],"content":"ModifyAccess","needQuote":true,"nodes":[{"content":"ModifyAccess","pos":[0,12]}]},{"pos":[57027,57028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57120,57145],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[57227,57228]},{"pos":[57310,57320],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[57387,57388]},{"pos":[57444,57451],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57512,57513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58092,58150],"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAudit(AccessControlModification, AuditRule, Boolean)","pos":[0,58]}]},{"pos":[58550,58561],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[58649,58650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58742,58767],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[58849,58850]},{"pos":[58931,58940],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[59006,59007]},{"pos":[59063,59070],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59131,59132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59355,59366],"content":"ModifyAudit","needQuote":true,"nodes":[{"content":"ModifyAudit","pos":[0,11]}]},{"pos":[59454,59455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59547,59572],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[59654,59655]},{"pos":[59736,59745],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[59811,59812]},{"pos":[59868,59875],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59936,59937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60444,60469],"content":"AddAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"AddAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[60730,60743],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[60833,60834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60911,60921],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[60987,60988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61142,61155],"content":"AddAccessRule","needQuote":true,"nodes":[{"content":"AddAccessRule","pos":[0,13]}]},{"pos":[61245,61246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61323,61333],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[61399,61400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61805,61830],"content":"SetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"SetAccessRule(AccessRule)","pos":[0,25]}]},{"pos":[62091,62104],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[62194,62195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62272,62282],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[62348,62349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62503,62516],"content":"SetAccessRule","needQuote":true,"nodes":[{"content":"SetAccessRule","pos":[0,13]}]},{"pos":[62606,62607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62684,62694],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[62760,62761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63168,63195],"content":"ResetAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"ResetAccessRule(AccessRule)","pos":[0,27]}]},{"pos":[63460,63475],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[63567,63568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63645,63655],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[63721,63722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63878,63893],"content":"ResetAccessRule","needQuote":true,"nodes":[{"content":"ResetAccessRule","pos":[0,15]}]},{"pos":[63985,63986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64063,64073],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[64139,64140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64552,64580],"content":"RemoveAccessRule(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRule(AccessRule)","pos":[0,28]}]},{"pos":[64847,64863],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[64956,64957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65034,65044],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[65110,65111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65268,65284],"content":"RemoveAccessRule","needQuote":true,"nodes":[{"content":"RemoveAccessRule","pos":[0,16]}]},{"pos":[65377,65378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65455,65465],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[65531,65532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65949,65980],"content":"RemoveAccessRuleAll(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll(AccessRule)","pos":[0,31]}]},{"pos":[66253,66272],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[66368,66369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66446,66456],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[66522,66523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66683,66702],"content":"RemoveAccessRuleAll","needQuote":true,"nodes":[{"content":"RemoveAccessRuleAll","pos":[0,19]}]},{"pos":[66798,66799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66876,66886],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[66952,66953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67381,67417],"content":"RemoveAccessRuleSpecific(AccessRule)","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific(AccessRule)","pos":[0,36]}]},{"pos":[67700,67724],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[67825,67826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67903,67913],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[67979,67980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68145,68169],"content":"RemoveAccessRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAccessRuleSpecific","pos":[0,24]}]},{"pos":[68270,68271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68348,68358],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[68424,68425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68850,68873],"content":"AddAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"AddAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[69130,69142],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[69231,69232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69308,69317],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[69382,69383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69535,69547],"content":"AddAuditRule","needQuote":true,"nodes":[{"content":"AddAuditRule","pos":[0,12]}]},{"pos":[69636,69637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69713,69722],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[69787,69788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70187,70210],"content":"SetAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"SetAuditRule(AuditRule)","pos":[0,23]}]},{"pos":[70467,70479],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[70568,70569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70645,70654],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[70719,70720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70872,70884],"content":"SetAuditRule","needQuote":true,"nodes":[{"content":"SetAuditRule","pos":[0,12]}]},{"pos":[70973,70974],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71050,71059],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[71124,71125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71527,71553],"content":"RemoveAuditRule(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRule(AuditRule)","pos":[0,26]}]},{"pos":[71816,71831],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[71923,71924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72000,72009],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[72074,72075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72230,72245],"content":"RemoveAuditRule","needQuote":true,"nodes":[{"content":"RemoveAuditRule","pos":[0,15]}]},{"pos":[72337,72338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72414,72423],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[72488,72489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72900,72929],"content":"RemoveAuditRuleAll(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll(AuditRule)","pos":[0,29]}]},{"pos":[73198,73216],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[73311,73312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73388,73397],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[73462,73463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73621,73639],"content":"RemoveAuditRuleAll","needQuote":true,"nodes":[{"content":"RemoveAuditRuleAll","pos":[0,18]}]},{"pos":[73734,73735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73811,73820],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[73885,73886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74308,74342],"content":"RemoveAuditRuleSpecific(AuditRule)","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific(AuditRule)","pos":[0,34]}]},{"pos":[74621,74644],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[74744,74745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74821,74830],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[74895,74896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75059,75082],"content":"RemoveAuditRuleSpecific","needQuote":true,"nodes":[{"content":"RemoveAuditRuleSpecific","pos":[0,23]}]},{"pos":[75182,75183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75259,75268],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[75333,75334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75758,75796],"content":"GetAccessRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAccessRules(Boolean, Boolean, Type)","pos":[0,38]}]},{"pos":[76063,76077],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[76168,76169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76220,76227],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[76289,76290]},{"pos":[76346,76353],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[76415,76416]},{"pos":[76469,76473],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[76531,76532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76688,76702],"content":"GetAccessRules","needQuote":true,"nodes":[{"content":"GetAccessRules","pos":[0,14]}]},{"pos":[76793,76794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76845,76852],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[76914,76915]},{"pos":[76971,76978],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[77040,77041]},{"pos":[77094,77098],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77156,77157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77577,77614],"content":"GetAuditRules(Boolean, Boolean, Type)","needQuote":true,"nodes":[{"content":"GetAuditRules(Boolean, Boolean, Type)","pos":[0,37]}]},{"pos":[77879,77892],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[77982,77983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78034,78041],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78103,78104]},{"pos":[78160,78167],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78229,78230]},{"pos":[78283,78287],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78345,78346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78501,78514],"content":"GetAuditRules","needQuote":true,"nodes":[{"content":"GetAuditRules","pos":[0,13]}]},{"pos":[78604,78605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78656,78663],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78725,78726]},{"pos":[78782,78789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[78851,78852]},{"pos":[78905,78909],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78967,78968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79327,79337],"content":"ReadLock()","needQuote":true,"nodes":[{"content":"ReadLock()","pos":[0,10]}]},{"pos":[79494,79502],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[79581,79582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79609,79610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79711,79719],"content":"ReadLock","needQuote":true,"nodes":[{"content":"ReadLock","pos":[0,8]}]},{"pos":[79798,79799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79826,79827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80101,80113],"content":"ReadUnlock()","needQuote":true,"nodes":[{"content":"ReadUnlock()","pos":[0,12]}]},{"pos":[80274,80284],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[80365,80366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80393,80394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80497,80507],"content":"ReadUnlock","needQuote":true,"nodes":[{"content":"ReadUnlock","pos":[0,10]}]},{"pos":[80588,80589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80616,80617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80894,80905],"content":"WriteLock()","needQuote":true,"nodes":[{"content":"WriteLock()","pos":[0,11]}]},{"pos":[81064,81073],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[81153,81154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81181,81182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81284,81293],"content":"WriteLock","needQuote":true,"nodes":[{"content":"WriteLock","pos":[0,9]}]},{"pos":[81373,81374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81401,81402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81679,81692],"content":"WriteUnlock()","needQuote":true,"nodes":[{"content":"WriteUnlock()","pos":[0,13]}]},{"pos":[81855,81866],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[81948,81949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81976,81977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82081,82092],"content":"WriteUnlock","needQuote":true,"nodes":[{"content":"WriteUnlock","pos":[0,11]}]},{"pos":[82174,82175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82202,82203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82561,82608],"content":"Persist(Boolean, String, AccessControlSections)","needQuote":true,"nodes":[{"content":"Persist(Boolean, String, AccessControlSections)","pos":[0,47]}]},{"pos":[82927,82934],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[83012,83013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83064,83071],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83133,83134]},{"pos":[83189,83195],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[83256,83257]},{"pos":[83350,83371],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[83448,83449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83631,83638],"content":"Persist","needQuote":true,"nodes":[{"content":"Persist","pos":[0,7]}]},{"pos":[83716,83717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83768,83775],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[83837,83838]},{"pos":[83893,83899],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[83960,83961]},{"pos":[84054,84075],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[84152,84153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84555,84569],"content":"GetOwner(Type)","needQuote":true,"nodes":[{"content":"GetOwner(Type)","pos":[0,14]}]},{"pos":[84750,84758],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[84837,84838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84886,84890],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84948,84949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85063,85071],"content":"GetOwner","needQuote":true,"nodes":[{"content":"GetOwner","pos":[0,8]}]},{"pos":[85150,85151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85199,85203],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85261,85262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85595,85622],"content":"SetOwner(IdentityReference)","needQuote":true,"nodes":[{"content":"SetOwner(IdentityReference)","pos":[0,27]}]},{"pos":[85867,85875],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[85954,85955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86035,86052],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[86142,86143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86289,86297],"content":"SetOwner","needQuote":true,"nodes":[{"content":"SetOwner","pos":[0,8]}]},{"pos":[86376,86377],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86457,86474],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[86564,86565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86911,86925],"content":"GetGroup(Type)","needQuote":true,"nodes":[{"content":"GetGroup(Type)","pos":[0,14]}]},{"pos":[87106,87114],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[87193,87194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87242,87246],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[87304,87305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87419,87427],"content":"GetGroup","needQuote":true,"nodes":[{"content":"GetGroup","pos":[0,8]}]},{"pos":[87506,87507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87555,87559],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[87617,87618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87951,87978],"content":"SetGroup(IdentityReference)","needQuote":true,"nodes":[{"content":"SetGroup(IdentityReference)","pos":[0,27]}]},{"pos":[88223,88231],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[88310,88311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88391,88408],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[88498,88499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88645,88653],"content":"SetGroup","needQuote":true,"nodes":[{"content":"SetGroup","pos":[0,8]}]},{"pos":[88732,88733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88813,88830],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[88920,88921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89307,89342],"content":"PurgeAccessRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAccessRules(IdentityReference)","pos":[0,35]}]},{"pos":[89603,89619],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[89706,89707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89787,89804],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[89894,89895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90049,90065],"content":"PurgeAccessRules","needQuote":true,"nodes":[{"content":"PurgeAccessRules","pos":[0,16]}]},{"pos":[90152,90153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90233,90250],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[90340,90341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90742,90776],"content":"PurgeAuditRules(IdentityReference)","needQuote":true,"nodes":[{"content":"PurgeAuditRules(IdentityReference)","pos":[0,34]}]},{"pos":[91035,91050],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[91136,91137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91217,91234],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[91324,91325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91478,91493],"content":"PurgeAuditRules","needQuote":true,"nodes":[{"content":"PurgeAuditRules","pos":[0,15]}]},{"pos":[91579,91580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91660,91677],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[91767,91768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92161,92202],"content":"SetAccessRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection(Boolean, Boolean)","pos":[0,41]}]},{"pos":[92450,92473],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[92567,92568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92619,92626],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[92688,92689]},{"pos":[92745,92752],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92813,92814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92961,92984],"content":"SetAccessRuleProtection","needQuote":true,"nodes":[{"content":"SetAccessRuleProtection","pos":[0,23]}]},{"pos":[93078,93079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93130,93137],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[93199,93200]},{"pos":[93256,93263],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[93324,93325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93718,93758],"content":"SetAuditRuleProtection(Boolean, Boolean)","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection(Boolean, Boolean)","pos":[0,40]}]},{"pos":[94004,94026],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[94119,94120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94171,94178],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[94240,94241]},{"pos":[94297,94304],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94365,94366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94512,94534],"content":"SetAuditRuleProtection","needQuote":true,"nodes":[{"content":"SetAuditRuleProtection","pos":[0,22]}]},{"pos":[94627,94628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94679,94686],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[94748,94749]},{"pos":[94805,94812],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94873,94874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95238,95265],"content":"IsSddlConversionSupported()","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported()","pos":[0,27]}]},{"pos":[95456,95481],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[95577,95578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95605,95606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95724,95749],"content":"IsSddlConversionSupported","needQuote":true,"nodes":[{"content":"IsSddlConversionSupported","pos":[0,25]}]},{"pos":[95845,95846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95873,95874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96254,96306],"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm(AccessControlSections)","pos":[0,52]}]},{"pos":[96609,96638],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[96738,96739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96827,96848],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[96925,96926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97101,97130],"content":"GetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[97230,97231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97319,97340],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[97417,97418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97841,97878],"content":"SetSecurityDescriptorSddlForm(String)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String)","pos":[0,37]}]},{"pos":[98105,98134],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[98234,98235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98285,98291],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98351,98352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98489,98518],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[98618,98619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98669,98675],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98735,98736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99158,99218],"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm(String, AccessControlSections)","pos":[0,60]}]},{"pos":[99550,99579],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[99679,99680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99730,99736],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[99797,99798]},{"pos":[99891,99912],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[99989,99990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100179,100208],"content":"SetSecurityDescriptorSddlForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorSddlForm","pos":[0,29]}]},{"pos":[100308,100309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100359,100365],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[100426,100427]},{"pos":[100520,100541],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[100618,100619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101052,101085],"content":"GetSecurityDescriptorBinaryForm()","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm()","pos":[0,33]}]},{"pos":[101288,101319],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[101421,101422],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101449,101450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101574,101605],"content":"GetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"GetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[101707,101708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101735,101736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102091,102130],"content":"SetSecurityDescriptorBinaryForm(Byte[])","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[])","pos":[0,39]}]},{"pos":[102519,102550],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[102652,102653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102701,102705],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[102764,102766]},{"pos":[102797,102798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102937,102968],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[103070,103071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103119,103123],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[103181,103183],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[103211,103212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103714,103776],"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)","pos":[0,62]}]},{"pos":[104346,104377],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[104479,104480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104528,104532],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[104591,104593]},{"content":",","pos":[104625,104626]},{"pos":[104719,104740],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[104817,104818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105009,105040],"content":"SetSecurityDescriptorBinaryForm","needQuote":true,"nodes":[{"content":"SetSecurityDescriptorBinaryForm","pos":[0,31]}]},{"pos":[105142,105143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105191,105195],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[105253,105255],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[105284,105285]},{"pos":[105378,105399],"content":"AccessControlSections","needQuote":true,"nodes":[{"content":"AccessControlSections","pos":[0,21]}]},{"pos":[105476,105477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106109,106173],"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAccessRule(AccessControlModification, AccessRule, Boolean)","pos":[0,64]}]},{"pos":[106573,106589],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[106676,106677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106769,106794],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[106876,106877]},{"pos":[106959,106969],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[107036,107037]},{"pos":[107093,107100],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[107161,107162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107385,107401],"content":"ModifyAccessRule","needQuote":true,"nodes":[{"content":"ModifyAccessRule","pos":[0,16]}]},{"pos":[107488,107489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107581,107606],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[107688,107689]},{"pos":[107771,107781],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"content":",","pos":[107848,107849]},{"pos":[107905,107912],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[107973,107974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108541,108603],"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","needQuote":true,"nodes":[{"content":"ModifyAuditRule(AccessControlModification, AuditRule, Boolean)","pos":[0,62]}]},{"pos":[108999,109014],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[109100,109101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109193,109218],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[109300,109301]},{"pos":[109382,109391],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[109457,109458]},{"pos":[109514,109521],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[109582,109583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109804,109819],"content":"ModifyAuditRule","needQuote":true,"nodes":[{"content":"ModifyAuditRule","pos":[0,15]}]},{"pos":[109905,109906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109998,110023],"content":"AccessControlModification","needQuote":true,"nodes":[{"content":"AccessControlModification","pos":[0,25]}]},{"content":",","pos":[110105,110106]},{"pos":[110187,110196],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"content":",","pos":[110262,110263]},{"pos":[110319,110326],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[110387,110388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110837,110850],"content":"OwnerModified","needQuote":true,"nodes":[{"content":"OwnerModified","pos":[0,13]}]},{"pos":[111190,111203],"content":"GroupModified","needQuote":true,"nodes":[{"content":"GroupModified","pos":[0,13]}]},{"pos":[111548,111566],"content":"AuditRulesModified","needQuote":true,"nodes":[{"content":"AuditRulesModified","pos":[0,18]}]},{"pos":[111927,111946],"content":"AccessRulesModified","needQuote":true,"nodes":[{"content":"AccessRulesModified","pos":[0,19]}]},{"pos":[112302,112313],"content":"IsContainer","needQuote":true,"nodes":[{"content":"IsContainer","pos":[0,11]}]},{"pos":[112638,112642],"content":"IsDS","needQuote":true,"nodes":[{"content":"IsDS","pos":[0,4]}]},{"pos":[112965,112988],"content":"AreAccessRulesProtected","needQuote":true,"nodes":[{"content":"AreAccessRulesProtected","pos":[0,23]}]},{"pos":[113367,113389],"content":"AreAuditRulesProtected","needQuote":true,"nodes":[{"content":"AreAuditRulesProtected","pos":[0,22]}]},{"pos":[113766,113789],"content":"AreAccessRulesCanonical","needQuote":true,"nodes":[{"content":"AreAccessRulesCanonical","pos":[0,23]}]},{"pos":[114168,114190],"content":"AreAuditRulesCanonical","needQuote":true,"nodes":[{"content":"AreAuditRulesCanonical","pos":[0,22]}]},{"pos":[114489,114499],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[114594,114602],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[114671,114672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114699,114700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114770,114778],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[114847,114848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114875,114876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115059,115073],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[115192,115198],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[115265,115266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115316,115322],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[115382,115383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115466,115472],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[115539,115540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115590,115596],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[115656,115657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115871,115893],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[116041,116047],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[116114,116115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116165,116171],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[116232,116233]},{"pos":[116288,116294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116354,116355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116452,116458],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[116525,116526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116576,116582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[116643,116644]},{"pos":[116699,116705],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116765,116766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117011,117042],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[117208,117223],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[117299,117300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117350,117356],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[117417,117418]},{"pos":[117473,117479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117539,117540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117646,117661],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[117737,117738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117788,117794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[117855,117856]},{"pos":[117911,117917],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[117977,117978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118208,118221],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[118322,118333],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[118405,118406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118433,118434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118507,118518],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[118590,118591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118618,118619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118794,118803],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[118896,118903],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[118971,118972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118999,119000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119069,119076],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[119144,119145],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119172,119173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119348,119365],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[119474,119489],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[119565,119566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119593,119594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119671,119686],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[119762,119763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119790,119791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119936,119942],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[120072,120101],"content":"System.Security.AccessControl","needQuote":true,"nodes":[{"content":"System.Security.AccessControl","pos":[0,29]}]},{"pos":[120386,120401],"content":"AccessRightType","needQuote":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[120662,120666],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[120889,120903],"content":"AccessRuleType","needQuote":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[121246,121259],"content":"AuditRuleType","needQuote":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[121817,121924],"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","needQuote":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)","pos":[0,107]}]},{"pos":[122532,122549],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[122637,122638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122718,122735],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[122826,122827]},{"pos":[122881,122886],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[122946,122947]},{"pos":[123003,123010],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[123072,123073]},{"pos":[123161,123177],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[123250,123251]},{"pos":[123339,123355],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[123428,123429]},{"pos":[123518,123535],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[123608,123609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123934,123951],"content":"AccessRuleFactory","needQuote":true,"nodes":[{"content":"AccessRuleFactory","pos":[0,17]}]},{"pos":[124039,124040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124120,124137],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[124228,124229]},{"pos":[124283,124288],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[124348,124349]},{"pos":[124405,124412],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[124474,124475]},{"pos":[124563,124579],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[124652,124653]},{"pos":[124741,124757],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[124830,124831]},{"pos":[124920,124937],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[125010,125011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125575,125592],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[125807,125812],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[125955,125962],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[126166,126182],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[126459,126475],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[126753,126770],"content":"AccessControlType","needQuote":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[127044,127054],"content":"AccessRule","needQuote":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[127252,127277],"content":"System.Security.Principal","needQuote":true,"nodes":[{"content":"System.Security.Principal","pos":[0,25]}]},{"pos":[127491,127505],"content":"PipeAccessRule","needQuote":true,"nodes":[{"content":"PipeAccessRule","pos":[0,14]}]},{"pos":[127717,127730],"content":"PipeAuditRule","needQuote":true,"nodes":[{"content":"PipeAuditRule","pos":[0,13]}]},{"pos":[128207,128306],"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","needQuote":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)","pos":[0,99]}]},{"pos":[128898,128914],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[129001,129002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129082,129099],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[129190,129191]},{"pos":[129245,129250],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[129310,129311]},{"pos":[129367,129374],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[129436,129437]},{"pos":[129525,129541],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[129614,129615]},{"pos":[129703,129719],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[129792,129793]},{"pos":[129875,129885],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[129951,129952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130269,130285],"content":"AuditRuleFactory","needQuote":true,"nodes":[{"content":"AuditRuleFactory","pos":[0,16]}]},{"pos":[130372,130373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130453,130470],"content":"IdentityReference","needQuote":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"content":",","pos":[130561,130562]},{"pos":[130616,130621],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[130681,130682]},{"pos":[130738,130745],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[130807,130808]},{"pos":[130896,130912],"content":"InheritanceFlags","needQuote":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"content":",","pos":[130985,130986]},{"pos":[131074,131090],"content":"PropagationFlags","needQuote":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"content":",","pos":[131163,131164]},{"pos":[131246,131256],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[131322,131323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131872,131882],"content":"AuditFlags","needQuote":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[132134,132143],"content":"AuditRule","needQuote":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[132395,132405],"content":"SafeHandle","needQuote":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[132610,132640],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[132843,132849],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[132998,133025],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[133231,133252],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[133453,133470],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.IO.Pipes.PipeSecurity\n  commentId: T:System.IO.Pipes.PipeSecurity\n  id: PipeSecurity\n  parent: System.IO.Pipes\n  children:\n  - System.IO.Pipes.PipeSecurity.#ctor\n  - System.IO.Pipes.PipeSecurity.AccessRightType\n  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.IO.Pipes.PipeSecurity.AccessRuleType\n  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeSecurity.AuditRuleType\n  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  - System.IO.Pipes.PipeSecurity.Persist(System.String)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  langs:\n  - csharp\n  - vb\n  name: PipeSecurity\n  fullName: System.IO.Pipes.PipeSecurity\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PipeSecurity\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 48\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Represents the access control and audit security for a pipe.</p>\\n\"\n  syntax:\n    content: 'public class PipeSecurity : NativeObjectSecurity'\n    content.vb: >-\n      Public Class PipeSecurity\n          Inherits NativeObjectSecurity\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  inheritedMembers:\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: PipeSecurity\n- uid: System.IO.Pipes.PipeSecurity.#ctor\n  commentId: M:System.IO.Pipes.PipeSecurity.#ctor\n  id: '#ctor'\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: PipeSecurity()\n  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 50\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public PipeSecurity()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.PipeSecurity()\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType\n  commentId: P:System.IO.Pipes.PipeSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRightType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRightType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRightType\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 51\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the securable object that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override Type AccessRightType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRightType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the securable object that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeSecurity.AccessRightType\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType\n  commentId: P:System.IO.Pipes.PipeSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleType\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 52\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the object that is associated with the access rules of the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the object that is associated with the access rules of the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeSecurity.AccessRuleType\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType\n  commentId: P:System.IO.Pipes.PipeSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleType\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleType\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 53\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the audit rules of the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The type of the object that is associated with the audit rules of the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: PipeSecurity.AuditRuleType\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AccessRuleFactory\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 54\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.AccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)\n    content.vb: Public Overrides Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container; otherwise false.</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the inheritance properties of the access rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\\\"System.Security.AccessControl.InheritanceFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: \"\\n<p>Specifies the valid access control type.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.AccessRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that this method creates.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>type</em> specifies an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>identityReference</em> is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>\\n<em>accessMask</em> is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>identityReference</em> is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> nor of a type, such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAccessRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 55\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddAccessRule(PipeAccessRule rule)\n    content.vb: Public Sub AddAccessRule(rule As PipeAccessRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: \"\\n<p>The access rule to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AddAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddAuditRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 56\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void AddAuditRule(PipeAuditRule rule)\n    content.vb: Public Sub AddAuditRule(rule As PipeAuditRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: \"\\n<p>The audit rule to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AuditRuleFactory\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 57\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified values.</p>\\n\"\n  syntax:\n    content: public override sealed AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)\n    content.vb: Public NotOverridable Overrides Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: \"\\n<p>The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n    - id: accessMask\n      type: System.Int32\n      description: \"\\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</p>\\n\"\n    - id: isInherited\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this rule is inherited from a parent container; otherwise, false..</p>\\n\"\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.InheritanceFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the inheritance properties of the access rule.</p>\\n\"\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.PropagationFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\\\"System.Security.AccessControl.InheritanceFlags.None\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: \"\\n<p>One of the <xref href=\\\"System.Security.AccessControl.AuditFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the valid access control type.</p>\\n\"\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: \"\\n<p>The <xref href=\\\"System.Security.AccessControl.AuditRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that this method creates.</p>\\n\"\n  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>accessMask</em>, <em>inheritanceFlags</em>, <em>propagationFlags</em>, or <em>flags</em> properties specify an invalid value.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>identityReference</em> property is <strong>null</strong>. </p>\\n<p>-or-</p>\\n<p>The <em>accessMask</em> property is zero.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>identityReference</em> property is neither of type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> nor of a type, such as <xref href=\\\"System.Security.Principal.NTAccount\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, that can be converted to type <xref href=\\\"System.Security.Principal.SecurityIdentifier\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  id: Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: Persist(SafeHandle)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Persist\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 58\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Saves the specified sections of the security descriptor that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to permanent storage.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      protected void Persist(SafeHandle handle)\n    content.vb: >-\n      <SecurityCritical>\n\n      Protected Sub Persist(handle As SafeHandle)\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: \"\\n<p>The handle of the securable object that the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated with.</p>\\n\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PipeSecurity.Persist(SafeHandle)\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  commentId: M:System.IO.Pipes.PipeSecurity.Persist(System.String)\n  id: Persist(System.String)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: Persist(String)\n  fullName: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Persist\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 60\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Saves the specified sections of the security descriptor that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to permanent storage.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      protected void Persist(string name)\n    content.vb: >-\n      <SecurityCritical>\n\n      Protected Sub Persist(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the securable object that the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is associated with.</p>\\n\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: PipeSecurity.Persist(String)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 62\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool RemoveAccessRule(PipeAccessRule rule)\n    content.vb: Public Function RemoveAccessRule(rule As PipeAccessRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operation is successful; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAccessRuleSpecific(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAccessRuleSpecific\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 63\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveAccessRuleSpecific(PipeAccessRule rule)\n    content.vb: Public Sub RemoveAccessRuleSpecific(rule As PipeAccessRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: \"\\n<p>The access rule to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 64\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool RemoveAuditRule(PipeAuditRule rule)\n    content.vb: Public Function RemoveAuditRule(rule As PipeAuditRule) As Boolean\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the audit rule was removed; otherwise, <strong>false</strong></p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleAll(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleAll\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 65\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleAll(PipeAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleAll(rule As PipeAuditRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: RemoveAuditRuleSpecific(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoveAuditRuleSpecific\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 66\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void RemoveAuditRuleSpecific(PipeAuditRule rule)\n    content.vb: Public Sub RemoveAuditRuleSpecific(rule As PipeAuditRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: \"\\n<p>The audit rule to remove.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: ResetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ResetAccessRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 67\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and then adds the specified access rule.</p>\\n\"\n  syntax:\n    content: public void ResetAccessRule(PipeAccessRule rule)\n    content.vb: Public Sub ResetAccessRule(rule As PipeAccessRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: \"\\n<p>The access rule to add.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAccessRule(PipeAccessRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAccessRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 68\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void SetAccessRule(PipeAccessRule rule)\n    content.vb: Public Sub SetAccessRule(rule As PipeAccessRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: \"\\n<p>The rule to set.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  - vb\n  name: SetAuditRule(PipeAuditRule)\n  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetAuditRule\n    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs\n    startLine: 69\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  namespace: System.IO.Pipes\n  summary: \"\\n<p>Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\\\"System.IO.Pipes.PipeSecurity\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public void SetAuditRule(PipeAuditRule rule)\n    content.vb: Public Sub SetAuditRule(rule As PipeAuditRule)\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: \"\\n<p>The rule to set.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>rule</em> parameter is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)\nreferences:\n- uid: System.IO.Pipes\n  isExternal: false\n  name: System.IO.Pipes\n  fullName: System.IO.Pipes\n  commentId: N:System.IO.Pipes\n  nameWithType: System.IO.Pipes\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Security.AccessControl.ObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  nameWithType: ObjectSecurity\n- uid: System.Security.AccessControl.CommonObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonObjectSecurity\n  fullName: System.Security.AccessControl.CommonObjectSecurity\n  commentId: T:System.Security.AccessControl.CommonObjectSecurity\n  nameWithType: CommonObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n  commentId: T:System.Security.AccessControl.NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(String, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: true\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Object)\n  spec.csharp:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n    name: Persist\n    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.SafeHandle\n    name: SafeHandle\n    fullName: System.Runtime.InteropServices.SafeHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccess\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAudit\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n    name: AddAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n    name: SetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n    name: ResetAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n    name: RemoveAccessRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n    name: AddAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n    name: SetAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRule\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleAll\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n    name: RemoveAuditRuleSpecific\n    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAccessRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAccessRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: true\n  name: GetAuditRules(Boolean, Boolean, Type)\n  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n    name: GetAuditRules\n    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n    name: ReadLock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  nameWithType: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n    name: ReadUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n    name: WriteLock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  nameWithType: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n    name: WriteUnlock\n    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: Persist(Boolean, String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n    name: Persist\n    fullName: System.Security.AccessControl.ObjectSecurity.Persist\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetOwner(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n    name: GetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetOwner(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n    name: SetOwner\n    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: GetGroup(Type)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n    name: GetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetGroup(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n    name: SetGroup\n    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAccessRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n    name: PurgeAccessRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: PurgeAuditRules(IdentityReference)\n  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n    name: PurgeAuditRules\n    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n    name: SetAccessRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n    name: SetAuditRuleProtection\n    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n    name: IsSddlConversionSupported\n    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n    name: GetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorSddlForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n    name: GetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())\n  name.vb: SetSecurityDescriptorBinaryForm(Byte())\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)\n  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)\n  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n    name: SetSecurityDescriptorBinaryForm\n    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm\n  - name: (\n    fullName: (\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlSections\n    name: AccessControlSections\n    fullName: System.Security.AccessControl.AccessControlSections\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n    name: ModifyAccessRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessRule\n    name: AccessRule\n    fullName: System.Security.AccessControl.AccessRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n    name: ModifyAuditRule\n    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule\n  - name: (\n    fullName: (\n  - uid: System.Security.AccessControl.AccessControlModification\n    name: AccessControlModification\n    fullName: System.Security.AccessControl.AccessControlModification\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditRule\n    name: AuditRule\n    fullName: System.Security.AccessControl.AuditRule\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  fullName: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  nameWithType: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.AccessControl\n  isExternal: false\n  name: System.Security.AccessControl\n  fullName: System.Security.AccessControl\n  commentId: N:System.Security.AccessControl\n  nameWithType: System.Security.AccessControl\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n    name: AccessRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AccessControlType\n    name: AccessControlType\n    fullName: System.Security.AccessControl.AccessControlType\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n  commentId: T:System.Security.Principal.IdentityReference\n  nameWithType: IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n  commentId: T:System.Security.AccessControl.InheritanceFlags\n  nameWithType: InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n  commentId: T:System.Security.AccessControl.PropagationFlags\n  nameWithType: PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n  commentId: T:System.Security.AccessControl.AccessControlType\n  nameWithType: AccessControlType\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n  commentId: T:System.Security.AccessControl.AccessRule\n  nameWithType: AccessRule\n- uid: System.Security.Principal\n  isExternal: false\n  name: System.Security.Principal\n  fullName: System.Security.Principal\n  commentId: N:System.Security.Principal\n  nameWithType: System.Security.Principal\n- uid: System.IO.Pipes.PipeAccessRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRule\n  fullName: System.IO.Pipes.PipeAccessRule\n  commentId: T:System.IO.Pipes.PipeAccessRule\n  nameWithType: PipeAccessRule\n- uid: System.IO.Pipes.PipeAuditRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAuditRule\n  fullName: System.IO.Pipes.PipeAuditRule\n  commentId: T:System.IO.Pipes.PipeAuditRule\n  nameWithType: PipeAuditRule\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: true\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)\n  spec.csharp:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n    name: AuditRuleFactory\n    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory\n  - name: (\n    fullName: (\n  - uid: System.Security.Principal.IdentityReference\n    name: IdentityReference\n    fullName: System.Security.Principal.IdentityReference\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.InheritanceFlags\n    name: InheritanceFlags\n    fullName: System.Security.AccessControl.InheritanceFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.PropagationFlags\n    name: PropagationFlags\n    fullName: System.Security.AccessControl.PropagationFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Security.AccessControl.AuditFlags\n    name: AuditFlags\n    fullName: System.Security.AccessControl.AuditFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n  commentId: T:System.Security.AccessControl.AuditFlags\n  nameWithType: AuditFlags\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n  commentId: T:System.Security.AccessControl.AuditRule\n  nameWithType: AuditRule\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n  commentId: T:System.Runtime.InteropServices.SafeHandle\n  nameWithType: SafeHandle\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}