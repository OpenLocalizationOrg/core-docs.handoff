<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79cfe2bdffba1c4a39aaa9665cdc21e3cbb4b777</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.Marshal.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eee6ea52330a54f72f40a25a71f97c3cf677ac22</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Marshal</source>
          <target state="new">Marshal</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SystemDefaultCharSize</source>
          <target state="new">SystemDefaultCharSize</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>SystemMaxDBCSCharSize</source>
          <target state="new">SystemMaxDBCSCharSize</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>AddRef(IntPtr)</source>
          <target state="new">AddRef(IntPtr)</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface reference count to increment.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface reference count to increment.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value of the reference count on the &lt;em&gt;pUnk&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new value of the reference count on the &lt;em&gt;pUnk&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>AllocCoTaskMem(Int32)</source>
          <target state="new">AllocCoTaskMem(Int32)</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size of the block of memory to be allocated.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The size of the block of memory to be allocated.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>AllocHGlobal(Int32)</source>
          <target state="new">AllocHGlobal(Int32)</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The required number of bytes in memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The required number of bytes in memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>AllocHGlobal(IntPtr)</source>
          <target state="new">AllocHGlobal(IntPtr)</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The required number of bytes in memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The required number of bytes in memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>AreComObjectsAvailableForCleanup()</source>
          <target state="new">AreComObjectsAvailableForCleanup()</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if there are any RCWs available for cleanup; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if there are any RCWs available for cleanup; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Copy(Byte[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Byte[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Copy(Char[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Char[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Copy(Double[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Double[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Copy(Int16[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Int16[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Copy(Int32[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Int32[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Copy(Int64[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Int64[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Byte[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Byte[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Char[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Char[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Double[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Double[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Int16[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Int16[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Int32[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Int32[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Int64[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Int64[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, IntPtr[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, IntPtr[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr, Single[], Int32, Int32)</source>
          <target state="new">Copy(IntPtr, Single[], Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy from.</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy from.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to copy to.</source>
          <target state="new">\n&lt;p&gt;The array to copy to.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the destination array where copying should start.</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the destination array where copying should start.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Copy(IntPtr[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(IntPtr[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Copy(Single[], Int32, IntPtr, Int32)</source>
          <target state="new">Copy(Single[], Int32, IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to copy from.</source>
          <target state="new">\n&lt;p&gt;The one-dimensional array to copy from.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in the source array where copying should start.</source>
          <target state="new">\n&lt;p&gt;The zero-based index in the source array where copying should start.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The memory pointer to copy to.</source>
          <target state="new">\n&lt;p&gt;The memory pointer to copy to.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements to copy.</source>
          <target state="new">\n&lt;p&gt;The number of array elements to copy.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; are not valid.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;source&lt;/em&gt;, &lt;em&gt;startIndex&lt;/em&gt;, &lt;em&gt;destination&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>CreateAggregatedObject(IntPtr, Object)</source>
          <target state="new">CreateAggregatedObject(IntPtr, Object)</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The outer &lt;strong&gt;IUnknown&lt;/strong&gt; pointer.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The outer &lt;strong&gt;IUnknown&lt;/strong&gt; pointer.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object to aggregate.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object to aggregate.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The inner &lt;strong&gt;IUnknown&lt;/strong&gt; pointer of the managed object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The inner &lt;strong&gt;IUnknown&lt;/strong&gt; pointer of the managed object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is a Windows Runtime object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is a Windows Runtime object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>CreateAggregatedObject&lt;T&gt;(IntPtr, T)</source>
          <target state="new">CreateAggregatedObject&lt;T&gt;(IntPtr, T)</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The managed object to aggregate.</source>
          <target state="new">\n&lt;p&gt;The managed object to aggregate.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the managed object to aggregate.</source>
          <target state="new">\n&lt;p&gt;The type of the managed object to aggregate.</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is a Windows Runtime object.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is a Windows Runtime object.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>CreateWrapperOfType(Object, Type)</source>
          <target state="new">CreateWrapperOfType(Object, Type)</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to be wrapped.</source>
          <target state="new">\n&lt;p&gt;The object to be wrapped.</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of wrapper to create.</source>
          <target state="new">\n&lt;p&gt;The type of wrapper to create.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The newly wrapped object that is an instance of the desired type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The newly wrapped object that is an instance of the desired type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; must derive from &lt;strong&gt;__ComObject&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; is a Windows Runtime type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; must derive from &lt;strong&gt;__ComObject&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; is a Windows Runtime type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; cannot be converted to the destination type because it does not support all required interfaces.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; cannot be converted to the destination type because it does not support all required interfaces.</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>CreateWrapperOfType&lt;T, TWrapper&gt;(T)</source>
          <target state="new">CreateWrapperOfType&lt;T, TWrapper&gt;(T)</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to be wrapped.</source>
          <target state="new">\n&lt;p&gt;The object to be wrapped.</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to wrap.</source>
          <target state="new">\n&lt;p&gt;The type of object to wrap.</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to return.</source>
          <target state="new">\n&lt;p&gt;The type of object to return.</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The newly wrapped object.</source>
          <target state="new">\n&lt;p&gt;The newly wrapped object.</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; must derive from &lt;strong&gt;__ComObject&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; must derive from &lt;strong&gt;__ComObject&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; is a Windows Runtime type.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; is a Windows Runtime type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; cannot be converted to the &lt;em&gt;TWrapper&lt;/em&gt; because it does not support all required interfaces.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; cannot be converted to the &lt;em&gt;TWrapper&lt;/em&gt; because it does not support all required interfaces.</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>DestroyStructure(IntPtr, Type)</source>
          <target state="new">DestroyStructure(IntPtr, Type)</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Type of a formatted class.</source>
          <target state="new">\n&lt;p&gt;Type of a formatted class.</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>This provides the layout information necessary to delete the buffer in the &lt;em&gt;ptr&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">This provides the layout information necessary to delete the buffer in the &lt;em&gt;ptr&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;structureType&lt;/em&gt; has an automatic layout.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;structureType&lt;/em&gt; has an automatic layout.</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Use sequential or explicit instead.&lt;/p&gt;\n</source>
          <target state="new">Use sequential or explicit instead.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>DestroyStructure&lt;T&gt;(IntPtr)</source>
          <target state="new">DestroyStructure&lt;T&gt;(IntPtr)</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the formatted structure.</source>
          <target state="new">\n&lt;p&gt;The type of the formatted structure.</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This provides the layout information necessary to delete the buffer in the &lt;em&gt;ptr&lt;/em&gt; parameter.</source>
          <target state="new">This provides the layout information necessary to delete the buffer in the &lt;em&gt;ptr&lt;/em&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; has an automatic layout.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;T&lt;/em&gt; has an automatic layout.</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Use sequential or explicit instead.</source>
          <target state="new">Use sequential or explicit instead.</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>FinalReleaseComObject(Object)</source>
          <target state="new">FinalReleaseComObject(Object)</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The RCW to be released.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The RCW to be released.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value of the reference count of the RCW associated with the &lt;em&gt;o&lt;/em&gt;&lt;em&gt;&lt;/em&gt;parameter, which is 0 (zero) if the release is successful.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new value of the reference count of the RCW associated with the &lt;em&gt;o&lt;/em&gt;&lt;em&gt;&lt;/em&gt;parameter, which is 0 (zero) if the release is successful.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is not a valid COM object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is not a valid COM object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>FreeBSTR(IntPtr)</source>
          <target state="new">FreeBSTR(IntPtr)</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the BSTR to be freed.</source>
          <target state="new">\n&lt;p&gt;The address of the BSTR to be freed.</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>FreeCoTaskMem(IntPtr)</source>
          <target state="new">FreeCoTaskMem(IntPtr)</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the memory to be freed.</source>
          <target state="new">\n&lt;p&gt;The address of the memory to be freed.</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>FreeHGlobal(IntPtr)</source>
          <target state="new">FreeHGlobal(IntPtr)</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>GetComInterfaceForObject(Object, Type)</source>
          <target state="new">GetComInterfaceForObject(Object, Type)</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object that provides the interface.</source>
          <target state="new">\n&lt;p&gt;The object that provides the interface.</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of interface that is requested.</source>
          <target state="new">\n&lt;p&gt;The type of interface that is requested.</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface pointer that represents the specified interface for the object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface pointer that represents the specified interface for the object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter does not support the requested interface.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter does not support the requested interface.</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>GetComInterfaceForObject(Object, Type, CustomQueryInterfaceMode)</source>
          <target state="new">GetComInterfaceForObject(Object, Type, CustomQueryInterfaceMode)</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object that provides the interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object that provides the interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of interface that is requested.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of interface that is requested.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface pointer that represents the interface for the object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface pointer that represents the interface for the object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object &lt;em&gt;o&lt;/em&gt; does not support the requested interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object &lt;em&gt;o&lt;/em&gt; does not support the requested interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>GetComInterfaceForObject&lt;T, TInterface&gt;(T)</source>
          <target state="new">GetComInterfaceForObject&lt;T, TInterface&gt;(T)</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object that provides the interface.</source>
          <target state="new">\n&lt;p&gt;The object that provides the interface.</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of &lt;em&gt;o&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The type of &lt;em&gt;o&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of interface to return.</source>
          <target state="new">\n&lt;p&gt;The type of interface to return.</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface pointer that represents the &lt;em&gt;TInterface&lt;/em&gt; interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface pointer that represents the &lt;em&gt;TInterface&lt;/em&gt; interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;TInterface&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;TInterface&lt;/em&gt; parameter is not an interface.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type is not visible to COM.</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is an open generic type.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;T&lt;/em&gt; parameter is an open generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter does not support the &lt;em&gt;TInterface&lt;/em&gt; interface.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter does not support the &lt;em&gt;TInterface&lt;/em&gt; interface.</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;o&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>GetDelegateForFunctionPointer(IntPtr, Type)</source>
          <target state="new">GetDelegateForFunctionPointer(IntPtr, Type)</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The unmanaged function pointer to be converted.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The unmanaged function pointer to be converted.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the delegate to be returned.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the delegate to be returned.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A delegate instance that can be cast to the appropriate delegate type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A delegate instance that can be cast to the appropriate delegate type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is not a delegate or is generic.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is not a delegate or is generic.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;ptr&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;ptr&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>GetDelegateForFunctionPointer&lt;TDelegate&gt;(IntPtr)</source>
          <target state="new">GetDelegateForFunctionPointer&lt;TDelegate&gt;(IntPtr)</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The unmanaged function pointer to convert.</source>
          <target state="new">\n&lt;p&gt;The unmanaged function pointer to convert.</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the delegate to return.</source>
          <target state="new">\n&lt;p&gt;The type of the delegate to return.</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A instance of the specified delegate type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A instance of the specified delegate type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;TDelegate&lt;/em&gt; generic parameter is not a delegate, or it is an open generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;TDelegate&lt;/em&gt; generic parameter is not a delegate, or it is an open generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;ptr&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;ptr&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>GetExceptionCode()</source>
          <target state="new">GetExceptionCode()</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the exception.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type of the exception.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>GetExceptionForHR(Int32)</source>
          <target state="new">GetExceptionForHR(Int32)</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT to be converted.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT to be converted.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that represents the converted HRESULT.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that represents the converted HRESULT.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>GetExceptionForHR(Int32, IntPtr)</source>
          <target state="new">GetExceptionForHR(Int32, IntPtr)</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT to be converted.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT to be converted.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to the &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface that provides more information about the error.</source>
          <target state="new">\n&lt;p&gt;A pointer to the &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface that provides more information about the error.</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>You can specify &lt;code&gt;IntPtr(0)&lt;/code&gt; to use the current &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface, or &lt;code&gt;IntPtr(-1)&lt;/code&gt; to ignore the current &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface and construct the exception just from the error code.&lt;/p&gt;\n</source>
          <target state="new">You can specify &lt;code&gt;IntPtr(0)&lt;/code&gt; to use the current &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface, or &lt;code&gt;IntPtr(-1)&lt;/code&gt; to ignore the current &lt;strong&gt;IErrorInfo&lt;/strong&gt; interface and construct the exception just from the error code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that represents the converted HRESULT and information obtained from &lt;em&gt;errorInfo&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that represents the converted HRESULT and information obtained from &lt;em&gt;errorInfo&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>GetFunctionPointerForDelegate(Delegate)</source>
          <target state="new">GetFunctionPointerForDelegate(Delegate)</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate to be passed to unmanaged code.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The delegate to be passed to unmanaged code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</source>
          <target state="new">\n&lt;p&gt;A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>GetFunctionPointerForDelegate&lt;TDelegate&gt;(TDelegate)</source>
          <target state="new">GetFunctionPointerForDelegate&lt;TDelegate&gt;(TDelegate)</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate to be passed to unmanaged code.</source>
          <target state="new">\n&lt;p&gt;The delegate to be passed to unmanaged code.</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of delegate to convert.</source>
          <target state="new">\n&lt;p&gt;The type of delegate to convert.</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</source>
          <target state="new">\n&lt;p&gt;A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;d&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>GetHRForException(Exception)</source>
          <target state="new">GetHRForException(Exception)</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The exception to convert to an HRESULT.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The exception to convert to an HRESULT.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT mapped to the supplied exception.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT mapped to the supplied exception.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>GetHRForLastWin32Error()</source>
          <target state="new">GetHRForLastWin32Error()</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT corresponding to the last Win32 error code.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT corresponding to the last Win32 error code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>GetIUnknownForObject(Object)</source>
          <target state="new">GetIUnknownForObject(Object)</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object whose &lt;strong&gt;IUnknown&lt;/strong&gt; interface is requested.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object whose &lt;strong&gt;IUnknown&lt;/strong&gt; interface is requested.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;strong&gt;IUnknown&lt;/strong&gt; pointer for the &lt;em&gt;o&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;strong&gt;IUnknown&lt;/strong&gt; pointer for the &lt;em&gt;o&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>GetLastWin32Error()</source>
          <target state="new">GetLastWin32Error()</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>GetNativeVariantForObject(Object, IntPtr)</source>
          <target state="new">GetNativeVariantForObject(Object, IntPtr)</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object for which to get a COM VARIANT.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object for which to get a COM VARIANT.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to receive the VARIANT that corresponds to the &lt;em&gt;obj&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to receive the VARIANT that corresponds to the &lt;em&gt;obj&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;obj&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;obj&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>GetNativeVariantForObject&lt;T&gt;(T, IntPtr)</source>
          <target state="new">GetNativeVariantForObject&lt;T&gt;(T, IntPtr)</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object for which to get a COM VARIANT.</source>
          <target state="new">\n&lt;p&gt;The object for which to get a COM VARIANT.</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to receive the VARIANT that corresponds to the &lt;em&gt;obj&lt;/em&gt; parameter.</source>
          <target state="new">\n&lt;p&gt;A pointer to receive the VARIANT that corresponds to the &lt;em&gt;obj&lt;/em&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the object to convert.</source>
          <target state="new">\n&lt;p&gt;The type of the object to convert.</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>GetObjectForIUnknown(IntPtr)</source>
          <target state="new">GetObjectForIUnknown(IntPtr)</target>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to the &lt;strong&gt;IUnknown&lt;/strong&gt; interface.</source>
          <target state="new">\n&lt;p&gt;A pointer to the &lt;strong&gt;IUnknown&lt;/strong&gt; interface.</target>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that represents the specified unmanaged COM object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that represents the specified unmanaged COM object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>GetObjectForNativeVariant(IntPtr)</source>
          <target state="new">GetObjectForNativeVariant(IntPtr)</target>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to a COM VARIANT.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to a COM VARIANT.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that corresponds to the &lt;em&gt;pSrcNativeVariant&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that corresponds to the &lt;em&gt;pSrcNativeVariant&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; is not a valid VARIANT type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; is not a valid VARIANT type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; has an unsupported type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; has an unsupported type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>GetObjectForNativeVariant&lt;T&gt;(IntPtr)</source>
          <target state="new">GetObjectForNativeVariant&lt;T&gt;(IntPtr)</target>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to a COM VARIANT.</source>
          <target state="new">\n&lt;p&gt;A pointer to a COM VARIANT.</target>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type to which to convert the COM VARIANT.</source>
          <target state="new">\n&lt;p&gt;The type to which to convert the COM VARIANT.</target>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object of the specified type that corresponds to the &lt;em&gt;pSrcNativeVariant&lt;/em&gt; parameter.</source>
          <target state="new">\n&lt;p&gt;An object of the specified type that corresponds to the &lt;em&gt;pSrcNativeVariant&lt;/em&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; is not a valid VARIANT type.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; is not a valid VARIANT type.</target>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; has an unsupported type.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;pSrcNativeVariant&lt;/em&gt; has an unsupported type.</target>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>GetObjectsForNativeVariants(IntPtr, Int32)</source>
          <target state="new">GetObjectsForNativeVariants(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to the first element of an array of COM VARIANTs.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to the first element of an array of COM VARIANTs.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The count of COM VARIANTs in &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The count of COM VARIANTs in &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object array that corresponds to &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object array that corresponds to &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;cVars&lt;/em&gt; is a negative number.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;cVars&lt;/em&gt; is a negative number.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>GetObjectsForNativeVariants&lt;T&gt;(IntPtr, Int32)</source>
          <target state="new">GetObjectsForNativeVariants&lt;T&gt;(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to the first element of an array of COM VARIANTs.</source>
          <target state="new">\n&lt;p&gt;A pointer to the first element of an array of COM VARIANTs.</target>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The count of COM VARIANTs in &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The count of COM VARIANTs in &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the array to return.</source>
          <target state="new">\n&lt;p&gt;The type of the array to return.</target>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of &lt;em&gt;T&lt;/em&gt; objects that corresponds to &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;An array of &lt;em&gt;T&lt;/em&gt; objects that corresponds to &lt;em&gt;aSrcNativeVariant&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;cVars&lt;/em&gt; is a negative number.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;cVars&lt;/em&gt; is a negative number.</target>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>GetStartComSlot(Type)</source>
          <target state="new">GetStartComSlot(Type)</target>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A type that represents an interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A type that represents an interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; is not visible from COM.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;t&lt;/em&gt; is not visible from COM.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>GetTypeFromCLSID(Guid)</source>
          <target state="new">GetTypeFromCLSID(Guid)</target>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The CLSID of the type to return.</source>
          <target state="new">\n&lt;p&gt;The CLSID of the type to return.</target>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;System.__ComObject&lt;/strong&gt; regardless of whether the CLSID is valid.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;System.__ComObject&lt;/strong&gt; regardless of whether the CLSID is valid.</target>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>GetTypeInfoName(ITypeInfo)</source>
          <target state="new">GetTypeInfoName(ITypeInfo)</target>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that represents an &lt;strong&gt;ITypeInfo&lt;/strong&gt; pointer.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An object that represents an &lt;strong&gt;ITypeInfo&lt;/strong&gt; pointer.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the type that the &lt;em&gt;typeInfo&lt;/em&gt; parameter points to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The name of the type that the &lt;em&gt;typeInfo&lt;/em&gt; parameter points to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;typeInfo&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;typeInfo&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>GetUniqueObjectForIUnknown(IntPtr)</source>
          <target state="new">GetUniqueObjectForIUnknown(IntPtr)</target>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed pointer to an &lt;strong&gt;IUnknown&lt;/strong&gt; interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed pointer to an &lt;strong&gt;IUnknown&lt;/strong&gt; interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A unique RCW for the specified &lt;strong&gt;IUnknown&lt;/strong&gt; interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A unique RCW for the specified &lt;strong&gt;IUnknown&lt;/strong&gt; interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>IsComObject(Object)</source>
          <target state="new">IsComObject(Object)</target>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to check.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object to check.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the &lt;em&gt;o&lt;/em&gt; parameter is a COM type; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the &lt;em&gt;o&lt;/em&gt; parameter is a COM type; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>OffsetOf(Type, String)</source>
          <target state="new">OffsetOf(Type, String)</target>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The field within the &lt;em&gt;t&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The field within the &lt;em&gt;t&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The offset, in bytes, for the &lt;em&gt;fieldName&lt;/em&gt; parameter within the specified class that is declared by platform invoke.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The offset, in bytes, for the &lt;em&gt;fieldName&lt;/em&gt; parameter within the specified class that is declared by platform invoke.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class cannot be exported as a structure or the field is nonpublic.</source>
          <target state="new">\n&lt;p&gt;The class cannot be exported as a structure or the field is nonpublic.</target>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Beginning with the .NET Framework version 2.0, the field may be private.&lt;/p&gt;\n</source>
          <target state="new">Beginning with the .NET Framework version 2.0, the field may be private.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>OffsetOf&lt;T&gt;(String)</source>
          <target state="new">OffsetOf&lt;T&gt;(String)</target>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the field in the &lt;em&gt;T&lt;/em&gt; type.</source>
          <target state="new">\n&lt;p&gt;The name of the field in the &lt;em&gt;T&lt;/em&gt; type.</target>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The offset, in bytes, for the &lt;em&gt;fieldName&lt;/em&gt; parameter within the specified class that is declared by platform invoke.</source>
          <target state="new">\n&lt;p&gt;The offset, in bytes, for the &lt;em&gt;fieldName&lt;/em&gt; parameter within the specified class that is declared by platform invoke.</target>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>PtrToStringAnsi(IntPtr)</source>
          <target state="new">PtrToStringAnsi(IntPtr)</target>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string that holds a copy of the unmanaged ANSI string.</source>
          <target state="new">\n&lt;p&gt;A managed string that holds a copy of the unmanaged ANSI string.</target>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, the method returns a null string.&lt;/p&gt;\n</source>
          <target state="new">If &lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, the method returns a null string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>PtrToStringAnsi(IntPtr, Int32)</source>
          <target state="new">PtrToStringAnsi(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The byte count of the input string to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The byte count of the input string to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string that holds a copy of the native ANSI string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string that holds a copy of the native ANSI string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;len&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;len&lt;/em&gt; is less than zero.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>PtrToStringBSTR(IntPtr)</source>
          <target state="new">PtrToStringBSTR(IntPtr)</target>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string that holds a copy of the unmanaged string.</source>
          <target state="new">\n&lt;p&gt;A managed string that holds a copy of the unmanaged string.</target>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>PtrToStringUni(IntPtr)</source>
          <target state="new">PtrToStringUni(IntPtr)</target>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string that holds a copy of the unmanaged string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string that holds a copy of the unmanaged string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>PtrToStringUni(IntPtr, Int32)</source>
          <target state="new">PtrToStringUni(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the first character of the unmanaged string.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of Unicode characters to copy.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The number of Unicode characters to copy.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string that holds a copy of the unmanaged string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string that holds a copy of the unmanaged string if the value of the &lt;em&gt;ptr&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;; otherwise, this method returns &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>PtrToStringUTF8(IntPtr)</source>
          <target state="new">PtrToStringUTF8(IntPtr)</target>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>PtrToStringUTF8(IntPtr, Int32)</source>
          <target state="new">PtrToStringUTF8(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>PtrToStructure(IntPtr, Object)</source>
          <target state="new">PtrToStructure(IntPtr, Object)</target>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to which the data is to be copied.</source>
          <target state="new">\n&lt;p&gt;The object to which the data is to be copied.</target>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>This must be an instance of a formatted class.&lt;/p&gt;\n</source>
          <target state="new">This must be an instance of a formatted class.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Structure layout is not sequential or explicit.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;Structure is a boxed value type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Structure layout is not sequential or explicit.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;Structure is a boxed value type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>PtrToStructure(IntPtr, Type)</source>
          <target state="new">PtrToStructure(IntPtr, Type)</target>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to be created.</source>
          <target state="new">\n&lt;p&gt;The type of object to be created.</target>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This object must represent a formatted class or a structure.&lt;/p&gt;\n</source>
          <target state="new">This object must represent a formatted class or a structure.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed object containing the data pointed to by the &lt;em&gt;ptr&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed object containing the data pointed to by the &lt;em&gt;ptr&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;structureType&lt;/em&gt; parameter layout is not sequential or explicit.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;structureType&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;structureType&lt;/em&gt; parameter layout is not sequential or explicit.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The &lt;em&gt;structureType&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;structureType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;structureType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class specified by &lt;em&gt;structureType&lt;/em&gt; does not have an accessible default constructor.</source>
          <target state="new">\n&lt;p&gt;The class specified by &lt;em&gt;structureType&lt;/em&gt; does not have an accessible default constructor.</target>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>PtrToStructure&lt;T&gt;(IntPtr)</source>
          <target state="new">PtrToStructure&lt;T&gt;(IntPtr)</target>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.</target>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the object to which the data is to be copied.</source>
          <target state="new">\n&lt;p&gt;The type of the object to which the data is to be copied.</target>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>This must be a formatted class or a structure.</source>
          <target state="new">This must be a formatted class or a structure.</target>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed object that contains the data that the &lt;em&gt;ptr&lt;/em&gt; parameter points to.</source>
          <target state="new">\n&lt;p&gt;A managed object that contains the data that the &lt;em&gt;ptr&lt;/em&gt; parameter points to.</target>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The layout of &lt;em&gt;T&lt;/em&gt; is not sequential or explicit.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The layout of &lt;em&gt;T&lt;/em&gt; is not sequential or explicit.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class specified by &lt;em&gt;T&lt;/em&gt; does not have an accessible default constructor.</source>
          <target state="new">\n&lt;p&gt;The class specified by &lt;em&gt;T&lt;/em&gt; does not have an accessible default constructor.</target>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>PtrToStructure&lt;T&gt;(IntPtr, T)</source>
          <target state="new">PtrToStructure&lt;T&gt;(IntPtr, T)</target>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory.</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory.</target>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to which the data is to be copied.</source>
          <target state="new">\n&lt;p&gt;The object to which the data is to be copied.</target>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of &lt;em&gt;structure&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The type of &lt;em&gt;structure&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>This must be a formatted class.</source>
          <target state="new">This must be a formatted class.</target>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Structure layout is not sequential or explicit.</source>
          <target state="new">\n&lt;p&gt;Structure layout is not sequential or explicit.</target>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>QueryInterface(IntPtr, ref Guid, out IntPtr)</source>
          <target state="new">QueryInterface(IntPtr, ref Guid, out IntPtr)</target>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface to be queried.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface to be queried.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface identifier (IID) of the requested interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface identifier (IID) of the requested interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;When this method returns, contains a reference to the returned interface.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;When this method returns, contains a reference to the returned interface.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An HRESULT that indicates the success or failure of the call.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An HRESULT that indicates the success or failure of the call.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>ReadByte(IntPtr)</source>
          <target state="new">ReadByte(IntPtr)</target>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The byte read from unmanaged memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The byte read from unmanaged memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>ReadByte(IntPtr, Int32)</source>
          <target state="new">ReadByte(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The byte read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The byte read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>ReadByte(Object, Int32)</source>
          <target state="new">ReadByte(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The byte read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The byte read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>ReadInt16(IntPtr)</source>
          <target state="new">ReadInt16(IntPtr)</target>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>ReadInt16(IntPtr, Int32)</source>
          <target state="new">ReadInt16(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>ReadInt16(Object, Int32)</source>
          <target state="new">ReadInt16(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 16-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>ReadInt32(IntPtr)</source>
          <target state="new">ReadInt32(IntPtr)</target>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>ReadInt32(IntPtr, Int32)</source>
          <target state="new">ReadInt32(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>ReadInt32(Object, Int32)</source>
          <target state="new">ReadInt32(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 32-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>ReadInt64(IntPtr)</source>
          <target state="new">ReadInt64(IntPtr)</target>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>ReadInt64(IntPtr, Int32)</source>
          <target state="new">ReadInt64(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>ReadInt64(Object, Int32)</source>
          <target state="new">ReadInt64(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The 64-bit signed integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>ReadIntPtr(IntPtr)</source>
          <target state="new">ReadIntPtr(IntPtr)</target>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The integer read from unmanaged memory.</source>
          <target state="new">\n&lt;p&gt;The integer read from unmanaged memory.</target>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.&lt;/p&gt;\n</source>
          <target state="new">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>ReadIntPtr(IntPtr, Int32)</source>
          <target state="new">ReadIntPtr(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory from which to read.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>ReadIntPtr(Object, Int32)</source>
          <target state="new">ReadIntPtr(Object, Int32)</target>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the source object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before reading.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The integer read from unmanaged memory at the given offset.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>ReAllocCoTaskMem(IntPtr, Int32)</source>
          <target state="new">ReAllocCoTaskMem(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new size of the allocated block.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new size of the allocated block.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>ReAllocHGlobal(IntPtr, IntPtr)</source>
          <target state="new">ReAllocHGlobal(IntPtr, IntPtr)</target>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory to satisfy the request.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Release(IntPtr)</source>
          <target state="new">Release(IntPtr)</target>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The interface to release.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The interface to release.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value of the reference count on the interface specified by the &lt;em&gt;pUnk&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The new value of the reference count on the interface specified by the &lt;em&gt;pUnk&lt;/em&gt; parameter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>ReleaseComObject(Object)</source>
          <target state="new">ReleaseComObject(Object)</target>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The COM object to release.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The COM object to release.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value of the reference count of the RCW associated with &lt;em&gt;o&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The new value of the reference count of the RCW associated with &lt;em&gt;o&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.&lt;/p&gt;\n</source>
          <target state="new">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is not a valid COM object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is not a valid COM object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;o&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>SizeOf(Object)</source>
          <target state="new">SizeOf(Object)</target>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object whose size is to be returned.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The object whose size is to be returned.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size of the specified object in unmanaged code.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The size of the specified object in unmanaged code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;structure&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;structure&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>SizeOf(Type)</source>
          <target state="new">SizeOf(Type)</target>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type whose size is to be returned.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The type whose size is to be returned.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size of the specified type in unmanaged code.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The size of the specified type in unmanaged code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is a generic type.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;t&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>SizeOf&lt;T&gt;()</source>
          <target state="new">SizeOf&lt;T&gt;()</target>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type whose size is to be returned.</source>
          <target state="new">\n&lt;p&gt;The type whose size is to be returned.</target>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size, in bytes, of the type that is specified by the &lt;em&gt;T&lt;/em&gt; generic type parameter.</source>
          <target state="new">\n&lt;p&gt;The size, in bytes, of the type that is specified by the &lt;em&gt;T&lt;/em&gt; generic type parameter.</target>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>SizeOf&lt;T&gt;(T)</source>
          <target state="new">SizeOf&lt;T&gt;(T)</target>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object whose size is to be returned.</source>
          <target state="new">\n&lt;p&gt;The object whose size is to be returned.</target>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the &lt;em&gt;structure&lt;/em&gt; parameter.</source>
          <target state="new">\n&lt;p&gt;The type of the &lt;em&gt;structure&lt;/em&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size, in bytes, of the specified object in unmanaged code.</source>
          <target state="new">\n&lt;p&gt;The size, in bytes, of the specified object in unmanaged code.</target>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;structure&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;structure&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>StringToBSTR(String)</source>
          <target state="new">StringToBSTR(String)</target>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The managed string to be copied.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The managed string to be copied.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An unmanaged pointer to the &lt;strong&gt;BSTR&lt;/strong&gt;, or 0 if &lt;em&gt;s&lt;/em&gt; is null.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An unmanaged pointer to the &lt;strong&gt;BSTR&lt;/strong&gt;, or 0 if &lt;em&gt;s&lt;/em&gt; is null.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length for &lt;em&gt;s&lt;/em&gt; is out of range.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The length for &lt;em&gt;s&lt;/em&gt; is out of range.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>StringToCoTaskMemAnsi(String)</source>
          <target state="new">StringToCoTaskMemAnsi(String)</target>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An integer representing a pointer to the block of memory allocated for the string, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An integer representing a pointer to the block of memory allocated for the string, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>StringToCoTaskMemUni(String)</source>
          <target state="new">StringToCoTaskMemUni(String)</target>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An integer representing a pointer to the block of memory allocated for the string, or 0 if s is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An integer representing a pointer to the block of memory allocated for the string, or 0 if s is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>StringToCoTaskMemUTF8(String)</source>
          <target state="new">StringToCoTaskMemUTF8(String)</target>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>StringToHGlobalAnsi(String)</source>
          <target state="new">StringToHGlobalAnsi(String)</target>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address, in unmanaged memory, to where &lt;em&gt;s&lt;/em&gt; was copied, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address, in unmanaged memory, to where &lt;em&gt;s&lt;/em&gt; was copied, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;There is insufficient memory available.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>StringToHGlobalUni(String)</source>
          <target state="new">StringToHGlobalUni(String)</target>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A managed string to be copied.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address, in unmanaged memory, to where the &lt;em&gt;s&lt;/em&gt; was copied, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address, in unmanaged memory, to where the &lt;em&gt;s&lt;/em&gt; was copied, or 0 if &lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method could not allocate enough native heap memory.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The method could not allocate enough native heap memory.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;s&lt;/em&gt; parameter exceeds the maximum length allowed by the operating system.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>StructureToPtr(Object, IntPtr, Boolean)</source>
          <target state="new">StructureToPtr(Object, IntPtr, Boolean)</target>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed object that holds the data to be marshaled.</source>
          <target state="new">\n&lt;p&gt;A managed object that holds the data to be marshaled.</target>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This object must be a structure or an instance of a formatted class.&lt;/p&gt;\n</source>
          <target state="new">This object must be a structure or an instance of a formatted class.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory, which must be allocated before this method is called.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory, which must be allocated before this method is called.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a reference type that is not a formatted class.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a generic type.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a reference type that is not a formatted class.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a generic type.</target>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>StructureToPtr&lt;T&gt;(T, IntPtr, Boolean)</source>
          <target state="new">StructureToPtr&lt;T&gt;(T, IntPtr, Boolean)</target>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A managed object that holds the data to be marshaled.</source>
          <target state="new">\n&lt;p&gt;A managed object that holds the data to be marshaled.</target>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The object must be a structure or an instance of a formatted class.</source>
          <target state="new">The object must be a structure or an instance of a formatted class.</target>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A pointer to an unmanaged block of memory, which must be allocated before this method is called.</source>
          <target state="new">\n&lt;p&gt;A pointer to an unmanaged block of memory, which must be allocated before this method is called.</target>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the managed object.</source>
          <target state="new">\n&lt;p&gt;The type of the managed object.</target>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a reference type that is not a formatted class.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;structure&lt;/em&gt; is a reference type that is not a formatted class.</target>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>ThrowExceptionForHR(Int32)</source>
          <target state="new">ThrowExceptionForHR(Int32)</target>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT corresponding to the desired exception.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT corresponding to the desired exception.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>ThrowExceptionForHR(Int32, IntPtr)</source>
          <target state="new">ThrowExceptionForHR(Int32, IntPtr)</target>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The HRESULT corresponding to the desired exception.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The HRESULT corresponding to the desired exception.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>UnsafeAddrOfPinnedArrayElement(Array, Int32)</source>
          <target state="new">UnsafeAddrOfPinnedArrayElement(Array, Int32)</target>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array that contains the desired element.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The array that contains the desired element.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index in the &lt;em&gt;arr&lt;/em&gt; parameter of the desired element.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The index in the &lt;em&gt;arr&lt;/em&gt; parameter of the desired element.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of &lt;em&gt;index&lt;/em&gt; inside &lt;em&gt;arr&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of &lt;em&gt;index&lt;/em&gt; inside &lt;em&gt;arr&lt;/em&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[], Int32)</source>
          <target state="new">UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[], Int32)</target>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array that contains the desired element.</source>
          <target state="new">\n&lt;p&gt;The array that contains the desired element.</target>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the desired element in the &lt;em&gt;arr&lt;/em&gt; array.</source>
          <target state="new">\n&lt;p&gt;The index of the desired element in the &lt;em&gt;arr&lt;/em&gt; array.</target>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the array.</source>
          <target state="new">\n&lt;p&gt;The type of the array.</target>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of &lt;em&gt;index&lt;/em&gt; in &lt;em&gt;arr&lt;/em&gt;.</source>
          <target state="new">\n&lt;p&gt;The address of &lt;em&gt;index&lt;/em&gt; in &lt;em&gt;arr&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>WriteByte(IntPtr, Byte)</source>
          <target state="new">WriteByte(IntPtr, Byte)</target>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>WriteByte(IntPtr, Int32, Byte)</source>
          <target state="new">WriteByte(IntPtr, Int32, Byte)</target>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>WriteByte(Object, Int32, Byte)</source>
          <target state="new">WriteByte(Object, Int32, Byte)</target>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>WriteInt16(IntPtr, Char)</source>
          <target state="new">WriteInt16(IntPtr, Char)</target>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>WriteInt16(IntPtr, Int16)</source>
          <target state="new">WriteInt16(IntPtr, Int16)</target>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>WriteInt16(IntPtr, Int32, Char)</source>
          <target state="new">WriteInt16(IntPtr, Int32, Char)</target>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in the native heap to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in the native heap to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>WriteInt16(IntPtr, Int32, Int16)</source>
          <target state="new">WriteInt16(IntPtr, Int32, Int16)</target>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>WriteInt16(Object, Int32, Char)</source>
          <target state="new">WriteInt16(Object, Int32, Char)</target>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>WriteInt16(Object, Int32, Int16)</source>
          <target state="new">WriteInt16(Object, Int32, Int16)</target>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.</target>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>WriteInt32(IntPtr, Int32)</source>
          <target state="new">WriteInt32(IntPtr, Int32)</target>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>WriteInt32(IntPtr, Int32, Int32)</source>
          <target state="new">WriteInt32(IntPtr, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>WriteInt32(Object, Int32, Int32)</source>
          <target state="new">WriteInt32(Object, Int32, Int32)</target>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>WriteInt64(IntPtr, Int32, Int64)</source>
          <target state="new">WriteInt64(IntPtr, Int32, Int64)</target>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>WriteInt64(IntPtr, Int64)</source>
          <target state="new">WriteInt64(IntPtr, Int64)</target>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>WriteInt64(Object, Int32, Int64)</source>
          <target state="new">WriteInt64(Object, Int32, Int64)</target>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>WriteIntPtr(IntPtr, Int32, IntPtr)</source>
          <target state="new">WriteIntPtr(IntPtr, Int32, IntPtr)</target>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>WriteIntPtr(IntPtr, IntPtr)</source>
          <target state="new">WriteIntPtr(IntPtr, IntPtr)</target>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address in unmanaged memory to write to.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is not a recognized format.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;ptr&lt;/em&gt; is invalid.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>WriteIntPtr(Object, Int32, IntPtr)</source>
          <target state="new">WriteIntPtr(Object, Int32, IntPtr)</target>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The base address in unmanaged memory of the target object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An additional byte offset, which is added to the &lt;em&gt;ptr&lt;/em&gt; parameter before writing.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to write.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The value to write.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;Base address (&lt;em&gt;ptr&lt;/em&gt;) plus offset byte (&lt;em&gt;ofs&lt;/em&gt;) produces a null or invalid address.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>ZeroFreeBSTR(IntPtr)</source>
          <target state="new">ZeroFreeBSTR(IntPtr)</target>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the &lt;strong&gt;BSTR&lt;/strong&gt; to free.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the &lt;strong&gt;BSTR&lt;/strong&gt; to free.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>ZeroFreeCoTaskMemAnsi(IntPtr)</source>
          <target state="new">ZeroFreeCoTaskMemAnsi(IntPtr)</target>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>ZeroFreeCoTaskMemUnicode(IntPtr)</source>
          <target state="new">ZeroFreeCoTaskMemUnicode(IntPtr)</target>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>ZeroFreeGlobalAllocAnsi(IntPtr)</source>
          <target state="new">ZeroFreeGlobalAllocAnsi(IntPtr)</target>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>ZeroFreeGlobalAllocUnicode(IntPtr)</source>
          <target state="new">ZeroFreeGlobalAllocUnicode(IntPtr)</target>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The address of the unmanaged string to free.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>ZeroFreeMemoryUTF8(IntPtr)</source>
          <target state="new">ZeroFreeMemoryUTF8(IntPtr)</target>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>System.Runtime.InteropServices</source>
          <target state="new">System.Runtime.InteropServices</target>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>IntPtr</source>
          <target state="new">IntPtr</target>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Byte[]</source>
          <target state="new">Byte[]</target>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>Char[]</source>
          <target state="new">Char[]</target>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="new">Char</target>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="new">Char</target>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>Double[]</source>
          <target state="new">Double[]</target>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="new">Double</target>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>Int16[]</source>
          <target state="new">Int16[]</target>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="new">Int16</target>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="new">Int16</target>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Int32[]</source>
          <target state="new">Int32[]</target>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>Int64[]</source>
          <target state="new">Int64[]</target>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="new">Int64</target>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="new">Int64</target>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>IntPtr[]</source>
          <target state="new">IntPtr[]</target>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>IntPtr</source>
          <target state="new">IntPtr</target>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>IntPtr</source>
          <target state="new">IntPtr</target>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>Single[]</source>
          <target state="new">Single[]</target>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>Single</source>
          <target state="new">Single</target>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Single</source>
          <target state="new">Single</target>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>TWrapper</source>
          <target state="new">TWrapper</target>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>TWrapper</source>
          <target state="new">TWrapper</target>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>CustomQueryInterfaceMode</source>
          <target state="new">CustomQueryInterfaceMode</target>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Delegate</source>
          <target state="new">Delegate</target>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>TDelegate</source>
          <target state="new">TDelegate</target>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>TDelegate</source>
          <target state="new">TDelegate</target>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="new">Exception</target>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="new">Object[]</target>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>T[]</source>
          <target state="new">T[]</target>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>Guid</source>
          <target state="new">Guid</target>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>ITypeInfo</source>
          <target state="new">ITypeInfo</target>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>System.Runtime.InteropServices.ComTypes</source>
          <target state="new">System.Runtime.InteropServices.ComTypes</target>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="new">Byte</target>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Int16</source>
          <target state="new">Int16</target>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="new">Int64</target>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new">Array</target>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="new">Char</target>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>OutOfMemoryException</source>
          <target state="new">OutOfMemoryException</target>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>ArgumentOutOfRangeException</source>
          <target state="new">ArgumentOutOfRangeException</target>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>ArgumentNullException</source>
          <target state="new">ArgumentNullException</target>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>ArgumentException</source>
          <target state="new">ArgumentException</target>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>InvalidCastException</source>
          <target state="new">InvalidCastException</target>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>InvalidOleVariantTypeException</source>
          <target state="new">InvalidOleVariantTypeException</target>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>NotSupportedException</source>
          <target state="new">NotSupportedException</target>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>MissingMethodException</source>
          <target state="new">MissingMethodException</target>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>NullReferenceException</source>
          <target state="new">NullReferenceException</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>