{"nodes":[{"pos":[547,556],"content":"FORMATETC","needQuote":true,"nodes":[{"content":"FORMATETC","pos":[0,9]}]},{"pos":[2201,2209],"content":"cfFormat","needQuote":true,"nodes":[{"content":"cfFormat","pos":[0,8]}]},{"pos":[3239,3247],"content":"dwAspect","needQuote":true,"nodes":[{"content":"dwAspect","pos":[0,8]}]},{"pos":[4479,4485],"content":"lindex","needQuote":true,"nodes":[{"content":"lindex","pos":[0,6]}]},{"pos":[5517,5520],"content":"ptd","needQuote":true,"nodes":[{"content":"ptd","pos":[0,3]}]},{"pos":[6616,6621],"content":"tymed","needQuote":true,"nodes":[{"content":"tymed","pos":[0,5]}]},{"pos":[7681,7720],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[7984,7998],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8123,8129],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8178,8179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8229,8235],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8295,8296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8382,8388],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8437,8438],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8488,8494],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8554,8555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8758,8771],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8878,8889],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8943,8944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8971,8972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9048,9059],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9113,9114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9141,9142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9331,9341],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9442,9450],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9501,9502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9529,9530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9603,9611],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9662,9663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9690,9691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9894,9916],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10064,10070],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10137,10138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10188,10194],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10255,10256]},{"pos":[10311,10317],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10377,10378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10475,10481],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10548,10549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10599,10605],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10666,10667]},{"pos":[10722,10728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10788,10789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11034,11065],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11231,11246],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11322,11323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11373,11379],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11440,11441]},{"pos":[11496,11502],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11562,11563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11669,11684],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11760,11761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11811,11817],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11878,11879]},{"pos":[11934,11940],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12000,12001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12227,12236],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12329,12336],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12404,12405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12432,12433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12502,12509],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12577,12578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12605,12606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12762,12771],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[12925,12931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13052,13058],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13188,13193],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[13403,13411],"content":"DVASPECT","needQuote":true,"nodes":[{"content":"DVASPECT","pos":[0,8]}]},{"pos":[13627,13632],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13774,13780],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[13990,13995],"content":"TYMED","needQuote":true,"nodes":[{"content":"TYMED","pos":[0,5]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC\n  commentId: T:System.Runtime.InteropServices.ComTypes.FORMATETC\n  id: FORMATETC\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat\n  - System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\n  - System.Runtime.InteropServices.ComTypes.FORMATETC.lindex\n  - System.Runtime.InteropServices.ComTypes.FORMATETC.ptd\n  - System.Runtime.InteropServices.ComTypes.FORMATETC.tymed\n  langs:\n  - csharp\n  - vb\n  name: FORMATETC\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FORMATETC\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1004\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Represents a generalized Clipboard format. </p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct FORMATETC\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure FORMATETC\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: FORMATETC\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat\n  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat\n  id: cfFormat\n  parent: System.Runtime.InteropServices.ComTypes.FORMATETC\n  langs:\n  - csharp\n  - vb\n  name: cfFormat\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: cfFormat\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1008\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies the particular clipboard format of interest.</p>\\n\"\n  syntax:\n    content: public short cfFormat\n    content.vb: Public cfFormat As Short\n    return:\n      type: System.Int16\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FORMATETC.cfFormat\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\n  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\n  id: dwAspect\n  parent: System.Runtime.InteropServices.ComTypes.FORMATETC\n  langs:\n  - csharp\n  - vb\n  name: dwAspect\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: dwAspect\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1009\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies one of the <xref href=\\\"System.Runtime.InteropServices.ComTypes.DVASPECT\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration constants that indicates how much detail should be contained in the rendering.</p>\\n\"\n  syntax:\n    content: public DVASPECT dwAspect\n    content.vb: Public dwAspect As DVASPECT\n    return:\n      type: System.Runtime.InteropServices.ComTypes.DVASPECT\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FORMATETC.dwAspect\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.lindex\n  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex\n  id: lindex\n  parent: System.Runtime.InteropServices.ComTypes.FORMATETC\n  langs:\n  - csharp\n  - vb\n  name: lindex\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.lindex\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: lindex\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1010\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies part of the aspect when the data must be split across page boundaries. </p>\\n\"\n  syntax:\n    content: public int lindex\n    content.vb: Public lindex As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FORMATETC.lindex\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.ptd\n  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd\n  id: ptd\n  parent: System.Runtime.InteropServices.ComTypes.FORMATETC\n  langs:\n  - csharp\n  - vb\n  name: ptd\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.ptd\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ptd\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1011\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies a pointer to a <strong>DVTARGETDEVICE</strong> structure containing information about the target device that the data is being composed for. </p>\\n\"\n  syntax:\n    content: public IntPtr ptd\n    content.vb: Public ptd As IntPtr\n    return:\n      type: System.IntPtr\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FORMATETC.ptd\n- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.tymed\n  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed\n  id: tymed\n  parent: System.Runtime.InteropServices.ComTypes.FORMATETC\n  langs:\n  - csharp\n  - vb\n  name: tymed\n  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.tymed\n  type: Field\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: tymed\n    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs\n    startLine: 1012\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Specifies one of the <xref href=\\\"System.Runtime.InteropServices.ComTypes.TYMED\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration constants, which indicates the type of storage medium used to transfer the object's data. </p>\\n\"\n  syntax:\n    content: public TYMED tymed\n    content.vb: Public tymed As TYMED\n    return:\n      type: System.Runtime.InteropServices.ComTypes.TYMED\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FORMATETC.tymed\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.Equals(System.Object)\n  nameWithType: ValueType.Equals(Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.GetHashCode\n  nameWithType: ValueType.GetHashCode()\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.ValueType.ToString\n  nameWithType: ValueType.ToString()\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  commentId: T:System.ValueType\n  nameWithType: ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  commentId: T:System.Int16\n  nameWithType: Int16\n- uid: System.Runtime.InteropServices.ComTypes.DVASPECT\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: DVASPECT\n  fullName: System.Runtime.InteropServices.ComTypes.DVASPECT\n  commentId: T:System.Runtime.InteropServices.ComTypes.DVASPECT\n  nameWithType: DVASPECT\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  commentId: T:System.IntPtr\n  nameWithType: IntPtr\n- uid: System.Runtime.InteropServices.ComTypes.TYMED\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: TYMED\n  fullName: System.Runtime.InteropServices.ComTypes.TYMED\n  commentId: T:System.Runtime.InteropServices.ComTypes.TYMED\n  nameWithType: TYMED\n"}