{"nodes":[{"pos":[7060,7066],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[10783,10830],"content":"Socket(AddressFamily, SocketType, ProtocolType)","needQuote":true,"nodes":[{"content":"Socket(AddressFamily, SocketType, ProtocolType)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The combination of &lt;em&gt;addressFamily&lt;/em&gt;, &lt;em&gt;socketType&lt;/em&gt;, and &lt;em&gt;protocolType&lt;/em&gt; results in an invalid socket.","pos":[12530,12654],"source":"\\n<p>The combination of <em>addressFamily</em>, <em>socketType</em>, and <em>protocolType</em> results in an invalid socket."},{"content":"&lt;/p&gt;\\n","pos":[12655,12661],"source":" </p>\\n"},{"pos":[13531,13563],"content":"Socket(SocketType, ProtocolType)","needQuote":true,"nodes":[{"content":"Socket(SocketType, ProtocolType)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The combination of  &lt;em&gt;socketType&lt;/em&gt; and &lt;em&gt;protocolType&lt;/em&gt; results in an invalid socket.","pos":[14936,15036],"source":"\\n<p>The combination of  <em>socketType</em> and <em>protocolType</em> results in an invalid socket."},{"content":"&lt;/p&gt;\\n","pos":[15037,15043],"source":" </p>\\n"},{"pos":[15352,15365],"content":"AddressFamily","needQuote":true,"nodes":[{"content":"AddressFamily","pos":[0,13]}]},{"pos":[16659,16668],"content":"Available","needQuote":true,"nodes":[{"content":"Available","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The number of bytes of data received from the network and available to be read.&lt;/p&gt;\\n","pos":[17360,17450],"source":"\\n<p>The number of bytes of data received from the network and available to be read.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[17581,17641],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[17642,17687]},{"content":"&lt;/p&gt;\\n","pos":[17688,17694],"source":" </p>\\n"},{"pos":[18597,18605],"content":"Blocking","needQuote":true,"nodes":[{"content":"Blocking","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[19697,19757],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[19758,19803]},{"content":"&lt;/p&gt;\\n","pos":[19804,19810],"source":" </p>\\n"},{"pos":[20326,20335],"content":"Connected","needQuote":true,"nodes":[{"content":"Connected","pos":[0,9]}]},{"pos":[21869,21881],"content":"DontFragment","needQuote":true,"nodes":[{"content":"DontFragment","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[23512,23572],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[23573,23618]},{"content":"&lt;/p&gt;\\n","pos":[23619,23625],"source":" </p>\\n"},{"pos":[24142,24150],"content":"DualMode","needQuote":true,"nodes":[{"content":"DualMode","pos":[0,8]}]},{"pos":[25536,25551],"content":"EnableBroadcast","needQuote":true,"nodes":[{"content":"EnableBroadcast","pos":[0,15]}]},{"content":"\\n&lt;p&gt;This option is valid for a datagram socket only.","pos":[26779,26832],"source":"\\n<p>This option is valid for a datagram socket only."},{"content":"&lt;/p&gt;\\n","pos":[26833,26839],"source":" </p>\\n"},{"pos":[27392,27411],"content":"ExclusiveAddressUse","needQuote":true,"nodes":[{"content":"ExclusiveAddressUse","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[28788,28854],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"pos":[29724,29731],"content":"IsBound","needQuote":true,"nodes":[{"content":"IsBound","pos":[0,7]}]},{"pos":[30973,30984],"content":"LingerState","needQuote":true,"nodes":[{"content":"LingerState","pos":[0,11]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[32110,32176],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"pos":[32707,32720],"content":"LocalEndPoint","needQuote":true,"nodes":[{"content":"LocalEndPoint","pos":[0,13]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[33722,33782],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[33783,33828]},{"content":"&lt;/p&gt;\\n","pos":[33829,33835],"source":" </p>\\n"},{"pos":[34665,34682],"content":"MulticastLoopback","needQuote":true,"nodes":[{"content":"MulticastLoopback","pos":[0,17]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[35755,35821],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"pos":[36340,36347],"content":"NoDelay","needQuote":true,"nodes":[{"content":"NoDelay","pos":[0,7]}]},{"pos":[38263,38277],"content":"OSSupportsIPv4","needQuote":true,"nodes":[{"content":"OSSupportsIPv4","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operating system and network adaptors support the IPv4 protocol; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[39028,39169],"source":"\\n<p>\\n<strong>true</strong> if the operating system and network adaptors support the IPv4 protocol; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[39626,39640],"content":"OSSupportsIPv6","needQuote":true,"nodes":[{"content":"OSSupportsIPv6","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operating system and network adaptors support the IPv6 protocol; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[40391,40532],"source":"\\n<p>\\n<strong>true</strong> if the operating system and network adaptors support the IPv6 protocol; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[40983,40995],"content":"ProtocolType","needQuote":true,"nodes":[{"content":"ProtocolType","pos":[0,12]}]},{"pos":[42199,42216],"content":"ReceiveBufferSize","needQuote":true,"nodes":[{"content":"ReceiveBufferSize","pos":[0,17]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[43299,43365],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"content":"\\n&lt;p&gt;The value specified for a set operation is less than 0.&lt;/p&gt;\\n","pos":[43709,43775],"source":"\\n<p>The value specified for a set operation is less than 0.</p>\\n"},{"pos":[44088,44102],"content":"ReceiveTimeout","needQuote":true,"nodes":[{"content":"ReceiveTimeout","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The time-out value, in milliseconds.","pos":[44927,44968],"source":"\\n<p>The time-out value, in milliseconds."},{"content":"The default value is 0, which indicates an infinite time-out period.","pos":[44969,45037]},{"content":"Specifying -1 also indicates an infinite time-out period.&lt;/p&gt;\\n","pos":[45038,45101],"source":" Specifying -1 also indicates an infinite time-out period.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[45232,45298],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"content":"\\n&lt;p&gt;The value specified for a set operation is less than -1.&lt;/p&gt;\\n","pos":[45642,45709],"source":"\\n<p>The value specified for a set operation is less than -1.</p>\\n"},{"pos":[46019,46033],"content":"RemoteEndPoint","needQuote":true,"nodes":[{"content":"RemoteEndPoint","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[47035,47095],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[47096,47141]},{"content":"&lt;/p&gt;\\n","pos":[47142,47148],"source":" </p>\\n"},{"pos":[47998,48012],"content":"SendBufferSize","needQuote":true,"nodes":[{"content":"SendBufferSize","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[49077,49143],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"content":"\\n&lt;p&gt;The value specified for a set operation is less than 0.&lt;/p&gt;\\n","pos":[49487,49553],"source":"\\n<p>The value specified for a set operation is less than 0.</p>\\n"},{"pos":[49854,49865],"content":"SendTimeout","needQuote":true,"nodes":[{"content":"SendTimeout","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The time-out value, in milliseconds.","pos":[50675,50716],"source":"\\n<p>The time-out value, in milliseconds."},{"content":"If you set the property with a value between 1 and 499, the value will be changed to 500.","pos":[50717,50806]},{"content":"The default value is 0, which indicates an infinite time-out period.","pos":[50807,50875]},{"content":"Specifying -1 also indicates an infinite time-out period.&lt;/p&gt;\\n","pos":[50876,50939],"source":" Specifying -1 also indicates an infinite time-out period.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.&lt;/p&gt;\\n","pos":[51070,51136],"source":"\\n<p>An error occurred when attempting to access the socket.</p>\\n"},{"content":"\\n&lt;p&gt;The value specified for a set operation is less than -1.&lt;/p&gt;\\n","pos":[51480,51547],"source":"\\n<p>The value specified for a set operation is less than -1.</p>\\n"},{"pos":[51842,51852],"content":"SocketType","needQuote":true,"nodes":[{"content":"SocketType","pos":[0,10]}]},{"pos":[53085,53088],"content":"Ttl","needQuote":true,"nodes":[{"content":"Ttl","pos":[0,3]}]},{"content":"\\n&lt;p&gt;The TTL value.&lt;/p&gt;\\n","pos":[53857,53882],"source":"\\n<p>The TTL value.</p>\\n"},{"content":"\\n&lt;p&gt;The TTL value can't be set to a negative number.&lt;/p&gt;\\n","pos":[54013,54072],"source":"\\n<p>The TTL value can't be set to a negative number.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[54580,54640],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"This error is also returned when an attempt was made to set TTL to a value higher than 255.&lt;/p&gt;\\n","pos":[54641,54738],"source":" This error is also returned when an attempt was made to set TTL to a value higher than 255.</p>\\n"},{"pos":[55240,55248],"content":"Accept()","needQuote":true,"nodes":[{"content":"Accept()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[56208,56268],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[56269,56314]},{"content":"&lt;/p&gt;\\n","pos":[56315,56321],"source":" </p>\\n"},{"pos":[57891,57924],"content":"AcceptAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"AcceptAsync(SocketAsyncEventArgs)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[61447,61507],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[61508,61553]},{"content":"&lt;/p&gt;\\n","pos":[61554,61560],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[61665,61724],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"pos":[63042,63056],"content":"Bind(EndPoint)","needQuote":true,"nodes":[{"content":"Bind(EndPoint)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;localEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[64121,64170],"source":"\\n<p>\\n<em>localEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[64171,64177],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[64294,64354],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[64355,64400]},{"content":"&lt;/p&gt;\\n","pos":[64401,64407],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller higher in the call stack does not have permission for the requested operation.","pos":[64749,64841],"source":"\\n<p>A caller higher in the call stack does not have permission for the requested operation."},{"content":"&lt;/p&gt;\\n","pos":[64842,64848],"source":" </p>\\n"},{"pos":[65883,65923],"content":"CancelConnectAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"CancelConnectAsync(SocketAsyncEventArgs)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[67544,67604],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"&lt;/p&gt;\\n","pos":[67605,67611],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller higher in the call stack does not have permission for the requested operation.&lt;/p&gt;\\n","pos":[67953,68051],"source":"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n"},{"pos":[68435,68452],"content":"Connect(EndPoint)","needQuote":true,"nodes":[{"content":"Connect(EndPoint)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[69372,69422],"source":"\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[69423,69429],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[69546,69606],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[69607,69652]},{"content":"&lt;/p&gt;\\n","pos":[69653,69659],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller higher in the call stack does not have permission for the requested operation.","pos":[70001,70093],"source":"\\n<p>A caller higher in the call stack does not have permission for the requested operation."},{"content":"&lt;/p&gt;\\n","pos":[70094,70100],"source":" </p>\\n"},{"pos":[72561,72586],"content":"Connect(IPAddress, Int32)","needQuote":true,"nodes":[{"content":"Connect(IPAddress, Int32)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The IP address of the remote host.&lt;/p&gt;\\n","pos":[73358,73403],"source":"\\n<p>The IP address of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;The port number of the remote host.&lt;/p&gt;\\n","pos":[73465,73511],"source":"\\n<p>The port number of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;address&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[73630,73679],"source":"\\n<p>\\n<em>address</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[73680,73686],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The port number is not valid.&lt;/p&gt;\\n","pos":[73803,73843],"source":"\\n<p>The port number is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[73960,74020],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[74021,74066]},{"content":"&lt;/p&gt;\\n","pos":[74067,74073],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;address&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[74779,74829],"source":"\\n<p>The length of <em>address</em> is zero.</p>\\n"},{"pos":[75551,75578],"content":"Connect(IPAddress[], Int32)","needQuote":true,"nodes":[{"content":"Connect(IPAddress[], Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The IP addresses of the remote host.&lt;/p&gt;\\n","pos":[76375,76422],"source":"\\n<p>The IP addresses of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;The port number of the remote host.&lt;/p&gt;\\n","pos":[76484,76530],"source":"\\n<p>The port number of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;addresses&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[76649,76700],"source":"\\n<p>\\n<em>addresses</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[76701,76707],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The port number is not valid.&lt;/p&gt;\\n","pos":[76824,76864],"source":"\\n<p>The port number is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[76981,77041],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[77042,77087]},{"content":"&lt;/p&gt;\\n","pos":[77088,77094],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;address&lt;/em&gt; is zero.&lt;/p&gt;\\n","pos":[77800,77850],"source":"\\n<p>The length of <em>address</em> is zero.</p>\\n"},{"pos":[78727,78749],"content":"Connect(String, Int32)","needQuote":true,"nodes":[{"content":"Connect(String, Int32)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The name of the remote host.&lt;/p&gt;\\n","pos":[79490,79529],"source":"\\n<p>The name of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;The port number of the remote host.&lt;/p&gt;\\n","pos":[79591,79637],"source":"\\n<p>The port number of the remote host.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;host&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[79756,79802],"source":"\\n<p>\\n<em>host</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[79803,79809],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The port number is not valid.&lt;/p&gt;\\n","pos":[79926,79966],"source":"\\n<p>The port number is not valid.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[80083,80143],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[80144,80189]},{"content":"&lt;/p&gt;\\n","pos":[80190,80196],"source":" </p>\\n"},{"pos":[81551,81585],"content":"ConnectAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"ConnectAsync(SocketAsyncEventArgs)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[84454,84514],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.&lt;/p&gt;\\n","pos":[84515,84566],"source":" See the Remarks section for more information.</p>\\n"},{"content":"\\n&lt;p&gt;A caller higher in the call stack does not have permission for the requested operation.&lt;/p&gt;\\n","pos":[85277,85375],"source":"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n"},{"pos":[86741,86801],"content":"ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[90268,90328],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.&lt;/p&gt;\\n","pos":[90329,90380],"source":" See the Remarks section for more information.</p>\\n"},{"content":"\\n&lt;p&gt;A caller higher in the call stack does not have permission for the requested operation.&lt;/p&gt;\\n","pos":[91091,91189],"source":"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n"},{"pos":[91530,91539],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[92534,92550],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to releases only unmanaged resources.","pos":[93375,93513],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources."},{"content":"&lt;/p&gt;\\n","pos":[93514,93520],"source":" </p>\\n"},{"pos":[93832,93842],"content":"Finalize()","needQuote":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[94976,95028],"content":"GetSocketOption(SocketOptionLevel, SocketOptionName)","needQuote":true,"nodes":[{"content":"GetSocketOption(SocketOptionLevel, SocketOptionName)","pos":[0,52]}]},{"pos":[99004,99064],"content":"GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])","needQuote":true,"nodes":[{"content":"GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])","pos":[0,60]}]},{"pos":[102893,102952],"content":"GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)","needQuote":true,"nodes":[{"content":"GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;The length, in bytes, of the expected return value.","pos":[104401,104457],"source":"\\n<p>The length, in bytes, of the expected return value."},{"content":"&lt;/p&gt;\\n","pos":[104458,104464],"source":" </p>\\n"},{"pos":[106454,106486],"content":"IOControl(Int32, Byte[], Byte[])","needQuote":true,"nodes":[{"content":"IOControl(Int32, Byte[], Byte[])","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The number of bytes in the &lt;em&gt;optionOutValue&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[108068,108140],"source":"\\n<p>The number of bytes in the <em>optionOutValue</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[108271,108331],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[108332,108377]},{"content":"&lt;/p&gt;\\n","pos":[108378,108384],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[109021,109092],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[109093,109099],"source":" </p>\\n"},{"pos":[109908,109948],"content":"IOControl(IOControlCode, Byte[], Byte[])","needQuote":true,"nodes":[{"content":"IOControl(IOControlCode, Byte[], Byte[])","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The number of bytes in the &lt;em&gt;optionOutValue&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[111733,111805],"source":"\\n<p>The number of bytes in the <em>optionOutValue</em> parameter.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[111936,111996],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[111997,112042]},{"content":"&lt;/p&gt;\\n","pos":[112043,112049],"source":" </p>\\n"},{"pos":[113271,113284],"content":"Listen(Int32)","needQuote":true,"nodes":[{"content":"Listen(Int32)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The maximum length of the pending connections queue.","pos":[114003,114060],"source":"\\n<p>The maximum length of the pending connections queue."},{"content":"&lt;/p&gt;\\n","pos":[114061,114067],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[114198,114258],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[114259,114304]},{"content":"&lt;/p&gt;\\n","pos":[114305,114311],"source":" </p>\\n"},{"pos":[115297,115320],"content":"Poll(Int32, SelectMode)","needQuote":true,"nodes":[{"content":"Poll(Int32, SelectMode)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The time to wait for a response, in microseconds.","pos":[116129,116183],"source":"\\n<p>The time to wait for a response, in microseconds."},{"content":"&lt;/p&gt;\\n","pos":[116184,116190],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[118749,118809],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See remarks below.","pos":[118810,118828]},{"content":"&lt;/p&gt;\\n","pos":[118829,118835],"source":" </p>\\n"},{"pos":[119664,119679],"content":"Receive(Byte[])","needQuote":true,"nodes":[{"content":"Receive(Byte[])","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[120648,120688],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[120807,120855],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[120856,120862],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[120979,121039],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[121040,121085]},{"content":"&lt;/p&gt;\\n","pos":[121086,121092],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[121434,121505],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[121506,121512],"source":" </p>\\n"},{"pos":[123019,123061],"content":"Receive(Byte[], Int32, Int32, SocketFlags)","needQuote":true,"nodes":[{"content":"Receive(Byte[], Int32, Int32, SocketFlags)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The location in &lt;em&gt;buffer&lt;/em&gt; to store the received data.","pos":[124374,124438],"source":"\\n<p>The location in <em>buffer</em> to store the received data."},{"content":"&lt;/p&gt;\\n","pos":[124439,124445],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to receive.","pos":[124507,124543],"source":"\\n<p>The number of bytes to receive."},{"content":"&lt;/p&gt;\\n","pos":[124544,124550],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[124835,124875],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[124994,125042],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[125043,125049],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt; minus the value of the &lt;em&gt;offset&lt;/em&gt; parameter.","pos":[125166,125479],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[125480,125486],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[126327,126398],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[126399,126405],"source":" </p>\\n"},{"pos":[128149,128208],"content":"Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)","needQuote":true,"nodes":[{"content":"Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;The position in the &lt;em&gt;buffer&lt;/em&gt; parameter to store the received data.","pos":[129559,129637],"source":"\\n<p>The position in the <em>buffer</em> parameter to store the received data."},{"content":"&lt;/p&gt;\\n","pos":[129638,129644],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to receive.","pos":[129706,129742],"source":"\\n<p>The number of bytes to receive."},{"content":"&lt;/p&gt;\\n","pos":[129743,129749],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[130258,130298],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[130417,130465],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[130466,130472],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt; minus the value of the &lt;em&gt;offset&lt;/em&gt; parameter.","pos":[130589,130902],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[130903,130909],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[131749,131820],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[131821,131827],"source":" </p>\\n"},{"pos":[133529,133564],"content":"Receive(Byte[], Int32, SocketFlags)","needQuote":true,"nodes":[{"content":"Receive(Byte[], Int32, SocketFlags)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The number of bytes to receive.","pos":[134807,134843],"source":"\\n<p>The number of bytes to receive."},{"content":"&lt;/p&gt;\\n","pos":[134844,134850],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[135135,135175],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[135294,135342],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[135343,135349],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; exceeds the size of &lt;em&gt;buffer&lt;/em&gt;.","pos":[135466,135523],"source":"\\n<p>\\n<em>size</em> exceeds the size of <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[135524,135530],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[135647,135707],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[135708,135753]},{"content":"&lt;/p&gt;\\n","pos":[135754,135760],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[136102,136173],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[136174,136180],"source":" </p>\\n"},{"pos":[137715,137743],"content":"Receive(Byte[], SocketFlags)","needQuote":true,"nodes":[{"content":"Receive(Byte[], SocketFlags)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[139135,139175],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[139294,139342],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[139343,139349],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[139466,139526],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[139527,139572]},{"content":"&lt;/p&gt;\\n","pos":[139573,139579],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[139921,139992],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[139993,139999],"source":" </p>\\n"},{"pos":[141565,141599],"content":"Receive(IList<ArraySegment<Byte>>)","needQuote":true,"nodes":[{"content":"Receive(IList&lt;ArraySegment&lt;Byte&gt;&gt;)","pos":[0,34],"source":"Receive(IList<ArraySegment<Byte>>)"}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[142796,142836],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[142955,143015],"source":"\\n<p>The <em>buffer</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[143016,143022],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred while attempting to access the socket.","pos":[143139,143200],"source":"\\n<p>An error occurred while attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[143201,143246]},{"content":"&lt;/p&gt;\\n","pos":[143247,143253],"source":" </p>\\n"},{"pos":[144312,144359],"content":"Receive(IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"Receive(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,47],"source":"Receive(IList<ArraySegment<Byte>>, SocketFlags)"}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[145978,146018],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt;.Count is zero.&lt;/p&gt;\\n","pos":[146137,146247],"source":"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>buffers</em>.Count is zero.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred while attempting to access the socket.","pos":[146364,146425],"source":"\\n<p>An error occurred while attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[146426,146471]},{"content":"&lt;/p&gt;\\n","pos":[146472,146478],"source":" </p>\\n"},{"pos":[148588,148652],"content":"Receive(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)","needQuote":true,"nodes":[{"content":"Receive(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags, out SocketError)","pos":[0,64],"source":"Receive(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)"}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[150591,150631],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt;.Count is zero.&lt;/p&gt;\\n","pos":[150750,150860],"source":"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>buffers</em>.Count is zero.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred while attempting to access the socket.","pos":[150977,151038],"source":"\\n<p>An error occurred while attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[151039,151084]},{"content":"&lt;/p&gt;\\n","pos":[151085,151091],"source":" </p>\\n"},{"pos":[153039,153073],"content":"ReceiveAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"ReceiveAsync(SocketAsyncEventArgs)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[155799,155858],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[156202,156262],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[156263,156308]},{"content":"&lt;/p&gt;\\n","pos":[156309,156315],"source":" </p>\\n"},{"pos":[157761,157821],"content":"ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The position in the &lt;em&gt;buffer&lt;/em&gt; parameter to store the received data.","pos":[159150,159228],"source":"\\n<p>The position in the <em>buffer</em> parameter to store the received data."},{"content":"&lt;/p&gt;\\n","pos":[159229,159235],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to receive.","pos":[159297,159333],"source":"\\n<p>The number of bytes to receive."},{"content":"&lt;/p&gt;\\n","pos":[159334,159340],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[159849,159889],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[160008,160124],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[160125,160131],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of the &lt;em&gt;buffer&lt;/em&gt; minus the value of the offset parameter.","pos":[160248,160556],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter."},{"content":"&lt;/p&gt;\\n","pos":[160557,160563],"source":" </p>\\n"},{"pos":[163037,163090],"content":"ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The number of bytes to receive.","pos":[164338,164374],"source":"\\n<p>The number of bytes to receive."},{"content":"&lt;/p&gt;\\n","pos":[164375,164381],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[164890,164930],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[165049,165165],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[165166,165172],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.","pos":[165289,165410],"source":"\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[165411,165417],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[166258,166329],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[166330,166336],"source":" </p>\\n"},{"pos":[167955,167988],"content":"ReceiveFrom(Byte[], ref EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFrom(Byte[], ref EndPoint)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[169199,169239],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[169358,169474],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[169475,169481],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[169598,169658],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[169659,169704]},{"content":"&lt;/p&gt;\\n","pos":[169705,169711],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[170053,170124],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[170125,170131],"source":" </p>\\n"},{"pos":[171648,171694],"content":"ReceiveFrom(Byte[], SocketFlags, ref EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFrom(Byte[], SocketFlags, ref EndPoint)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[173333,173373],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[173492,173608],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[173609,173615],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[173732,173792],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[173793,173838]},{"content":"&lt;/p&gt;\\n","pos":[173839,173845],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[174187,174258],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[174259,174265],"source":" </p>\\n"},{"pos":[175879,175917],"content":"ReceiveFromAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"ReceiveFromAsync(SocketAsyncEventArgs)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[178316,178375],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[178719,178779],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"&lt;/p&gt;\\n","pos":[178780,178786],"source":" </p>\\n"},{"pos":[180388,180484],"content":"ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)","needQuote":true,"nodes":[{"content":"ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)","pos":[0,96]}]},{"content":"\\n&lt;p&gt;The position in the &lt;em&gt;buffer&lt;/em&gt; parameter to store the received data.&lt;/p&gt;\\n","pos":[182016,182100],"source":"\\n<p>The position in the <em>buffer</em> parameter to store the received data.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to receive.&lt;/p&gt;\\n","pos":[182162,182204],"source":"\\n<p>The number of bytes to receive.</p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes received.&lt;/p&gt;\\n","pos":[182969,183009],"source":"\\n<p>The number of bytes received.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;- or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[183128,183245],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>- or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[183246,183252],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of the &lt;em&gt;buffer&lt;/em&gt; minus the value of the offset parameter.","pos":[183369,183677],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter."},{"content":"&lt;/p&gt;\\n","pos":[183678,183684],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The operating system is Windows 2000 or earlier, and this method requires Windows XP.&lt;/p&gt;\\n","pos":[184557,184653],"source":"\\n<p>The operating system is Windows 2000 or earlier, and this method requires Windows XP.</p>\\n"},{"pos":[186520,186565],"content":"ReceiveMessageFromAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync(SocketAsyncEventArgs)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[188899,188958],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[189302,189362],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"&lt;/p&gt;\\n","pos":[189363,189369],"source":" </p>\\n"},{"pos":[190807,190841],"content":"Select(IList, IList, IList, Int32)","needQuote":true,"nodes":[{"content":"Select(IList, IList, IList, Int32)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The time-out value, in microseconds.","pos":[192617,192658],"source":"\\n<p>The time-out value, in microseconds."},{"content":"A -1 value indicates an infinite time-out.&lt;/p&gt;\\n","pos":[192659,192707],"source":" A -1 value indicates an infinite time-out.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;checkRead&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt; or empty.&lt;/p&gt;\\n&lt;p&gt;-and- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;checkWrite&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt; or empty &lt;/p&gt;\\n&lt;p&gt;-and- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;checkError&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt; or empty.","pos":[192826,193082],"source":"\\n<p>The <em>checkRead</em> parameter is <strong>null</strong> or empty.</p>\\n<p>-and- </p>\\n<p>The <em>checkWrite</em> parameter is <strong>null</strong> or empty </p>\\n<p>-and- </p>\\n<p>The <em>checkError</em> parameter is <strong>null</strong> or empty."},{"content":"&lt;/p&gt;\\n","pos":[193083,193089],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[193206,193266],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[193267,193312]},{"content":"&lt;/p&gt;\\n","pos":[193313,193319],"source":" </p>\\n"},{"pos":[194165,194177],"content":"Send(Byte[])","needQuote":true,"nodes":[{"content":"Send(Byte[])","pos":[0,12]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[195342,195390],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[195391,195397],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[195514,195574],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[195575,195620]},{"content":"&lt;/p&gt;\\n","pos":[195621,195627],"source":" </p>\\n"},{"pos":[197255,197294],"content":"Send(Byte[], Int32, Int32, SocketFlags)","needQuote":true,"nodes":[{"content":"Send(Byte[], Int32, Int32, SocketFlags)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The position in the data buffer at which to begin sending data.","pos":[198570,198638],"source":"\\n<p>The position in the data buffer at which to begin sending data."},{"content":"&lt;/p&gt;\\n","pos":[198639,198645],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to send.","pos":[198707,198740],"source":"\\n<p>The number of bytes to send."},{"content":"&lt;/p&gt;\\n","pos":[198741,198747],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[199280,199328],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[199329,199335],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt; minus the value of the &lt;em&gt;offset&lt;/em&gt; parameter.","pos":[199452,199765],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[199766,199772],"source":" </p>\\n"},{"pos":[202034,202090],"content":"Send(Byte[], Int32, Int32, SocketFlags, out SocketError)","needQuote":true,"nodes":[{"content":"Send(Byte[], Int32, Int32, SocketFlags, out SocketError)","pos":[0,56]}]},{"content":"\\n&lt;p&gt;The position in the data buffer at which to begin sending data.","pos":[203460,203528],"source":"\\n<p>The position in the data buffer at which to begin sending data."},{"content":"&lt;/p&gt;\\n","pos":[203529,203535],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to send.","pos":[203597,203630],"source":"\\n<p>The number of bytes to send."},{"content":"&lt;/p&gt;\\n","pos":[203631,203637],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[204395,204443],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[204444,204450],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt; minus the value of the &lt;em&gt;offset&lt;/em&gt; parameter.","pos":[204567,204880],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[204881,204887],"source":" </p>\\n"},{"pos":[207107,207139],"content":"Send(Byte[], Int32, SocketFlags)","needQuote":true,"nodes":[{"content":"Send(Byte[], Int32, SocketFlags)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The number of bytes to send.","pos":[208330,208363],"source":"\\n<p>The number of bytes to send."},{"content":"&lt;/p&gt;\\n","pos":[208364,208370],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[208903,208951],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[208952,208958],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0 or exceeds the size of the buffer.","pos":[209075,209145],"source":"\\n<p>\\n<em>size</em> is less than 0 or exceeds the size of the buffer."},{"content":"&lt;/p&gt;\\n","pos":[209146,209152],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;socketFlags&lt;/em&gt; is not a valid combination of values.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;An operating system error occurs while accessing the socket.","pos":[209269,209417],"source":"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the socket."},{"content":"See the Remarks section for more information.","pos":[209418,209463]},{"content":"&lt;/p&gt;\\n","pos":[209464,209470],"source":" </p>\\n"},{"pos":[211126,211151],"content":"Send(Byte[], SocketFlags)","needQuote":true,"nodes":[{"content":"Send(Byte[], SocketFlags)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[212738,212786],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[212787,212793],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[212910,212970],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[212971,213016]},{"content":"&lt;/p&gt;\\n","pos":[213017,213023],"source":" </p>\\n"},{"pos":[214710,214741],"content":"Send(IList<ArraySegment<Byte>>)","needQuote":true,"nodes":[{"content":"Send(IList&lt;ArraySegment&lt;Byte&gt;&gt;)","pos":[0,31],"source":"Send(IList<ArraySegment<Byte>>)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[216169,216218],"source":"\\n<p>\\n<em>buffers</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[216219,216225],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is empty.&lt;/p&gt;\\n","pos":[216322,216361],"source":"\\n<p>\\n<em>buffers</em> is empty.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[216478,216538],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See remarks section below.","pos":[216539,216565]},{"content":"&lt;/p&gt;\\n","pos":[216566,216572],"source":" </p>\\n"},{"pos":[217610,217654],"content":"Send(IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"Send(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,44],"source":"Send(IList<ArraySegment<Byte>>, SocketFlags)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[219503,219558],"source":"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is empty.&lt;/p&gt;\\n","pos":[219655,219694],"source":"\\n<p>\\n<em>buffers</em> is empty.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[219811,219871],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[219872,219917]},{"content":"&lt;/p&gt;\\n","pos":[219918,219924],"source":" </p>\\n"},{"pos":[221129,221190],"content":"Send(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)","needQuote":true,"nodes":[{"content":"Send(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags, out SocketError)","pos":[0,61],"source":"Send(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)"}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[223359,223414],"source":"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffers&lt;/em&gt; is empty.&lt;/p&gt;\\n","pos":[223511,223550],"source":"\\n<p>\\n<em>buffers</em> is empty.</p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[223667,223727],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[223728,223773]},{"content":"&lt;/p&gt;\\n","pos":[223774,223780],"source":" </p>\\n"},{"pos":[224823,224854],"content":"SendAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"SendAsync(SocketAsyncEventArgs)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[227520,227579],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"pos":[229716,229754],"content":"SendPacketsAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"SendPacketsAsync(SocketAsyncEventArgs)","pos":[0,38]}]},{"pos":[234290,234341],"content":"SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)","pos":[0,51]}]},{"content":"\\n&lt;p&gt;The position in the data buffer at which to begin sending data.","pos":[235628,235696],"source":"\\n<p>The position in the data buffer at which to begin sending data."},{"content":"&lt;/p&gt;\\n","pos":[235697,235703],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to send.","pos":[235765,235798],"source":"\\n<p>The number of bytes to send."},{"content":"&lt;/p&gt;\\n","pos":[235799,235805],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes sent.&lt;/p&gt;\\n","pos":[236313,236349],"source":"\\n<p>The number of bytes sent.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[236468,236584],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[236585,236591],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;offset&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than 0.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is greater than the length of &lt;em&gt;buffer&lt;/em&gt; minus the value of the &lt;em&gt;offset&lt;/em&gt; parameter.","pos":[236708,237021],"source":"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter."},{"content":"&lt;/p&gt;\\n","pos":[237022,237028],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A caller in the call stack does not have the required permissions.","pos":[237767,237838],"source":"\\n<p>A caller in the call stack does not have the required permissions."},{"content":"&lt;/p&gt;\\n","pos":[237839,237845],"source":" </p>\\n"},{"pos":[239829,239873],"content":"SendTo(Byte[], Int32, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"SendTo(Byte[], Int32, SocketFlags, EndPoint)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The number of bytes to send.","pos":[241058,241091],"source":"\\n<p>The number of bytes to send."},{"content":"&lt;/p&gt;\\n","pos":[241092,241098],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes sent.&lt;/p&gt;\\n","pos":[241606,241642],"source":"\\n<p>The number of bytes sent.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[241761,241877],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[241878,241884],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The specified &lt;em&gt;size&lt;/em&gt; exceeds the size of &lt;em&gt;buffer&lt;/em&gt;.","pos":[242001,242070],"source":"\\n<p>The specified <em>size</em> exceeds the size of <em>buffer</em>."},{"content":"&lt;/p&gt;\\n","pos":[242071,242077],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[242194,242254],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[242255,242300]},{"content":"&lt;/p&gt;\\n","pos":[242301,242307],"source":" </p>\\n"},{"pos":[244351,244375],"content":"SendTo(Byte[], EndPoint)","needQuote":true,"nodes":[{"content":"SendTo(Byte[], EndPoint)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The number of bytes sent.&lt;/p&gt;\\n","pos":[245501,245537],"source":"\\n<p>The number of bytes sent.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[245656,245772],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[245773,245779],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[245896,245956],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[245957,246002]},{"content":"&lt;/p&gt;\\n","pos":[246003,246009],"source":" </p>\\n"},{"pos":[248040,248077],"content":"SendTo(Byte[], SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"SendTo(Byte[], SocketFlags, EndPoint)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The number of bytes sent.&lt;/p&gt;\\n","pos":[249631,249667],"source":"\\n<p>The number of bytes sent.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;remoteEP&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[249786,249902],"source":"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[249903,249909],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[250026,250086],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[250087,250132]},{"content":"&lt;/p&gt;\\n","pos":[250133,250139],"source":" </p>\\n"},{"pos":[252181,252214],"content":"SendToAsync(SocketAsyncEventArgs)","needQuote":true,"nodes":[{"content":"SendToAsync(SocketAsyncEventArgs)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;Windows XP or later is required for this method.&lt;/p&gt;\\n","pos":[254575,254634],"source":"\\n<p>Windows XP or later is required for this method.</p>\\n"},{"pos":[256604,256665],"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)","needQuote":true,"nodes":[{"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[258663,258723],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[258724,258769]},{"content":"&lt;/p&gt;\\n","pos":[258770,258776],"source":" </p>\\n"},{"pos":[259384,259444],"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])","needQuote":true,"nodes":[{"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])","pos":[0,60]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[261173,261233],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[261234,261279]},{"content":"&lt;/p&gt;\\n","pos":[261280,261286],"source":" </p>\\n"},{"pos":[262893,262952],"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)","needQuote":true,"nodes":[{"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)","pos":[0,59]}]},{"content":"\\n&lt;p&gt;A value of the option.","pos":[264384,264411],"source":"\\n<p>A value of the option."},{"content":"&lt;/p&gt;\\n","pos":[264412,264418],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[264549,264609],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[264610,264655]},{"content":"&lt;/p&gt;\\n","pos":[264656,264662],"source":" </p>\\n"},{"pos":[265965,266025],"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Object)","needQuote":true,"nodes":[{"content":"SetSocketOption(SocketOptionLevel, SocketOptionName, Object)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;optionValue&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[267840,267893],"source":"\\n<p>\\n<em>optionValue</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[267894,267900],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[268017,268077],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[268078,268123]},{"content":"&lt;/p&gt;\\n","pos":[268124,268130],"source":" </p>\\n"},{"pos":[269254,269278],"content":"Shutdown(SocketShutdown)","needQuote":true,"nodes":[{"content":"Shutdown(SocketShutdown)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;An error occurred when attempting to access the socket.","pos":[270371,270431],"source":"\\n<p>An error occurred when attempting to access the socket."},{"content":"See the Remarks section for more information.","pos":[270432,270477]},{"content":"&lt;/p&gt;\\n","pos":[270478,270484],"source":" </p>\\n"},{"pos":[271082,271100],"content":"System.Net.Sockets","needQuote":true,"nodes":[{"content":"System.Net.Sockets","pos":[0,18]}]},{"pos":[271267,271273],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[271423,271434],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[271609,271619],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[271714,271722],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[271791,271792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271819,271820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271890,271898],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[271967,271968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271995,271996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272179,272193],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[272312,272318],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[272385,272386],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272436,272442],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[272502,272503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272586,272592],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[272659,272660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272710,272716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[272776,272777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272991,273013],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[273161,273167],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[273234,273235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273285,273291],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[273352,273353]},{"pos":[273408,273414],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[273474,273475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273572,273578],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[273645,273646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273696,273702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[273763,273764]},{"pos":[273819,273825],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[273885,273886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274131,274162],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[274328,274343],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[274419,274420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274470,274476],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[274537,274538]},{"pos":[274593,274599],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[274659,274660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274766,274781],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[274857,274858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274908,274914],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[274975,274976]},{"pos":[275031,275037],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[275097,275098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275328,275341],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[275442,275453],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[275525,275526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275553,275554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275627,275638],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[275710,275711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275738,275739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275914,275923],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[276016,276023],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[276091,276092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276119,276120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276189,276196],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[276264,276265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276292,276293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276468,276485],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[276594,276609],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[276685,276686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276713,276714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276791,276806],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[276882,276883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276910,276911],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277250,277263],"content":"AcceptAsync()","needQuote":true,"nodes":[{"content":"AcceptAsync()","pos":[0,13]}]},{"pos":[277416,277427],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[277504,277505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277532,277533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277632,277643],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[277720,277721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277748,277749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278200,278219],"content":"AcceptAsync(Socket)","needQuote":true,"nodes":[{"content":"AcceptAsync(Socket)","pos":[0,19]}]},{"pos":[278424,278435],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[278512,278513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278575,278581],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[278632,278633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278759,278770],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[278847,278848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278910,278916],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[278967,278968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279441,279463],"content":"ConnectAsync(EndPoint)","needQuote":true,"nodes":[{"content":"ConnectAsync(EndPoint)","pos":[0,22]}]},{"pos":[279658,279670],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[279748,279749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279805,279813],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[279879,279880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280001,280013],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[280091,280092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280148,280156],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[280222,280223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280722,280752],"content":"ConnectAsync(IPAddress, Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(IPAddress, Int32)","pos":[0,30]}]},{"pos":[280976,280988],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[281066,281067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281124,281133],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":",","pos":[281201,281202]},{"pos":[281256,281261],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[281320,281321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281456,281468],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[281546,281547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281604,281613],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":",","pos":[281681,281682]},{"pos":[281736,281741],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[281800,281801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282326,282358],"content":"ConnectAsync(IPAddress[], Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(IPAddress[], Int32)","pos":[0,32]}]},{"pos":[282736,282748],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[282826,282827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282884,282893],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":"[]","pos":[282961,282963]},{"content":",","pos":[282995,282996]},{"pos":[283050,283055],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[283114,283115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283252,283264],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[283342,283343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283400,283409],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[283476,283478],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[283507,283508]},{"pos":[283562,283567],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[283626,283627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284211,284238],"content":"ConnectAsync(String, Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(String, Int32)","pos":[0,27]}]},{"pos":[284448,284460],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[284538,284539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284589,284595],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[284656,284657]},{"pos":[284711,284716],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[284775,284776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284904,284916],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[284994,284995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285045,285051],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[285112,285113]},{"pos":[285167,285172],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[285231,285232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285803,285848],"content":"ReceiveAsync(ArraySegment<Byte>, SocketFlags)","needQuote":true,"nodes":[{"content":"ReceiveAsync(ArraySegment&lt;Byte&gt;, SocketFlags)","pos":[0,45],"source":"ReceiveAsync(ArraySegment<Byte>, SocketFlags)"}]},{"pos":[286329,286341],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[286419,286420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286478,286490],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[286556,286557],"content":"<","needQuote":true,"nodes":[]},{"pos":[286605,286609],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[286700,286701]},{"pos":[286773,286784],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[286840,286841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287006,287018],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[287096,287097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287155,287167],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[287234,287237]},{"pos":[287292,287296],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[287354,287355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[287383,287384]},{"pos":[287456,287467],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[287523,287524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288307,288359],"content":"ReceiveAsync(IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"ReceiveAsync(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,52],"source":"ReceiveAsync(IList<ArraySegment<Byte>>, SocketFlags)"}]},{"pos":[288955,288967],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[289045,289046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289117,289122],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[289201,289202],"content":"<","needQuote":true,"nodes":[]},{"pos":[289260,289272],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[289338,289339],"content":"<","needQuote":true,"nodes":[]},{"pos":[289387,289391],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[289514,289515]},{"pos":[289587,289598],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[289654,289655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289854,289866],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[289944,289945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290016,290021],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[290101,290104]},{"pos":[290169,290181],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[290248,290251]},{"pos":[290306,290310],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[290368,290369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290396,290397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[290425,290426]},{"pos":[290498,290509],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[290565,290566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291380,291439],"content":"ReceiveFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFromAsync(ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,59],"source":"ReceiveFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[292008,292024],"content":"ReceiveFromAsync","needQuote":true,"nodes":[{"content":"ReceiveFromAsync","pos":[0,16]}]},{"pos":[292106,292107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292165,292177],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[292243,292244],"content":"<","needQuote":true,"nodes":[]},{"pos":[292292,292296],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[292387,292388]},{"pos":[292460,292471],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[292528,292529]},{"pos":[292590,292598],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[292664,292665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292854,292870],"content":"ReceiveFromAsync","needQuote":true,"nodes":[{"content":"ReceiveFromAsync","pos":[0,16]}]},{"pos":[292952,292953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293011,293023],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[293090,293093]},{"pos":[293148,293152],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[293210,293211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[293239,293240]},{"pos":[293312,293323],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[293380,293381]},{"pos":[293442,293450],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[293516,293517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294346,294412],"content":"ReceiveMessageFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync(ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,66],"source":"ReceiveMessageFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[295009,295032],"content":"ReceiveMessageFromAsync","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync","pos":[0,23]}]},{"pos":[295121,295122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295180,295192],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[295258,295259],"content":"<","needQuote":true,"nodes":[]},{"pos":[295307,295311],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[295402,295403]},{"pos":[295475,295486],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[295543,295544]},{"pos":[295605,295613],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[295679,295680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295876,295899],"content":"ReceiveMessageFromAsync","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync","pos":[0,23]}]},{"pos":[295988,295989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296047,296059],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[296126,296129]},{"pos":[296184,296188],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[296246,296247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[296275,296276]},{"pos":[296348,296359],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[296416,296417]},{"pos":[296478,296486],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[296552,296553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297335,297377],"content":"SendAsync(ArraySegment<Byte>, SocketFlags)","needQuote":true,"nodes":[{"content":"SendAsync(ArraySegment&lt;Byte&gt;, SocketFlags)","pos":[0,42],"source":"SendAsync(ArraySegment<Byte>, SocketFlags)"}]},{"pos":[297846,297855],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[297930,297931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297989,298001],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[298067,298068],"content":"<","needQuote":true,"nodes":[]},{"pos":[298116,298120],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[298211,298212]},{"pos":[298284,298295],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[298351,298352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298514,298523],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[298598,298599],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298657,298669],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[298736,298739]},{"pos":[298794,298798],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[298856,298857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[298885,298886]},{"pos":[298958,298969],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[299025,299026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299794,299843],"content":"SendAsync(IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"SendAsync(IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,49],"source":"SendAsync(IList<ArraySegment<Byte>>, SocketFlags)"}]},{"pos":[300427,300436],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[300511,300512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300583,300588],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[300667,300668],"content":"<","needQuote":true,"nodes":[]},{"pos":[300726,300738],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[300804,300805],"content":"<","needQuote":true,"nodes":[]},{"pos":[300853,300857],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[300980,300981]},{"pos":[301053,301064],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[301120,301121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301317,301326],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[301401,301402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301473,301478],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[301558,301561]},{"pos":[301626,301638],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[301705,301708]},{"pos":[301763,301767],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[301825,301826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301853,301854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[301882,301883]},{"pos":[301955,301966],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[302022,302023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302818,302872],"content":"SendToAsync(ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"SendToAsync(ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,54],"source":"SendToAsync(ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[303421,303432],"content":"SendToAsync","needQuote":true,"nodes":[{"content":"SendToAsync","pos":[0,11]}]},{"pos":[303509,303510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303568,303580],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[303646,303647],"content":"<","needQuote":true,"nodes":[]},{"pos":[303695,303699],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[303790,303791]},{"pos":[303863,303874],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[303931,303932]},{"pos":[303993,304001],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[304067,304068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304252,304263],"content":"SendToAsync","needQuote":true,"nodes":[{"content":"SendToAsync","pos":[0,11]}]},{"pos":[304340,304341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304399,304411],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[304478,304481]},{"pos":[304536,304540],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[304598,304599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[304627,304628]},{"pos":[304700,304711],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[304768,304769]},{"pos":[304830,304838],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[304904,304905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305332,305338],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[305517,305536],"content":"AcceptAsync(Socket)","needQuote":true,"nodes":[{"content":"AcceptAsync(Socket)","pos":[0,19]}]},{"pos":[305741,305752],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[305829,305830],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[305892,305898],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[305949,305950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306076,306087],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[306164,306165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306227,306233],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[306284,306285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[306557,306577],"content":"SocketTaskExtensions","needQuote":true,"nodes":[{"content":"SocketTaskExtensions","pos":[0,20]}]},{"pos":[306862,306889],"content":"AcceptAsync(Socket, Socket)","needQuote":true,"nodes":[{"content":"AcceptAsync(Socket, Socket)","pos":[0,27]}]},{"pos":[307147,307158],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[307235,307236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307298,307304],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[307356,307357]},{"pos":[307424,307430],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[307481,307482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307634,307645],"content":"AcceptAsync","needQuote":true,"nodes":[{"content":"AcceptAsync","pos":[0,11]}]},{"pos":[307722,307723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307785,307791],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[307843,307844]},{"pos":[307911,307917],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[307968,307969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308305,308335],"content":"ConnectAsync(Socket, EndPoint)","needQuote":true,"nodes":[{"content":"ConnectAsync(Socket, EndPoint)","pos":[0,30]}]},{"pos":[308583,308595],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[308673,308674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308736,308742],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[308794,308795]},{"pos":[308856,308864],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[308930,308931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309078,309090],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[309168,309169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309231,309237],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[309289,309290]},{"pos":[309351,309359],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[309425,309426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[309774,309812],"content":"ConnectAsync(Socket, IPAddress, Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(Socket, IPAddress, Int32)","pos":[0,38]}]},{"pos":[310089,310101],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[310179,310180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310242,310248],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[310300,310301]},{"pos":[310363,310372],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":",","pos":[310440,310441]},{"pos":[310495,310500],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[310559,310560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310721,310733],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[310811,310812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310874,310880],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[310932,310933]},{"pos":[310995,311004],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":",","pos":[311072,311073]},{"pos":[311127,311132],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[311191,311192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311564,311604],"content":"ConnectAsync(Socket, IPAddress[], Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(Socket, IPAddress[], Int32)","pos":[0,40]}]},{"pos":[312070,312082],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[312160,312161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312223,312229],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[312281,312282]},{"pos":[312344,312353],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":"[]","pos":[312421,312423]},{"content":",","pos":[312455,312456]},{"pos":[312510,312515],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[312574,312575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[312738,312750],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[312828,312829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312891,312897],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[312949,312950]},{"pos":[313012,313021],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[313088,313090],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[313119,313120]},{"pos":[313174,313179],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[313238,313239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313687,313722],"content":"ConnectAsync(Socket, String, Int32)","needQuote":true,"nodes":[{"content":"ConnectAsync(Socket, String, Int32)","pos":[0,35]}]},{"pos":[313985,313997],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[314075,314076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314138,314144],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[314196,314197]},{"pos":[314252,314258],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[314319,314320]},{"pos":[314374,314379],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[314438,314439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314593,314605],"content":"ConnectAsync","needQuote":true,"nodes":[{"content":"ConnectAsync","pos":[0,12]}]},{"pos":[314683,314684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[314746,314752],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[314804,314805]},{"pos":[314860,314866],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[314927,314928]},{"pos":[314982,314987],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[315046,315047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315437,315490],"content":"ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)","needQuote":true,"nodes":[{"content":"ReceiveAsync(Socket, ArraySegment&lt;Byte&gt;, SocketFlags)","pos":[0,53],"source":"ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)"}]},{"pos":[316059,316071],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[316149,316150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316212,316218],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[316270,316271]},{"pos":[316334,316346],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[316412,316413],"content":"<","needQuote":true,"nodes":[]},{"pos":[316461,316465],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[316556,316557]},{"pos":[316629,316640],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[316696,316697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316888,316900],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[316978,316979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317041,317047],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[317099,317100]},{"pos":[317163,317175],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[317242,317245]},{"pos":[317300,317304],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[317362,317363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[317391,317392]},{"pos":[317464,317475],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[317531,317532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318108,318168],"content":"ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"ReceiveAsync(Socket, IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,60],"source":"ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)"}]},{"pos":[318852,318864],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[318942,318943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319005,319011],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[319063,319064]},{"pos":[319140,319145],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[319224,319225],"content":"<","needQuote":true,"nodes":[]},{"pos":[319283,319295],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[319361,319362],"content":"<","needQuote":true,"nodes":[]},{"pos":[319410,319414],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[319537,319538]},{"pos":[319610,319621],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[319677,319678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319903,319915],"content":"ReceiveAsync","needQuote":true,"nodes":[{"content":"ReceiveAsync","pos":[0,12]}]},{"pos":[319993,319994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320056,320062],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[320114,320115]},{"pos":[320191,320196],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[320276,320279]},{"pos":[320344,320356],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[320423,320426]},{"pos":[320481,320485],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[320543,320544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320571,320572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[320600,320601]},{"pos":[320673,320684],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[320740,320741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321358,321425],"content":"ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveFromAsync(Socket, ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,67],"source":"ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[322082,322098],"content":"ReceiveFromAsync","needQuote":true,"nodes":[{"content":"ReceiveFromAsync","pos":[0,16]}]},{"pos":[322180,322181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322243,322249],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[322301,322302]},{"pos":[322365,322377],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[322443,322444],"content":"<","needQuote":true,"nodes":[]},{"pos":[322492,322496],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[322587,322588]},{"pos":[322660,322671],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[322728,322729]},{"pos":[322790,322798],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[322864,322865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323080,323096],"content":"ReceiveFromAsync","needQuote":true,"nodes":[{"content":"ReceiveFromAsync","pos":[0,16]}]},{"pos":[323178,323179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323241,323247],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[323299,323300]},{"pos":[323363,323375],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[323442,323445]},{"pos":[323500,323504],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[323562,323563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[323591,323592]},{"pos":[323664,323675],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[323732,323733]},{"pos":[323794,323802],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[323868,323869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324494,324568],"content":"ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync(Socket, ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,74],"source":"ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[325253,325276],"content":"ReceiveMessageFromAsync","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync","pos":[0,23]}]},{"pos":[325365,325366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325428,325434],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[325486,325487]},{"pos":[325550,325562],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[325628,325629],"content":"<","needQuote":true,"nodes":[]},{"pos":[325677,325681],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[325772,325773]},{"pos":[325845,325856],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[325913,325914]},{"pos":[325975,325983],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[326049,326050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326272,326295],"content":"ReceiveMessageFromAsync","needQuote":true,"nodes":[{"content":"ReceiveMessageFromAsync","pos":[0,23]}]},{"pos":[326384,326385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326447,326453],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[326505,326506]},{"pos":[326569,326581],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[326648,326651]},{"pos":[326706,326710],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[326768,326769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326797,326798]},{"pos":[326870,326881],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[326938,326939]},{"pos":[327000,327008],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[327074,327075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327687,327737],"content":"SendAsync(Socket, ArraySegment<Byte>, SocketFlags)","needQuote":true,"nodes":[{"content":"SendAsync(Socket, ArraySegment&lt;Byte&gt;, SocketFlags)","pos":[0,50],"source":"SendAsync(Socket, ArraySegment<Byte>, SocketFlags)"}]},{"pos":[328294,328303],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[328378,328379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328441,328447],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[328499,328500]},{"pos":[328563,328575],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[328641,328642],"content":"<","needQuote":true,"nodes":[]},{"pos":[328690,328694],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[328785,328786]},{"pos":[328858,328869],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[328925,328926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329114,329123],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[329198,329199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329261,329267],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[329319,329320]},{"pos":[329383,329395],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[329462,329465]},{"pos":[329520,329524],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[329582,329583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[329611,329612]},{"pos":[329684,329695],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[329751,329752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330316,330373],"content":"SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)","needQuote":true,"nodes":[{"content":"SendAsync(Socket, IList&lt;ArraySegment&lt;Byte&gt;&gt;, SocketFlags)","pos":[0,57],"source":"SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)"}]},{"pos":[331045,331054],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[331129,331130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331192,331198],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[331250,331251]},{"pos":[331327,331332],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[331411,331412],"content":"<","needQuote":true,"nodes":[]},{"pos":[331470,331482],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[331548,331549],"content":"<","needQuote":true,"nodes":[]},{"pos":[331597,331601],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[331724,331725]},{"pos":[331797,331808],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[331864,331865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332087,332096],"content":"SendAsync","needQuote":true,"nodes":[{"content":"SendAsync","pos":[0,9]}]},{"pos":[332171,332172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332234,332240],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[332292,332293]},{"pos":[332369,332374],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[332454,332457]},{"pos":[332522,332534],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[332601,332604]},{"pos":[332659,332663],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[332721,332722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332749,332750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[332778,332779]},{"pos":[332851,332862],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[332918,332919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333522,333584],"content":"SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)","needQuote":true,"nodes":[{"content":"SendToAsync(Socket, ArraySegment&lt;Byte&gt;, SocketFlags, EndPoint)","pos":[0,62],"source":"SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)"}]},{"pos":[334221,334232],"content":"SendToAsync","needQuote":true,"nodes":[{"content":"SendToAsync","pos":[0,11]}]},{"pos":[334309,334310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334372,334378],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[334430,334431]},{"pos":[334494,334506],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[334572,334573],"content":"<","needQuote":true,"nodes":[]},{"pos":[334621,334625],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":",","pos":[334716,334717]},{"pos":[334789,334800],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[334857,334858]},{"pos":[334919,334927],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[334993,334994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335204,335215],"content":"SendToAsync","needQuote":true,"nodes":[{"content":"SendToAsync","pos":[0,11]}]},{"pos":[335292,335293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335355,335361],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"content":",","pos":[335413,335414]},{"pos":[335477,335489],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[335556,335559]},{"pos":[335614,335618],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[335676,335677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[335705,335706]},{"pos":[335778,335789],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"content":",","pos":[335846,335847]},{"pos":[335908,335916],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[335982,335983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336481,336494],"content":"AddressFamily","needQuote":true,"nodes":[{"content":"AddressFamily","pos":[0,13]}]},{"pos":[336712,336722],"content":"SocketType","needQuote":true,"nodes":[{"content":"SocketType","pos":[0,10]}]},{"pos":[336933,336945],"content":"ProtocolType","needQuote":true,"nodes":[{"content":"ProtocolType","pos":[0,12]}]},{"pos":[337131,337136],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[337279,337286],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[337464,337476],"content":"LingerOption","needQuote":true,"nodes":[{"content":"LingerOption","pos":[0,12]}]},{"pos":[337673,337681],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[337820,337830],"content":"System.Net","needQuote":true,"nodes":[{"content":"System.Net","pos":[0,10]}]},{"pos":[337972,337977],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[338143,338149],"content":"Socket","needQuote":true,"nodes":[{"content":"Socket","pos":[0,6]}]},{"pos":[338356,338376],"content":"SocketAsyncEventArgs","needQuote":true,"nodes":[{"content":"SocketAsyncEventArgs","pos":[0,20]}]},{"pos":[338598,338607],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[338741,338752],"content":"IPAddress[]","needQuote":true,"nodes":[{"content":"IPAddress[]","pos":[0,11]}]},{"pos":[338904,338913],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"content":"[]","pos":[338960,338962]},{"pos":[339034,339043],"content":"IPAddress","needQuote":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[339089,339091],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[339234,339240],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[339410,339419],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[339522,339529],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[339581,339582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339609,339610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339684,339691],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[339743,339744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339771,339772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339970,339987],"content":"SocketOptionLevel","needQuote":true,"nodes":[{"content":"SocketOptionLevel","pos":[0,17]}]},{"pos":[340223,340239],"content":"SocketOptionName","needQuote":true,"nodes":[{"content":"SocketOptionName","pos":[0,16]}]},{"pos":[340401,340407],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[340527,340531],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[340590,340592]},{"pos":[340655,340659],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[340717,340719],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[340883,340896],"content":"IOControlCode","needQuote":true,"nodes":[{"content":"IOControlCode","pos":[0,13]}]},{"pos":[341114,341124],"content":"SelectMode","needQuote":true,"nodes":[{"content":"SelectMode","pos":[0,10]}]},{"pos":[341334,341345],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[341558,341569],"content":"SocketError","needQuote":true,"nodes":[{"content":"SocketError","pos":[0,11]}]},{"pos":[341855,341880],"content":"IList<ArraySegment<Byte>>","needQuote":true,"nodes":[{"content":"IList&lt;ArraySegment&lt;Byte&gt;&gt;","pos":[0,25],"source":"IList<ArraySegment<Byte>>"}]},{"pos":[342160,342165],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[342244,342245],"content":"<","needQuote":true,"nodes":[]},{"pos":[342303,342315],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"pos":[342381,342382],"content":"<","needQuote":true,"nodes":[]},{"pos":[342430,342434],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[342611,342616],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[342696,342699]},{"pos":[342764,342776],"content":"ArraySegment","needQuote":true,"nodes":[{"content":"ArraySegment","pos":[0,12]}]},{"content":"(Of","pos":[342843,342846]},{"pos":[342901,342905],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[342963,342964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342991,342992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343254,343262],"content":"IList<T>","needQuote":true,"nodes":[{"content":"IList&lt;T&gt;","pos":[0,8],"source":"IList<T>"}]},{"pos":[343457,343462],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[343520,343521],"content":"<","needQuote":true,"nodes":[]},{"pos":[343548,343549],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[343663,343668],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"content":"(Of","pos":[343727,343730]},{"pos":[343764,343765],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[343792,343793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343978,344004],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[344232,344251],"content":"IPPacketInformation","needQuote":true,"nodes":[{"content":"IPPacketInformation","pos":[0,19]}]},{"pos":[344482,344487],"content":"IList","needQuote":true,"nodes":[{"content":"IList","pos":[0,5]}]},{"pos":[344641,344659],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[344858,344872],"content":"SocketShutdown","needQuote":true,"nodes":[{"content":"SocketShutdown","pos":[0,14]}]},{"pos":[345069,345084],"content":"SocketException","needQuote":true,"nodes":[{"content":"SocketException","pos":[0,15]}]},{"pos":[345280,345303],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[345514,345535],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[345744,345769],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[345975,346002],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[346221,346238],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[346414,346435],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[346628,346645],"content":"SecurityException","needQuote":true,"nodes":[{"content":"SecurityException","pos":[0,17]}]},{"pos":[346842,346863],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]}],"content":"items:\n- uid: System.Net.Sockets.Socket\n  commentId: T:System.Net.Sockets.Socket\n  id: Socket\n  parent: System.Net.Sockets\n  children:\n  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  - System.Net.Sockets.Socket.Accept\n  - System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.AddressFamily\n  - System.Net.Sockets.Socket.Available\n  - System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  - System.Net.Sockets.Socket.Blocking\n  - System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)\n  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)\n  - System.Net.Sockets.Socket.Connect(System.String,System.Int32)\n  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.Connected\n  - System.Net.Sockets.Socket.Dispose\n  - System.Net.Sockets.Socket.Dispose(System.Boolean)\n  - System.Net.Sockets.Socket.DontFragment\n  - System.Net.Sockets.Socket.DualMode\n  - System.Net.Sockets.Socket.EnableBroadcast\n  - System.Net.Sockets.Socket.ExclusiveAddressUse\n  - System.Net.Sockets.Socket.Finalize\n  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])\n  - System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])\n  - System.Net.Sockets.Socket.IsBound\n  - System.Net.Sockets.Socket.LingerState\n  - System.Net.Sockets.Socket.Listen(System.Int32)\n  - System.Net.Sockets.Socket.LocalEndPoint\n  - System.Net.Sockets.Socket.MulticastLoopback\n  - System.Net.Sockets.Socket.NoDelay\n  - System.Net.Sockets.Socket.OSSupportsIPv4\n  - System.Net.Sockets.Socket.OSSupportsIPv6\n  - System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  - System.Net.Sockets.Socket.ProtocolType\n  - System.Net.Sockets.Socket.Receive(System.Byte[])\n  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  - System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.ReceiveBufferSize\n  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)\n  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\n  - System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.ReceiveTimeout\n  - System.Net.Sockets.Socket.RemoteEndPoint\n  - System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)\n  - System.Net.Sockets.Socket.Send(System.Byte[])\n  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  - System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.SendBufferSize\n  - System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.SendTimeout\n  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)\n  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\n  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)\n  - System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - System.Net.Sockets.Socket.SocketType\n  - System.Net.Sockets.Socket.Ttl\n  langs:\n  - csharp\n  - vb\n  name: Socket\n  fullName: System.Net.Sockets.Socket\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Socket\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 158\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Implements the Berkeley sockets interface.</p>\\n\"\n  syntax:\n    content: 'public class Socket : IDisposable'\n    content.vb: >-\n      Public Class Socket\n          Implements IDisposable\n  seealso:\n  - type: System.Net\n    commentId: N:System.Net\n  - type: System.Net.Cache\n    commentId: N:System.Net.Cache\n  - type: System.Net.Security\n    commentId: N:System.Net.Security\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: Socket\n  extensionMethods:\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.EndPoint)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress,System.Int32)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress[],System.Int32)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.String,System.Int32)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  - System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  id: '#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Socket(AddressFamily, SocketType, ProtocolType)\n  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 160\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified address family, socket type and protocol.</p>\\n\"\n  syntax:\n    content: public Socket(AddressFamily addressFamily, SocketType socketType, ProtocolType protocolType)\n    content.vb: Public Sub New(addressFamily As AddressFamily, socketType As SocketType, protocolType As ProtocolType)\n    parameters:\n    - id: addressFamily\n      type: System.Net.Sockets.AddressFamily\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.AddressFamily\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: socketType\n      type: System.Net.Sockets.SocketType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: protocolType\n      type: System.Net.Sockets.ProtocolType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.ProtocolType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>The combination of <em>addressFamily</em>, <em>socketType</em>, and <em>protocolType</em> results in an invalid socket. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n  - type: System.Net.Sockets.AddressFamily\n    commentId: T:System.Net.Sockets.AddressFamily\n  - type: System.Net.Sockets.ProtocolType\n    commentId: T:System.Net.Sockets.ProtocolType\n  - type: System.Net.Sockets.SocketType\n    commentId: T:System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Socket(AddressFamily, SocketType, ProtocolType)\n- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)\n  id: '#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Socket(SocketType, ProtocolType)\n  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 161\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the specified socket type and protocol.</p>\\n\"\n  syntax:\n    content: public Socket(SocketType socketType, ProtocolType protocolType)\n    content.vb: Public Sub New(socketType As SocketType, protocolType As ProtocolType)\n    parameters:\n    - id: socketType\n      type: System.Net.Sockets.SocketType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: protocolType\n      type: System.Net.Sockets.ProtocolType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.ProtocolType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>The combination of  <em>socketType</em> and <em>protocolType</em> results in an invalid socket. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Socket(SocketType, ProtocolType)\n- uid: System.Net.Sockets.Socket.AddressFamily\n  commentId: P:System.Net.Sockets.Socket.AddressFamily\n  id: AddressFamily\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: AddressFamily\n  fullName: System.Net.Sockets.Socket.AddressFamily\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddressFamily\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 162\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the address family of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public AddressFamily AddressFamily { get; }\n    content.vb: Public ReadOnly Property AddressFamily As AddressFamily\n    parameters: []\n    return:\n      type: System.Net.Sockets.AddressFamily\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.AddressFamily\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.AddressFamily\n    commentId: T:System.Net.Sockets.AddressFamily\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.AddressFamily\n- uid: System.Net.Sockets.Socket.Available\n  commentId: P:System.Net.Sockets.Socket.Available\n  id: Available\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Available\n  fullName: System.Net.Sockets.Socket.Available\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Available\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 163\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the amount of data that has been received from the network and is available to be read.</p>\\n\"\n  syntax:\n    content: public int Available { get; }\n    content.vb: Public ReadOnly Property Available As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes of data received from the network and available to be read.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.IO.Stream\n    commentId: T:System.IO.Stream\n  - type: System.Net.Sockets.SocketType.Dgram\n    commentId: F:System.Net.Sockets.SocketType.Dgram\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.Available\n- uid: System.Net.Sockets.Socket.Blocking\n  commentId: P:System.Net.Sockets.Socket.Blocking\n  id: Blocking\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Blocking\n  fullName: System.Net.Sockets.Socket.Blocking\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Blocking\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 164\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that indicates whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is in blocking mode.</p>\\n\"\n  syntax:\n    content: public bool Blocking { get; set; }\n    content.vb: Public Property Blocking As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will block; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Blocking\n- uid: System.Net.Sockets.Socket.Connected\n  commentId: P:System.Net.Sockets.Socket.Connected\n  id: Connected\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Connected\n  fullName: System.Net.Sockets.Socket.Connected\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connected\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 165\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets a value that indicates whether a <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is connected to a remote host as of the last <xref href=\\\"System.Net.Sockets.Socket.Send(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.Socket.Receive(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operation.</p>\\n\"\n  syntax:\n    content: public bool Connected { get; }\n    content.vb: Public ReadOnly Property Connected As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was connected to a remote resource as of the most recent operation; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.Connected\n- uid: System.Net.Sockets.Socket.DontFragment\n  commentId: P:System.Net.Sockets.Socket.DontFragment\n  id: DontFragment\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: DontFragment\n  fullName: System.Net.Sockets.Socket.DontFragment\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DontFragment\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 166\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> allows Internet Protocol (IP) datagrams to be fragmented.</p>\\n\"\n  syntax:\n    content: public bool DontFragment { get; set; }\n    content.vb: Public Property DontFragment As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> allows datagram fragmentation; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property can be set only for sockets in the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetworkV6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> families. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.DontFragment\n- uid: System.Net.Sockets.Socket.DualMode\n  commentId: P:System.Net.Sockets.Socket.DualMode\n  id: DualMode\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: DualMode\n  fullName: System.Net.Sockets.Socket.DualMode\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DualMode\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 167\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a dual-mode socket used for both IPv4 and IPv6.</p>\\n\"\n  syntax:\n    content: public bool DualMode { get; set; }\n    content.vb: Public Property DualMode As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a  dual-mode socket; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.DualMode\n- uid: System.Net.Sockets.Socket.EnableBroadcast\n  commentId: P:System.Net.Sockets.Socket.EnableBroadcast\n  id: EnableBroadcast\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: EnableBroadcast\n  fullName: System.Net.Sockets.Socket.EnableBroadcast\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnableBroadcast\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 168\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can send or receive broadcast packets.</p>\\n\"\n  syntax:\n    content: public bool EnableBroadcast { get; set; }\n    content.vb: Public Property EnableBroadcast As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> allows broadcast packets; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>This option is valid for a datagram socket only. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.EnableBroadcast\n- uid: System.Net.Sockets.Socket.ExclusiveAddressUse\n  commentId: P:System.Net.Sockets.Socket.ExclusiveAddressUse\n  id: ExclusiveAddressUse\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ExclusiveAddressUse\n  fullName: System.Net.Sockets.Socket.ExclusiveAddressUse\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExclusiveAddressUse\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 169\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> allows only one process to bind to a port.</p>\\n\"\n  syntax:\n    content: public bool ExclusiveAddressUse { get; set; }\n    content.vb: Public Property ExclusiveAddressUse As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> allows only one socket to bind to a specific port; otherwise, <strong>false</strong>. The default is <strong>true</strong> for Windows Server 2003 and Windows XP Service Pack 2, and <strong>false</strong> for all other versions.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called for this <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ExclusiveAddressUse\n- uid: System.Net.Sockets.Socket.IsBound\n  commentId: P:System.Net.Sockets.Socket.IsBound\n  id: IsBound\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: IsBound\n  fullName: System.Net.Sockets.Socket.IsBound\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsBound\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 170\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets a value that indicates whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is bound to a specific local port.</p>\\n\"\n  syntax:\n    content: public bool IsBound { get; }\n    content.vb: Public ReadOnly Property IsBound As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is bound to a local port; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.IsBound\n- uid: System.Net.Sockets.Socket.LingerState\n  commentId: P:System.Net.Sockets.Socket.LingerState\n  id: LingerState\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: LingerState\n  fullName: System.Net.Sockets.Socket.LingerState\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LingerState\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 171\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies whether the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will delay closing a socket in an attempt to send all pending data.</p>\\n\"\n  syntax:\n    content: public LingerOption LingerState { get; set; }\n    content.vb: Public Property LingerState As LingerOption\n    parameters: []\n    return:\n      type: System.Net.Sockets.LingerOption\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.LingerOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that specifies how to linger while closing a socket.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.LingerState\n- uid: System.Net.Sockets.Socket.LocalEndPoint\n  commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  id: LocalEndPoint\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: LocalEndPoint\n  fullName: System.Net.Sockets.Socket.LocalEndPoint\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalEndPoint\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 172\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the local endpoint.</p>\\n\"\n  syntax:\n    content: public EndPoint LocalEndPoint { get; }\n    content.vb: Public ReadOnly Property LocalEndPoint As EndPoint\n    parameters: []\n    return:\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is using for communications.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.EndPoint\n    commentId: T:System.Net.EndPoint\n  - type: System.Net.IPEndPoint\n    commentId: T:System.Net.IPEndPoint\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.LocalEndPoint\n- uid: System.Net.Sockets.Socket.MulticastLoopback\n  commentId: P:System.Net.Sockets.Socket.MulticastLoopback\n  id: MulticastLoopback\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: MulticastLoopback\n  fullName: System.Net.Sockets.Socket.MulticastLoopback\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastLoopback\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 173\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</p>\\n\"\n  syntax:\n    content: public bool MulticastLoopback { get; set; }\n    content.vb: Public Property MulticastLoopback As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> receives outgoing multicast packets; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.MulticastLoopback\n- uid: System.Net.Sockets.Socket.NoDelay\n  commentId: P:System.Net.Sockets.Socket.NoDelay\n  id: NoDelay\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: NoDelay\n  fullName: System.Net.Sockets.Socket.NoDelay\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NoDelay\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 174\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies whether the stream <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is using the Nagle algorithm.</p>\\n\"\n  syntax:\n    content: public bool NoDelay { get; set; }\n    content.vb: Public Property NoDelay As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>false</strong> if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> uses the Nagle algorithm; otherwise, <strong>true</strong>. The default is <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.NoDelay\n- uid: System.Net.Sockets.Socket.OSSupportsIPv4\n  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv4\n  id: OSSupportsIPv4\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: OSSupportsIPv4\n  fullName: System.Net.Sockets.Socket.OSSupportsIPv4\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSSupportsIPv4\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 175\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).</p>\\n\"\n  syntax:\n    content: public static bool OSSupportsIPv4 { get; }\n    content.vb: Public Shared ReadOnly Property OSSupportsIPv4 As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operating system and network adaptors support the IPv4 protocol; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.OSSupportsIPv6\n    commentId: P:System.Net.Sockets.Socket.OSSupportsIPv6\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Socket.OSSupportsIPv4\n- uid: System.Net.Sockets.Socket.OSSupportsIPv6\n  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv6\n  id: OSSupportsIPv6\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: OSSupportsIPv6\n  fullName: System.Net.Sockets.Socket.OSSupportsIPv6\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSSupportsIPv6\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 176\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).</p>\\n\"\n  syntax:\n    content: public static bool OSSupportsIPv6 { get; }\n    content.vb: Public Shared ReadOnly Property OSSupportsIPv6 As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operating system and network adaptors support the IPv6 protocol; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.OSSupportsIPv4\n    commentId: P:System.Net.Sockets.Socket.OSSupportsIPv4\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: Socket.OSSupportsIPv6\n- uid: System.Net.Sockets.Socket.ProtocolType\n  commentId: P:System.Net.Sockets.Socket.ProtocolType\n  id: ProtocolType\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ProtocolType\n  fullName: System.Net.Sockets.Socket.ProtocolType\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProtocolType\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 177\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the protocol type of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public ProtocolType ProtocolType { get; }\n    content.vb: Public ReadOnly Property ProtocolType As ProtocolType\n    parameters: []\n    return:\n      type: System.Net.Sockets.ProtocolType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.ProtocolType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.ProtocolType\n- uid: System.Net.Sockets.Socket.ReceiveBufferSize\n  commentId: P:System.Net.Sockets.Socket.ReceiveBufferSize\n  id: ReceiveBufferSize\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveBufferSize\n  fullName: System.Net.Sockets.Socket.ReceiveBufferSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveBufferSize\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 178\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies the size of the receive buffer of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int ReceiveBufferSize { get; set; }\n    content.vb: Public Property ReceiveBufferSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the size, in bytes, of the receive buffer. The default is 8192.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value specified for a set operation is less than 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ReceiveBufferSize\n- uid: System.Net.Sockets.Socket.ReceiveTimeout\n  commentId: P:System.Net.Sockets.Socket.ReceiveTimeout\n  id: ReceiveTimeout\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveTimeout\n  fullName: System.Net.Sockets.Socket.ReceiveTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveTimeout\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 179\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies the amount of time after which a synchronous <xref href=\\\"System.Net.Sockets.Socket.Receive(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> call will time out.</p>\\n\"\n  syntax:\n    content: public int ReceiveTimeout { get; set; }\n    content.vb: Public Property ReceiveTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value specified for a set operation is less than -1.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ReceiveTimeout\n- uid: System.Net.Sockets.Socket.RemoteEndPoint\n  commentId: P:System.Net.Sockets.Socket.RemoteEndPoint\n  id: RemoteEndPoint\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: RemoteEndPoint\n  fullName: System.Net.Sockets.Socket.RemoteEndPoint\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoteEndPoint\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 180\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the remote endpoint.</p>\\n\"\n  syntax:\n    content: public EndPoint RemoteEndPoint { get; }\n    content.vb: Public ReadOnly Property RemoteEndPoint As EndPoint\n    parameters: []\n    return:\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with which the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is communicating.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.EndPoint\n    commentId: T:System.Net.EndPoint\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Accept\n    commentId: M:System.Net.Sockets.Socket.Accept\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.RemoteEndPoint\n- uid: System.Net.Sockets.Socket.SendBufferSize\n  commentId: P:System.Net.Sockets.Socket.SendBufferSize\n  id: SendBufferSize\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendBufferSize\n  fullName: System.Net.Sockets.Socket.SendBufferSize\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendBufferSize\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 181\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies the size of the send buffer of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int SendBufferSize { get; set; }\n    content.vb: Public Property SendBufferSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the size, in bytes, of the send buffer. The default is 8192.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value specified for a set operation is less than 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SendBufferSize\n- uid: System.Net.Sockets.Socket.SendTimeout\n  commentId: P:System.Net.Sockets.Socket.SendTimeout\n  id: SendTimeout\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendTimeout\n  fullName: System.Net.Sockets.Socket.SendTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTimeout\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 182\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies the amount of time after which a synchronous <xref href=\\\"System.Net.Sockets.Socket.Send(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> call will time out.</p>\\n\"\n  syntax:\n    content: public int SendTimeout { get; set; }\n    content.vb: Public Property SendTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The value specified for a set operation is less than -1.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SendTimeout\n- uid: System.Net.Sockets.Socket.SocketType\n  commentId: P:System.Net.Sockets.Socket.SocketType\n  id: SocketType\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SocketType\n  fullName: System.Net.Sockets.Socket.SocketType\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SocketType\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 183\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets the type of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SocketType SocketType { get; }\n    content.vb: Public ReadOnly Property SocketType As SocketType\n    parameters: []\n    return:\n      type: System.Net.Sockets.SocketType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketType\n    commentId: T:System.Net.Sockets.SocketType\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: Socket.SocketType\n- uid: System.Net.Sockets.Socket.Ttl\n  commentId: P:System.Net.Sockets.Socket.Ttl\n  id: Ttl\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Ttl\n  fullName: System.Net.Sockets.Socket.Ttl\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Ttl\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 184\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public short Ttl { get; set; }\n    content.vb: Public Property Ttl As Short\n    parameters: []\n    return:\n      type: System.Int16\n      description: \"\\n<p>The TTL value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The TTL value can't be set to a negative number.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This property can be set only for sockets in the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetworkV6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> families.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Ttl\n- uid: System.Net.Sockets.Socket.Accept\n  commentId: M:System.Net.Sockets.Socket.Accept\n  id: Accept\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Accept()\n  fullName: System.Net.Sockets.Socket.Accept()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 185\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Creates a new <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a newly created connection.</p>\\n\"\n  syntax:\n    content: public Socket Accept()\n    content.vb: Public Function Accept As Socket\n    return:\n      type: System.Net.Sockets.Socket\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for a newly created connection.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The accepting socket is not listening for connections. You must call <xref href=\\\"System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> before calling <xref href=\\\"System.Net.Sockets.Socket.Accept\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Listen(System.Int32)\n    commentId: M:System.Net.Sockets.Socket.Listen(System.Int32)\n  - type: System.Net.Sockets.Socket.RemoteEndPoint\n    commentId: P:System.Net.Sockets.Socket.RemoteEndPoint\n  - type: System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)\n    commentId: M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Accept()\n- uid: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: AcceptAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AcceptAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 186\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins an asynchronous operation to accept an incoming connection attempt.</p>\\n\"\n  syntax:\n    content: public bool AcceptAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function AcceptAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation.</p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes. </p>\\n<p>This exception also occurs if multiple buffers are specified, the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not null.</p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>An argument is out of range. The exception occurs if the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Count\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is less than 0.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An invalid operation was requested. This exception occurs if the accepting <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not listening for connections or the accepted socket is bound. </p>\\n<p>You must call the <xref href=\\\"System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method before calling the <xref href=\\\"System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n<p>This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <em>e</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.AcceptAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  id: Bind(System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Bind(EndPoint)\n  fullName: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 187\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Associates a <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> with a local endpoint.</p>\\n\"\n  syntax:\n    content: public void Bind(EndPoint localEP)\n    content.vb: Public Sub Bind(localEP As EndPoint)\n    parameters:\n    - id: localEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>The local <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to associate with the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>localEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller higher in the call stack does not have permission for the requested operation. </p>\\n\"\n  seealso:\n  - type: System.Net.IPEndPoint\n    commentId: T:System.Net.IPEndPoint\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Listen(System.Int32)\n    commentId: M:System.Net.Sockets.Socket.Listen(System.Int32)\n  - type: System.Net.IPAddress\n    commentId: T:System.Net.IPAddress\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Bind(EndPoint)\n- uid: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: CancelConnectAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CancelConnectAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 188\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Cancels an asynchronous request for a remote host connection.</p>\\n\"\n  syntax:\n    content: public static void CancelConnectAsync(SocketAsyncEventArgs e)\n    content.vb: Public Shared Sub CancelConnectAsync(e As SocketAsyncEventArgs)\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to request the connection to the remote host by calling one of the <xref href=\\\"System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> methods.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>e</em> parameter cannot be null and the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Socket.CancelConnectAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  id: Connect(System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Connect(EndPoint)\n  fullName: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connect\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 189\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Establishes a connection to a remote host.</p>\\n\"\n  syntax:\n    content: public void Connect(EndPoint remoteEP)\n    content.vb: Public Sub Connect(remoteEP As EndPoint)\n    parameters:\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the remote device. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller higher in the call stack does not have permission for the requested operation. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>ing.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.Socket.Blocking\n    commentId: P:System.Net.Sockets.Socket.Blocking\n  - type: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n    commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Connect(EndPoint)\n- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)\n  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)\n  id: Connect(System.Net.IPAddress,System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Connect(IPAddress, Int32)\n  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connect\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 190\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Establishes a connection to a remote host. The host is specified by an IP address and a port number.</p>\\n\"\n  syntax:\n    content: public void Connect(IPAddress address, int port)\n    content.vb: Public Sub Connect(address As IPAddress, port As Integer)\n    parameters:\n    - id: address\n      type: System.Net.IPAddress\n      description: \"\\n<p>The IP address of the remote host.</p>\\n\"\n    - id: port\n      type: System.Int32\n      description: \"\\n<p>The port number of the remote host.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>address</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The port number is not valid.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is valid for sockets in the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetworkV6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> families.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>address</em> is zero.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>ing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Connect(IPAddress, Int32)\n- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)\n  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)\n  id: Connect(System.Net.IPAddress[],System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Connect(IPAddress[], Int32)\n  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connect\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 191\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.</p>\\n\"\n  syntax:\n    content: public void Connect(IPAddress[] addresses, int port)\n    content.vb: Public Sub Connect(addresses As IPAddress(), port As Integer)\n    parameters:\n    - id: addresses\n      type: System.Net.IPAddress[]\n      description: \"\\n<p>The IP addresses of the remote host.</p>\\n\"\n    - id: port\n      type: System.Int32\n      description: \"\\n<p>The port number of the remote host.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>addresses</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The port number is not valid.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is valid for sockets in the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetworkV6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> families.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>address</em> is zero.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>ing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Connect(System.Net.IPAddress(), System.Int32)\n  name.vb: Connect(IPAddress(), Int32)\n  nameWithType: Socket.Connect(IPAddress[], Int32)\n  nameWithType.vb: Socket.Connect(IPAddress(), Int32)\n- uid: System.Net.Sockets.Socket.Connect(System.String,System.Int32)\n  commentId: M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)\n  id: Connect(System.String,System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Connect(String, Int32)\n  fullName: System.Net.Sockets.Socket.Connect(System.String, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connect\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 192\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Establishes a connection to a remote host. The host is specified by a host name and a port number.</p>\\n\"\n  syntax:\n    content: public void Connect(string host, int port)\n    content.vb: Public Sub Connect(host As String, port As Integer)\n    parameters:\n    - id: host\n      type: System.String\n      description: \"\\n<p>The name of the remote host.</p>\\n\"\n    - id: port\n      type: System.Int32\n      description: \"\\n<p>The port number of the remote host.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>host</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The port number is not valid.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>This method is valid for sockets in the <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetwork\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.AddressFamily.InterNetworkV6\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> families.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>ing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Connect(String, Int32)\n- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ConnectAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConnectAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 193\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins an asynchronous request for a connection to a remote host.</p>\\n\"\n  syntax:\n    content: public bool ConnectAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function ConnectAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An argument is not valid. This exception occurs if multiple buffers are specified, the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not null. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>e</em> parameter cannot be null and the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is listening or a socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are not the same address family.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ConnectAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)\n  id: ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConnectAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 194\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins an asynchronous request for a connection to a remote host.</p>\\n\"\n  syntax:\n    content: public static bool ConnectAsync(SocketType socketType, ProtocolType protocolType, SocketAsyncEventArgs e)\n    content.vb: Public Shared Function ConnectAsync(socketType As SocketType, protocolType As ProtocolType, e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: socketType\n      type: System.Net.Sockets.SocketType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: protocolType\n      type: System.Net.Sockets.ProtocolType\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.ProtocolType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An argument is not valid. This exception occurs if multiple buffers are specified, the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not null. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>e</em> parameter cannot be null and the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is listening or a socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> are not the same address family.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller higher in the call stack does not have permission for the requested operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Socket.ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.Dispose\n  commentId: M:System.Net.Sockets.Socket.Dispose\n  id: Dispose\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Net.Sockets.Socket.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 195\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Releases all resources used by the current instance of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Dispose()\n- uid: System.Net.Sockets.Socket.Dispose(System.Boolean)\n  commentId: M:System.Net.Sockets.Socket.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Net.Sockets.Socket.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 196\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and optionally disposes of the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources. </p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: Socket.Dispose(Boolean)\n- uid: System.Net.Sockets.Socket.Finalize\n  commentId: M:System.Net.Sockets.Socket.Finalize\n  id: Finalize\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Finalize()\n  fullName: System.Net.Sockets.Socket.Finalize()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Finalize\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 197\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Frees resources used by the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected void Finalize()\n    content.vb: Protected Sub Finalize\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: Socket.Finalize()\n- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: GetSocketOption(SocketOptionLevel, SocketOptionName)\n  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 198\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Returns the value of a specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option, represented as an object.</p>\\n\"\n  syntax:\n    content: public object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName)\n    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName) As Object\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An object that represents the value of the option. When the <em>optionName</em> parameter is set to <xref href=\\\"System.Net.Sockets.SocketOptionName.Linger\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> the return value is an instance of the <xref href=\\\"System.Net.Sockets.LingerOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. When <em>optionName</em> is set to <xref href=\\\"System.Net.Sockets.SocketOptionName.AddMembership\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.SocketOptionName.DropMembership\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, the return value is an instance of the <xref href=\\\"System.Net.Sockets.MulticastOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. When <em>optionName</em> is any other value, the return value is an integer.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\\n<p>-or-</p>\\n<p>\\n<em>optionName</em> was set to the unsupported value <xref href=\\\"System.Net.Sockets.SocketOptionName.MaxConnections\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.GetSocketOption(SocketOptionLevel, SocketOptionName)\n- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])\n  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 199\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Returns the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option setting, represented as a byte array.</p>\\n\"\n  syntax:\n    content: public void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)\n    content.vb: Public Sub GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionValue\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is to receive the option setting. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n<p>- or -</p>\\n<p>In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <xref href=\\\"System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())\n  name.vb: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte())\n  nameWithType: Socket.GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])\n  nameWithType.vb: Socket.GetSocketOption(SocketOptionLevel, SocketOptionName, Byte())\n- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)\n  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 200\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Returns the value of the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option in an array.</p>\\n\"\n  syntax:\n    content: public byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionLength)\n    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionLength As Integer) As Byte()\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionLength\n      type: System.Int32\n      description: \"\\n<p>The length, in bytes, of the expected return value. </p>\\n\"\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the value of the socket option.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n<p>- or -</p>\\n<p>In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <xref href=\\\"System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)\n- uid: System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])\n  id: IOControl(System.Int32,System.Byte[],System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: IOControl(Int32, Byte[], Byte[])\n  fullName: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte[], System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IOControl\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 201\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets low-level operating modes for the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using numerical control codes.</p>\\n\"\n  syntax:\n    content: public int IOControl(int ioControlCode, byte[] optionInValue, byte[] optionOutValue)\n    content.vb: Public Function IOControl(ioControlCode As Integer, optionInValue As Byte(), optionOutValue As Byte()) As Integer\n    parameters:\n    - id: ioControlCode\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the control code of the operation to perform. </p>\\n\"\n    - id: optionInValue\n      type: System.Byte[]\n      description: \"\\n<p>A <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains the input data required by the operation. </p>\\n\"\n    - id: optionOutValue\n      type: System.Byte[]\n      description: \"\\n<p>A <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array that contains the output data returned by the operation. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes in the <em>optionOutValue</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An attempt was made to change the blocking mode without using the <xref href=\\\"System.Net.Sockets.Socket.Blocking\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte(), System.Byte())\n  name.vb: IOControl(Int32, Byte(), Byte())\n  nameWithType: Socket.IOControl(Int32, Byte[], Byte[])\n  nameWithType.vb: Socket.IOControl(Int32, Byte(), Byte())\n- uid: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])\n  id: IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: IOControl(IOControlCode, Byte[], Byte[])\n  fullName: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte[], System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IOControl\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 202\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets low-level operating modes for the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the <xref href=\\\"System.Net.Sockets.IOControlCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration to specify control codes.</p>\\n\"\n  syntax:\n    content: public int IOControl(IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue)\n    content.vb: Public Function IOControl(ioControlCode As IOControlCode, optionInValue As Byte(), optionOutValue As Byte()) As Integer\n    parameters:\n    - id: ioControlCode\n      type: System.Net.Sockets.IOControlCode\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.IOControlCode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the control code of the operation to perform. </p>\\n\"\n    - id: optionInValue\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the input data required by the operation. </p>\\n\"\n    - id: optionOutValue\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the output data returned by the operation. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes in the <em>optionOutValue</em> parameter.</p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>An attempt was made to change the blocking mode without using the <xref href=\\\"System.Net.Sockets.Socket.Blocking\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte(), System.Byte())\n  name.vb: IOControl(IOControlCode, Byte(), Byte())\n  nameWithType: Socket.IOControl(IOControlCode, Byte[], Byte[])\n  nameWithType.vb: Socket.IOControl(IOControlCode, Byte(), Byte())\n- uid: System.Net.Sockets.Socket.Listen(System.Int32)\n  commentId: M:System.Net.Sockets.Socket.Listen(System.Int32)\n  id: Listen(System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Listen(Int32)\n  fullName: System.Net.Sockets.Socket.Listen(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Listen\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 203\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Places a <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in a listening state.</p>\\n\"\n  syntax:\n    content: public void Listen(int backlog)\n    content.vb: Public Sub Listen(backlog As Integer)\n    parameters:\n    - id: backlog\n      type: System.Int32\n      description: \"\\n<p>The maximum length of the pending connections queue. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketOptionName.MaxConnections\n    commentId: F:System.Net.Sockets.SocketOptionName.MaxConnections\n  - type: System.Net.Sockets.Socket.Accept\n    commentId: M:System.Net.Sockets.Socket.Accept\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Listen(Int32)\n- uid: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  id: Poll(System.Int32,System.Net.Sockets.SelectMode)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Poll(Int32, SelectMode)\n  fullName: System.Net.Sockets.Socket.Poll(System.Int32, System.Net.Sockets.SelectMode)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Poll\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 204\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Determines the status of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Poll(int microSeconds, SelectMode mode)\n    content.vb: Public Function Poll(microSeconds As Integer, mode As SelectMode) As Boolean\n    parameters:\n    - id: microSeconds\n      type: System.Int32\n      description: \"\\n<p>The time to wait for a response, in microseconds. </p>\\n\"\n    - id: mode\n      type: System.Net.Sockets.SelectMode\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SelectMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>The status of the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> based on the polling mode value passed in the <em>mode</em> parameter.</p>\\n<p>Mode </p>\\n<p>Return Value </p>\\n<table><tbody><tr><td>\\n<p>\\n<xref href=\\\"System.Net.Sockets.SelectMode.SelectRead\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td><td>\\n<p>\\n<strong>true</strong> if <xref href=\\\"System.Net.Sockets.Socket.Listen(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been called and a connection is pending; </p>\\n<p>-or- </p>\\n<p>\\n<strong>true</strong> if data is available for reading; </p>\\n<p>-or- </p>\\n<p>\\n<strong>true</strong> if the connection has been closed, reset, or terminated; </p>\\n<p>otherwise, returns <strong>false</strong>. </p>\\n</td></tr><tr><td>\\n<p>\\n<xref href=\\\"System.Net.Sockets.SelectMode.SelectWrite\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td><td>\\n<p>\\n<strong>true</strong>, if processing a <xref href=\\\"System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and the connection has succeeded; </p>\\n<p>-or- </p>\\n<p>\\n<strong>true</strong> if data can be sent; </p>\\n<p>otherwise, returns <strong>false</strong>. </p>\\n</td></tr><tr><td>\\n<p>\\n<xref href=\\\"System.Net.Sockets.SelectMode.SelectError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td><td>\\n<p>\\n<strong>true</strong> if processing a <xref href=\\\"System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that does not block, and the connection has failed; </p>\\n<p>-or- </p>\\n<p>\\n<strong>true</strong> if <xref href=\\\"System.Net.Sockets.SocketOptionName.OutOfBandInline\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not set and out-of-band data is available; </p>\\n<p>otherwise, returns <strong>false</strong>. </p>\\n</td></tr></tbody></table>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The <em>mode</em> parameter is not one of the <xref href=\\\"System.Net.Sockets.SelectMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See remarks below. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SelectMode\n    commentId: T:System.Net.Sockets.SelectMode\n  - type: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n    commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Poll(Int32, SelectMode)\n- uid: System.Net.Sockets.Socket.Receive(System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[])\n  id: Receive(System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(Byte[])\n  fullName: System.Net.Sockets.Socket.Receive(System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 205\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into a receive buffer.</p>\\n\"\n  syntax:\n    content: public int Receive(byte[] buffer)\n    content.vb: Public Function Receive(buffer As Byte()) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for the received data. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte())\n  name.vb: Receive(Byte())\n  nameWithType: Socket.Receive(Byte[])\n  nameWithType.vb: Socket.Receive(Byte())\n- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(Byte[], Int32, Int32, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 206\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives the specified number of bytes from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the specified offset position of the receive buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags)\n    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for received data. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The location in <em>buffer</em> to store the received data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Net.Sockets.Socket.LocalEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was not set.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)\n  name.vb: Receive(Byte(), Int32, Int32, SocketFlags)\n  nameWithType: Socket.Receive(Byte[], Int32, Int32, SocketFlags)\n  nameWithType.vb: Socket.Receive(Byte(), Int32, Int32, SocketFlags)\n- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)\n  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 207\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into a receive buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)\n    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for the received data.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the <em>buffer</em> parameter to store the received data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: errorCode\n      type: System.Net.Sockets.SocketError\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.SocketError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that stores the socket error.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Net.Sockets.Socket.LocalEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is not set.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)\n  name.vb: Receive(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)\n  nameWithType: Socket.Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)\n  nameWithType.vb: Socket.Receive(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)\n- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  id: Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(Byte[], Int32, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 208\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives the specified number of bytes of data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into a receive buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(byte[] buffer, int size, SocketFlags socketFlags)\n    content.vb: Public Function Receive(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for the received data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>size</em> exceeds the size of <em>buffer</em>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)\n  name.vb: Receive(Byte(), Int32, SocketFlags)\n  nameWithType: Socket.Receive(Byte[], Int32, SocketFlags)\n  nameWithType.vb: Socket.Receive(Byte(), Int32, SocketFlags)\n- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)\n  id: Receive(System.Byte[],System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(Byte[], SocketFlags)\n  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 209\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into a receive buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(byte[] buffer, SocketFlags socketFlags)\n    content.vb: Public Function Receive(buffer As Byte(), socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for the received data. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Net.Sockets.SocketFlags)\n  name.vb: Receive(Byte(), SocketFlags)\n  nameWithType: Socket.Receive(Byte[], SocketFlags)\n  nameWithType.vb: Socket.Receive(Byte(), SocketFlags)\n- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(IList<ArraySegment<Byte>>)\n  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 210\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the list of receive buffers.</p>\\n\"\n  syntax:\n    content: public int Receive(IList<ArraySegment<byte>> buffers)\n    content.vb: Public Function Receive(buffers As IList(Of ArraySegment(Of Byte))) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the received data.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>buffer</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred while attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))\n  name.vb: Receive(IList(Of ArraySegment(Of Byte)))\n  nameWithType: Socket.Receive(IList<ArraySegment<Byte>>)\n  nameWithType.vb: Socket.Receive(IList(Of ArraySegment(Of Byte)))\n- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 211\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the list of receive buffers, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)\n    content.vb: Public Function Receive(buffers As IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the received data.</p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>buffers</em>.Count is zero.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred while attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: Receive(IList(Of ArraySegment(Of Byte)), SocketFlags)\n  nameWithType: Socket.Receive(IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: Socket.Receive(IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Receive(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)\n  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Receive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 212\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives data from a bound <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> into the list of receive buffers, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)\n    content.vb: Public Function Receive(buffers As IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the received data.</p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: errorCode\n      type: System.Net.Sockets.SocketError\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.SocketError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that stores the socket error.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>buffers</em>.Count is zero.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred while attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)\n  name.vb: Receive(IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)\n  nameWithType: Socket.Receive(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)\n  nameWithType.vb: Socket.Receive(IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)\n- uid: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 213\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins an asynchronous request to receive data from a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool ReceiveAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function ReceiveAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An argument was invalid. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Buffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties on the <em>e</em> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.BufferList\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.BufferList\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Offset\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ReceiveAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  id: ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)\n  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveFrom\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 214\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and stores the endpoint.</p>\\n\"\n  syntax:\n    content: public int ReceiveFrom(byte[] buffer, int offset, int size, SocketFlags socketFlags, ref EndPoint remoteEP)\n    content.vb: Public Function ReceiveFrom(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for received data. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the <em>buffer</em> parameter to store the received data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, passed by reference, that represents the remote server. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Net.Sockets.Socket.LocalEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was not set.</p>\\n<p>-or- </p>\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)\n  name.vb: ReceiveFrom(Byte(), Int32, Int32, SocketFlags, ByRef EndPoint)\n  nameWithType: Socket.ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)\n  nameWithType.vb: Socket.ReceiveFrom(Byte(), Int32, Int32, SocketFlags, ByRef EndPoint)\n- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  id: ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)\n  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveFrom\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 215\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives the specified number of bytes into the data buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and stores the endpoint.</p>\\n\"\n  syntax:\n    content: public int ReceiveFrom(byte[] buffer, int size, SocketFlags socketFlags, ref EndPoint remoteEP)\n    content.vb: Public Function ReceiveFrom(buffer As Byte(), size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for received data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, passed by reference, that represents the remote server. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Net.Sockets.Socket.LocalEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was not set.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)\n  name.vb: ReceiveFrom(Byte(), Int32, SocketFlags, ByRef EndPoint)\n  nameWithType: Socket.ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)\n  nameWithType.vb: Socket.ReceiveFrom(Byte(), Int32, SocketFlags, ByRef EndPoint)\n- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)\n  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)\n  id: ReceiveFrom(System.Byte[],System.Net.EndPoint@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveFrom(Byte[], ref EndPoint)\n  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], ref System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveFrom\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 216\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives a datagram into the data buffer and stores the endpoint.</p>\\n\"\n  syntax:\n    content: public int ReceiveFrom(byte[] buffer, ref EndPoint remoteEP)\n    content.vb: Public Function ReceiveFrom(buffer As Byte(), ByRef remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for received data. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, passed by reference, that represents the remote server. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), ByRef System.Net.EndPoint)\n  name.vb: ReceiveFrom(Byte(), ByRef EndPoint)\n  nameWithType: Socket.ReceiveFrom(Byte[], ref EndPoint)\n  nameWithType.vb: Socket.ReceiveFrom(Byte(), ByRef EndPoint)\n- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  id: ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveFrom(Byte[], SocketFlags, ref EndPoint)\n  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveFrom\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 217\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives a datagram into the data buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and stores the endpoint.</p>\\n\"\n  syntax:\n    content: public int ReceiveFrom(byte[] buffer, SocketFlags socketFlags, ref EndPoint remoteEP)\n    content.vb: Public Function ReceiveFrom(buffer As Byte(), socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for the received data. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, passed by reference, that represents the remote server. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)\n  name.vb: ReceiveFrom(Byte(), SocketFlags, ByRef EndPoint)\n  nameWithType: Socket.ReceiveFrom(Byte[], SocketFlags, ref EndPoint)\n  nameWithType.vb: Socket.ReceiveFrom(Byte(), SocketFlags, ByRef EndPoint)\n- uid: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveFromAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveFromAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 218\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins to asynchronously receive data from a specified network device.</p>\\n\"\n  syntax:\n    content: public bool ReceiveFromAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function ReceiveFromAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Offset\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset\n  - type: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ReceiveFromAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\n  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\n  id: ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)\n  fullName: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[], System.Int32, System.Int32, ref System.Net.Sockets.SocketFlags, ref System.Net.EndPoint, out System.Net.Sockets.IPPacketInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveMessageFrom\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 219\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and stores the endpoint and packet information.</p>\\n\"\n  syntax:\n    content: public int ReceiveMessageFrom(byte[] buffer, int offset, int size, ref SocketFlags socketFlags, ref EndPoint remoteEP, out IPPacketInformation ipPacketInformation)\n    content.vb: Public Function ReceiveMessageFrom(buffer As Byte(), offset As Integer, size As Integer, ByRef socketFlags As SocketFlags, ByRef remoteEP As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is the storage location for received data.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the <em>buffer</em> parameter to store the received data.</p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to receive.</p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>An <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, passed by reference, that represents the remote server.</p>\\n\"\n    - id: ipPacketInformation\n      type: System.Net.Sockets.IPPacketInformation\n      description: \"\\n<p>An <xref href=\\\"System.Net.Sockets.IPPacketInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> holding address and interface information.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes received.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>- or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>The <xref href=\\\"System.Net.Sockets.Socket.LocalEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was not set.</p>\\n<p>-or- </p>\\n<p>The .NET Framework is running on an AMD 64-bit processor.</p>\\n<p>-or- </p>\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The operating system is Windows 2000 or earlier, and this method requires Windows XP.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n    commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)\n  - type: System.Net.Sockets.Socket.Available\n    commentId: P:System.Net.Sockets.Socket.Available\n  - type: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n    commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  see:\n  - type: System.Net.SocketPermission\n    commentId: T:System.Net.SocketPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte(), System.Int32, System.Int32, ByRef System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint, ByRef System.Net.Sockets.IPPacketInformation)\n  name.vb: ReceiveMessageFrom(Byte(), Int32, Int32, ByRef SocketFlags, ByRef EndPoint, ByRef IPPacketInformation)\n  nameWithType: Socket.ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)\n  nameWithType.vb: Socket.ReceiveMessageFrom(Byte(), Int32, Int32, ByRef SocketFlags, ByRef EndPoint, ByRef IPPacketInformation)\n- uid: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: ReceiveMessageFromAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveMessageFromAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 220\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and stores the endpoint and packet information.</p>\\n\"\n  syntax:\n    content: public bool ReceiveMessageFromAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function ReceiveMessageFromAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Offset\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset\n  - type: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.ReceiveMessageFromAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)\n  commentId: M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)\n  id: Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Select(IList, IList, IList, Int32)\n  fullName: System.Net.Sockets.Socket.Select(System.Collections.IList, System.Collections.IList, System.Collections.IList, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Select\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 221\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Determines the status of one or more sockets.</p>\\n\"\n  syntax:\n    content: public static void Select(IList checkRead, IList checkWrite, IList checkError, int microSeconds)\n    content.vb: Public Shared Sub Select(checkRead As IList, checkWrite As IList, checkError As IList, microSeconds As Integer)\n    parameters:\n    - id: checkRead\n      type: System.Collections.IList\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances to check for readability. </p>\\n\"\n    - id: checkWrite\n      type: System.Collections.IList\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances to check for writability. </p>\\n\"\n    - id: checkError\n      type: System.Collections.IList\n      description: \"\\n<p>An <xref href=\\\"System.Collections.IList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances to check for errors. </p>\\n\"\n    - id: microSeconds\n      type: System.Int32\n      description: \"\\n<p>The time-out value, in microseconds. A -1 value indicates an infinite time-out.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>checkRead</em> parameter is <strong>null</strong> or empty.</p>\\n<p>-and- </p>\\n<p>The <em>checkWrite</em> parameter is <strong>null</strong> or empty </p>\\n<p>-and- </p>\\n<p>The <em>checkError</em> parameter is <strong>null</strong> or empty. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  seealso:\n  - type: System.Collections.IList\n    commentId: T:System.Collections.IList\n  - type: System.Net.Sockets.Socket.Accept\n    commentId: M:System.Net.Sockets.Socket.Accept\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n    commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: Socket.Select(IList, IList, IList, Int32)\n- uid: System.Net.Sockets.Socket.Send(System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[])\n  id: Send(System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(Byte[])\n  fullName: System.Net.Sockets.Socket.Send(System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 222\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(byte[] buffer)\n    content.vb: Public Function Send(buffer As Byte()) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte())\n  name.vb: Send(Byte())\n  nameWithType: Socket.Send(Byte[])\n  nameWithType.vb: Socket.Send(Byte())\n- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(Byte[], Int32, Int32, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 223\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the specified number of bytes of data to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, starting at the specified offset, and using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags)\n    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the data buffer at which to begin sending data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to send. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)\n  name.vb: Send(Byte(), Int32, Int32, SocketFlags)\n  nameWithType: Socket.Send(Byte[], Int32, Int32, SocketFlags)\n  nameWithType.vb: Socket.Send(Byte(), Int32, Int32, SocketFlags)\n- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(Byte[], Int32, Int32, SocketFlags, out SocketError)\n  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 224\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the specified number of bytes of data to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, starting at the specified offset, and using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n\"\n  syntax:\n    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)\n    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the data buffer at which to begin sending data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to send. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: errorCode\n      type: System.Net.Sockets.SocketError\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.SocketError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that stores the socket error.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)\n  name.vb: Send(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)\n  nameWithType: Socket.Send(Byte[], Int32, Int32, SocketFlags, out SocketError)\n  nameWithType.vb: Socket.Send(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)\n- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  id: Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(Byte[], Int32, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 225\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the specified number of bytes of data to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(byte[] buffer, int size, SocketFlags socketFlags)\n    content.vb: Public Function Send(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to send. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>size</em> is less than 0 or exceeds the size of the buffer. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)\n  name.vb: Send(Byte(), Int32, SocketFlags)\n  nameWithType: Socket.Send(Byte[], Int32, SocketFlags)\n  nameWithType.vb: Socket.Send(Byte(), Int32, SocketFlags)\n- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)\n  id: Send(System.Byte[],System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(Byte[], SocketFlags)\n  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 226\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(byte[] buffer, SocketFlags socketFlags)\n    content.vb: Public Function Send(buffer As Byte(), socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.SocketFlags\n    commentId: T:System.Net.Sockets.SocketFlags\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Net.Sockets.SocketFlags)\n  name.vb: Send(Byte(), SocketFlags)\n  nameWithType: Socket.Send(Byte[], SocketFlags)\n  nameWithType.vb: Socket.Send(Byte(), SocketFlags)\n- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(IList<ArraySegment<Byte>>)\n  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 227\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the set of buffers in the list to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(IList<ArraySegment<byte>> buffers)\n    content.vb: Public Function Send(buffers As IList(Of ArraySegment(Of Byte))) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffers</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>buffers</em> is empty.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See remarks section below. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))\n  name.vb: Send(IList(Of ArraySegment(Of Byte)))\n  nameWithType: Socket.Send(IList<ArraySegment<Byte>>)\n  nameWithType.vb: Socket.Send(IList(Of ArraySegment(Of Byte)))\n- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 228\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the set of buffers in the list to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)\n    content.vb: Public Function Send(buffers As IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent.</p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>buffers</em> is empty.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: Send(IList(Of ArraySegment(Of Byte)), SocketFlags)\n  nameWithType: Socket.Send(IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: Socket.Send(IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Send(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)\n  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Send\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 229\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the set of buffers in the list to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)\n    content.vb: Public Function Send(buffers As IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer\n    parameters:\n    - id: buffers\n      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n      description: \"\\n<p>A list of <xref href=\\\"System.ArraySegment`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>s of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent.</p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    - id: errorCode\n      type: System.Net.Sockets.SocketError\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.SocketError\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that stores the socket error.</p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent to the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffers</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>buffers</em> is empty.</p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)\n  name.vb: Send(IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)\n  nameWithType: Socket.Send(IList<ArraySegment<Byte>>, SocketFlags, out SocketError)\n  nameWithType.vb: Socket.Send(IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)\n- uid: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: SendAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 230\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data asynchronously to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool SendAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function SendAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Buffer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.BufferList\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> properties on the <em>e</em> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not yet connected or was not obtained via an <xref href=\\\"System.Net.Sockets.Socket.Accept\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>,or <xref href=\\\"System.Net.Sockets.Socket.BeginAccept\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, method.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.BufferList\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.BufferList\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Offset\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SendAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendPacketsAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendPacketsAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 231\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends a collection of files or in memory data buffers asynchronously to a connected <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public bool SendPacketsAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function SendPacketsAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The file specified in the <xref href=\\\"System.Net.Sockets.SendPacketsElement.FilePath\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was not found. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method. This exception also occurs if the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not connected to a remote host. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>A connectionless <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is being used and the file being sent exceeds the maximum packet size of the underlying transport.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\n  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SendPacketsAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  id: SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTo\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 232\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int SendTo(byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP)\n    content.vb: Public Function SendTo(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The position in the data buffer at which to begin sending data. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to send. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the destination location for the data. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>offset</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>offset</em> is greater than the length of <em>buffer</em>.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than 0.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>\\n<em>socketFlags</em> is not a valid combination of values.</p>\\n<p>-or- </p>\\n<p>An operating system error occurs while accessing the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: \"\\n<p>A caller in the call stack does not have the required permissions. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: SendTo(Byte(), Int32, Int32, SocketFlags, EndPoint)\n  nameWithType: Socket.SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)\n  nameWithType.vb: Socket.SendTo(Byte(), Int32, Int32, SocketFlags, EndPoint)\n- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  id: SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendTo(Byte[], Int32, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTo\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 233\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends the specified number of bytes of data to the specified endpoint using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int SendTo(byte[] buffer, int size, SocketFlags socketFlags, EndPoint remoteEP)\n    content.vb: Public Function SendTo(buffer As Byte(), size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to send. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the destination location for the data. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The specified <em>size</em> exceeds the size of <em>buffer</em>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: SendTo(Byte(), Int32, SocketFlags, EndPoint)\n  nameWithType: Socket.SendTo(Byte[], Int32, SocketFlags, EndPoint)\n  nameWithType.vb: Socket.SendTo(Byte(), Int32, SocketFlags, EndPoint)\n- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)\n  id: SendTo(System.Byte[],System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendTo(Byte[], EndPoint)\n  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTo\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 234\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data to the specified endpoint.</p>\\n\"\n  syntax:\n    content: public int SendTo(byte[] buffer, EndPoint remoteEP)\n    content.vb: Public Function SendTo(buffer As Byte(), remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the destination for the data. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.EndPoint)\n  name.vb: SendTo(Byte(), EndPoint)\n  nameWithType: Socket.SendTo(Byte[], EndPoint)\n  nameWithType.vb: Socket.SendTo(Byte(), EndPoint)\n- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  id: SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendTo(Byte[], SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTo\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 235\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data to a specific endpoint using the specified <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public int SendTo(byte[] buffer, SocketFlags socketFlags, EndPoint remoteEP)\n    content.vb: Public Function SendTo(buffer As Byte(), socketFlags As SocketFlags, remoteEP As EndPoint) As Integer\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the data to be sent. </p>\\n\"\n    - id: socketFlags\n      type: System.Net.Sockets.SocketFlags\n      description: \"\\n<p>A bitwise combination of the <xref href=\\\"System.Net.Sockets.SocketFlags\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: remoteEP\n      type: System.Net.EndPoint\n      description: \"\\n<p>The <xref href=\\\"System.Net.EndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the destination location for the data. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of bytes sent.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>buffer</em> is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>\\n<em>remoteEP</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n    commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)\n  - type: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  - type: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n    commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  - type: System.Net.Sockets.Socket.LocalEndPoint\n    commentId: P:System.Net.Sockets.Socket.LocalEndPoint\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: SendTo(Byte(), SocketFlags, EndPoint)\n  nameWithType: Socket.SendTo(Byte[], SocketFlags, EndPoint)\n  nameWithType.vb: Socket.SendTo(Byte(), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  commentId: M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  id: SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SendToAsync(SocketAsyncEventArgs)\n  fullName: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendToAsync\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 236\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sends data asynchronously to a specific remote host.</p>\\n\"\n  syntax:\n    content: public bool SendToAsync(SocketAsyncEventArgs e)\n    content.vb: Public Function SendToAsync(e As SocketAsyncEventArgs) As Boolean\n    parameters:\n    - id: e\n      type: System.Net.Sockets.SocketAsyncEventArgs\n      description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to use for this asynchronous socket operation.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <strong>true</strong> if the I/O operation is pending. The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. </p>\\n<p>Returns <strong>false</strong> if the I/O operation completed synchronously. In this case, The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.Completed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be null.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>A socket operation was already in progress using the <xref href=\\\"System.Net.Sockets.SocketAsyncEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object specified in the <em>e</em> parameter.</p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>Windows XP or later is required for this method.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>The protocol specified is connection-oriented, but the <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not yet connected.</p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketAsyncEventArgs\n    commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Buffer\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Buffer\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Completed\n    commentId: E:System.Net.Sockets.SocketAsyncEventArgs.Completed\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Count\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Count\n  - type: System.Net.Sockets.SocketAsyncEventArgs.Offset\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.Offset\n  - type: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint\n  - type: System.Net.Sockets.SocketAsyncEventArgs.UserToken\n    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.UserToken\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SendToAsync(SocketAsyncEventArgs)\n- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\n  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\n  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)\n  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 237\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option to the specified <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue)\n    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Boolean)\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionValue\n      type: System.Boolean\n      description: \"\\n<p>The value of the option, represented as a <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has been closed. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)\n- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])\n  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 238\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option to the specified value, represented as a byte array.</p>\\n\"\n  syntax:\n    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)\n    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionValue\n      type: System.Byte[]\n      description: \"\\n<p>An array of type <xref href=\\\"System.Byte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the value of the option. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  - type: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n    commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())\n  name.vb: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte())\n  nameWithType: Socket.SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])\n  nameWithType.vb: Socket.SetSocketOption(SocketOptionLevel, SocketOptionName, Byte())\n- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)\n  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 239\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option to the specified integer value.</p>\\n\"\n  syntax:\n    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue)\n    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Integer)\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionValue\n      type: System.Int32\n      description: \"\\n<p>A value of the option. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  - type: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n    commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)\n- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)\n  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)\n  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Object)\n  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SetSocketOption\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 240\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Sets the specified <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> option to the specified value, represented as an object.</p>\\n\"\n  syntax:\n    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue)\n    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Object)\n    parameters:\n    - id: optionLevel\n      type: System.Net.Sockets.SocketOptionLevel\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionName\n      type: System.Net.Sockets.SocketOptionName\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketOptionName\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n    - id: optionValue\n      type: System.Object\n      description: \"\\n<p>A <xref href=\\\"System.Net.Sockets.LingerOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Net.Sockets.MulticastOption\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the value of the option. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>optionValue</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  - type: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n    commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.SetSocketOption(SocketOptionLevel, SocketOptionName, Object)\n- uid: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  id: Shutdown(System.Net.Sockets.SocketShutdown)\n  parent: System.Net.Sockets.Socket\n  langs:\n  - csharp\n  - vb\n  name: Shutdown(SocketShutdown)\n  fullName: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Shutdown\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 241\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Disables sends and receives on a <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Shutdown(SocketShutdown how)\n    content.vb: Public Sub Shutdown(how As SocketShutdown)\n    parameters:\n    - id: how\n      type: System.Net.Sockets.SocketShutdown\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.Sockets.SocketShutdown\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that specifies the operation that will no longer be allowed. </p>\\n\"\n  exceptions:\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: \"\\n<p>An error occurred when attempting to access the socket. See the Remarks section for more information. </p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Net.Sockets.Socket\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been closed. </p>\\n\"\n  seealso:\n  - type: System.Net.Sockets.Socket.Close\n    commentId: M:System.Net.Sockets.Socket.Close\n  - type: System.Net.Sockets.SocketShutdown\n    commentId: T:System.Net.Sockets.SocketShutdown\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: Socket.Shutdown(SocketShutdown)\nreferences:\n- uid: System.Net.Sockets\n  isExternal: false\n  name: System.Net.Sockets\n  fullName: System.Net.Sockets\n  commentId: N:System.Net.Sockets\n  nameWithType: System.Net.Sockets\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  name: AcceptAsync()\n  fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync()\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  nameWithType: SocketTaskExtensions.AcceptAsync()\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n  name: AcceptAsync(Socket)\n  fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n  nameWithType: SocketTaskExtensions.AcceptAsync(Socket)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.EndPoint)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n  name: ConnectAsync(EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.EndPoint)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.EndPoint)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ConnectAsync(EndPoint)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress,System.Int32)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n  name: ConnectAsync(IPAddress, Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress, System.Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(IPAddress, Int32)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress[],System.Int32)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n  name: ConnectAsync(IPAddress[], Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress[], System.Int32)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress(), System.Int32)\n  name.vb: ConnectAsync(IPAddress(), Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress[],System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.IPAddress[],System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(IPAddress[], Int32)\n  nameWithType.vb: SocketTaskExtensions.ConnectAsync(IPAddress(), Int32)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.String,System.Int32)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n  name: ConnectAsync(String, Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.String, System.Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.String,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.String,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(String, Int32)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  name: ReceiveAsync(ArraySegment<Byte>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags)\n  name.vb: ReceiveAsync(ArraySegment(Of Byte), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.ReceiveAsync(ArraySegment<Byte>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.ReceiveAsync(ArraySegment(Of Byte), SocketFlags)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  name: ReceiveAsync(IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: ReceiveAsync(IList(Of ArraySegment(Of Byte)), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.ReceiveAsync(IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.ReceiveAsync(IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  name: ReceiveFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: ReceiveFromAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ReceiveFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.ReceiveFromAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  name: ReceiveMessageFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: ReceiveMessageFromAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveMessageFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveMessageFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ReceiveMessageFromAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.ReceiveMessageFromAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  name: SendAsync(ArraySegment<Byte>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags)\n  name.vb: SendAsync(ArraySegment(Of Byte), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.SendAsync(ArraySegment<Byte>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.SendAsync(ArraySegment(Of Byte), SocketFlags)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  name: SendAsync(IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: SendAsync(IList(Of ArraySegment(Of Byte)), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.SendAsync(IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.SendAsync(IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.Socket.System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  parent: System.Net.Sockets.SocketTaskExtensions\n  definition: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  name: SendToAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: SendToAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: SendToAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: SendToAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync\n  - name: (\n    fullName: (\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.SendToAsync(ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.SendToAsync(ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  isExternal: false\n  name: AcceptAsync(Socket)\n  fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)\n  nameWithType: SocketTaskExtensions.AcceptAsync(Socket)\n- uid: System.Net.Sockets.SocketTaskExtensions\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketTaskExtensions\n  fullName: System.Net.Sockets.SocketTaskExtensions\n  commentId: T:System.Net.Sockets.SocketTaskExtensions\n  nameWithType: SocketTaskExtensions\n- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n  isExternal: false\n  name: AcceptAsync(Socket, Socket)\n  fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket, System.Net.Sockets.Socket)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n    name: AcceptAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.AcceptAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)\n  nameWithType: SocketTaskExtensions.AcceptAsync(Socket, Socket)\n- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n  isExternal: true\n  name: ConnectAsync(Socket, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket, System.Net.EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, EndPoint)\n- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n  isExternal: true\n  name: ConnectAsync(Socket, IPAddress, Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket, System.Net.IPAddress, System.Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress, Int32)\n- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n  isExternal: true\n  name: ConnectAsync(Socket, IPAddress[], Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket, System.Net.IPAddress[], System.Int32)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket, System.Net.IPAddress(), System.Int32)\n  name.vb: ConnectAsync(Socket, IPAddress(), Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress[], Int32)\n  nameWithType.vb: SocketTaskExtensions.ConnectAsync(Socket, IPAddress(), Int32)\n- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n  isExternal: true\n  name: ConnectAsync(Socket, String, Int32)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket, System.String, System.Int32)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n    name: ConnectAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ConnectAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)\n  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, String, Int32)\n- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  isExternal: true\n  name: ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket, System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket, System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags)\n  name.vb: ReceiveAsync(Socket, ArraySegment(Of Byte), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment(Of Byte), SocketFlags)\n- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  isExternal: true\n  name: ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket, System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket, System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: ReceiveAsync(Socket, IList(Of ArraySegment(Of Byte)), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: ReceiveAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.ReceiveAsync(Socket, IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  isExternal: true\n  name: ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket, System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket, System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: ReceiveFromAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  isExternal: true\n  name: ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket, System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket, System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: ReceiveMessageFromAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveMessageFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: ReceiveMessageFromAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  isExternal: true\n  name: SendAsync(Socket, ArraySegment<Byte>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket, System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket, System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags)\n  name.vb: SendAsync(Socket, ArraySegment(Of Byte), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.SendAsync(Socket, ArraySegment<Byte>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.SendAsync(Socket, ArraySegment(Of Byte), SocketFlags)\n- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  isExternal: true\n  name: SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket, System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket, System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)\n  name.vb: SendAsync(Socket, IList(Of ArraySegment(Of Byte)), SocketFlags)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n    name: SendAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)\n  nameWithType: SocketTaskExtensions.SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)\n  nameWithType.vb: SocketTaskExtensions.SendAsync(Socket, IList(Of ArraySegment(Of Byte)), SocketFlags)\n- uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  isExternal: true\n  name: SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket, System.ArraySegment<System.Byte>, System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  fullname.vb: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket, System.ArraySegment(Of System.Byte), System.Net.Sockets.SocketFlags, System.Net.EndPoint)\n  name.vb: SendToAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n  spec.csharp:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: SendToAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n    name: SendToAsync\n    fullName: System.Net.Sockets.SocketTaskExtensions.SendToAsync\n  - name: (\n    fullName: (\n  - uid: System.Net.Sockets.Socket\n    name: Socket\n    fullName: System.Net.Sockets.Socket\n  - name: ', '\n    fullName: ', '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Sockets.SocketFlags\n    name: SocketFlags\n    fullName: System.Net.Sockets.SocketFlags\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.EndPoint\n    name: EndPoint\n    fullName: System.Net.EndPoint\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)\n  nameWithType: SocketTaskExtensions.SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)\n  nameWithType.vb: SocketTaskExtensions.SendToAsync(Socket, ArraySegment(Of Byte), SocketFlags, EndPoint)\n- uid: System.Net.Sockets.AddressFamily\n  parent: System.Net.Sockets\n  isExternal: false\n  name: AddressFamily\n  fullName: System.Net.Sockets.AddressFamily\n  commentId: T:System.Net.Sockets.AddressFamily\n  nameWithType: AddressFamily\n- uid: System.Net.Sockets.SocketType\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketType\n  fullName: System.Net.Sockets.SocketType\n  commentId: T:System.Net.Sockets.SocketType\n  nameWithType: SocketType\n- uid: System.Net.Sockets.ProtocolType\n  parent: System.Net.Sockets\n  isExternal: false\n  name: ProtocolType\n  fullName: System.Net.Sockets.ProtocolType\n  commentId: T:System.Net.Sockets.ProtocolType\n  nameWithType: ProtocolType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Net.Sockets.LingerOption\n  parent: System.Net.Sockets\n  isExternal: false\n  name: LingerOption\n  fullName: System.Net.Sockets.LingerOption\n  commentId: T:System.Net.Sockets.LingerOption\n  nameWithType: LingerOption\n- uid: System.Net.EndPoint\n  parent: System.Net\n  isExternal: false\n  name: EndPoint\n  fullName: System.Net.EndPoint\n  commentId: T:System.Net.EndPoint\n  nameWithType: EndPoint\n- uid: System.Net\n  isExternal: false\n  name: System.Net\n  fullName: System.Net\n  commentId: N:System.Net\n  nameWithType: System.Net\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  fullName: System.Int16\n  commentId: T:System.Int16\n  nameWithType: Int16\n- uid: System.Net.Sockets.Socket\n  parent: System.Net.Sockets\n  isExternal: false\n  name: Socket\n  fullName: System.Net.Sockets.Socket\n  commentId: T:System.Net.Sockets.Socket\n  nameWithType: Socket\n- uid: System.Net.Sockets.SocketAsyncEventArgs\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketAsyncEventArgs\n  fullName: System.Net.Sockets.SocketAsyncEventArgs\n  commentId: T:System.Net.Sockets.SocketAsyncEventArgs\n  nameWithType: SocketAsyncEventArgs\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  fullName: System.Net.IPAddress\n  commentId: T:System.Net.IPAddress\n  nameWithType: IPAddress\n- uid: System.Net.IPAddress[]\n  name: IPAddress[]\n  fullName: System.Net.IPAddress[]\n  fullname.vb: System.Net.IPAddress()\n  name.vb: IPAddress()\n  spec.csharp:\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.IPAddress\n    name: IPAddress\n    fullName: System.Net.IPAddress\n  - name: ()\n    fullName: ()\n  nameWithType: IPAddress[]\n  nameWithType.vb: IPAddress()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.Net.Sockets.SocketOptionLevel\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketOptionLevel\n  fullName: System.Net.Sockets.SocketOptionLevel\n  commentId: T:System.Net.Sockets.SocketOptionLevel\n  nameWithType: SocketOptionLevel\n- uid: System.Net.Sockets.SocketOptionName\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketOptionName\n  fullName: System.Net.Sockets.SocketOptionName\n  commentId: T:System.Net.Sockets.SocketOptionName\n  nameWithType: SocketOptionName\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Net.Sockets.IOControlCode\n  parent: System.Net.Sockets\n  isExternal: false\n  name: IOControlCode\n  fullName: System.Net.Sockets.IOControlCode\n  commentId: T:System.Net.Sockets.IOControlCode\n  nameWithType: IOControlCode\n- uid: System.Net.Sockets.SelectMode\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SelectMode\n  fullName: System.Net.Sockets.SelectMode\n  commentId: T:System.Net.Sockets.SelectMode\n  nameWithType: SelectMode\n- uid: System.Net.Sockets.SocketFlags\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketFlags\n  fullName: System.Net.Sockets.SocketFlags\n  commentId: T:System.Net.Sockets.SocketFlags\n  nameWithType: SocketFlags\n- uid: System.Net.Sockets.SocketError\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketError\n  fullName: System.Net.Sockets.SocketError\n  commentId: T:System.Net.Sockets.SocketError\n  nameWithType: SocketError\n- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IList`1\n  name: IList<ArraySegment<Byte>>\n  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>\n  fullname.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))\n  name.vb: IList(Of ArraySegment(Of Byte))\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    fullName: System.ArraySegment\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IList{System.ArraySegment{System.Byte}}\n  nameWithType: IList<ArraySegment<Byte>>\n  nameWithType.vb: IList(Of ArraySegment(Of Byte))\n- uid: System.Collections.Generic.IList`1\n  isExternal: false\n  name: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n  fullname.vb: System.Collections.Generic.IList(Of T)\n  name.vb: IList(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    fullName: System.Collections.Generic.IList\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IList`1\n  nameWithType: IList<T>\n  nameWithType.vb: IList(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Net.Sockets.IPPacketInformation\n  parent: System.Net.Sockets\n  isExternal: false\n  name: IPPacketInformation\n  fullName: System.Net.Sockets.IPPacketInformation\n  commentId: T:System.Net.Sockets.IPPacketInformation\n  nameWithType: IPPacketInformation\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  fullName: System.Collections.IList\n  commentId: T:System.Collections.IList\n  nameWithType: IList\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Net.Sockets.SocketShutdown\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketShutdown\n  fullName: System.Net.Sockets.SocketShutdown\n  commentId: T:System.Net.Sockets.SocketShutdown\n  nameWithType: SocketShutdown\n- uid: System.Net.Sockets.SocketException\n  isExternal: false\n  name: SocketException\n  fullName: System.Net.Sockets.SocketException\n  commentId: T:System.Net.Sockets.SocketException\n  nameWithType: SocketException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Security.SecurityException\n  isExternal: false\n  name: SecurityException\n  fullName: System.Security.SecurityException\n  nameWithType: SecurityException\n  commentId: T:System.Security.SecurityException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n"}