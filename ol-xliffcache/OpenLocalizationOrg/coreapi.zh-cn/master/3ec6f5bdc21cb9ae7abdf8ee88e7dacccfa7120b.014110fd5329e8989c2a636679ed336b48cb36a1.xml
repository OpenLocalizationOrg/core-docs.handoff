{"nodes":[{"pos":[492,509],"content":"MulticastDelegate","needQuote":true,"nodes":[{"content":"MulticastDelegate","pos":[0,17]}]},{"pos":[2292,2306],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with this instance.","pos":[3090,3136],"source":"\\n<p>The object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[3137,3143],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; and this instance have the same invocation lists; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3204,3339],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> and this instance have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[3510,3620],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[3621,3627],"source":" </p>\\n"},{"pos":[4109,4122],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[4830,4875],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[5036,5146],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[5147,5153],"source":" </p>\\n"},{"pos":[5652,5671],"content":"GetInvocationList()","needQuote":true,"nodes":[{"content":"GetInvocationList()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An array of delegates whose invocation lists collectively match the invocation list of this instance.&lt;/p&gt;\\n","pos":[6431,6543],"source":"\\n<p>An array of delegates whose invocation lists collectively match the invocation list of this instance.</p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[6710,6820],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[6821,6827],"source":" </p>\\n"},{"pos":[7467,7513],"content":"Equality(MulticastDelegate, MulticastDelegate)","needQuote":true,"nodes":[{"content":"Equality(MulticastDelegate, MulticastDelegate)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The left operand.","pos":[8363,8385],"source":"\\n<p>The left operand."},{"content":"&lt;/p&gt;\\n","pos":[8386,8392],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The right operand.","pos":[8464,8487],"source":"\\n<p>The right operand."},{"content":"&lt;/p&gt;\\n","pos":[8488,8494],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; and &lt;em&gt;d2&lt;/em&gt; have the same invocation lists; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8555,8687],"source":"\\n<p>\\n<strong>true</strong> if <em>d1</em> and <em>d2</em> have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[8806,8916],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[8917,8923],"source":" </p>\\n"},{"pos":[9561,9609],"content":"Inequality(MulticastDelegate, MulticastDelegate)","needQuote":true,"nodes":[{"content":"Inequality(MulticastDelegate, MulticastDelegate)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The left operand.","pos":[10468,10490],"source":"\\n<p>The left operand."},{"content":"&lt;/p&gt;\\n","pos":[10491,10497],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The right operand.","pos":[10569,10592],"source":"\\n<p>The right operand."},{"content":"&lt;/p&gt;\\n","pos":[10593,10599],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;d1&lt;/em&gt; and &lt;em&gt;d2&lt;/em&gt; do not have the same invocation lists; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10660,10799],"source":"\\n<p>\\n<strong>true</strong> if <em>d1</em> and <em>d2</em> do not have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.","pos":[10918,11028],"source":"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism."},{"content":"&lt;/p&gt;\\n","pos":[11029,11035],"source":" </p>\\n"},{"pos":[11386,11392],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11523,11529],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11676,11684],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[11853,11859],"content":"Target","needQuote":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[12083,12110],"content":"Combine(Delegate, Delegate)","needQuote":true,"nodes":[{"content":"Combine(Delegate, Delegate)","pos":[0,27]}]},{"pos":[12272,12279],"content":"Combine","needQuote":true,"nodes":[{"content":"Combine","pos":[0,7]}]},{"pos":[12328,12329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12381,12389],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[12431,12432]},{"pos":[12489,12497],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[12538,12539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12643,12650],"content":"Combine","needQuote":true,"nodes":[{"content":"Combine","pos":[0,7]}]},{"pos":[12699,12700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12752,12760],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[12802,12803]},{"pos":[12860,12868],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[12909,12910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13156,13175],"content":"Combine(Delegate[])","needQuote":true,"nodes":[{"content":"Combine(Delegate[])","pos":[0,19]}]},{"pos":[13397,13404],"content":"Combine","needQuote":true,"nodes":[{"content":"Combine","pos":[0,7]}]},{"pos":[13453,13454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13506,13514],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":"[]","pos":[13556,13558]},{"pos":[13589,13590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13680,13687],"content":"Combine","needQuote":true,"nodes":[{"content":"Combine","pos":[0,7]}]},{"pos":[13736,13737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13789,13797],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[13838,13840],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[13868,13869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14144,14167],"content":"DynamicInvoke(Object[])","needQuote":true,"nodes":[{"content":"DynamicInvoke(Object[])","pos":[0,23]}]},{"pos":[14405,14418],"content":"DynamicInvoke","needQuote":true,"nodes":[{"content":"DynamicInvoke","pos":[0,13]}]},{"pos":[14473,14474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14524,14530],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[14591,14593]},{"pos":[14624,14625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14719,14732],"content":"DynamicInvoke","needQuote":true,"nodes":[{"content":"DynamicInvoke","pos":[0,13]}]},{"pos":[14787,14788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14838,14844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14904,14906],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[14934,14935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15232,15258],"content":"Remove(Delegate, Delegate)","needQuote":true,"nodes":[{"content":"Remove(Delegate, Delegate)","pos":[0,26]}]},{"pos":[15418,15424],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[15472,15473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15525,15533],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[15575,15576]},{"pos":[15633,15641],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[15682,15683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15786,15792],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[15840,15841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15893,15901],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[15943,15944]},{"pos":[16001,16009],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[16050,16051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16311,16340],"content":"RemoveAll(Delegate, Delegate)","needQuote":true,"nodes":[{"content":"RemoveAll(Delegate, Delegate)","pos":[0,29]}]},{"pos":[16506,16515],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[16566,16567],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16619,16627],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[16669,16670]},{"pos":[16727,16735],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[16776,16777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16883,16892],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[16943,16944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16996,17004],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":",","pos":[17046,17047]},{"pos":[17104,17112],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[17153,17154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17381,17391],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17486,17494],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17563,17564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17591,17592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17662,17670],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17739,17740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17767,17768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17965,17987],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18135,18141],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18208,18209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18259,18265],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18326,18327]},{"pos":[18382,18388],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18448,18449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18546,18552],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18619,18620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18670,18676],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18737,18738]},{"pos":[18793,18799],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18859,18860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19105,19136],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19302,19317],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19393,19394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19444,19450],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19511,19512]},{"pos":[19567,19573],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19633,19634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19740,19755],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19831,19832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19882,19888],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19949,19950]},{"pos":[20005,20011],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20071,20072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20298,20307],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20400,20407],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20475,20476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20503,20504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20573,20580],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20648,20649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20676,20677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20852,20869],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20978,20993],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21069,21070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21097,21098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21175,21190],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21266,21267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21294,21295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21496,21510],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21633,21639],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21687,21688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21738,21744],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21804,21805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21890,21896],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21944,21945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21995,22001],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22061,22062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22239,22246],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22417,22430],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22535,22546],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22599,22600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22627,22628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22703,22714],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22767,22768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22795,22796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22960,22965],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23136,23155],"content":"GetInvocationList()","needQuote":true,"nodes":[{"content":"GetInvocationList()","pos":[0,19]}]},{"pos":[23272,23289],"content":"GetInvocationList","needQuote":true,"nodes":[{"content":"GetInvocationList","pos":[0,17]}]},{"pos":[23348,23349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23376,23377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23458,23475],"content":"GetInvocationList","needQuote":true,"nodes":[{"content":"GetInvocationList","pos":[0,17]}]},{"pos":[23534,23535],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23562,23563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23707,23717],"content":"Delegate[]","needQuote":true,"nodes":[{"content":"Delegate[]","pos":[0,10]}]},{"pos":[23853,23861],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"content":"[]","pos":[23903,23905]},{"pos":[23972,23980],"content":"Delegate","needQuote":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[24021,24023],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[24175,24192],"content":"MulticastDelegate","needQuote":true,"nodes":[{"content":"MulticastDelegate","pos":[0,17]}]},{"pos":[24385,24406],"content":"MemberAccessException","needQuote":true,"nodes":[{"content":"MemberAccessException","pos":[0,21]}]}],"content":"items:\n- uid: System.MulticastDelegate\n  commentId: T:System.MulticastDelegate\n  id: MulticastDelegate\n  parent: System\n  children:\n  - System.MulticastDelegate.Equals(System.Object)\n  - System.MulticastDelegate.GetHashCode\n  - System.MulticastDelegate.GetInvocationList\n  - System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  - System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  langs:\n  - csharp\n  - vb\n  name: MulticastDelegate\n  fullName: System.MulticastDelegate\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MulticastDelegate\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 13\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public abstract class MulticastDelegate : Delegate, ICloneable, ISerializable\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public MustInherit Class MulticastDelegate\n          Inherits\n           Delegate  Implements ICloneable, ISerializable\n  inheritance:\n  - System.Object\n  - System.Delegate\n  inheritedMembers:\n  - System.Delegate.Target\n  - System.Delegate.Combine(System.Delegate,System.Delegate)\n  - System.Delegate.Combine(System.Delegate[])\n  - System.Delegate.DynamicInvoke(System.Object[])\n  - System.Delegate.Remove(System.Delegate,System.Delegate)\n  - System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: MulticastDelegate\n- uid: System.MulticastDelegate.Equals(System.Object)\n  commentId: M:System.MulticastDelegate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.MulticastDelegate.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 102\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether this multicast delegate and the specified object are equal.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override sealed bool Equals(object obj)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public NotOverridable Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> and this instance have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Delegate.Equals(System.Object)\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: MulticastDelegate.Equals(Object)\n- uid: System.MulticastDelegate.GetHashCode\n  commentId: M:System.MulticastDelegate.GetHashCode\n  id: GetHashCode\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.MulticastDelegate.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 499\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override sealed int GetHashCode()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public NotOverridable Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Delegate.GetHashCode\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: MulticastDelegate.GetHashCode()\n- uid: System.MulticastDelegate.GetInvocationList\n  commentId: M:System.MulticastDelegate.GetInvocationList\n  id: GetInvocationList\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  - vb\n  name: GetInvocationList()\n  fullName: System.MulticastDelegate.GetInvocationList()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInvocationList\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 458\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Returns the invocation list of this multicast delegate, in invocation order.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override sealed Delegate[] GetInvocationList()\n    content.vb: \"<SecuritySafeCritical>\\nPublic NotOverridable Overrides Function GetInvocationList As \"\n    return:\n      type: System.Delegate[]\n      description: \"\\n<p>An array of delegates whose invocation lists collectively match the invocation list of this instance.</p>\\n\"\n  overridden: System.Delegate.GetInvocationList\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  nameWithType: MulticastDelegate.GetInvocationList()\n- uid: System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  commentId: M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  id: op_Equality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  - vb\n  name: Equality(MulticastDelegate, MulticastDelegate)\n  fullName: System.MulticastDelegate.Equality(System.MulticastDelegate, System.MulticastDelegate)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Equality\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 483\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether two <xref href=\\\"System.MulticastDelegate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are equal.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(MulticastDelegate d1, MulticastDelegate d2)\n    content.vb: Public Shared Operator =(d1 As MulticastDelegate, d2 As MulticastDelegate) As Boolean\n    parameters:\n    - id: d1\n      type: System.MulticastDelegate\n      description: \"\\n<p>The left operand. </p>\\n\"\n    - id: d2\n      type: System.MulticastDelegate\n      description: \"\\n<p>The right operand. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>d1</em> and <em>d2</em> have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: MulticastDelegate.Equality(MulticastDelegate, MulticastDelegate)\n- uid: System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  commentId: M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  id: op_Inequality(System.MulticastDelegate,System.MulticastDelegate)\n  parent: System.MulticastDelegate\n  langs:\n  - csharp\n  - vb\n  name: Inequality(MulticastDelegate, MulticastDelegate)\n  fullName: System.MulticastDelegate.Inequality(System.MulticastDelegate, System.MulticastDelegate)\n  type: Operator\n  source:\n    remote:\n      path: src/mscorlib/src/System/MulticastDelegate.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: op_Inequality\n    path: src/mscorlib/src/System/MulticastDelegate.cs\n    startLine: 491\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Determines whether two <xref href=\\\"System.MulticastDelegate\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects are not equal.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(MulticastDelegate d1, MulticastDelegate d2)\n    content.vb: Public Shared Operator <>(d1 As MulticastDelegate, d2 As MulticastDelegate) As Boolean\n    parameters:\n    - id: d1\n      type: System.MulticastDelegate\n      description: \"\\n<p>The left operand. </p>\\n\"\n    - id: d2\n      type: System.MulticastDelegate\n      description: \"\\n<p>The right operand. </p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>d1</em> and <em>d2</em> do not have the same invocation lists; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.MemberAccessException\n    commentId: T:System.MemberAccessException\n    description: \"\\n<p>Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism. </p>\\n\"\n  see:\n  - type: System.Security.Permissions.ReflectionPermission\n    commentId: T:System.Security.Permissions.ReflectionPermission\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: MulticastDelegate.Inequality(MulticastDelegate, MulticastDelegate)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  fullName: System.Delegate\n  nameWithType: Delegate\n  commentId: T:System.Delegate\n- uid: System.Delegate.Target\n  parent: System.Delegate\n  isExternal: false\n  name: Target\n  fullName: System.Delegate.Target\n  nameWithType: Delegate.Target\n  commentId: P:System.Delegate.Target\n- uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate, Delegate)\n  fullName: System.Delegate.Combine(System.Delegate, System.Delegate)\n  spec.csharp:\n  - uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n    name: Combine\n    fullName: System.Delegate.Combine\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n    name: Combine\n    fullName: System.Delegate.Combine\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  nameWithType: Delegate.Combine(Delegate, Delegate)\n  commentId: M:System.Delegate.Combine(System.Delegate,System.Delegate)\n- uid: System.Delegate.Combine(System.Delegate[])\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate[])\n  fullName: System.Delegate.Combine(System.Delegate[])\n  fullname.vb: System.Delegate.Combine(System.Delegate())\n  name.vb: Combine(Delegate())\n  spec.csharp:\n  - uid: System.Delegate.Combine(System.Delegate[])\n    name: Combine\n    fullName: System.Delegate.Combine\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.Combine(System.Delegate[])\n    name: Combine\n    fullName: System.Delegate.Combine\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Delegate.Combine(Delegate[])\n  nameWithType.vb: Delegate.Combine(Delegate())\n  commentId: M:System.Delegate.Combine(System.Delegate[])\n- uid: System.Delegate.DynamicInvoke(System.Object[])\n  parent: System.Delegate\n  isExternal: true\n  name: DynamicInvoke(Object[])\n  fullName: System.Delegate.DynamicInvoke(System.Object[])\n  fullname.vb: System.Delegate.DynamicInvoke(System.Object())\n  name.vb: DynamicInvoke(Object())\n  spec.csharp:\n  - uid: System.Delegate.DynamicInvoke(System.Object[])\n    name: DynamicInvoke\n    fullName: System.Delegate.DynamicInvoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.DynamicInvoke(System.Object[])\n    name: DynamicInvoke\n    fullName: System.Delegate.DynamicInvoke\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Delegate.DynamicInvoke(Object[])\n  nameWithType.vb: Delegate.DynamicInvoke(Object())\n  commentId: M:System.Delegate.DynamicInvoke(System.Object[])\n- uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Remove(Delegate, Delegate)\n  fullName: System.Delegate.Remove(System.Delegate, System.Delegate)\n  spec.csharp:\n  - uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n    name: Remove\n    fullName: System.Delegate.Remove\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n    name: Remove\n    fullName: System.Delegate.Remove\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  nameWithType: Delegate.Remove(Delegate, Delegate)\n  commentId: M:System.Delegate.Remove(System.Delegate,System.Delegate)\n- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: RemoveAll(Delegate, Delegate)\n  fullName: System.Delegate.RemoveAll(System.Delegate, System.Delegate)\n  spec.csharp:\n  - uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n    name: RemoveAll\n    fullName: System.Delegate.RemoveAll\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n    name: RemoveAll\n    fullName: System.Delegate.RemoveAll\n  - name: (\n    fullName: (\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: )\n    fullName: )\n  nameWithType: Delegate.RemoveAll(Delegate, Delegate)\n  commentId: M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Delegate.Equals(System.Object)\n  parent: System.Delegate\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Delegate.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Delegate.Equals(System.Object)\n    name: Equals\n    fullName: System.Delegate.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.Equals(System.Object)\n    name: Equals\n    fullName: System.Delegate.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Delegate.Equals(Object)\n  commentId: M:System.Delegate.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Delegate.GetHashCode\n  parent: System.Delegate\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Delegate.GetHashCode()\n  spec.csharp:\n  - uid: System.Delegate.GetHashCode\n    name: GetHashCode\n    fullName: System.Delegate.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.GetHashCode\n    name: GetHashCode\n    fullName: System.Delegate.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Delegate.GetHashCode()\n  commentId: M:System.Delegate.GetHashCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Delegate.GetInvocationList\n  parent: System.Delegate\n  isExternal: false\n  name: GetInvocationList()\n  fullName: System.Delegate.GetInvocationList()\n  spec.csharp:\n  - uid: System.Delegate.GetInvocationList\n    name: GetInvocationList\n    fullName: System.Delegate.GetInvocationList\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Delegate.GetInvocationList\n    name: GetInvocationList\n    fullName: System.Delegate.GetInvocationList\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Delegate.GetInvocationList()\n  commentId: M:System.Delegate.GetInvocationList\n- uid: System.Delegate[]\n  name: Delegate[]\n  fullName: System.Delegate[]\n  fullname.vb: System.Delegate()\n  name.vb: Delegate()\n  spec.csharp:\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Delegate\n    name: Delegate\n    fullName: System.Delegate\n  - name: ()\n    fullName: ()\n  nameWithType: Delegate[]\n  nameWithType.vb: Delegate()\n- uid: System.MulticastDelegate\n  parent: System\n  isExternal: false\n  name: MulticastDelegate\n  fullName: System.MulticastDelegate\n  nameWithType: MulticastDelegate\n  commentId: T:System.MulticastDelegate\n- uid: System.MemberAccessException\n  parent: System\n  isExternal: false\n  name: MemberAccessException\n  fullName: System.MemberAccessException\n  nameWithType: MemberAccessException\n  commentId: T:System.MemberAccessException\n"}