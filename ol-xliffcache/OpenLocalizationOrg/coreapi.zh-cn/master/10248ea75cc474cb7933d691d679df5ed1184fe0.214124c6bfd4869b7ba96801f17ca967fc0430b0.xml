{"nodes":[{"pos":[1558,1572],"content":"NewLateBinding","needQuote":true,"nodes":[{"content":"NewLateBinding","pos":[0,14]}]},{"pos":[3379,3457],"content":"LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)","needQuote":true,"nodes":[{"content":"LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)","pos":[0,78]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[4687,4761],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the call object.&lt;/p&gt;\\n","pos":[4822,4861],"source":"\\n<p>The type of the call object.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\\n","pos":[4930,4995],"source":"\\n<p>The name of the property or method on the call object.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[5065,5162],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[5236,5274],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\\n","pos":[5346,5436],"source":"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n"},{"content":"\\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.","pos":[5506,5674],"source":"\\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters."},{"content":"Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\\n","pos":[5675,5832],"source":" Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value indicating whether or not the return value can be ignored.&lt;/p&gt;\\n","pos":[5904,6006],"source":"\\n<p>A <strong>Boolean</strong> value indicating whether or not the return value can be ignored.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\\n","pos":[6066,6108],"source":"\\n<p>An instance of the call object.</p>\\n"},{"pos":[7278,7346],"content":"LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])","needQuote":true,"nodes":[{"content":"LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])","pos":[0,68]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[8522,8596],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the call object.&lt;/p&gt;\\n","pos":[8657,8696],"source":"\\n<p>The type of the call object.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\\n","pos":[8765,8830],"source":"\\n<p>The name of the property or method on the call object.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[8900,8997],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[9071,9109],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\\n","pos":[9181,9271],"source":"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n"},{"content":"\\n&lt;p&gt;An array of &lt;strong&gt;Boolean&lt;/strong&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;strong&gt;ByRef&lt;/strong&gt; parameters.","pos":[9341,9509],"source":"\\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters."},{"content":"Each &lt;strong&gt;True&lt;/strong&gt; value indicates that the arguments matched and should be copied out after the call to &lt;strong&gt;LateCall&lt;/strong&gt; is complete.&lt;/p&gt;\\n","pos":[9510,9667],"source":" Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\\n","pos":[9727,9769],"source":"\\n<p>An instance of the call object.</p>\\n"},{"pos":[10736,10776],"content":"LateIndexGet(Object, Object[], String[])","needQuote":true,"nodes":[{"content":"LateIndexGet(Object, Object[], String[])","pos":[0,40]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[11758,11832],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[11902,11999],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[12073,12111],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An instance of the call object.&lt;/p&gt;\\n","pos":[12171,12213],"source":"\\n<p>An instance of the call object.</p>\\n"},{"pos":[13040,13080],"content":"LateIndexSet(Object, Object[], String[])","needQuote":true,"nodes":[{"content":"LateIndexSet(Object, Object[], String[])","pos":[0,40]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[14044,14118],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[14188,14285],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[14359,14397],"source":"\\n<p>An array of argument names.</p>\\n"},{"pos":[15335,15400],"content":"LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)","needQuote":true,"nodes":[{"content":"LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)","pos":[0,65]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[16510,16584],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[16654,16751],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[16825,16863],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.","pos":[16936,17028],"source":"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17029,17180],"source":" Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.","pos":[17250,17379],"source":"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.","pos":[17380,17609],"source":" Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types."},{"content":"Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[17610,17657],"source":" Otherwise, set to <strong>False</strong>.</p>\\n"},{"pos":[18703,18760],"content":"LateSet(Object, Type, String, Object[], String[], Type[])","needQuote":true,"nodes":[{"content":"LateSet(Object, Type, String, Object[], String[], Type[])","pos":[0,57]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[19860,19934],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the call object.&lt;/p&gt;\\n","pos":[19995,20034],"source":"\\n<p>The type of the call object.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\\n","pos":[20103,20168],"source":"\\n<p>The name of the property or method on the call object.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[20238,20335],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[20409,20447],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\\n","pos":[20519,20609],"source":"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n"},{"pos":[21813,21898],"content":"LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)","needQuote":true,"nodes":[{"content":"LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)","pos":[0,85]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[23189,23263],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the call object.&lt;/p&gt;\\n","pos":[23324,23363],"source":"\\n<p>The type of the call object.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\\n","pos":[23432,23497],"source":"\\n<p>The name of the property or method on the call object.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[23567,23664],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[23738,23776],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\\n","pos":[23848,23938],"source":"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.","pos":[24011,24103],"source":"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24104,24255],"source":" Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.","pos":[24325,24454],"source":"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.","pos":[24455,24684],"source":" Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types."},{"content":"Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[24685,24732],"source":" Otherwise, set to <strong>False</strong>.</p>\\n"},{"pos":[26412,26494],"content":"LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)","needQuote":true,"nodes":[{"content":"LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)","pos":[0,82]}]},{"content":"\\n&lt;p&gt;An instance of the call object exposing the property or method.&lt;/p&gt;\\n","pos":[27740,27814],"source":"\\n<p>An instance of the call object exposing the property or method.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the call object.&lt;/p&gt;\\n","pos":[27875,27914],"source":"\\n<p>The type of the call object.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the property or method on the call object.&lt;/p&gt;\\n","pos":[27983,28048],"source":"\\n<p>The name of the property or method on the call object.</p>\\n"},{"content":"\\n&lt;p&gt;An array containing the arguments to be passed to the property or method being called.&lt;/p&gt;\\n","pos":[28118,28215],"source":"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument names.&lt;/p&gt;\\n","pos":[28289,28327],"source":"\\n<p>An array of argument names.</p>\\n"},{"content":"\\n&lt;p&gt;An array of argument types; used only for generic calls to pass argument types.&lt;/p&gt;\\n","pos":[28399,28489],"source":"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value used to determine whether the set operation will work.","pos":[28562,28654],"source":"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[28655,28806],"source":" Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;Boolean&lt;/strong&gt; value that specifies when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;.","pos":[28876,29005],"source":"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>."},{"content":"Set to &lt;strong&gt;True&lt;/strong&gt; when the base reference of the late reference is an &lt;strong&gt;RValue&lt;/strong&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;strong&gt;RValues&lt;/strong&gt; of value types.","pos":[29006,29235],"source":" Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types."},{"content":"Otherwise, set to &lt;strong&gt;False&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[29236,29283],"source":" Otherwise, set to <strong>False</strong>.</p>\\n"},{"pos":[29984,30022],"content":"Microsoft.VisualBasic.CompilerServices","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic.CompilerServices","pos":[0,38]}]},{"pos":[30249,30255],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30415,30425],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30520,30528],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30597,30598],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30625,30626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30696,30704],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30773,30774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30801,30802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30985,30999],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[31118,31124],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31191,31192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31242,31248],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31308,31309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31392,31398],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[31465,31466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31516,31522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31582,31583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31797,31819],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[31967,31973],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32040,32041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32091,32097],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32158,32159]},{"pos":[32214,32220],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32280,32281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32378,32384],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[32451,32452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32502,32508],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[32569,32570]},{"pos":[32625,32631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32691,32692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32937,32968],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[33134,33149],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33225,33226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33276,33282],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33343,33344]},{"pos":[33399,33405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33465,33466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33572,33587],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[33663,33664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33714,33720],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[33781,33782]},{"pos":[33837,33843],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33903,33904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34134,34147],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[34248,34259],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34331,34332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34359,34360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34433,34444],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[34516,34517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34544,34545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34720,34729],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[34822,34829],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[34897,34898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34925,34926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34995,35002],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[35070,35071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35098,35099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35274,35291],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[35400,35415],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35491,35492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35519,35520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35597,35612],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[35688,35689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35716,35717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35862,35868],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[35997,36001],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[36140,36146],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36256,36264],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[36392,36398],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[36459,36461]},{"pos":[36526,36532],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36592,36594],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[36696,36704],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[36832,36838],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[36899,36901]},{"pos":[36966,36972],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37032,37034],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37134,37140],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[37260,37264],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[37302,37304]},{"pos":[37367,37371],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37408,37410],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37509,37518],"content":"Boolean[]","needQuote":true,"nodes":[{"content":"Boolean[]","pos":[0,9]}]},{"pos":[37650,37657],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":"[]","pos":[37719,37721]},{"pos":[37787,37794],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37855,37857],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[37997,38004],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38184,38192],"content":"CallType","needQuote":true,"nodes":[{"content":"CallType","pos":[0,8]}]},{"pos":[38364,38385],"content":"Microsoft.VisualBasic","needQuote":true,"nodes":[{"content":"Microsoft.VisualBasic","pos":[0,21]}]}],"content":"items:\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  commentId: T:Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  id: NewLateBinding\n  parent: Microsoft.VisualBasic.CompilerServices\n  children:\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)\n  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)\n  langs:\n  - csharp\n  - vb\n  name: NewLateBinding\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  type: Class\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NewLateBinding\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 121\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public sealed class NewLateBinding\n    content.vb: Public NotInheritable Class NewLateBinding\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: NewLateBinding\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)\n  id: LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean[], System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateCall\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 125\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static object LateCall(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool[] CopyBack, bool IgnoreReturn)\n    content.vb: Public Shared Function LateCall(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), CopyBack As Boolean(), IgnoreReturn As Boolean) As Object\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Type\n      type: System.Type\n      description: \"\\n<p>The type of the call object.</p>\\n\"\n    - id: MemberName\n      type: System.String\n      description: \"\\n<p>The name of the property or method on the call object.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: TypeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n\"\n    - id: CopyBack\n      type: System.Boolean[]\n      description: \"\\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters. Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\\n\"\n    - id: IgnoreReturn\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value indicating whether or not the return value can be ignored.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the call object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean(), System.Boolean)\n  name.vb: LateCall(Object, Type, String, Object(), String(), Type(), Boolean(), Boolean)\n  nameWithType: NewLateBinding.LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)\n  nameWithType.vb: NewLateBinding.LateCall(Object, Type, String, Object(), String(), Type(), Boolean(), Boolean)\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])\n  id: LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean[])\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateGet\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 126\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static object LateGet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool[] CopyBack)\n    content.vb: Public Shared Function LateGet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), CopyBack As Boolean()) As Object\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Type\n      type: System.Type\n      description: \"\\n<p>The type of the call object.</p>\\n\"\n    - id: MemberName\n      type: System.String\n      description: \"\\n<p>The name of the property or method on the call object.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: TypeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n\"\n    - id: CopyBack\n      type: System.Boolean[]\n      description: \"\\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters. Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the call object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean())\n  name.vb: LateGet(Object, Type, String, Object(), String(), Type(), Boolean())\n  nameWithType: NewLateBinding.LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])\n  nameWithType.vb: NewLateBinding.LateGet(Object, Type, String, Object(), String(), Type(), Boolean())\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])\n  id: LateIndexGet(System.Object,System.Object[],System.String[])\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateIndexGet(Object, Object[], String[])\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object, System.Object[], System.String[])\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateIndexGet\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 127\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static object LateIndexGet(object Instance, object[] Arguments, string[] ArgumentNames)\n    content.vb: Public Shared Function LateIndexGet(Instance As Object, Arguments As Object(), ArgumentNames As String()) As Object\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>An instance of the call object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object, System.Object(), System.String())\n  name.vb: LateIndexGet(Object, Object(), String())\n  nameWithType: NewLateBinding.LateIndexGet(Object, Object[], String[])\n  nameWithType.vb: NewLateBinding.LateIndexGet(Object, Object(), String())\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])\n  id: LateIndexSet(System.Object,System.Object[],System.String[])\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateIndexSet(Object, Object[], String[])\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object, System.Object[], System.String[])\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateIndexSet\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 128\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static void LateIndexSet(object Instance, object[] Arguments, string[] ArgumentNames)\n    content.vb: Public Shared Sub LateIndexSet(Instance As Object, Arguments As Object(), ArgumentNames As String())\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object, System.Object(), System.String())\n  name.vb: LateIndexSet(Object, Object(), String())\n  nameWithType: NewLateBinding.LateIndexSet(Object, Object[], String[])\n  nameWithType.vb: NewLateBinding.LateIndexSet(Object, Object(), String())\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)\n  id: LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object, System.Object[], System.String[], System.Boolean, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateIndexSetComplex\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 129\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static void LateIndexSetComplex(object Instance, object[] Arguments, string[] ArgumentNames, bool OptimisticSet, bool RValueBase)\n    content.vb: Public Shared Sub LateIndexSetComplex(Instance As Object, Arguments As Object(), ArgumentNames As String(), OptimisticSet As Boolean, RValueBase As Boolean)\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: OptimisticSet\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n\"\n    - id: RValueBase\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object, System.Object(), System.String(), System.Boolean, System.Boolean)\n  name.vb: LateIndexSetComplex(Object, Object(), String(), Boolean, Boolean)\n  nameWithType: NewLateBinding.LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)\n  nameWithType.vb: NewLateBinding.LateIndexSetComplex(Object, Object(), String(), Boolean, Boolean)\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])\n  id: LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateSet(Object, Type, String, Object[], String[], Type[])\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateSet\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 130\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static void LateSet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments)\n    content.vb: Public Shared Sub LateSet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type())\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Type\n      type: System.Type\n      description: \"\\n<p>The type of the call object.</p>\\n\"\n    - id: MemberName\n      type: System.String\n      description: \"\\n<p>The name of the property or method on the call object.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: TypeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type())\n  name.vb: LateSet(Object, Type, String, Object(), String(), Type())\n  nameWithType: NewLateBinding.LateSet(Object, Type, String, Object[], String[], Type[])\n  nameWithType.vb: NewLateBinding.LateSet(Object, Type, String, Object(), String(), Type())\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)\n  id: LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean, System.Boolean, Microsoft.VisualBasic.CallType)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateSet\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 131\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static void LateSet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool OptimisticSet, bool RValueBase, CallType CallType)\n    content.vb: Public Shared Sub LateSet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), OptimisticSet As Boolean, RValueBase As Boolean, CallType As CallType)\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Type\n      type: System.Type\n      description: \"\\n<p>The type of the call object.</p>\\n\"\n    - id: MemberName\n      type: System.String\n      description: \"\\n<p>The name of the property or method on the call object.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: TypeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n\"\n    - id: OptimisticSet\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n\"\n    - id: RValueBase\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\\n\"\n    - id: CallType\n      type: Microsoft.VisualBasic.CallType\n      description: \"\\n<p>An enumeration member of type <xref href=\\\"Microsoft.VisualBasic.CallType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the type of procedure being called. The value of CallType can be <strong>Method</strong>, <strong>Get</strong>, or <strong>Set</strong>. Only <strong>Set</strong> is used.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean, System.Boolean, Microsoft.VisualBasic.CallType)\n  name.vb: LateSet(Object, Type, String, Object(), String(), Type(), Boolean, Boolean, CallType)\n  nameWithType: NewLateBinding.LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)\n  nameWithType.vb: NewLateBinding.LateSet(Object, Type, String, Object(), String(), Type(), Boolean, Boolean, CallType)\n- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)\n  id: LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)\n  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding\n  langs:\n  - csharp\n  - vb\n  name: LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)\n  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LateSetComplex\n    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs\n    startLine: 132\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.CompilerServices\n  summary: \"\\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\\n\"\n  syntax:\n    content: public static void LateSetComplex(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool OptimisticSet, bool RValueBase)\n    content.vb: Public Shared Sub LateSetComplex(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), OptimisticSet As Boolean, RValueBase As Boolean)\n    parameters:\n    - id: Instance\n      type: System.Object\n      description: \"\\n<p>An instance of the call object exposing the property or method.</p>\\n\"\n    - id: Type\n      type: System.Type\n      description: \"\\n<p>The type of the call object.</p>\\n\"\n    - id: MemberName\n      type: System.String\n      description: \"\\n<p>The name of the property or method on the call object.</p>\\n\"\n    - id: Arguments\n      type: System.Object[]\n      description: \"\\n<p>An array containing the arguments to be passed to the property or method being called.</p>\\n\"\n    - id: ArgumentNames\n      type: System.String[]\n      description: \"\\n<p>An array of argument names.</p>\\n\"\n    - id: TypeArguments\n      type: System.Type[]\n      description: \"\\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\\n\"\n    - id: OptimisticSet\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\\n\"\n    - id: RValueBase\n      type: System.Boolean\n      description: \"\\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean, System.Boolean)\n  name.vb: LateSetComplex(Object, Type, String, Object(), String(), Type(), Boolean, Boolean)\n  nameWithType: NewLateBinding.LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)\n  nameWithType.vb: NewLateBinding.LateSetComplex(Object, Type, String, Object(), String(), Type(), Boolean, Boolean)\nreferences:\n- uid: Microsoft.VisualBasic.CompilerServices\n  isExternal: false\n  name: Microsoft.VisualBasic.CompilerServices\n  fullName: Microsoft.VisualBasic.CompilerServices\n  commentId: N:Microsoft.VisualBasic.CompilerServices\n  nameWithType: Microsoft.VisualBasic.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Boolean[]\n  name: Boolean[]\n  fullName: System.Boolean[]\n  fullname.vb: System.Boolean()\n  name.vb: Boolean()\n  spec.csharp:\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Boolean[]\n  nameWithType.vb: Boolean()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: Microsoft.VisualBasic.CallType\n  parent: Microsoft.VisualBasic\n  isExternal: false\n  name: CallType\n  fullName: Microsoft.VisualBasic.CallType\n  commentId: T:Microsoft.VisualBasic.CallType\n  nameWithType: CallType\n- uid: Microsoft.VisualBasic\n  isExternal: false\n  name: Microsoft.VisualBasic\n  fullName: Microsoft.VisualBasic\n  commentId: N:Microsoft.VisualBasic\n  nameWithType: Microsoft.VisualBasic\n"}