{"nodes":[{"pos":[491,508],"content":"DbProviderFactory","needQuote":true,"nodes":[{"content":"DbProviderFactory","pos":[0,17]}]},{"pos":[1861,1880],"content":"DbProviderFactory()","needQuote":true,"nodes":[{"content":"DbProviderFactory()","pos":[0,19]}]},{"pos":[2910,2925],"content":"CreateCommand()","needQuote":true,"nodes":[{"content":"CreateCommand()","pos":[0,15]}]},{"pos":[4249,4267],"content":"CreateConnection()","needQuote":true,"nodes":[{"content":"CreateConnection()","pos":[0,18]}]},{"pos":[5660,5691],"content":"CreateConnectionStringBuilder()","needQuote":true,"nodes":[{"content":"CreateConnectionStringBuilder()","pos":[0,31]}]},{"pos":[7172,7189],"content":"CreateParameter()","needQuote":true,"nodes":[{"content":"CreateParameter()","pos":[0,17]}]},{"pos":[8364,8382],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[8549,8555],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8715,8725],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8820,8828],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8897,8898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8925,8926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8996,9004],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9073,9074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9101,9102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9285,9299],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9418,9424],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9491,9492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9542,9548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9608,9609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9692,9698],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9765,9766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9816,9822],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9882,9883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10097,10119],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10267,10273],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10340,10341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10391,10397],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10458,10459]},{"pos":[10514,10520],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10580,10581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10678,10684],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10751,10752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10802,10808],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10869,10870]},{"pos":[10925,10931],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10991,10992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11237,11268],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11434,11449],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11525,11526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11576,11582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11643,11644]},{"pos":[11699,11705],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11765,11766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11872,11887],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11963,11964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12014,12020],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12081,12082]},{"pos":[12137,12143],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12203,12204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12434,12447],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12548,12559],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12631,12632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12659,12660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12733,12744],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12816,12817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12844,12845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13020,13029],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13122,13129],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13197,13198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13225,13226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13295,13302],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13370,13371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13398,13399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13574,13591],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13700,13715],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13791,13792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13819,13820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13897,13912],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13988,13989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14016,14017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14162,14168],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14326,14335],"content":"DbCommand","needQuote":true,"nodes":[{"content":"DbCommand","pos":[0,9]}]},{"pos":[14543,14555],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[14785,14810],"content":"DbConnectionStringBuilder","needQuote":true,"nodes":[{"content":"DbConnectionStringBuilder","pos":[0,25]}]},{"pos":[15065,15076],"content":"DbParameter","needQuote":true,"nodes":[{"content":"DbParameter","pos":[0,11]}]}],"content":"items:\n- uid: System.Data.Common.DbProviderFactory\n  commentId: T:System.Data.Common.DbProviderFactory\n  id: DbProviderFactory\n  parent: System.Data.Common\n  children:\n  - System.Data.Common.DbProviderFactory.#ctor\n  - System.Data.Common.DbProviderFactory.CreateCommand\n  - System.Data.Common.DbProviderFactory.CreateConnection\n  - System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder\n  - System.Data.Common.DbProviderFactory.CreateParameter\n  langs:\n  - csharp\n  - vb\n  name: DbProviderFactory\n  fullName: System.Data.Common.DbProviderFactory\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbProviderFactory\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 18\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Represents a set of methods for creating instances of a provider's implementation of the data source classes.</p>\\n\"\n  syntax:\n    content: public abstract class DbProviderFactory\n    content.vb: Public MustInherit Class DbProviderFactory\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: DbProviderFactory\n- uid: System.Data.Common.DbProviderFactory.#ctor\n  commentId: M:System.Data.Common.DbProviderFactory.#ctor\n  id: '#ctor'\n  parent: System.Data.Common.DbProviderFactory\n  langs:\n  - csharp\n  - vb\n  name: DbProviderFactory()\n  fullName: System.Data.Common.DbProviderFactory.DbProviderFactory()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 20\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Initializes a new instance of a <xref href=\\\"System.Data.Common.DbProviderFactory\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected DbProviderFactory()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: DbProviderFactory.DbProviderFactory()\n- uid: System.Data.Common.DbProviderFactory.CreateCommand\n  commentId: M:System.Data.Common.DbProviderFactory.CreateCommand\n  id: CreateCommand\n  parent: System.Data.Common.DbProviderFactory\n  langs:\n  - csharp\n  - vb\n  name: CreateCommand()\n  fullName: System.Data.Common.DbProviderFactory.CreateCommand()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateCommand\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 25\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Returns a new instance of the provider's class that implements the <xref href=\\\"System.Data.Common.DbCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public virtual DbCommand CreateCommand()\n    content.vb: Public Overridable Function CreateCommand As DbCommand\n    return:\n      type: System.Data.Common.DbCommand\n      description: \"\\n<p>A new instance of <xref href=\\\"System.Data.Common.DbCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbProviderFactory.CreateCommand()\n- uid: System.Data.Common.DbProviderFactory.CreateConnection\n  commentId: M:System.Data.Common.DbProviderFactory.CreateConnection\n  id: CreateConnection\n  parent: System.Data.Common.DbProviderFactory\n  langs:\n  - csharp\n  - vb\n  name: CreateConnection()\n  fullName: System.Data.Common.DbProviderFactory.CreateConnection()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateConnection\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 31\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Returns a new instance of the provider's class that implements the <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public virtual DbConnection CreateConnection()\n    content.vb: Public Overridable Function CreateConnection As DbConnection\n    return:\n      type: System.Data.Common.DbConnection\n      description: \"\\n<p>A new instance of <xref href=\\\"System.Data.Common.DbConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbProviderFactory.CreateConnection()\n- uid: System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder\n  commentId: M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder\n  id: CreateConnectionStringBuilder\n  parent: System.Data.Common.DbProviderFactory\n  langs:\n  - csharp\n  - vb\n  name: CreateConnectionStringBuilder()\n  fullName: System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateConnectionStringBuilder\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 36\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Returns a new instance of the provider's class that implements the <xref href=\\\"System.Data.Common.DbConnectionStringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public virtual DbConnectionStringBuilder CreateConnectionStringBuilder()\n    content.vb: Public Overridable Function CreateConnectionStringBuilder As DbConnectionStringBuilder\n    return:\n      type: System.Data.Common.DbConnectionStringBuilder\n      description: \"\\n<p>A new instance of <xref href=\\\"System.Data.Common.DbConnectionStringBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbProviderFactory.CreateConnectionStringBuilder()\n- uid: System.Data.Common.DbProviderFactory.CreateParameter\n  commentId: M:System.Data.Common.DbProviderFactory.CreateParameter\n  id: CreateParameter\n  parent: System.Data.Common.DbProviderFactory\n  langs:\n  - csharp\n  - vb\n  name: CreateParameter()\n  fullName: System.Data.Common.DbProviderFactory.CreateParameter()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateParameter\n    path: src/System.Data.Common/src/System/Data/Common/DbProviderFactory.cs\n    startLine: 42\n  assemblies:\n  - System.Data.Common\n  namespace: System.Data.Common\n  summary: \"\\n<p>Returns a new instance of the provider's class that implements the <xref href=\\\"System.Data.Common.DbParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public virtual DbParameter CreateParameter()\n    content.vb: Public Overridable Function CreateParameter As DbParameter\n    return:\n      type: System.Data.Common.DbParameter\n      description: \"\\n<p>A new instance of <xref href=\\\"System.Data.Common.DbParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: DbProviderFactory.CreateParameter()\nreferences:\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  fullName: System.Data.Common.DbCommand\n  nameWithType: DbCommand\n  commentId: T:System.Data.Common.DbCommand\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  fullName: System.Data.Common.DbConnection\n  nameWithType: DbConnection\n  commentId: T:System.Data.Common.DbConnection\n- uid: System.Data.Common.DbConnectionStringBuilder\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnectionStringBuilder\n  fullName: System.Data.Common.DbConnectionStringBuilder\n  nameWithType: DbConnectionStringBuilder\n  commentId: T:System.Data.Common.DbConnectionStringBuilder\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  fullName: System.Data.Common.DbParameter\n  nameWithType: DbParameter\n  commentId: T:System.Data.Common.DbParameter\n"}