{"nodes":[{"pos":[2589,2599],"content":"SqlCommand","needQuote":true,"nodes":[{"content":"SqlCommand","pos":[0,10]}]},{"pos":[3739,3751],"content":"SqlCommand()","needQuote":true,"nodes":[{"content":"SqlCommand()","pos":[0,12]}]},{"pos":[4751,4769],"content":"SqlCommand(String)","needQuote":true,"nodes":[{"content":"SqlCommand(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The text of the query.","pos":[5587,5614],"source":"\\n<p>The text of the query."},{"content":"&lt;/p&gt;\\n","pos":[5615,5621],"source":" </p>\\n"},{"pos":[6072,6105],"content":"SqlCommand(String, SqlConnection)","needQuote":true,"nodes":[{"content":"SqlCommand(String, SqlConnection)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The text of the query.","pos":[7117,7144],"source":"\\n<p>The text of the query."},{"content":"&lt;/p&gt;\\n","pos":[7145,7151],"source":" </p>\\n"},{"pos":[7989,8038],"content":"SqlCommand(String, SqlConnection, SqlTransaction)","needQuote":true,"nodes":[{"content":"SqlCommand(String, SqlConnection, SqlTransaction)","pos":[0,49]}]},{"content":"\\n&lt;p&gt;The text of the query.","pos":[9250,9277],"source":"\\n<p>The text of the query."},{"content":"&lt;/p&gt;\\n","pos":[9278,9284],"source":" </p>\\n"},{"pos":[10211,10222],"content":"CommandText","needQuote":true,"nodes":[{"content":"CommandText","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The Transact-SQL statement or stored procedure to execute.","pos":[10997,11060],"source":"\\n<p>The Transact-SQL statement or stored procedure to execute."},{"content":"The default is an empty string.&lt;/p&gt;\\n","pos":[11061,11098],"source":" The default is an empty string.</p>\\n"},{"pos":[11457,11471],"content":"CommandTimeout","needQuote":true,"nodes":[{"content":"CommandTimeout","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The time in seconds to wait for the command to execute.","pos":[12256,12316],"source":"\\n<p>The time in seconds to wait for the command to execute."},{"content":"The default is 30 seconds.&lt;/p&gt;\\n","pos":[12317,12349],"source":" The default is 30 seconds.</p>\\n"},{"pos":[12702,12713],"content":"CommandType","needQuote":true,"nodes":[{"content":"CommandType","pos":[0,11]}]},{"pos":[14300,14310],"content":"Connection","needQuote":true,"nodes":[{"content":"Connection","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The connection to a data source.","pos":[15231,15268],"source":"\\n<p>The connection to a data source."},{"content":"The default value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15269,15318],"source":" The default value is <strong>null</strong>.</p>\\n"},{"pos":[16328,16340],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[17374,17395],"content":"DbParameterCollection","needQuote":true,"nodes":[{"content":"DbParameterCollection","pos":[0,21]}]},{"pos":[18486,18499],"content":"DbTransaction","needQuote":true,"nodes":[{"content":"DbTransaction","pos":[0,13]}]},{"pos":[19529,19546],"content":"DesignTimeVisible","needQuote":true,"nodes":[{"content":"DesignTimeVisible","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A value indicating whether the command object should be visible in a control.","pos":[20355,20437],"source":"\\n<p>A value indicating whether the command object should be visible in a control."},{"content":"The default is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[20438,20481],"source":" The default is <strong>true</strong>.</p>\\n"},{"pos":[20834,20844],"content":"Parameters","needQuote":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The parameters of the Transact-SQL statement or stored procedure.","pos":[21675,21745],"source":"\\n<p>The parameters of the Transact-SQL statement or stored procedure."},{"content":"The default is an empty collection.&lt;/p&gt;\\n","pos":[21746,21787],"source":" The default is an empty collection.</p>\\n"},{"pos":[22114,22125],"content":"Transaction","needQuote":true,"nodes":[{"content":"Transaction","pos":[0,11]}]},{"pos":[23545,23561],"content":"UpdatedRowSource","needQuote":true,"nodes":[{"content":"UpdatedRowSource","pos":[0,16]}]},{"pos":[25047,25065],"content":"StatementCompleted","needQuote":true,"nodes":[{"content":"StatementCompleted","pos":[0,18]}]},{"pos":[26132,26140],"content":"Cancel()","needQuote":true,"nodes":[{"content":"Cancel()","pos":[0,8]}]},{"pos":[27162,27181],"content":"CreateDbParameter()","needQuote":true,"nodes":[{"content":"CreateDbParameter()","pos":[0,19]}]},{"pos":[28174,28191],"content":"CreateParameter()","needQuote":true,"nodes":[{"content":"CreateParameter()","pos":[0,17]}]},{"pos":[29532,29568],"content":"ExecuteDbDataReader(CommandBehavior)","needQuote":true,"nodes":[{"content":"ExecuteDbDataReader(CommandBehavior)","pos":[0,36]}]},{"pos":[30974,31034],"content":"ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)","pos":[0,60]}]},{"pos":[32497,32514],"content":"ExecuteNonQuery()","needQuote":true,"nodes":[{"content":"ExecuteNonQuery()","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The number of rows affected.&lt;/p&gt;\\n","pos":[33266,33305],"source":"\\n<p>The number of rows affected.</p>\\n"},{"content":"\\n&lt;p&gt;An exception occurred while executing the command against a locked row.","pos":[34674,34750],"source":"\\n<p>An exception occurred while executing the command against a locked row."},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[34751,34896],"source":" This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[34897,34973],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[36752,36791],"content":"ExecuteNonQueryAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteNonQueryAsync(CancellationToken)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The cancellation instruction.&lt;/p&gt;\\n","pos":[38058,38098],"source":"\\n<p>The cancellation instruction.</p>\\n"},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[38186,38244],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[40272,40396],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[40397,40473],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[41803,41818],"content":"ExecuteReader()","needQuote":true,"nodes":[{"content":"ExecuteReader()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An exception occurred while executing the command against a locked row.","pos":[44306,44382],"source":"\\n<p>An exception occurred while executing the command against a locked row."},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[44383,44528],"source":" This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[44529,44605],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[46589,46619],"content":"ExecuteReader(CommandBehavior)","needQuote":true,"nodes":[{"content":"ExecuteReader(CommandBehavior)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[49491,49544],"source":"\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[49545,49621],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[51272,51292],"content":"ExecuteReaderAsync()","needQuote":true,"nodes":[{"content":"ExecuteReaderAsync()","pos":[0,20]}]},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[52558,52616],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[54819,54943],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[54944,55020],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[56406,56441],"content":"ExecuteReaderAsync(CommandBehavior)","needQuote":true,"nodes":[{"content":"ExecuteReaderAsync(CommandBehavior)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[58192,58250],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[60482,60606],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[60607,60683],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[62189,62243],"content":"ExecuteReaderAsync(CommandBehavior, CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteReaderAsync(CommandBehavior, CancellationToken)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The cancellation instruction.&lt;/p&gt;\\n","pos":[64215,64255],"source":"\\n<p>The cancellation instruction.</p>\\n"},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[64366,64424],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[66691,66815],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[66816,66892],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[68333,68370],"content":"ExecuteReaderAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteReaderAsync(CancellationToken)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The cancellation instruction.&lt;/p&gt;\\n","pos":[69870,69910],"source":"\\n<p>The cancellation instruction.</p>\\n"},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[70021,70079],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[72346,72470],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[72471,72547],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[73848,73863],"content":"ExecuteScalar()","needQuote":true,"nodes":[{"content":"ExecuteScalar()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The first column of the first row in the result set, or a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) if the result set is empty.","pos":[74659,74807],"source":"\\n<p>The first column of the first row in the result set, or a null reference (<strong>Nothing</strong> in Visual Basic) if the result set is empty."},{"content":"Returns a maximum of 2033 characters.&lt;/p&gt;\\n","pos":[74808,74851],"source":" Returns a maximum of 2033 characters.</p>\\n"},{"content":"\\n&lt;p&gt;An exception occurred while executing the command against a locked row.","pos":[76220,76296],"source":"\\n<p>An exception occurred while executing the command against a locked row."},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[76297,76442],"source":" This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[76443,76519],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[78290,78327],"content":"ExecuteScalarAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteScalarAsync(CancellationToken)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The cancellation instruction.&lt;/p&gt;\\n","pos":[79656,79696],"source":"\\n<p>The cancellation instruction.</p>\\n"},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[79785,79843],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[81869,81993],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[81994,82070],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[83407,83425],"content":"ExecuteXmlReader()","needQuote":true,"nodes":[{"content":"ExecuteXmlReader()","pos":[0,18]}]},{"content":"\\n&lt;p&gt;An exception occurred while executing the command against a locked row.","pos":[85870,85946],"source":"\\n<p>An exception occurred while executing the command against a locked row."},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[85947,86092],"source":" This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[86093,86169],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[87817,87840],"content":"ExecuteXmlReaderAsync()","needQuote":true,"nodes":[{"content":"ExecuteXmlReaderAsync()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[89088,89146],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[91172,91296],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[91297,91373],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[92792,92832],"content":"ExecuteXmlReaderAsync(CancellationToken)","needQuote":true,"nodes":[{"content":"ExecuteXmlReaderAsync(CancellationToken)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The cancellation instruction.&lt;/p&gt;\\n","pos":[94332,94372],"source":"\\n<p>The cancellation instruction.</p>\\n"},{"content":"\\n&lt;p&gt;A task representing the asynchronous operation.&lt;/p&gt;\\n","pos":[94457,94515],"source":"\\n<p>A task representing the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;SQL Server returned an error while executing the command text.&lt;/p&gt;\\n&lt;p&gt;A timeout occurred during a streaming operation.","pos":[96541,96665],"source":"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation."},{"content":"For more information about streaming, see SqlClient Streaming Support.&lt;/p&gt;\\n","pos":[96666,96742],"source":" For more information about streaming, see SqlClient Streaming Support.</p>\\n"},{"pos":[98028,98037],"content":"Prepare()","needQuote":true,"nodes":[{"content":"Prepare()","pos":[0,9]}]},{"pos":[99025,99041],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[99890,99911],"content":"System.Data.SqlClient","needQuote":true,"nodes":[{"content":"System.Data.SqlClient","pos":[0,21]}]},{"pos":[100087,100093],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[100265,100274],"content":"DbCommand","needQuote":true,"nodes":[{"content":"DbCommand","pos":[0,9]}]},{"pos":[100428,100434],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[100553,100571],"content":"System.Data.Common","needQuote":true,"nodes":[{"content":"System.Data.Common","pos":[0,18]}]},{"pos":[100738,100744],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100926,100939],"content":"SqlConnection","needQuote":true,"nodes":[{"content":"SqlConnection","pos":[0,13]}]},{"pos":[101173,101187],"content":"SqlTransaction","needQuote":true,"nodes":[{"content":"SqlTransaction","pos":[0,14]}]},{"pos":[101385,101390],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101547,101558],"content":"CommandType","needQuote":true,"nodes":[{"content":"CommandType","pos":[0,11]}]},{"pos":[101709,101720],"content":"System.Data","needQuote":true,"nodes":[{"content":"System.Data","pos":[0,11]}]},{"pos":[101896,101908],"content":"DbConnection","needQuote":true,"nodes":[{"content":"DbConnection","pos":[0,12]}]},{"pos":[102134,102155],"content":"DbParameterCollection","needQuote":true,"nodes":[{"content":"DbParameterCollection","pos":[0,21]}]},{"pos":[102400,102413],"content":"DbTransaction","needQuote":true,"nodes":[{"content":"DbTransaction","pos":[0,13]}]},{"pos":[102604,102611],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[102805,102827],"content":"SqlParameterCollection","needQuote":true,"nodes":[{"content":"SqlParameterCollection","pos":[0,22]}]},{"pos":[103069,103084],"content":"UpdateRowSource","needQuote":true,"nodes":[{"content":"UpdateRowSource","pos":[0,15]}]},{"pos":[103300,103330],"content":"StatementCompletedEventHandler","needQuote":true,"nodes":[{"content":"StatementCompletedEventHandler","pos":[0,30]}]},{"pos":[103586,103597],"content":"DbParameter","needQuote":true,"nodes":[{"content":"DbParameter","pos":[0,11]}]},{"pos":[103817,103829],"content":"SqlParameter","needQuote":true,"nodes":[{"content":"SqlParameter","pos":[0,12]}]},{"pos":[104041,104056],"content":"CommandBehavior","needQuote":true,"nodes":[{"content":"CommandBehavior","pos":[0,15]}]},{"pos":[104268,104280],"content":"DbDataReader","needQuote":true,"nodes":[{"content":"DbDataReader","pos":[0,12]}]},{"pos":[104498,104515],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[104800,104818],"content":"Task<DbDataReader>","needQuote":true,"nodes":[{"content":"Task&lt;DbDataReader&gt;","pos":[0,18],"source":"Task<DbDataReader>"}]},{"pos":[105068,105072],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[105146,105147],"content":"<","needQuote":true,"nodes":[]},{"pos":[105215,105227],"content":"DbDataReader","needQuote":true,"nodes":[{"content":"DbDataReader","pos":[0,12]}]},{"pos":[105366,105370],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[105445,105448]},{"pos":[105523,105535],"content":"DbDataReader","needQuote":true,"nodes":[{"content":"DbDataReader","pos":[0,12]}]},{"pos":[105592,105593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105814,105830],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[105990,106003],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[106200,106204],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[106257,106258],"content":"<","needQuote":true,"nodes":[]},{"pos":[106285,106292],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[106407,106411],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[106465,106468]},{"pos":[106502,106509],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[106542,106543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106729,106751],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[106998,107009],"content":"Task<Int32>","needQuote":true,"nodes":[{"content":"Task&lt;Int32&gt;","pos":[0,11],"source":"Task<Int32>"}]},{"pos":[107214,107218],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[107292,107293],"content":"<","needQuote":true,"nodes":[]},{"pos":[107342,107347],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[107488,107492],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[107567,107570]},{"pos":[107626,107631],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[107690,107691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107930,107943],"content":"SqlDataReader","needQuote":true,"nodes":[{"content":"SqlDataReader","pos":[0,13]}]},{"pos":[108230,108249],"content":"Task<SqlDataReader>","needQuote":true,"nodes":[{"content":"Task&lt;SqlDataReader&gt;","pos":[0,19],"source":"Task<SqlDataReader>"}]},{"pos":[108508,108512],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[108586,108587],"content":"<","needQuote":true,"nodes":[]},{"pos":[108659,108672],"content":"SqlDataReader","needQuote":true,"nodes":[{"content":"SqlDataReader","pos":[0,13]}]},{"pos":[108815,108819],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[108894,108897]},{"pos":[108976,108989],"content":"SqlDataReader","needQuote":true,"nodes":[{"content":"SqlDataReader","pos":[0,13]}]},{"pos":[109050,109051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109361,109373],"content":"Task<Object>","needQuote":true,"nodes":[{"content":"Task&lt;Object&gt;","pos":[0,12],"source":"Task<Object>"}]},{"pos":[109581,109585],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[109659,109660],"content":"<","needQuote":true,"nodes":[]},{"pos":[109710,109716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[109858,109862],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[109937,109940]},{"pos":[109997,110003],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[110063,110064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110280,110289],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[110431,110441],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[110660,110679],"content":"Task<Xml.XmlReader>","needQuote":true,"nodes":[{"content":"Task&lt;Xml.XmlReader&gt;","pos":[0,19],"source":"Task<Xml.XmlReader>"}]},{"pos":[110908,110912],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[110986,110987],"content":"<","needQuote":true,"nodes":[]},{"pos":[111044,111057],"content":"Xml.XmlReader","needQuote":true,"nodes":[{"content":"Xml.XmlReader","pos":[0,13]}]},{"pos":[111206,111210],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[111285,111288]},{"pos":[111352,111365],"content":"Xml.XmlReader","needQuote":true,"nodes":[{"content":"Xml.XmlReader","pos":[0,13]}]},{"pos":[111432,111433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111670,111687],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[111884,111909],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[112108,112128],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]},{"pos":[112319,112331],"content":"SqlException","needQuote":true,"nodes":[{"content":"SqlException","pos":[0,12]}]},{"pos":[112535,112546],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[112712,112735],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]}],"content":"items:\n- uid: System.Data.SqlClient.SqlCommand\n  commentId: T:System.Data.SqlClient.SqlCommand\n  id: SqlCommand\n  parent: System.Data.SqlClient\n  children:\n  - System.Data.SqlClient.SqlCommand.#ctor\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  - System.Data.SqlClient.SqlCommand.Cancel\n  - System.Data.SqlClient.SqlCommand.CommandText\n  - System.Data.SqlClient.SqlCommand.CommandTimeout\n  - System.Data.SqlClient.SqlCommand.CommandType\n  - System.Data.SqlClient.SqlCommand.Connection\n  - System.Data.SqlClient.SqlCommand.CreateDbParameter\n  - System.Data.SqlClient.SqlCommand.CreateParameter\n  - System.Data.SqlClient.SqlCommand.DbConnection\n  - System.Data.SqlClient.SqlCommand.DbParameterCollection\n  - System.Data.SqlClient.SqlCommand.DbTransaction\n  - System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteReader\n  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteScalar\n  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.Parameters\n  - System.Data.SqlClient.SqlCommand.Prepare\n  - System.Data.SqlClient.SqlCommand.StatementCompleted\n  - System.Data.SqlClient.SqlCommand.Transaction\n  - System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  langs:\n  - csharp\n  - vb\n  name: SqlCommand\n  fullName: System.Data.SqlClient.SqlCommand\n  type: Class\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlCommand\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 17\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class SqlCommand : DbCommand'\n    content.vb: >-\n      Public NotInheritable Class SqlCommand\n          Inherits DbCommand\n  inheritance:\n  - System.Object\n  implements:\n  - System.Data.Common.DbCommand\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SqlCommand\n- uid: System.Data.SqlClient.SqlCommand.#ctor\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: SqlCommand()\n  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 202\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public SqlCommand()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.SqlCommand()\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: SqlCommand(String)\n  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 207\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the text of the query.</p>\\n\"\n  syntax:\n    content: public SqlCommand(string cmdText)\n    content.vb: Public Sub New(cmdText As String)\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: \"\\n<p>The text of the query. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.SqlCommand(String)\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: SqlCommand(String, SqlConnection)\n  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String, System.Data.SqlClient.SqlConnection)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 212\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the text of the query and a <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlCommand(string cmdText, SqlConnection connection)\n    content.vb: Public Sub New(cmdText As String, connection As SqlConnection)\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: \"\\n<p>The text of the query. </p>\\n\"\n    - id: connection\n      type: System.Data.SqlClient.SqlConnection\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the connection to an instance of SQL Server. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: SqlCommand(String, SqlConnection, SqlTransaction)\n  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(System.String, System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlTransaction)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 218\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the text of the query, a <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and the <xref href=\\\"System.Data.SqlClient.SqlTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlCommand(string cmdText, SqlConnection connection, SqlTransaction transaction)\n    content.vb: Public Sub New(cmdText As String, connection As SqlConnection, transaction As SqlTransaction)\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: \"\\n<p>The text of the query. </p>\\n\"\n    - id: connection\n      type: System.Data.SqlClient.SqlConnection\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the connection to an instance of SQL Server. </p>\\n\"\n    - id: transaction\n      type: System.Data.SqlClient.SqlTransaction\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in which the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> executes. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)\n- uid: System.Data.SqlClient.SqlCommand.CommandText\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandText\n  id: CommandText\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandText\n  fullName: System.Data.SqlClient.SqlCommand.CommandText\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandText\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 343\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</p>\\n\"\n  syntax:\n    content: public override string CommandText { get; set; }\n    content.vb: Public Overrides Property CommandText As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The Transact-SQL statement or stored procedure to execute. The default is an empty string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.CommandText\n- uid: System.Data.SqlClient.SqlCommand.CommandTimeout\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandTimeout\n  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandTimeout\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 360\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</p>\\n\"\n  syntax:\n    content: public override int CommandTimeout { get; set; }\n    content.vb: Public Overrides Property CommandTimeout As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The time in seconds to wait for the command to execute. The default is 30 seconds.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.CommandTimeout\n- uid: System.Data.SqlClient.SqlCommand.CommandType\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandType\n  id: CommandType\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: CommandType\n  fullName: System.Data.SqlClient.SqlCommand.CommandType\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CommandType\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 389\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets a value indicating how the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is to be interpreted.</p>\\n\"\n  syntax:\n    content: public override CommandType CommandType { get; set; }\n    content.vb: Public Overrides Property CommandType As CommandType\n    parameters: []\n    return:\n      type: CommandType\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.CommandType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is <strong>Text</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value was not a valid <xref href=\\\"System.Data.CommandType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.CommandType\n- uid: System.Data.SqlClient.SqlCommand.Connection\n  commentId: P:System.Data.SqlClient.SqlCommand.Connection\n  id: Connection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Connection\n  fullName: System.Data.SqlClient.SqlCommand.Connection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Connection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 225\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used by this instance of the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlConnection Connection { get; set; }\n    content.vb: Public Property Connection As SqlConnection\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlConnection\n      description: \"\\n<p>The connection to a data source. The default value is <strong>null</strong>.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property was changed while the command was enlisted in a transaction.. </p>\\n\"\n  seealso:\n  - type: System.Data.SqlClient.SqlCommand.CommandText\n    commentId: P:System.Data.SqlClient.SqlCommand.CommandText\n  - type: System.Data.SqlClient.SqlCommand.CommandTimeout\n    commentId: P:System.Data.SqlClient.SqlCommand.CommandTimeout\n  - type: System.Data.SqlClient.SqlCommand.CommandType\n    commentId: P:System.Data.SqlClient.SqlCommand.CommandType\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.Connection\n- uid: System.Data.SqlClient.SqlCommand.DbConnection\n  commentId: P:System.Data.SqlClient.SqlCommand.DbConnection\n  id: DbConnection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: DbConnection\n  fullName: System.Data.SqlClient.SqlCommand.DbConnection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbConnection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 277\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbConnection DbConnection { get; set; }\n    content.vb: Protected Overrides Property DbConnection As DbConnection\n    parameters: []\n    return:\n      type: DbConnection\n  modifiers.csharp:\n  - protected\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.DbConnection\n- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection\n  commentId: P:System.Data.SqlClient.SqlCommand.DbParameterCollection\n  id: DbParameterCollection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: DbParameterCollection\n  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbParameterCollection\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 446\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbParameterCollection DbParameterCollection { get; }\n    content.vb: Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection\n    parameters: []\n    return:\n      type: DbParameterCollection\n  modifiers.csharp:\n  - protected\n  - override\n  - get\n  modifiers.vb:\n  - Protected\n  - Overrides\n  - ReadOnly\n  nameWithType: SqlCommand.DbParameterCollection\n- uid: System.Data.SqlClient.SqlCommand.DbTransaction\n  commentId: P:System.Data.SqlClient.SqlCommand.DbTransaction\n  id: DbTransaction\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: DbTransaction\n  fullName: System.Data.SqlClient.SqlCommand.DbTransaction\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DbTransaction\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 331\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbTransaction DbTransaction { get; set; }\n    content.vb: Protected Overrides Property DbTransaction As DbTransaction\n    parameters: []\n    return:\n      type: DbTransaction\n  modifiers.csharp:\n  - protected\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.DbTransaction\n- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  commentId: P:System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  id: DesignTimeVisible\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: DesignTimeVisible\n  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DesignTimeVisible\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 420\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</p>\\n\"\n  syntax:\n    content: public override bool DesignTimeVisible { get; set; }\n    content.vb: Public Overrides Property DesignTimeVisible As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>A value indicating whether the command object should be visible in a control. The default is <strong>true</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.DesignTimeVisible\n- uid: System.Data.SqlClient.SqlCommand.Parameters\n  commentId: P:System.Data.SqlClient.SqlCommand.Parameters\n  id: Parameters\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Parameters\n  fullName: System.Data.SqlClient.SqlCommand.Parameters\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parameters\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 432\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Data.SqlClient.SqlParameterCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlParameterCollection Parameters { get; }\n    content.vb: Public ReadOnly Property Parameters As SqlParameterCollection\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlParameterCollection\n      description: \"\\n<p>The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlCommand.Parameters\n- uid: System.Data.SqlClient.SqlCommand.Transaction\n  commentId: P:System.Data.SqlClient.SqlCommand.Transaction\n  id: Transaction\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Transaction\n  fullName: System.Data.SqlClient.SqlCommand.Transaction\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Transaction\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 305\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets the <xref href=\\\"System.Data.SqlClient.SqlTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> within which the <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> executes.</p>\\n\"\n  syntax:\n    content: public SqlTransaction Transaction { get; set; }\n    content.vb: Public Property Transaction As SqlTransaction\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlTransaction\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlTransaction\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. The default value is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.Transaction\n- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  commentId: P:System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  id: UpdatedRowSource\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: UpdatedRowSource\n  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UpdatedRowSource\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 454\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Gets or sets how command results are applied to the <xref href=\\\"System.Data.DataRow\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> when used by the <strong>Update </strong>method of the <xref href=\\\"System.Data.Common.DbDataAdapter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override UpdateRowSource UpdatedRowSource { get; set; }\n    content.vb: Public Overrides Property UpdatedRowSource As UpdateRowSource\n    parameters: []\n    return:\n      type: UpdateRowSource\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.UpdateRowSource\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.UpdatedRowSource\n- uid: System.Data.SqlClient.SqlCommand.StatementCompleted\n  commentId: E:System.Data.SqlClient.SqlCommand.StatementCompleted\n  id: StatementCompleted\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: StatementCompleted\n  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted\n  type: Event\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: StatementCompleted\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 476\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Occurs when the execution of a Transact-SQL statement completes.</p>\\n\"\n  syntax:\n    content: public event StatementCompletedEventHandler StatementCompleted\n    content.vb: Public Event StatementCompleted As StatementCompletedEventHandler\n    return:\n      type: System.Data.StatementCompletedEventHandler\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.StatementCompleted\n- uid: System.Data.SqlClient.SqlCommand.Cancel\n  commentId: M:System.Data.SqlClient.SqlCommand.Cancel\n  id: Cancel\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Cancel()\n  fullName: System.Data.SqlClient.SqlCommand.Cancel()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Cancel\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 637\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Tries to cancel the execution of a <xref href=\\\"System.Data.SqlClient.SqlCommand\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void Cancel()\n    content.vb: Public Overrides Sub Cancel\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.Cancel()\n- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter\n  commentId: M:System.Data.SqlClient.SqlCommand.CreateDbParameter\n  id: CreateDbParameter\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: CreateDbParameter()\n  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateDbParameter\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 723\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override DbParameter CreateDbParameter()\n    content.vb: Protected Overrides Function CreateDbParameter As DbParameter\n    return:\n      type: DbParameter\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.CreateDbParameter()\n- uid: System.Data.SqlClient.SqlCommand.CreateParameter\n  commentId: M:System.Data.SqlClient.SqlCommand.CreateParameter\n  id: CreateParameter\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: CreateParameter()\n  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateParameter\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 718\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Creates a new instance of a <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public SqlParameter CreateParameter()\n    content.vb: Public Function CreateParameter As SqlParameter\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.CreateParameter()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  id: ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteDbDataReader(CommandBehavior)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteDbDataReader\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 305\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override Common.DbDataReader ExecuteDbDataReader(CommandBehavior behavior)\n    content.vb: Protected Overrides Function ExecuteDbDataReader(behavior As CommandBehavior) As Common.DbDataReader\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n    return:\n      type: System.Data.Common.DbDataReader\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteDbDataReaderAsync\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 306\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override Task<Common.DbDataReader> ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n    content.vb: Protected Overrides Function ExecuteDbDataReaderAsync(behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of Common.DbDataReader)\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  id: ExecuteNonQuery\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteNonQuery()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteNonQuery\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 806\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</p>\\n\"\n  syntax:\n    content: public override int ExecuteNonQuery()\n    content.vb: Public Overrides Function ExecuteNonQuery As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of rows affected.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.ExecuteNonQuery()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteNonQueryAsync(CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteNonQueryAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1511\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which executes a Transact-SQL statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public override Task<int> ExecuteNonQueryAsync(CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ExecuteNonQueryAsync(cancellationToken As CancellationToken) As Task(Of Integer)\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation instruction.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader\n  id: ExecuteReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReader()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReader\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1324\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlDataReader ExecuteReader()\n    content.vb: Public Function ExecuteReader As SqlDataReader\n    return:\n      type: System.Data.SqlClient.SqlDataReader\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current state of the connection is closed. <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> requires an open <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReader()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  id: ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReader(CommandBehavior)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReader\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 310\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> using one of the <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n  syntax:\n    content: public SqlDataReader ExecuteReader(CommandBehavior behavior)\n    content.vb: Public Function ExecuteReader(behavior As CommandBehavior) As SqlDataReader\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: \"\\n<p>One of the <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values.</p>\\n\"\n    return:\n      type: System.Data.SqlClient.SqlDataReader\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  id: ExecuteReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReaderAsync()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReaderAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1577\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<SqlDataReader> ExecuteReaderAsync()\n    content.vb: Public Function ExecuteReaderAsync As Task(Of SqlDataReader)\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An invalid <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReaderAsync()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReaderAsync(CommandBehavior)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReaderAsync\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 312\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior)\n    content.vb: Public Function ExecuteReaderAsync(behavior As CommandBehavior) As Task(Of SqlDataReader)\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: \"\\n<p>Options for statement execution and data retrieval.  When is set to <strong>Default</strong>, <xref href=\\\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> reads the entire row before returning a complete Task.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An invalid <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior, System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReaderAsync\n    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs\n    startLine: 313\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)\n    content.vb: Public Function ExecuteReaderAsync(behavior As CommandBehavior, cancellationToken As CancellationToken) As Task(Of SqlDataReader)\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: \"\\n<p>Options for statement execution and data retrieval.  When is set to <strong>Default</strong>, <xref href=\\\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> reads the entire row before returning a complete Task.</p>\\n\"\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation instruction.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An invalid <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteReaderAsync(CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteReaderAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1587\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<SqlDataReader> ExecuteReaderAsync(CancellationToken cancellationToken)\n    content.vb: Public Function ExecuteReaderAsync(cancellationToken As CancellationToken) As Task(Of SqlDataReader)\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation instruction.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>An invalid <xref href=\\\"System.Data.CommandBehavior\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalar\n  id: ExecuteScalar\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteScalar()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteScalar\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 738\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.</p>\\n\"\n  syntax:\n    content: public override object ExecuteScalar()\n    content.vb: Public Overrides Function ExecuteScalar As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>The first column of the first row in the result set, or a null reference (<strong>Nothing</strong> in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.ExecuteScalar()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  id: ExecuteScalarAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteScalarAsync(CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteScalarAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1652\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.</p>\\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public override Task<object> ExecuteScalarAsync(CancellationToken cancellationToken)\n    content.vb: Public Overrides Function ExecuteScalarAsync(cancellationToken As CancellationToken) As Task(Of Object)\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation instruction.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  id: ExecuteXmlReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteXmlReader()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteXmlReader\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1125\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public XmlReader ExecuteXmlReader()\n    content.vb: Public Function ExecuteXmlReader As XmlReader\n    return:\n      type: XmlReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteXmlReader()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  id: ExecuteXmlReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteXmlReaderAsync()\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteXmlReaderAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1734\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n<p>Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<XmlReader> ExecuteXmlReaderAsync()\n    content.vb: Public Function ExecuteXmlReaderAsync As Task(Of XmlReader)\n    return:\n      type: System.Threading.Tasks.Task{XmlReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: ExecuteXmlReaderAsync(CancellationToken)\n  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExecuteXmlReaderAsync\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 1739\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and builds an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.</p>\\n\"\n  syntax:\n    content: public Task<XmlReader> ExecuteXmlReaderAsync(CancellationToken cancellationToken)\n    content.vb: Public Function ExecuteXmlReaderAsync(cancellationToken As CancellationToken) As Task(Of XmlReader)\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>The cancellation instruction.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task{XmlReader}\n      description: \"\\n<p>A task representing the asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Binary or VarBinary was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> other than Xml was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> more than once for the same instance before task completion.</p>\\n<p>The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n<p>\\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\\n\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"\\n<p>SQL Server returned an error while executing the command text.</p>\\n<p>A timeout occurred during a streaming operation. For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>An error occurred in a <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.Stream\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.IO.TextReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object was closed during a streaming operation.  For more information about streaming, see SqlClient Streaming Support.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.Prepare\n  commentId: M:System.Data.SqlClient.SqlCommand.Prepare\n  id: Prepare\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Prepare()\n  fullName: System.Data.SqlClient.SqlCommand.Prepare()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Prepare\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 515\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: \"\\n<p>Creates a prepared version of the command on an instance of SQL Server.</p>\\n\"\n  syntax:\n    content: public override void Prepare()\n    content.vb: Public Overrides Sub Prepare\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlCommand.Prepare()\n- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlCommand.cs\n    startLine: 728\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void Dispose(bool disposing)\n    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: SqlCommand.Dispose(Boolean)\nreferences:\n- uid: System.Data.SqlClient\n  isExternal: false\n  name: System.Data.SqlClient\n  fullName: System.Data.SqlClient\n  nameWithType: System.Data.SqlClient\n  commentId: N:System.Data.SqlClient\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  fullName: System.Data.Common.DbCommand\n  nameWithType: DbCommand\n  commentId: T:System.Data.Common.DbCommand\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Data.Common\n  isExternal: false\n  name: System.Data.Common\n  fullName: System.Data.Common\n  nameWithType: System.Data.Common\n  commentId: N:System.Data.Common\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Data.SqlClient.SqlConnection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlConnection\n  fullName: System.Data.SqlClient.SqlConnection\n  nameWithType: SqlConnection\n  commentId: T:System.Data.SqlClient.SqlConnection\n- uid: System.Data.SqlClient.SqlTransaction\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlTransaction\n  fullName: System.Data.SqlClient.SqlTransaction\n  nameWithType: SqlTransaction\n  commentId: T:System.Data.SqlClient.SqlTransaction\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Data.CommandType\n  parent: System.Data\n  isExternal: false\n  name: CommandType\n  fullName: System.Data.CommandType\n  nameWithType: CommandType\n  commentId: T:System.Data.CommandType\n- uid: System.Data\n  isExternal: false\n  name: System.Data\n  fullName: System.Data\n  nameWithType: System.Data\n  commentId: N:System.Data\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  fullName: System.Data.Common.DbConnection\n  nameWithType: DbConnection\n  commentId: T:System.Data.Common.DbConnection\n- uid: System.Data.Common.DbParameterCollection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameterCollection\n  fullName: System.Data.Common.DbParameterCollection\n  nameWithType: DbParameterCollection\n  commentId: T:System.Data.Common.DbParameterCollection\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n  nameWithType: DbTransaction\n  commentId: T:System.Data.Common.DbTransaction\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Data.SqlClient.SqlParameterCollection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlParameterCollection\n  fullName: System.Data.SqlClient.SqlParameterCollection\n  nameWithType: SqlParameterCollection\n  commentId: T:System.Data.SqlClient.SqlParameterCollection\n- uid: System.Data.UpdateRowSource\n  parent: System.Data\n  isExternal: false\n  name: UpdateRowSource\n  fullName: System.Data.UpdateRowSource\n  nameWithType: UpdateRowSource\n  commentId: T:System.Data.UpdateRowSource\n- uid: System.Data.StatementCompletedEventHandler\n  parent: System.Data\n  isExternal: false\n  name: StatementCompletedEventHandler\n  fullName: System.Data.StatementCompletedEventHandler\n  nameWithType: StatementCompletedEventHandler\n  commentId: T:System.Data.StatementCompletedEventHandler\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  fullName: System.Data.Common.DbParameter\n  nameWithType: DbParameter\n  commentId: T:System.Data.Common.DbParameter\n- uid: System.Data.SqlClient.SqlParameter\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlParameter\n  fullName: System.Data.SqlClient.SqlParameter\n  nameWithType: SqlParameter\n  commentId: T:System.Data.SqlClient.SqlParameter\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  fullName: System.Data.CommandBehavior\n  nameWithType: CommandBehavior\n  commentId: T:System.Data.CommandBehavior\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n  nameWithType: DbDataReader\n  commentId: T:System.Data.Common.DbDataReader\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<DbDataReader>\n  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Data.Common.DbDataReader)\n  name.vb: Task(Of DbDataReader)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Data.Common.DbDataReader\n    name: DbDataReader\n    fullName: System.Data.Common.DbDataReader\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Data.Common.DbDataReader\n    name: DbDataReader\n    fullName: System.Data.Common.DbDataReader\n  - name: )\n    fullName: )\n  nameWithType: Task<DbDataReader>\n  nameWithType.vb: Task(Of DbDataReader)\n  commentId: T:System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n  commentId: T:System.Threading.Tasks.Task`1\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)\n  name.vb: Task(Of Int32)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Task<Int32>\n  nameWithType.vb: Task(Of Int32)\n  commentId: T:System.Threading.Tasks.Task{System.Int32}\n- uid: System.Data.SqlClient.SqlDataReader\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlDataReader\n  fullName: System.Data.SqlClient.SqlDataReader\n  nameWithType: SqlDataReader\n  commentId: T:System.Data.SqlClient.SqlDataReader\n- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<SqlDataReader>\n  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Data.SqlClient.SqlDataReader)\n  name.vb: Task(Of SqlDataReader)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Data.SqlClient.SqlDataReader\n    name: SqlDataReader\n    fullName: System.Data.SqlClient.SqlDataReader\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Data.SqlClient.SqlDataReader\n    name: SqlDataReader\n    fullName: System.Data.SqlClient.SqlDataReader\n  - name: )\n    fullName: )\n  nameWithType: Task<SqlDataReader>\n  nameWithType.vb: Task(Of SqlDataReader)\n  commentId: T:System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Object)\n  name.vb: Task(Of Object)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Task<Object>\n  nameWithType.vb: Task(Of Object)\n  commentId: T:System.Threading.Tasks.Task{System.Object}\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  nameWithType: XmlReader\n  commentId: T:System.Xml.XmlReader\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  nameWithType: System.Xml\n  commentId: N:System.Xml\n- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Xml.XmlReader>\n  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>\n  fullname.vb: System.Threading.Tasks.Task(Of System.Xml.XmlReader)\n  name.vb: Task(Of Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Xml.XmlReader\n    name: Xml.XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Xml.XmlReader\n    name: Xml.XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Task<Xml.XmlReader>\n  nameWithType.vb: Task(Of Xml.XmlReader)\n  commentId: T:System.Threading.Tasks.Task{System.Xml.XmlReader}\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n- uid: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: SqlException\n  fullName: System.Data.SqlClient.SqlException\n  nameWithType: SqlException\n  commentId: T:System.Data.SqlClient.SqlException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n"}