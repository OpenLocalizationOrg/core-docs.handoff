{"nodes":[{"pos":[714,740],"content":"OperationCanceledException","needQuote":true,"nodes":[{"content":"OperationCanceledException","pos":[0,26]}]},{"pos":[2928,2956],"content":"OperationCanceledException()","needQuote":true,"nodes":[{"content":"OperationCanceledException()","pos":[0,28]}]},{"pos":[4096,4130],"content":"OperationCanceledException(String)","needQuote":true,"nodes":[{"content":"OperationCanceledException(String)","pos":[0,34]}]},{"pos":[5561,5606],"content":"OperationCanceledException(String, Exception)","needQuote":true,"nodes":[{"content":"OperationCanceledException(String, Exception)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[6572,6638],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[6639,6645],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[6721,6783],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[6784,6954],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[6955,6961],"source":" </p>\\n"},{"pos":[7578,7642],"content":"OperationCanceledException(String, Exception, CancellationToken)","needQuote":true,"nodes":[{"content":"OperationCanceledException(String, Exception, CancellationToken)","pos":[0,64]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.","pos":[8720,8786],"source":"\\n<p>The error message that explains the reason for the exception."},{"content":"&lt;/p&gt;\\n","pos":[8787,8793],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The exception that is the cause of the current exception.","pos":[8869,8931],"source":"\\n<p>The exception that is the cause of the current exception."},{"content":"If the &lt;em&gt;innerException&lt;/em&gt; parameter is not &lt;strong&gt;null&lt;/strong&gt;, the current exception is raised in a &lt;strong&gt;catch&lt;/strong&gt; block that handles the inner exception.","pos":[8932,9102],"source":" If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception."},{"content":"&lt;/p&gt;\\n","pos":[9103,9109],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token associated with the operation that was canceled.&lt;/p&gt;\\n","pos":[9194,9274],"source":"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n"},{"pos":[9859,9912],"content":"OperationCanceledException(String, CancellationToken)","needQuote":true,"nodes":[{"content":"OperationCanceledException(String, CancellationToken)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The error message that explains the reason for the exception.&lt;/p&gt;\\n","pos":[10844,10916],"source":"\\n<p>The error message that explains the reason for the exception.</p>\\n"},{"content":"\\n&lt;p&gt;A cancellation token associated with the operation that was canceled.&lt;/p&gt;\\n","pos":[11001,11081],"source":"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n"},{"pos":[11613,11658],"content":"OperationCanceledException(CancellationToken)","needQuote":true,"nodes":[{"content":"OperationCanceledException(CancellationToken)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;A cancellation token associated with the operation that was canceled.&lt;/p&gt;\\n","pos":[12529,12609],"source":"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n"},{"pos":[13059,13076],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A token associated with the operation that was canceled, or a default token.&lt;/p&gt;\\n","pos":[13825,13912],"source":"\\n<p>A token associated with the operation that was canceled, or a default token.</p>\\n"},{"pos":[14108,14114],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14245,14251],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14399,14408],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[14613,14626],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[14887,14897],"content":"_Exception","needQuote":true,"nodes":[{"content":"_Exception","pos":[0,10]}]},{"pos":[15132,15150],"content":"GetBaseException()","needQuote":true,"nodes":[{"content":"GetBaseException()","pos":[0,18]}]},{"pos":[15267,15283],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15342,15343],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15370,15371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15452,15468],"content":"GetBaseException","needQuote":true,"nodes":[{"content":"GetBaseException","pos":[0,16]}]},{"pos":[15527,15528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15555,15556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15755,15765],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15866,15874],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15925,15926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15953,15954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16027,16035],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16086,16087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16114,16115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16396,16446],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[16744,16757],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[16834,16835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16918,16935],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[17029,17030]},{"pos":[17117,17133],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[17225,17226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17398,17411],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[17488,17489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17572,17589],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[17683,17684]},{"pos":[17771,17787],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[17879,17880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18200,18209],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18308,18315],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18386,18387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18414,18415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18487,18494],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18565,18566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18593,18594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18774,18781],"content":"Message","needQuote":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[18977,18981],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[19178,19192],"content":"InnerException","needQuote":true,"nodes":[{"content":"InnerException","pos":[0,14]}]},{"pos":[19414,19424],"content":"TargetSite","needQuote":true,"nodes":[{"content":"TargetSite","pos":[0,10]}]},{"pos":[19635,19645],"content":"StackTrace","needQuote":true,"nodes":[{"content":"StackTrace","pos":[0,10]}]},{"pos":[19854,19862],"content":"HelpLink","needQuote":true,"nodes":[{"content":"HelpLink","pos":[0,8]}]},{"pos":[20063,20069],"content":"Source","needQuote":true,"nodes":[{"content":"Source","pos":[0,6]}]},{"pos":[20265,20272],"content":"HResult","needQuote":true,"nodes":[{"content":"HResult","pos":[0,7]}]},{"pos":[20483,20503],"content":"SerializeObjectState","needQuote":true,"nodes":[{"content":"SerializeObjectState","pos":[0,20]}]},{"pos":[20748,20762],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20881,20887],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[20954,20955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21005,21011],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21071,21072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21155,21161],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21228,21229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21279,21285],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21345,21346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21560,21582],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21730,21736],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21803,21804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21854,21860],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21921,21922]},{"pos":[21977,21983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22043,22044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22141,22147],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22214,22215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22265,22271],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22332,22333]},{"pos":[22388,22394],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22454,22455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22700,22731],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22897,22912],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22988,22989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23039,23045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23106,23107]},{"pos":[23162,23168],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23228,23229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23335,23350],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[23426,23427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23477,23483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23544,23545]},{"pos":[23600,23606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23666,23667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23897,23910],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[24011,24022],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24094,24095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24122,24123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24196,24207],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[24279,24280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24307,24308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24491,24508],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[24617,24632],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24708,24709],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24736,24737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24814,24829],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24905,24906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24933,24934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25101,25129],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[25326,25356],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[25559,25565],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25741,25758],"content":"CancellationToken","needQuote":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[25942,25958],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]}],"content":"items:\n- uid: System.OperationCanceledException\n  commentId: T:System.OperationCanceledException\n  id: OperationCanceledException\n  parent: System\n  children:\n  - System.OperationCanceledException.#ctor\n  - System.OperationCanceledException.#ctor(System.String)\n  - System.OperationCanceledException.#ctor(System.String,System.Exception)\n  - System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)\n  - System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)\n  - System.OperationCanceledException.#ctor(System.Threading.CancellationToken)\n  - System.OperationCanceledException.CancellationToken\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException\n  fullName: System.OperationCanceledException\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OperationCanceledException\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 19\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>The exception that is thrown in a thread upon cancellation of an operation that the thread was executing.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class OperationCanceledException : SystemException, ISerializable, _Exception\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class OperationCanceledException\n          Inherits SystemException\n          Implements ISerializable, _Exception\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  - System.Runtime.InteropServices._Exception\n  inheritedMembers:\n  - System.Exception.GetBaseException\n  - System.Exception.ToString\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.Message\n  - System.Exception.Data\n  - System.Exception.InnerException\n  - System.Exception.TargetSite\n  - System.Exception.StackTrace\n  - System.Exception.HelpLink\n  - System.Exception.Source\n  - System.Exception.HResult\n  - System.Exception.SerializeObjectState\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: OperationCanceledException\n- uid: System.OperationCanceledException.#ctor\n  commentId: M:System.OperationCanceledException.#ctor\n  id: '#ctor'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException()\n  fullName: System.OperationCanceledException.OperationCanceledException()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 32\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a system-supplied error message.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException()\n- uid: System.OperationCanceledException.#ctor(System.String)\n  commentId: M:System.OperationCanceledException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException(String)\n  fullName: System.OperationCanceledException.OperationCanceledException(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 37\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException(string message)\n    content.vb: Public Sub New(message As String)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that describes the error.</p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException(String)\n- uid: System.OperationCanceledException.#ctor(System.String,System.Exception)\n  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException(String, Exception)\n  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 42\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException(string message, Exception innerException)\n    content.vb: Public Sub New(message As String, innerException As Exception)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException(String, Exception)\n- uid: System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)\n  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)\n  id: '#ctor(System.String,System.Exception,System.Threading.CancellationToken)'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException(String, Exception, CancellationToken)\n  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Exception, System.Threading.CancellationToken)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 60\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message, a reference to the inner exception that is the cause of this exception, and a cancellation token.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException(string message, Exception innerException, CancellationToken token)\n    content.vb: Public Sub New(message As String, innerException As Exception, token As CancellationToken)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception. </p>\\n\"\n    - id: innerException\n      type: System.Exception\n      description: \"\\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\\n\"\n    - id: token\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException(String, Exception, CancellationToken)\n- uid: System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)\n  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)\n  id: '#ctor(System.String,System.Threading.CancellationToken)'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException(String, CancellationToken)\n  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Threading.CancellationToken)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 54\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specified error message and a cancellation token.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException(string message, CancellationToken token)\n    content.vb: Public Sub New(message As String, token As CancellationToken)\n    parameters:\n    - id: message\n      type: System.String\n      description: \"\\n<p>The error message that explains the reason for the exception.</p>\\n\"\n    - id: token\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException(String, CancellationToken)\n- uid: System.OperationCanceledException.#ctor(System.Threading.CancellationToken)\n  commentId: M:System.OperationCanceledException.#ctor(System.Threading.CancellationToken)\n  id: '#ctor(System.Threading.CancellationToken)'\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: OperationCanceledException(CancellationToken)\n  fullName: System.OperationCanceledException.OperationCanceledException(System.Threading.CancellationToken)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 48\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.OperationCanceledException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a cancellation token.</p>\\n\"\n  syntax:\n    content: public OperationCanceledException(CancellationToken token)\n    content.vb: Public Sub New(token As CancellationToken)\n    parameters:\n    - id: token\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A cancellation token associated with the operation that was canceled.</p>\\n\"\n  seealso:\n  - type: System.Exception\n    commentId: T:System.Exception\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: OperationCanceledException.OperationCanceledException(CancellationToken)\n- uid: System.OperationCanceledException.CancellationToken\n  commentId: P:System.OperationCanceledException.CancellationToken\n  id: CancellationToken\n  parent: System.OperationCanceledException\n  langs:\n  - csharp\n  - vb\n  name: CancellationToken\n  fullName: System.OperationCanceledException.CancellationToken\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/OperationCanceledException.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CancellationToken\n    path: src/mscorlib/src/System/OperationCanceledException.cs\n    startLine: 26\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System\n  summary: \"\\n<p>Gets a token associated with the operation that was canceled.</p>\\n\"\n  syntax:\n    content: public CancellationToken CancellationToken { get; }\n    content.vb: Public ReadOnly Property CancellationToken As CancellationToken\n    parameters: []\n    return:\n      type: System.Threading.CancellationToken\n      description: \"\\n<p>A token associated with the operation that was canceled, or a default token.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: OperationCanceledException.CancellationToken\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Runtime.InteropServices._Exception\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Exception\n  fullName: System.Runtime.InteropServices._Exception\n  nameWithType: _Exception\n  commentId: T:System.Runtime.InteropServices._Exception\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  fullName: System.Exception.GetBaseException()\n  spec.csharp:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetBaseException\n    name: GetBaseException\n    fullName: System.Exception.GetBaseException\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetBaseException()\n  commentId: M:System.Exception.GetBaseException\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  fullName: System.Exception.ToString()\n  spec.csharp:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.ToString\n    name: ToString\n    fullName: System.Exception.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.ToString()\n  commentId: M:System.Exception.ToString\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Exception.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: true\n  name: GetType()\n  fullName: System.Exception.GetType()\n  spec.csharp:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Exception.GetType\n    name: GetType\n    fullName: System.Exception.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Exception.GetType()\n  commentId: M:System.Exception.GetType\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  fullName: System.Exception.Message\n  nameWithType: Exception.Message\n  commentId: P:System.Exception.Message\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  fullName: System.Exception.Data\n  nameWithType: Exception.Data\n  commentId: P:System.Exception.Data\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  fullName: System.Exception.InnerException\n  nameWithType: Exception.InnerException\n  commentId: P:System.Exception.InnerException\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: true\n  name: TargetSite\n  fullName: System.Exception.TargetSite\n  nameWithType: Exception.TargetSite\n  commentId: P:System.Exception.TargetSite\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  fullName: System.Exception.StackTrace\n  nameWithType: Exception.StackTrace\n  commentId: P:System.Exception.StackTrace\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  fullName: System.Exception.HelpLink\n  nameWithType: Exception.HelpLink\n  commentId: P:System.Exception.HelpLink\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  fullName: System.Exception.Source\n  nameWithType: Exception.Source\n  commentId: P:System.Exception.Source\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  fullName: System.Exception.HResult\n  nameWithType: Exception.HResult\n  commentId: P:System.Exception.HResult\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: true\n  name: SerializeObjectState\n  fullName: System.Exception.SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  commentId: E:System.Exception.SerializeObjectState\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  fullName: System.Threading.CancellationToken\n  nameWithType: CancellationToken\n  commentId: T:System.Threading.CancellationToken\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n"}