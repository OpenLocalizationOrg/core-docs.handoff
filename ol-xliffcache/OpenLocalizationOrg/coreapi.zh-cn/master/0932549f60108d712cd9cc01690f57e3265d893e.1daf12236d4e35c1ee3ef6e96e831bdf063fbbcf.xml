{"nodes":[{"pos":[758,772],"content":"CallSiteBinder","needQuote":true,"nodes":[{"content":"CallSiteBinder","pos":[0,14]}]},{"pos":[2178,2194],"content":"CallSiteBinder()","needQuote":true,"nodes":[{"content":"CallSiteBinder()","pos":[0,16]}]},{"pos":[3303,3314],"content":"UpdateLabel","needQuote":true,"nodes":[{"content":"UpdateLabel","pos":[0,11]}]},{"pos":[5258,5326],"content":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)","needQuote":true,"nodes":[{"content":"Bind(Object[], ReadOnlyCollection&lt;ParameterExpression&gt;, LabelTarget)","pos":[0,68],"source":"Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)"}]},{"content":"\\n&lt;p&gt;An array of arguments to the dynamic operation.&lt;/p&gt;\\n","pos":[6397,6455],"source":"\\n<p>An array of arguments to the dynamic operation.</p>\\n"},{"content":"\\n&lt;p&gt;A LabelTarget used to return the result of the dynamic binding.&lt;/p&gt;\\n","pos":[6905,6979],"source":"\\n<p>A LabelTarget used to return the result of the dynamic binding.</p>\\n"},{"pos":[8485,8523],"content":"BindDelegate<T>(CallSite<T>, Object[])","needQuote":true,"nodes":[{"content":"BindDelegate&lt;T&gt;(CallSite&lt;T&gt;, Object[])","pos":[0,38],"source":"BindDelegate<T>(CallSite<T>, Object[])"}]},{"content":"\\n&lt;p&gt;The CallSite the bind is being performed for.&lt;/p&gt;\\n","pos":[9694,9750],"source":"\\n<p>The CallSite the bind is being performed for.</p>\\n"},{"content":"\\n&lt;p&gt;The arguments for the binder.&lt;/p&gt;\\n","pos":[9815,9855],"source":"\\n<p>The arguments for the binder.</p>\\n"},{"content":"\\n&lt;p&gt;The target type of the CallSite.&lt;/p&gt;\\n","pos":[9909,9952],"source":"\\n<p>The target type of the CallSite.</p>\\n"},{"content":"\\n&lt;p&gt;A new delegate which replaces the CallSite Target.&lt;/p&gt;\\n","pos":[10004,10065],"source":"\\n<p>A new delegate which replaces the CallSite Target.</p>\\n"},{"pos":[10778,10795],"content":"CacheTarget<T>(T)","needQuote":true,"nodes":[{"content":"CacheTarget&lt;T&gt;(T)","pos":[0,17],"source":"CacheTarget<T>(T)"}]},{"content":"\\n&lt;p&gt;The target delegate to be added to the cache.&lt;/p&gt;\\n","pos":[11667,11723],"source":"\\n<p>The target delegate to be added to the cache.</p>\\n"},{"content":"\\n&lt;p&gt;The type of target being added.&lt;/p&gt;\\n","pos":[11777,11819],"source":"\\n<p>The type of target being added.</p>\\n"},{"pos":[12183,12214],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[12420,12426],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12586,12596],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12691,12699],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12768,12769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12796,12797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12867,12875],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[12944,12945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12972,12973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13156,13170],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13289,13295],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13362,13363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13413,13419],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13479,13480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13563,13569],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13636,13637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13687,13693],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13753,13754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13968,13990],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[14138,14144],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14211,14212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14262,14268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14329,14330]},{"pos":[14385,14391],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14451,14452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14549,14555],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14622,14623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14673,14679],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14740,14741]},{"pos":[14796,14802],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14862,14863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15108,15139],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[15305,15320],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15396,15397],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15447,15453],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15514,15515]},{"pos":[15570,15576],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15636,15637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15743,15758],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[15834,15835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15885,15891],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15952,15953]},{"pos":[16008,16014],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16074,16075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16305,16318],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16419,16430],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16502,16503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16530,16531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16604,16615],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16687,16688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16715,16716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16891,16900],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[16993,17000],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17068,17069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17096,17097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17166,17173],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[17241,17242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17269,17270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17445,17462],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[17571,17586],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17662,17663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17690,17691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17768,17783],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[17859,17860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17887,17888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18033,18039],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[18209,18220],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[18407,18430],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[18577,18585],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[18713,18719],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[18780,18782]},{"pos":[18847,18853],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18913,18915],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[19203,19242],"content":"ReadOnlyCollection<ParameterExpression>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;ParameterExpression&gt;","pos":[0,39],"source":"ReadOnlyCollection<ParameterExpression>"}]},{"pos":[19603,19621],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[19717,19718],"content":"<","needQuote":true,"nodes":[]},{"pos":[19798,19817],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[19990,20008],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[20105,20108]},{"pos":[20195,20214],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[20283,20284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20633,20643],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[20855,20876],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[21135,21153],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[21228,21229],"content":"<","needQuote":true,"nodes":[]},{"pos":[21256,21257],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21388,21406],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[21482,21485]},{"pos":[21519,21520],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21547,21548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21780,21810],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[22107,22118],"content":"CallSite<T>","needQuote":true,"nodes":[{"content":"CallSite&lt;T&gt;","pos":[0,11],"source":"CallSite<T>"}]},{"pos":[22340,22348],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[22414,22415],"content":"<","needQuote":true,"nodes":[]},{"pos":[22442,22443],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22565,22573],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[22640,22643]},{"pos":[22677,22678],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[22705,22706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22883,22884],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23056,23067],"content":"CallSite<T>","needQuote":true,"nodes":[{"content":"CallSite&lt;T&gt;","pos":[0,11],"source":"CallSite<T>"}]},{"pos":[23289,23297],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"pos":[23363,23364],"content":"<","needQuote":true,"nodes":[]},{"pos":[23391,23392],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23514,23522],"content":"CallSite","needQuote":true,"nodes":[{"content":"CallSite","pos":[0,8]}]},{"content":"(Of","pos":[23589,23592]},{"pos":[23626,23627],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23654,23655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23829,23830],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.CallSiteBinder\n  commentId: T:System.Runtime.CompilerServices.CallSiteBinder\n  id: CallSiteBinder\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.CallSiteBinder.#ctor\n  - System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  langs:\n  - csharp\n  - vb\n  name: CallSiteBinder\n  fullName: System.Runtime.CompilerServices.CallSiteBinder\n  type: Class\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CallSiteBinder\n    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n    startLine: 18\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Class responsible for runtime binding of the dynamic operations on the dynamic call site.</p>\\n\"\n  syntax:\n    content: public abstract class CallSiteBinder\n    content.vb: Public MustInherit Class CallSiteBinder\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: CallSiteBinder\n- uid: System.Runtime.CompilerServices.CallSiteBinder.#ctor\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.#ctor\n  id: '#ctor'\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  langs:\n  - csharp\n  - vb\n  name: CallSiteBinder()\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CallSiteBinder()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n    startLine: 30\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.CompilerServices.CallSiteBinder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected CallSiteBinder()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: CallSiteBinder.CallSiteBinder()\n- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  commentId: P:System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  id: UpdateLabel\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  langs:\n  - csharp\n  - vb\n  name: UpdateLabel\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel\n  type: Property\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UpdateLabel\n    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n    startLine: 40\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Gets a label that can be used to cause the binding to be updated. It indicates that the expression's binding is no longer valid. This is typically used when the \\\"version\\\" of a dynamic object has changed.</p>\\n\"\n  syntax:\n    content: public static LabelTarget UpdateLabel { get; }\n    content.vb: Public Shared ReadOnly Property UpdateLabel As LabelTarget\n    parameters: []\n    return:\n      type: LabelTarget\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.LabelTarget\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing a label that can be used to trigger the binding update.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: CallSiteBinder.UpdateLabel\n- uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  id: Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  langs:\n  - csharp\n  - vb\n  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Bind\n    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs\n    startLine: 283\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Performs the runtime binding of the dynamic operation on a set of arguments.</p>\\n\"\n  syntax:\n    content: public abstract Expression Bind(object[] args, ReadOnlyCollection<ParameterExpression> parameters, LabelTarget returnLabel)\n    content.vb: Public MustOverride Function Bind(args As Object(), parameters As ReadOnlyCollection(Of ParameterExpression), returnLabel As LabelTarget) As Expression\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>An array of arguments to the dynamic operation.</p>\\n\"\n    - id: parameters\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n      description: \"\\n<p>The array of <xref href=\\\"System.Linq.Expressions.ParameterExpression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances that represent the parameters of the call site in the binding process.</p>\\n\"\n    - id: returnLabel\n      type: System.Linq.Expressions.LabelTarget\n      description: \"\\n<p>A LabelTarget used to return the result of the dynamic binding.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>An Expression that performs tests on the dynamic operation arguments, and performs the dynamic operation if the tests are valid. If the tests fail on subsequent occurrences of the dynamic operation, Bind will be called again to produce a new <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the new argument types.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  modifiers.vb:\n  - Public\n  - MustOverride\n  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)\n  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n  nameWithType: CallSiteBinder.Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)\n  nameWithType.vb: CallSiteBinder.Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)\n- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  id: BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  langs:\n  - csharp\n  - vb\n  name: BindDelegate<T>(CallSite<T>, Object[])\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BindDelegate\n    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n    startLine: 112\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Provides low-level runtime binding support. Classes can override this and provide a direct delegate for the implementation of rule. This can enable saving rules to disk, having specialized rules available at runtime, or providing a different caching policy.</p>\\n\"\n  syntax:\n    content: 'public virtual T BindDelegate<T>(CallSite<T> site, object[] args)where T : class'\n    content.vb: Public Overridable Function BindDelegate(Of T As Class)(site As CallSite(Of T), args As Object()) As T\n    parameters:\n    - id: site\n      type: System.Runtime.CompilerServices.CallSite{{T}}\n      description: \"\\n<p>The CallSite the bind is being performed for.</p>\\n\"\n    - id: args\n      type: System.Object[]\n      description: \"\\n<p>The arguments for the binder.</p>\\n\"\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The target type of the CallSite.</p>\\n\"\n    return:\n      type: '{T}'\n      description: \"\\n<p>A new delegate which replaces the CallSite Target.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())\n  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())\n  nameWithType: CallSiteBinder.BindDelegate<T>(CallSite<T>, Object[])\n  nameWithType.vb: CallSiteBinder.BindDelegate(Of T)(CallSite(Of T), Object())\n- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  commentId: M:System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)\n  id: CacheTarget``1(``0)\n  parent: System.Runtime.CompilerServices.CallSiteBinder\n  langs:\n  - csharp\n  - vb\n  name: CacheTarget<T>(T)\n  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)\n  type: Method\n  source:\n    remote:\n      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CacheTarget\n    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteBinder.cs\n    startLine: 160\n  assemblies:\n  - System.Dynamic.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Adds a target to the cache of known targets. The cached targets will be scanned before calling BindDelegate to produce the new rule.</p>\\n\"\n  syntax:\n    content: 'protected void CacheTarget<T>(T target)where T : class'\n    content.vb: Protected Sub CacheTarget(Of T As Class)(target As T)\n    parameters:\n    - id: target\n      type: '{T}'\n      description: \"\\n<p>The target delegate to be added to the cache.</p>\\n\"\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of target being added.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)\n  name.vb: CacheTarget(Of T)(T)\n  nameWithType: CallSiteBinder.CacheTarget<T>(T)\n  nameWithType.vb: CallSiteBinder.CacheTarget(Of T)(T)\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n  nameWithType: LabelTarget\n  commentId: T:System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<ParameterExpression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression)\n  name.vb: ReadOnlyCollection(Of ParameterExpression)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<ParameterExpression>\n  nameWithType.vb: ReadOnlyCollection(Of ParameterExpression)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  nameWithType: Expression\n  commentId: T:System.Linq.Expressions.Expression\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n- uid: System.Runtime.CompilerServices.CallSite{{T}}\n  parent: System.Runtime.CompilerServices\n  definition: System.Runtime.CompilerServices.CallSite`1\n  name: CallSite<T>\n  fullName: System.Runtime.CompilerServices.CallSite<T>\n  fullname.vb: System.Runtime.CompilerServices.CallSite(Of T)\n  name.vb: CallSite(Of T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSite<T>\n  nameWithType.vb: CallSite(Of T)\n  commentId: T:System.Runtime.CompilerServices.CallSite{``0}\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Runtime.CompilerServices.CallSite`1\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: CallSite<T>\n  fullName: System.Runtime.CompilerServices.CallSite<T>\n  fullname.vb: System.Runtime.CompilerServices.CallSite(Of T)\n  name.vb: CallSite(Of T)\n  spec.csharp:\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Runtime.CompilerServices.CallSite`1\n    name: CallSite\n    fullName: System.Runtime.CompilerServices.CallSite\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: CallSite<T>\n  nameWithType.vb: CallSite(Of T)\n  commentId: T:System.Runtime.CompilerServices.CallSite`1\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n"}