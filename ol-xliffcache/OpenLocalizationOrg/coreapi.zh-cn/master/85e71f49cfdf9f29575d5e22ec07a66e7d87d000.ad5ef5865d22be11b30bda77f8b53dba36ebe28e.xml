{"nodes":[{"pos":[613,624],"content":"PackingSize","needQuote":true,"nodes":[{"content":"PackingSize","pos":[0,11]}]},{"pos":[1657,1662],"content":"Size1","needQuote":true,"nodes":[{"content":"Size1","pos":[0,5]}]},{"pos":[2528,2535],"content":"Size128","needQuote":true,"nodes":[{"content":"Size128","pos":[0,7]}]},{"pos":[3411,3417],"content":"Size16","needQuote":true,"nodes":[{"content":"Size16","pos":[0,6]}]},{"pos":[4284,4289],"content":"Size2","needQuote":true,"nodes":[{"content":"Size2","pos":[0,5]}]},{"pos":[5153,5159],"content":"Size32","needQuote":true,"nodes":[{"content":"Size32","pos":[0,6]}]},{"pos":[6026,6031],"content":"Size4","needQuote":true,"nodes":[{"content":"Size4","pos":[0,5]}]},{"pos":[6895,6901],"content":"Size64","needQuote":true,"nodes":[{"content":"Size64","pos":[0,6]}]},{"pos":[7768,7773],"content":"Size8","needQuote":true,"nodes":[{"content":"Size8","pos":[0,5]}]},{"pos":[8652,8663],"content":"Unspecified","needQuote":true,"nodes":[{"content":"Unspecified","pos":[0,11]}]},{"pos":[9428,9450],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[9666,9677],"content":"PackingSize","needQuote":true,"nodes":[{"content":"PackingSize","pos":[0,11]}]}],"content":"items:\n- uid: System.Reflection.Emit.PackingSize\n  commentId: T:System.Reflection.Emit.PackingSize\n  id: PackingSize\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.PackingSize.Size1\n  - System.Reflection.Emit.PackingSize.Size128\n  - System.Reflection.Emit.PackingSize.Size16\n  - System.Reflection.Emit.PackingSize.Size2\n  - System.Reflection.Emit.PackingSize.Size32\n  - System.Reflection.Emit.PackingSize.Size4\n  - System.Reflection.Emit.PackingSize.Size64\n  - System.Reflection.Emit.PackingSize.Size8\n  - System.Reflection.Emit.PackingSize.Unspecified\n  langs:\n  - csharp\n  - vb\n  name: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PackingSize\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 22\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum PackingSize\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum PackingSize\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: PackingSize\n- uid: System.Reflection.Emit.PackingSize.Size1\n  commentId: F:System.Reflection.Emit.PackingSize.Size1\n  id: Size1\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size1\n  fullName: System.Reflection.Emit.PackingSize.Size1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size1\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 27\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 1 byte.</p>\\n\"\n  syntax:\n    content: Size1 = 1\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size1\n- uid: System.Reflection.Emit.PackingSize.Size128\n  commentId: F:System.Reflection.Emit.PackingSize.Size128\n  id: Size128\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size128\n  fullName: System.Reflection.Emit.PackingSize.Size128\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size128\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 128 bytes.</p>\\n\"\n  syntax:\n    content: Size128 = 128\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size128\n- uid: System.Reflection.Emit.PackingSize.Size16\n  commentId: F:System.Reflection.Emit.PackingSize.Size16\n  id: Size16\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size16\n  fullName: System.Reflection.Emit.PackingSize.Size16\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size16\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 31\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 16 bytes.</p>\\n\"\n  syntax:\n    content: Size16 = 16\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size16\n- uid: System.Reflection.Emit.PackingSize.Size2\n  commentId: F:System.Reflection.Emit.PackingSize.Size2\n  id: Size2\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size2\n  fullName: System.Reflection.Emit.PackingSize.Size2\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size2\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 28\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 2 bytes.</p>\\n\"\n  syntax:\n    content: Size2 = 2\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size2\n- uid: System.Reflection.Emit.PackingSize.Size32\n  commentId: F:System.Reflection.Emit.PackingSize.Size32\n  id: Size32\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size32\n  fullName: System.Reflection.Emit.PackingSize.Size32\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size32\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 32\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 32 bytes.</p>\\n\"\n  syntax:\n    content: Size32 = 32\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size32\n- uid: System.Reflection.Emit.PackingSize.Size4\n  commentId: F:System.Reflection.Emit.PackingSize.Size4\n  id: Size4\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size4\n  fullName: System.Reflection.Emit.PackingSize.Size4\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size4\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 29\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 4 bytes.</p>\\n\"\n  syntax:\n    content: Size4 = 4\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size4\n- uid: System.Reflection.Emit.PackingSize.Size64\n  commentId: F:System.Reflection.Emit.PackingSize.Size64\n  id: Size64\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size64\n  fullName: System.Reflection.Emit.PackingSize.Size64\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size64\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 64 bytes.</p>\\n\"\n  syntax:\n    content: Size64 = 64\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size64\n- uid: System.Reflection.Emit.PackingSize.Size8\n  commentId: F:System.Reflection.Emit.PackingSize.Size8\n  id: Size8\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Size8\n  fullName: System.Reflection.Emit.PackingSize.Size8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size8\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 30\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is 8 bytes.</p>\\n\"\n  syntax:\n    content: Size8 = 8\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Size8\n- uid: System.Reflection.Emit.PackingSize.Unspecified\n  commentId: F:System.Reflection.Emit.PackingSize.Unspecified\n  id: Unspecified\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  - vb\n  name: Unspecified\n  fullName: System.Reflection.Emit.PackingSize.Unspecified\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Unspecified\n    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>The packing size is not specified.</p>\\n\"\n  syntax:\n    content: Unspecified = 0\n    return:\n      type: System.Reflection.Emit.PackingSize\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: PackingSize.Unspecified\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Reflection.Emit.PackingSize\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n  nameWithType: PackingSize\n  commentId: T:System.Reflection.Emit.PackingSize\n"}