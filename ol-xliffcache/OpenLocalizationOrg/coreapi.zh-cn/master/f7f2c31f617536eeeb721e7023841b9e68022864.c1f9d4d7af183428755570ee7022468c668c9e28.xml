{"nodes":[{"pos":[970,990],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[2300,2342],"content":"NameValueHeaderValue(NameValueHeaderValue)","needQuote":true,"nodes":[{"content":"NameValueHeaderValue(NameValueHeaderValue)","pos":[0,42]}]},{"pos":[3800,3828],"content":"NameValueHeaderValue(String)","needQuote":true,"nodes":[{"content":"NameValueHeaderValue(String)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The header name.&lt;/p&gt;\\n","pos":[4604,4631],"source":"\\n<p>The header name.</p>\\n"},{"pos":[5072,5108],"content":"NameValueHeaderValue(String, String)","needQuote":true,"nodes":[{"content":"NameValueHeaderValue(String, String)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The header name.&lt;/p&gt;\\n","pos":[5930,5957],"source":"\\n<p>The header name.</p>\\n"},{"content":"\\n&lt;p&gt;The header value.&lt;/p&gt;\\n","pos":[6021,6049],"source":"\\n<p>The header value.</p>\\n"},{"pos":[6406,6410],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[7490,7495],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[8621,8635],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[9517,9574],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[10352,10365],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11696,11709],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents name value header value information.&lt;/p&gt;\\n","pos":[12512,12584],"source":"\\n<p>A string that represents name value header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[13044,13109],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid name value header value information.&lt;/p&gt;\\n","pos":[13202,13279],"source":"\\n<p>\\n<em>input</em> is not valid name value header value information.</p>\\n"},{"pos":[13647,13657],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15142,15184],"content":"TryParse(String, out NameValueHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out NameValueHeaderValue)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[16117,16151],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[17271,17294],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[17476,17482],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17669,17691],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17839,17845],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17912,17913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17963,17969],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18030,18031]},{"pos":[18086,18092],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18152,18153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18250,18256],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18323,18324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18374,18380],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18441,18442]},{"pos":[18497,18503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18563,18564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18809,18840],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19006,19021],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19097,19098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19148,19154],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19215,19216]},{"pos":[19271,19277],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19337,19338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19444,19459],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19535,19536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19586,19592],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19653,19654]},{"pos":[19709,19715],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19775,19776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20002,20011],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20104,20111],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20179,20180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20207,20208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20277,20284],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20352,20353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20380,20381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20556,20573],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[20682,20697],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20773,20774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20801,20802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20879,20894],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[20970,20971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20998,20999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21144,21150],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21329,21349],"content":"NameValueHeaderValue","needQuote":true,"nodes":[{"content":"NameValueHeaderValue","pos":[0,20]}]},{"pos":[21570,21576],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21749,21763],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21882,21888],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21955,21956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22006,22012],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22072,22073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22156,22162],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22229,22230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22280,22286],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22346,22347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22520,22527],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22693,22706],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[22807,22818],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[22890,22891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22918,22919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22992,23003],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[23075,23076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23103,23104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23264,23269],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23426,23436],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23531,23539],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23608,23609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23636,23637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23707,23715],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[23784,23785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23812,23813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23966,23987],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[24186,24201],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.NameValueHeaderValue\n  commentId: T:System.Net.Http.Headers.NameValueHeaderValue\n  id: NameValueHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)\n  - System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)\n  - System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  - System.Net.Http.Headers.NameValueHeaderValue.Name\n  - System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.NameValueHeaderValue.ToString\n  - System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  - System.Net.Http.Headers.NameValueHeaderValue.Value\n  langs:\n  - csharp\n  - vb\n  name: NameValueHeaderValue\n  fullName: System.Net.Http.Headers.NameValueHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NameValueHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 457\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents a name/value pair used in various headers as defined in RFC 2616.</p>\\n\"\n  syntax:\n    content: public class NameValueHeaderValue\n    content.vb: Public Class NameValueHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: NameValueHeaderValue\n- uid: System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)\n  id: '#ctor(System.Net.Http.Headers.NameValueHeaderValue)'\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueHeaderValue(NameValueHeaderValue)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.NameValueHeaderValue(System.Net.Http.Headers.NameValueHeaderValue)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 459\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected NameValueHeaderValue(NameValueHeaderValue source)\n    content.vb: Protected Sub New(source As NameValueHeaderValue)\n    parameters:\n    - id: source\n      type: System.Net.Http.Headers.NameValueHeaderValue\n      description: \"\\n<p>A <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: NameValueHeaderValue.NameValueHeaderValue(NameValueHeaderValue)\n- uid: System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueHeaderValue(String)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.NameValueHeaderValue(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 460\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public NameValueHeaderValue(string name)\n    content.vb: Public Sub New(name As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The header name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NameValueHeaderValue.NameValueHeaderValue(String)\n- uid: System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: NameValueHeaderValue(String, String)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.NameValueHeaderValue(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 461\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public NameValueHeaderValue(string name, string value)\n    content.vb: Public Sub New(name As String, value As String)\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The header name.</p>\\n\"\n    - id: value\n      type: System.String\n      description: \"\\n<p>The header value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: NameValueHeaderValue.NameValueHeaderValue(String, String)\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Name\n  commentId: P:System.Net.Http.Headers.NameValueHeaderValue.Name\n  id: Name\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 462\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the header name.</p>\\n\"\n  syntax:\n    content: public string Name { get; }\n    content.vb: Public ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The header name.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: NameValueHeaderValue.Name\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Value\n  commentId: P:System.Net.Http.Headers.NameValueHeaderValue.Value\n  id: Value\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 463\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the header value.</p>\\n\"\n  syntax:\n    content: public string Value { get; set; }\n    content.vb: Public Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The header value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: NameValueHeaderValue.Value\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 464\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 465\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 466\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static NameValueHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As NameValueHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents name value header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.NameValueHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid name value header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: NameValueHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.NameValueHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 467\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: NameValueHeaderValue.ToString()\n- uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  commentId: M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)\n  parent: System.Net.Http.Headers.NameValueHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out NameValueHeaderValue)\n  fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String, out System.Net.Http.Headers.NameValueHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 468\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out NameValueHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As NameValueHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.NameValueHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.NameValueHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.NameValueHeaderValue)\n  name.vb: TryParse(String, ByRef NameValueHeaderValue)\n  nameWithType: NameValueHeaderValue.TryParse(String, out NameValueHeaderValue)\n  nameWithType.vb: NameValueHeaderValue.TryParse(String, ByRef NameValueHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Net.Http.Headers.NameValueHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: NameValueHeaderValue\n  fullName: System.Net.Http.Headers.NameValueHeaderValue\n  commentId: T:System.Net.Http.Headers.NameValueHeaderValue\n  nameWithType: NameValueHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}