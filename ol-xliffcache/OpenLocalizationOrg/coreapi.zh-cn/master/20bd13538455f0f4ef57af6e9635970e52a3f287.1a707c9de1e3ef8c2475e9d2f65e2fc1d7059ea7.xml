{"nodes":[{"pos":[791,815],"content":"XmlSignificantWhitespace","needQuote":true,"nodes":[{"content":"XmlSignificantWhitespace","pos":[0,24]}]},{"pos":[4713,4758],"content":"XmlSignificantWhitespace(String, XmlDocument)","needQuote":true,"nodes":[{"content":"XmlSignificantWhitespace(String, XmlDocument)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The white space characters of the node.&lt;/p&gt;\\n","pos":[5622,5672],"source":"\\n<p>The white space characters of the node.</p>\\n"},{"pos":[6212,6221],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlSignificantWhitespace&lt;/strong&gt; nodes, this property returns &lt;strong&gt;#significant-whitespace&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6897,7024],"source":"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this property returns <strong>#significant-whitespace</strong>.</p>\\n"},{"pos":[7422,7426],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlSignificantWhitespace&lt;/strong&gt; nodes, this property returns &lt;strong&gt;#significant-whitespace&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8086,8213],"source":"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this property returns <strong>#significant-whitespace</strong>.</p>\\n"},{"pos":[8613,8621],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"content":"\\n&lt;p&gt;For &lt;strong&gt;XmlSignificantWhitespace&lt;/strong&gt; nodes, this value is XmlNodeType.SignificantWhitespace.&lt;/p&gt;\\n","pos":[9314,9426],"source":"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this value is XmlNodeType.SignificantWhitespace.</p>\\n"},{"pos":[9924,9934],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[11175,11187],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[12410,12415],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The white space characters found in the node.&lt;/p&gt;\\n","pos":[13074,13130],"source":"\\n<p>The white space characters found in the node.</p>\\n"},{"content":"\\n&lt;p&gt;Setting &lt;strong&gt;Value&lt;/strong&gt; to invalid white space characters.","pos":[13289,13359],"source":"\\n<p>Setting <strong>Value</strong> to invalid white space characters."},{"content":"&lt;/p&gt;\\n","pos":[13360,13366],"source":" </p>\\n"},{"pos":[13775,13793],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to recursively clone the subtree under the specified node; &lt;strong&gt;false&lt;/strong&gt; to clone only the node itself.","pos":[14497,14638],"source":"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself."},{"content":"For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.","pos":[14639,14758]},{"content":"&lt;/p&gt;\\n","pos":[14759,14765],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The cloned node.&lt;/p&gt;\\n","pos":[14830,14857],"source":"\\n<p>The cloned node.</p>\\n"},{"pos":[15355,15380],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[16195,16257],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[16258,16264],"source":" </p>\\n"},{"pos":[16759,16777],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;XmlWriter&lt;/strong&gt; to which you want to save.","pos":[17544,17606],"source":"\\n<p>The <strong>XmlWriter</strong> to which you want to save."},{"content":"&lt;/p&gt;\\n","pos":[17607,17613],"source":" </p>\\n"},{"pos":[17881,17891],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[18034,18040],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18194,18201],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[18372,18385],"content":"XmlLinkedNode","needQuote":true,"nodes":[{"content":"XmlLinkedNode","pos":[0,13]}]},{"pos":[18577,18593],"content":"XmlCharacterData","needQuote":true,"nodes":[{"content":"XmlCharacterData","pos":[0,16]}]},{"pos":[18805,18816],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[19040,19044],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[19284,19290],"content":"Length","needQuote":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[19554,19572],"content":"AppendData(String)","needQuote":true,"nodes":[{"content":"AppendData(String)","pos":[0,18]}]},{"pos":[19727,19737],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[19801,19802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19852,19858],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19918,19919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20020,20030],"content":"AppendData","needQuote":true,"nodes":[{"content":"AppendData","pos":[0,10]}]},{"pos":[20094,20095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20145,20151],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20211,20212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20488,20512],"content":"DeleteData(Int32, Int32)","needQuote":true,"nodes":[{"content":"DeleteData(Int32, Int32)","pos":[0,24]}]},{"pos":[20692,20702],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[20766,20767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20816,20821],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[20881,20882]},{"pos":[20936,20941],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21000,21001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21114,21124],"content":"DeleteData","needQuote":true,"nodes":[{"content":"DeleteData","pos":[0,10]}]},{"pos":[21188,21189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21238,21243],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[21303,21304]},{"pos":[21358,21363],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21422,21423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21718,21743],"content":"InsertData(Int32, String)","needQuote":true,"nodes":[{"content":"InsertData(Int32, String)","pos":[0,25]}]},{"pos":[21925,21935],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[21999,22000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22049,22054],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[22114,22115]},{"pos":[22170,22176],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22236,22237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22351,22361],"content":"InsertData","needQuote":true,"nodes":[{"content":"InsertData","pos":[0,10]}]},{"pos":[22425,22426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22475,22480],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[22540,22541]},{"pos":[22596,22602],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22662,22663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22974,23007],"content":"ReplaceData(Int32, Int32, String)","needQuote":true,"nodes":[{"content":"ReplaceData(Int32, Int32, String)","pos":[0,33]}]},{"pos":[23218,23229],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[23294,23295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23344,23349],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23409,23410]},{"pos":[23464,23469],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23529,23530]},{"pos":[23585,23591],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23651,23652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23780,23791],"content":"ReplaceData","needQuote":true,"nodes":[{"content":"ReplaceData","pos":[0,11]}]},{"pos":[23856,23857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23906,23911],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[23971,23972]},{"pos":[24026,24031],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[24091,24092]},{"pos":[24147,24153],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24213,24214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24531,24554],"content":"Substring(Int32, Int32)","needQuote":true,"nodes":[{"content":"Substring(Int32, Int32)","pos":[0,23]}]},{"pos":[24732,24741],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[24804,24805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24854,24859],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[24919,24920]},{"pos":[24974,24979],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25038,25039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25151,25160],"content":"Substring","needQuote":true,"nodes":[{"content":"Substring","pos":[0,9]}]},{"pos":[25223,25224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25273,25278],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[25338,25339]},{"pos":[25393,25398],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25457,25458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25719,25730],"content":"NextSibling","needQuote":true,"nodes":[{"content":"NextSibling","pos":[0,11]}]},{"pos":[25985,26000],"content":"PreviousSibling","needQuote":true,"nodes":[{"content":"PreviousSibling","pos":[0,15]}]},{"pos":[26250,26260],"content":"Attributes","needQuote":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[26474,26481],"content":"BaseURI","needQuote":true,"nodes":[{"content":"BaseURI","pos":[0,7]}]},{"pos":[26689,26699],"content":"ChildNodes","needQuote":true,"nodes":[{"content":"ChildNodes","pos":[0,10]}]},{"pos":[26916,26926],"content":"FirstChild","needQuote":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[27146,27159],"content":"HasChildNodes","needQuote":true,"nodes":[{"content":"HasChildNodes","pos":[0,13]}]},{"pos":[27384,27393],"content":"InnerText","needQuote":true,"nodes":[{"content":"InnerText","pos":[0,9]}]},{"pos":[27605,27613],"content":"InnerXml","needQuote":true,"nodes":[{"content":"InnerXml","pos":[0,8]}]},{"pos":[27824,27834],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[28059,28071],"content":"Item[String]","needQuote":true,"nodes":[{"content":"Item[String]","pos":[0,12]}]},{"pos":[28274,28278],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[28328,28329]},{"pos":[28382,28388],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[28449,28450]},{"pos":[28539,28543],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[28592,28593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28643,28649],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28709,28710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28974,28994],"content":"Item[String, String]","needQuote":true,"nodes":[{"content":"Item[String, String]","pos":[0,20]}]},{"pos":[29249,29253],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[29303,29304]},{"pos":[29357,29363],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[29424,29425]},{"pos":[29480,29486],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"]","pos":[29547,29548]},{"pos":[29651,29655],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[29704,29705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29755,29761],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[29822,29823]},{"pos":[29878,29884],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29944,29945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30216,30225],"content":"LastChild","needQuote":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[30441,30453],"content":"NamespaceURI","needQuote":true,"nodes":[{"content":"NamespaceURI","pos":[0,12]}]},{"pos":[30674,30682],"content":"OuterXml","needQuote":true,"nodes":[{"content":"OuterXml","pos":[0,8]}]},{"pos":[30896,30909],"content":"OwnerDocument","needQuote":true,"nodes":[{"content":"OwnerDocument","pos":[0,13]}]},{"pos":[31131,31137],"content":"Prefix","needQuote":true,"nodes":[{"content":"Prefix","pos":[0,6]}]},{"pos":[31363,31383],"content":"AppendChild(XmlNode)","needQuote":true,"nodes":[{"content":"AppendChild(XmlNode)","pos":[0,20]}]},{"pos":[31532,31543],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[31599,31600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31655,31662],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31706,31707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31805,31816],"content":"AppendChild","needQuote":true,"nodes":[{"content":"AppendChild","pos":[0,11]}]},{"pos":[31872,31873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31928,31935],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[31979,31980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32205,32220],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[32335,32348],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[32406,32407],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32434,32435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32515,32528],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[32586,32587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32614,32615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32838,32866],"content":"GetNamespaceOfPrefix(String)","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix(String)","pos":[0,28]}]},{"pos":[33023,33043],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[33108,33109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33159,33165],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33225,33226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33328,33348],"content":"GetNamespaceOfPrefix","needQuote":true,"nodes":[{"content":"GetNamespaceOfPrefix","pos":[0,20]}]},{"pos":[33413,33414],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33464,33470],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33530,33531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33789,33817],"content":"GetPrefixOfNamespace(String)","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace(String)","pos":[0,28]}]},{"pos":[33974,33994],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[34059,34060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34110,34116],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34176,34177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34279,34299],"content":"GetPrefixOfNamespace","needQuote":true,"nodes":[{"content":"GetPrefixOfNamespace","pos":[0,20]}]},{"pos":[34364,34365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34415,34421],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34481,34482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34756,34785],"content":"InsertAfter(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertAfter(XmlNode, XmlNode)","pos":[0,29]}]},{"pos":[34973,34984],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[35040,35041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35096,35103],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[35148,35149]},{"pos":[35209,35216],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35260,35261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35378,35389],"content":"InsertAfter","needQuote":true,"nodes":[{"content":"InsertAfter","pos":[0,11]}]},{"pos":[35445,35446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35501,35508],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[35553,35554]},{"pos":[35614,35621],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[35665,35666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35957,35987],"content":"InsertBefore(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"InsertBefore(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[36177,36189],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[36246,36247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36302,36309],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[36354,36355]},{"pos":[36415,36422],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36466,36467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36585,36597],"content":"InsertBefore","needQuote":true,"nodes":[{"content":"InsertBefore","pos":[0,12]}]},{"pos":[36654,36655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36710,36717],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[36762,36763]},{"pos":[36823,36830],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[36874,36875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37126,37137],"content":"Normalize()","needQuote":true,"nodes":[{"content":"Normalize()","pos":[0,11]}]},{"pos":[37244,37253],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[37307,37308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37335,37336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37412,37421],"content":"Normalize","needQuote":true,"nodes":[{"content":"Normalize","pos":[0,9]}]},{"pos":[37475,37476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37503,37504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37717,37738],"content":"PrependChild(XmlNode)","needQuote":true,"nodes":[{"content":"PrependChild(XmlNode)","pos":[0,21]}]},{"pos":[37889,37901],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[37958,37959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38014,38021],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[38065,38066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38165,38177],"content":"PrependChild","needQuote":true,"nodes":[{"content":"PrependChild","pos":[0,12]}]},{"pos":[38234,38235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38290,38297],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[38341,38342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38565,38576],"content":"RemoveAll()","needQuote":true,"nodes":[{"content":"RemoveAll()","pos":[0,11]}]},{"pos":[38683,38692],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[38746,38747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38774,38775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38851,38860],"content":"RemoveAll","needQuote":true,"nodes":[{"content":"RemoveAll","pos":[0,9]}]},{"pos":[38914,38915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38942,38943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39155,39175],"content":"RemoveChild(XmlNode)","needQuote":true,"nodes":[{"content":"RemoveChild(XmlNode)","pos":[0,20]}]},{"pos":[39324,39335],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[39391,39392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39447,39454],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[39498,39499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39597,39608],"content":"RemoveChild","needQuote":true,"nodes":[{"content":"RemoveChild","pos":[0,11]}]},{"pos":[39664,39665],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39720,39727],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[39771,39772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40035,40065],"content":"ReplaceChild(XmlNode, XmlNode)","needQuote":true,"nodes":[{"content":"ReplaceChild(XmlNode, XmlNode)","pos":[0,30]}]},{"pos":[40255,40267],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[40324,40325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40380,40387],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[40432,40433]},{"pos":[40493,40500],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[40544,40545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40663,40675],"content":"ReplaceChild","needQuote":true,"nodes":[{"content":"ReplaceChild","pos":[0,12]}]},{"pos":[40732,40733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40788,40795],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"content":",","pos":[40840,40841]},{"pos":[40901,40908],"content":"XmlNode","needQuote":true,"nodes":[{"content":"XmlNode","pos":[0,7]}]},{"pos":[40952,40953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41231,41255],"content":"Supports(String, String)","needQuote":true,"nodes":[{"content":"Supports(String, String)","pos":[0,24]}]},{"pos":[41417,41425],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[41478,41479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41529,41535],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[41596,41597]},{"pos":[41652,41658],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[41718,41719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41823,41831],"content":"Supports","needQuote":true,"nodes":[{"content":"Supports","pos":[0,8]}]},{"pos":[41884,41885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41935,41941],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[42002,42003]},{"pos":[42058,42064],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42124,42125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42391,42418],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[42653,42678],"content":"IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator","pos":[0,25]}]},{"pos":[42767,42768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42795,42796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42907,42951],"content":"System.Collections.IEnumerable.GetEnumerator","needQuote":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator","pos":[0,44]}]},{"pos":[43040,43041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43068,43069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43372,43382],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[43477,43485],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[43554,43555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43582,43583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43653,43661],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[43730,43731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43758,43759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43942,43956],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[44075,44081],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[44148,44149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44199,44205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44265,44266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44349,44355],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[44422,44423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44473,44479],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44539,44540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44754,44776],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[44924,44930],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[44997,44998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45048,45054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[45115,45116]},{"pos":[45171,45177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45237,45238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45335,45341],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[45408,45409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45459,45465],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[45526,45527]},{"pos":[45582,45588],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45648,45649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45894,45925],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[46091,46106],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[46182,46183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46233,46239],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46300,46301]},{"pos":[46356,46362],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46422,46423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46529,46544],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[46620,46621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46671,46677],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[46738,46739]},{"pos":[46794,46800],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46860,46861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47091,47104],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[47205,47216],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[47288,47289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47316,47317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47390,47401],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[47473,47474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47501,47502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47677,47686],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[47779,47786],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[47854,47855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47882,47883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47952,47959],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[48027,48028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48055,48056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48231,48248],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[48357,48372],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[48448,48449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48476,48477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48554,48569],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[48645,48646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48673,48674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48969,48982],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[49099,49110],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[49169,49170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49197,49198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49279,49290],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[49349,49350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49377,49378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49733,49745],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[49878,49888],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[49955,49956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49983,49984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50073,50083],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[50150,50151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50178,50179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50520,50535],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[50739,50752],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[50814,50815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50842,50843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50921,50937],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[51002,51003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51030,51031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51409,51426],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[51638,51653],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[51717,51718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51745,51746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51826,51844],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[51911,51912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51939,51940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52175,52181],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[52300,52318],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[52519,52543],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[52722,52733],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[52792,52793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52860,52871],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[52948,52949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53062,53073],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[53132,53133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53200,53211],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[53288,53289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53517,53526],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[53732,53755],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[53950,53960],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[54027,54028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54095,54106],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54183,54184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54305,54315],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[54382,54383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54450,54461],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[54538,54539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54792,54810],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[55032,55058],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[55365,55378],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[55440,55441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55508,55519],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[55596,55597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55707,55723],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[55788,55789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55856,55867],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[55944,55945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56234,56244],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[56444,56472],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[56787,56802],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[56866,56867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56934,56945],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[57022,57023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57135,57153],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[57220,57221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57288,57299],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[57376,57377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57639,57650],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[57796,57802],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57960,57971],"content":"XmlDocument","needQuote":true,"nodes":[{"content":"XmlDocument","pos":[0,11]}]},{"pos":[58166,58175],"content":"LocalName","needQuote":true,"nodes":[{"content":"LocalName","pos":[0,9]}]},{"pos":[58383,58387],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[58584,58592],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[58788,58799],"content":"XmlNodeType","needQuote":true,"nodes":[{"content":"XmlNodeType","pos":[0,11]}]},{"pos":[58995,59005],"content":"ParentNode","needQuote":true,"nodes":[{"content":"ParentNode","pos":[0,10]}]},{"pos":[59224,59236],"content":"PreviousText","needQuote":true,"nodes":[{"content":"PreviousText","pos":[0,12]}]},{"pos":[59472,59477],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[59720,59738],"content":"CloneNode(Boolean)","needQuote":true,"nodes":[{"content":"CloneNode(Boolean)","pos":[0,18]}]},{"pos":[59875,59884],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[59938,59939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59990,59997],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60058,60059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60151,60160],"content":"CloneNode","needQuote":true,"nodes":[{"content":"CloneNode","pos":[0,9]}]},{"pos":[60214,60215],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60266,60273],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60334,60335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60522,60529],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60730,60755],"content":"WriteContentTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteContentTo(XmlWriter)","pos":[0,25]}]},{"pos":[60914,60928],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[60987,60988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61045,61054],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[61121,61122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61225,61239],"content":"WriteContentTo","needQuote":true,"nodes":[{"content":"WriteContentTo","pos":[0,14]}]},{"pos":[61298,61299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61356,61365],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[61432,61433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61648,61657],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[61865,61883],"content":"WriteTo(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteTo(XmlWriter)","pos":[0,18]}]},{"pos":[62028,62035],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[62087,62088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62145,62154],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[62221,62222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62318,62325],"content":"WriteTo","needQuote":true,"nodes":[{"content":"WriteTo","pos":[0,7]}]},{"pos":[62377,62378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62435,62444],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[62511,62512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62713,62730],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Xml.XmlSignificantWhitespace\n  commentId: T:System.Xml.XmlSignificantWhitespace\n  id: XmlSignificantWhitespace\n  parent: System.Xml\n  children:\n  - System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)\n  - System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)\n  - System.Xml.XmlSignificantWhitespace.LocalName\n  - System.Xml.XmlSignificantWhitespace.Name\n  - System.Xml.XmlSignificantWhitespace.NodeType\n  - System.Xml.XmlSignificantWhitespace.ParentNode\n  - System.Xml.XmlSignificantWhitespace.PreviousText\n  - System.Xml.XmlSignificantWhitespace.Value\n  - System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)\n  - System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)\n  langs:\n  - csharp\n  - vb\n  name: XmlSignificantWhitespace\n  fullName: System.Xml.XmlSignificantWhitespace\n  type: Class\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: XmlSignificantWhitespace\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 326\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope. This is also referred to as significant white space.</p>\\n\"\n  syntax:\n    content: 'public class XmlSignificantWhitespace : XmlCharacterData, IEnumerable'\n    content.vb: >-\n      Public Class XmlSignificantWhitespace\n          Inherits XmlCharacterData\n          Implements IEnumerable\n  seealso:\n  - type: System.Xml.XmlDocument\n    commentId: T:System.Xml.XmlDocument\n  inheritance:\n  - System.Object\n  - System.Xml.XmlNode\n  - System.Xml.XmlLinkedNode\n  - System.Xml.XmlCharacterData\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Xml.XmlCharacterData.Data\n  - System.Xml.XmlCharacterData.Length\n  - System.Xml.XmlCharacterData.AppendData(System.String)\n  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  - System.Xml.XmlLinkedNode.NextSibling\n  - System.Xml.XmlLinkedNode.PreviousSibling\n  - System.Xml.XmlNode.Attributes\n  - System.Xml.XmlNode.BaseURI\n  - System.Xml.XmlNode.ChildNodes\n  - System.Xml.XmlNode.FirstChild\n  - System.Xml.XmlNode.HasChildNodes\n  - System.Xml.XmlNode.InnerText\n  - System.Xml.XmlNode.InnerXml\n  - System.Xml.XmlNode.IsReadOnly\n  - System.Xml.XmlNode.Item(System.String)\n  - System.Xml.XmlNode.Item(System.String,System.String)\n  - System.Xml.XmlNode.LastChild\n  - System.Xml.XmlNode.NamespaceURI\n  - System.Xml.XmlNode.OuterXml\n  - System.Xml.XmlNode.OwnerDocument\n  - System.Xml.XmlNode.Prefix\n  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.GetEnumerator\n  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Normalize\n  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.RemoveAll\n  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  - System.Xml.XmlNode.Supports(System.String,System.String)\n  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: XmlSignificantWhitespace\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n- uid: System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)\n  commentId: M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)\n  id: '#ctor(System.String,System.Xml.XmlDocument)'\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: XmlSignificantWhitespace(String, XmlDocument)\n  fullName: System.Xml.XmlSignificantWhitespace.XmlSignificantWhitespace(System.String, System.Xml.XmlDocument)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 328\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Xml.XmlSignificantWhitespace\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected XmlSignificantWhitespace(string strData, XmlDocument doc)\n    content.vb: Protected Sub New(strData As String, doc As XmlDocument)\n    parameters:\n    - id: strData\n      type: System.String\n      description: \"\\n<p>The white space characters of the node.</p>\\n\"\n    - id: doc\n      type: System.Xml.XmlDocument\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDocument\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: XmlSignificantWhitespace.XmlSignificantWhitespace(String, XmlDocument)\n- uid: System.Xml.XmlSignificantWhitespace.LocalName\n  commentId: P:System.Xml.XmlSignificantWhitespace.LocalName\n  id: LocalName\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: LocalName\n  fullName: System.Xml.XmlSignificantWhitespace.LocalName\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LocalName\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 329\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the local name of the node.</p>\\n\"\n  syntax:\n    content: public override string LocalName { get; }\n    content.vb: Public Overrides ReadOnly Property LocalName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this property returns <strong>#significant-whitespace</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.LocalName\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlSignificantWhitespace.LocalName\n- uid: System.Xml.XmlSignificantWhitespace.Name\n  commentId: P:System.Xml.XmlSignificantWhitespace.Name\n  id: Name\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Xml.XmlSignificantWhitespace.Name\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Name\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 330\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the qualified name of the node.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this property returns <strong>#significant-whitespace</strong>.</p>\\n\"\n  overridden: System.Xml.XmlNode.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlSignificantWhitespace.Name\n- uid: System.Xml.XmlSignificantWhitespace.NodeType\n  commentId: P:System.Xml.XmlSignificantWhitespace.NodeType\n  id: NodeType\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Xml.XmlSignificantWhitespace.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 331\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the type of the current node.</p>\\n\"\n  syntax:\n    content: public override XmlNodeType NodeType { get; }\n    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType\n    parameters: []\n    return:\n      type: System.Xml.XmlNodeType\n      description: \"\\n<p>For <strong>XmlSignificantWhitespace</strong> nodes, this value is XmlNodeType.SignificantWhitespace.</p>\\n\"\n  overridden: System.Xml.XmlNode.NodeType\n  seealso:\n  - type: System.Xml.XmlNodeType\n    commentId: T:System.Xml.XmlNodeType\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlSignificantWhitespace.NodeType\n- uid: System.Xml.XmlSignificantWhitespace.ParentNode\n  commentId: P:System.Xml.XmlSignificantWhitespace.ParentNode\n  id: ParentNode\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: ParentNode\n  fullName: System.Xml.XmlSignificantWhitespace.ParentNode\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ParentNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 332\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the parent of the current node.</p>\\n\"\n  syntax:\n    content: public override XmlNode ParentNode { get; }\n    content.vb: Public Overrides ReadOnly Property ParentNode As XmlNode\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parent node of the current node.</p>\\n\"\n  overridden: System.Xml.XmlNode.ParentNode\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlSignificantWhitespace.ParentNode\n- uid: System.Xml.XmlSignificantWhitespace.PreviousText\n  commentId: P:System.Xml.XmlSignificantWhitespace.PreviousText\n  id: PreviousText\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: PreviousText\n  fullName: System.Xml.XmlSignificantWhitespace.PreviousText\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreviousText\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 333\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets the text node that immediately precedes this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode PreviousText { get; }\n    content.vb: Public Overrides ReadOnly Property PreviousText As XmlNode\n    parameters: []\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>Returns <xref href=\\\"System.Xml.XmlNode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Xml.XmlNode.PreviousText\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: XmlSignificantWhitespace.PreviousText\n- uid: System.Xml.XmlSignificantWhitespace.Value\n  commentId: P:System.Xml.XmlSignificantWhitespace.Value\n  id: Value\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Xml.XmlSignificantWhitespace.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 334\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Gets or sets the value of the node.</p>\\n\"\n  syntax:\n    content: public override string Value { get; set; }\n    content.vb: Public Overrides Property Value As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The white space characters found in the node.</p>\\n\"\n  overridden: System.Xml.XmlCharacterData.Value\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Setting <strong>Value</strong> to invalid white space characters. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlSignificantWhitespace.Value\n- uid: System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)\n  commentId: M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)\n  id: CloneNode(System.Boolean)\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CloneNode\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 335\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Creates a duplicate of this node.</p>\\n\"\n  syntax:\n    content: public override XmlNode CloneNode(bool deep)\n    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode\n    parameters:\n    - id: deep\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself. For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting. </p>\\n\"\n    return:\n      type: System.Xml.XmlNode\n      description: \"\\n<p>The cloned node.</p>\\n\"\n  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlSignificantWhitespace.CloneNode(Boolean)\n- uid: System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)\n  id: WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteContentTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 336\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves all the children of the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteContentTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlSignificantWhitespace.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)\n  commentId: M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)\n  id: WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlSignificantWhitespace\n  langs:\n  - csharp\n  - vb\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteTo\n    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs\n    startLine: 337\n  assemblies:\n  - System.Xml.XmlDocument\n  namespace: System.Xml\n  summary: \"\\n<p>Saves the node to the specified <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteTo(XmlWriter w)\n    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)\n    parameters:\n    - id: w\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\\n\"\n  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: XmlSignificantWhitespace.WriteTo(XmlWriter)\nreferences:\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Xml.XmlNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlNode\n  fullName: System.Xml.XmlNode\n  commentId: T:System.Xml.XmlNode\n  nameWithType: XmlNode\n- uid: System.Xml.XmlLinkedNode\n  parent: System.Xml\n  isExternal: false\n  name: XmlLinkedNode\n  fullName: System.Xml.XmlLinkedNode\n  commentId: T:System.Xml.XmlLinkedNode\n  nameWithType: XmlLinkedNode\n- uid: System.Xml.XmlCharacterData\n  parent: System.Xml\n  isExternal: false\n  name: XmlCharacterData\n  fullName: System.Xml.XmlCharacterData\n  commentId: T:System.Xml.XmlCharacterData\n  nameWithType: XmlCharacterData\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Xml.XmlCharacterData.Data\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Data\n  fullName: System.Xml.XmlCharacterData.Data\n  commentId: P:System.Xml.XmlCharacterData.Data\n  nameWithType: XmlCharacterData.Data\n- uid: System.Xml.XmlCharacterData.Length\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Length\n  fullName: System.Xml.XmlCharacterData.Length\n  commentId: P:System.Xml.XmlCharacterData.Length\n  nameWithType: XmlCharacterData.Length\n- uid: System.Xml.XmlCharacterData.AppendData(System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: AppendData(String)\n  fullName: System.Xml.XmlCharacterData.AppendData(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.AppendData(System.String)\n    name: AppendData\n    fullName: System.Xml.XmlCharacterData.AppendData\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.AppendData(System.String)\n  nameWithType: XmlCharacterData.AppendData(String)\n- uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: DeleteData(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.DeleteData(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n    name: DeleteData\n    fullName: System.Xml.XmlCharacterData.DeleteData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.DeleteData(Int32, Int32)\n- uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: InsertData(Int32, String)\n  fullName: System.Xml.XmlCharacterData.InsertData(System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n    name: InsertData\n    fullName: System.Xml.XmlCharacterData.InsertData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)\n  nameWithType: XmlCharacterData.InsertData(Int32, String)\n- uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: ReplaceData(Int32, Int32, String)\n  fullName: System.Xml.XmlCharacterData.ReplaceData(System.Int32, System.Int32, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n    name: ReplaceData\n    fullName: System.Xml.XmlCharacterData.ReplaceData\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)\n  nameWithType: XmlCharacterData.ReplaceData(Int32, Int32, String)\n- uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  parent: System.Xml.XmlCharacterData\n  isExternal: true\n  name: Substring(Int32, Int32)\n  fullName: System.Xml.XmlCharacterData.Substring(System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n    name: Substring\n    fullName: System.Xml.XmlCharacterData.Substring\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)\n  nameWithType: XmlCharacterData.Substring(Int32, Int32)\n- uid: System.Xml.XmlLinkedNode.NextSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: NextSibling\n  fullName: System.Xml.XmlLinkedNode.NextSibling\n  commentId: P:System.Xml.XmlLinkedNode.NextSibling\n  nameWithType: XmlLinkedNode.NextSibling\n- uid: System.Xml.XmlLinkedNode.PreviousSibling\n  parent: System.Xml.XmlLinkedNode\n  isExternal: false\n  name: PreviousSibling\n  fullName: System.Xml.XmlLinkedNode.PreviousSibling\n  commentId: P:System.Xml.XmlLinkedNode.PreviousSibling\n  nameWithType: XmlLinkedNode.PreviousSibling\n- uid: System.Xml.XmlNode.Attributes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Attributes\n  fullName: System.Xml.XmlNode.Attributes\n  commentId: P:System.Xml.XmlNode.Attributes\n  nameWithType: XmlNode.Attributes\n- uid: System.Xml.XmlNode.BaseURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: BaseURI\n  fullName: System.Xml.XmlNode.BaseURI\n  commentId: P:System.Xml.XmlNode.BaseURI\n  nameWithType: XmlNode.BaseURI\n- uid: System.Xml.XmlNode.ChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ChildNodes\n  fullName: System.Xml.XmlNode.ChildNodes\n  commentId: P:System.Xml.XmlNode.ChildNodes\n  nameWithType: XmlNode.ChildNodes\n- uid: System.Xml.XmlNode.FirstChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: FirstChild\n  fullName: System.Xml.XmlNode.FirstChild\n  commentId: P:System.Xml.XmlNode.FirstChild\n  nameWithType: XmlNode.FirstChild\n- uid: System.Xml.XmlNode.HasChildNodes\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: HasChildNodes\n  fullName: System.Xml.XmlNode.HasChildNodes\n  commentId: P:System.Xml.XmlNode.HasChildNodes\n  nameWithType: XmlNode.HasChildNodes\n- uid: System.Xml.XmlNode.InnerText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerText\n  fullName: System.Xml.XmlNode.InnerText\n  commentId: P:System.Xml.XmlNode.InnerText\n  nameWithType: XmlNode.InnerText\n- uid: System.Xml.XmlNode.InnerXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InnerXml\n  fullName: System.Xml.XmlNode.InnerXml\n  commentId: P:System.Xml.XmlNode.InnerXml\n  nameWithType: XmlNode.InnerXml\n- uid: System.Xml.XmlNode.IsReadOnly\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Xml.XmlNode.IsReadOnly\n  commentId: P:System.Xml.XmlNode.IsReadOnly\n  nameWithType: XmlNode.IsReadOnly\n- uid: System.Xml.XmlNode.Item(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String]\n  fullName: System.Xml.XmlNode.Item[System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String)\n  name.vb: Item(String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String)\n  nameWithType: XmlNode.Item[String]\n  nameWithType.vb: XmlNode.Item(String)\n- uid: System.Xml.XmlNode.Item(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Item[String, String]\n  fullName: System.Xml.XmlNode.Item[System.String, System.String]\n  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)\n  name.vb: Item(String, String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: '['\n    fullName: '['\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Xml.XmlNode.Item(System.String,System.String)\n    name: Item\n    fullName: System.Xml.XmlNode.Item\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)\n  nameWithType: XmlNode.Item[String, String]\n  nameWithType.vb: XmlNode.Item(String, String)\n- uid: System.Xml.XmlNode.LastChild\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LastChild\n  fullName: System.Xml.XmlNode.LastChild\n  commentId: P:System.Xml.XmlNode.LastChild\n  nameWithType: XmlNode.LastChild\n- uid: System.Xml.XmlNode.NamespaceURI\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NamespaceURI\n  fullName: System.Xml.XmlNode.NamespaceURI\n  commentId: P:System.Xml.XmlNode.NamespaceURI\n  nameWithType: XmlNode.NamespaceURI\n- uid: System.Xml.XmlNode.OuterXml\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OuterXml\n  fullName: System.Xml.XmlNode.OuterXml\n  commentId: P:System.Xml.XmlNode.OuterXml\n  nameWithType: XmlNode.OuterXml\n- uid: System.Xml.XmlNode.OwnerDocument\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: OwnerDocument\n  fullName: System.Xml.XmlNode.OwnerDocument\n  commentId: P:System.Xml.XmlNode.OwnerDocument\n  nameWithType: XmlNode.OwnerDocument\n- uid: System.Xml.XmlNode.Prefix\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Prefix\n  fullName: System.Xml.XmlNode.Prefix\n  commentId: P:System.Xml.XmlNode.Prefix\n  nameWithType: XmlNode.Prefix\n- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: AppendChild(XmlNode)\n  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n    name: AppendChild\n    fullName: System.Xml.XmlNode.AppendChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.AppendChild(XmlNode)\n- uid: System.Xml.XmlNode.GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Xml.XmlNode.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Xml.XmlNode.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetEnumerator\n  nameWithType: XmlNode.GetEnumerator()\n- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetNamespaceOfPrefix(String)\n  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n    name: GetNamespaceOfPrefix\n    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)\n  nameWithType: XmlNode.GetNamespaceOfPrefix(String)\n- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: GetPrefixOfNamespace(String)\n  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n    name: GetPrefixOfNamespace\n    fullName: System.Xml.XmlNode.GetPrefixOfNamespace\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)\n  nameWithType: XmlNode.GetPrefixOfNamespace(String)\n- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertAfter(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertAfter\n    fullName: System.Xml.XmlNode.InsertAfter\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: InsertBefore(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: InsertBefore\n    fullName: System.Xml.XmlNode.InsertBefore\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Normalize\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Normalize()\n  fullName: System.Xml.XmlNode.Normalize()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Normalize\n    name: Normalize\n    fullName: System.Xml.XmlNode.Normalize\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Normalize\n  nameWithType: XmlNode.Normalize()\n- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PrependChild(XmlNode)\n  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n    name: PrependChild\n    fullName: System.Xml.XmlNode.PrependChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.PrependChild(XmlNode)\n- uid: System.Xml.XmlNode.RemoveAll\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveAll()\n  fullName: System.Xml.XmlNode.RemoveAll()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveAll\n    name: RemoveAll\n    fullName: System.Xml.XmlNode.RemoveAll\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveAll\n  nameWithType: XmlNode.RemoveAll()\n- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: RemoveChild(XmlNode)\n  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n    name: RemoveChild\n    fullName: System.Xml.XmlNode.RemoveChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)\n  nameWithType: XmlNode.RemoveChild(XmlNode)\n- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ReplaceChild(XmlNode, XmlNode)\n  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n    name: ReplaceChild\n    fullName: System.Xml.XmlNode.ReplaceChild\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: ', '\n    fullName: ', '\n  - uid: System.Xml.XmlNode\n    name: XmlNode\n    fullName: System.Xml.XmlNode\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)\n  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)\n- uid: System.Xml.XmlNode.Supports(System.String,System.String)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: Supports(String, String)\n  fullName: System.Xml.XmlNode.Supports(System.String, System.String)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.Supports(System.String,System.String)\n    name: Supports\n    fullName: System.Xml.XmlNode.Supports\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)\n  nameWithType: XmlNode.Supports(String, String)\n- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n    name: System.Collections.IEnumerable.GetEnumerator\n    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator\n  nameWithType: XmlNode.IEnumerable.GetEnumerator()\n  nameWithType.vb: XmlNode.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  fullName: System.Xml.XmlDocument\n  commentId: T:System.Xml.XmlDocument\n  nameWithType: XmlDocument\n- uid: System.Xml.XmlNode.LocalName\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: LocalName\n  fullName: System.Xml.XmlNode.LocalName\n  commentId: P:System.Xml.XmlNode.LocalName\n  nameWithType: XmlNode.LocalName\n- uid: System.Xml.XmlNode.Name\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: Name\n  fullName: System.Xml.XmlNode.Name\n  commentId: P:System.Xml.XmlNode.Name\n  nameWithType: XmlNode.Name\n- uid: System.Xml.XmlNode.NodeType\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: NodeType\n  fullName: System.Xml.XmlNode.NodeType\n  commentId: P:System.Xml.XmlNode.NodeType\n  nameWithType: XmlNode.NodeType\n- uid: System.Xml.XmlNodeType\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeType\n  fullName: System.Xml.XmlNodeType\n  commentId: T:System.Xml.XmlNodeType\n  nameWithType: XmlNodeType\n- uid: System.Xml.XmlNode.ParentNode\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: ParentNode\n  fullName: System.Xml.XmlNode.ParentNode\n  commentId: P:System.Xml.XmlNode.ParentNode\n  nameWithType: XmlNode.ParentNode\n- uid: System.Xml.XmlNode.PreviousText\n  parent: System.Xml.XmlNode\n  isExternal: false\n  name: PreviousText\n  fullName: System.Xml.XmlNode.PreviousText\n  commentId: P:System.Xml.XmlNode.PreviousText\n  nameWithType: XmlNode.PreviousText\n- uid: System.Xml.XmlCharacterData.Value\n  parent: System.Xml.XmlCharacterData\n  isExternal: false\n  name: Value\n  fullName: System.Xml.XmlCharacterData.Value\n  commentId: P:System.Xml.XmlCharacterData.Value\n  nameWithType: XmlCharacterData.Value\n- uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: CloneNode(Boolean)\n  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)\n    name: CloneNode\n    fullName: System.Xml.XmlNode.CloneNode\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)\n  nameWithType: XmlNode.CloneNode(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteContentTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n    name: WriteContentTo\n    fullName: System.Xml.XmlNode.WriteContentTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteContentTo(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  parent: System.Xml.XmlNode\n  isExternal: true\n  name: WriteTo(XmlWriter)\n  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n    name: WriteTo\n    fullName: System.Xml.XmlNode.WriteTo\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)\n  nameWithType: XmlNode.WriteTo(XmlWriter)\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}