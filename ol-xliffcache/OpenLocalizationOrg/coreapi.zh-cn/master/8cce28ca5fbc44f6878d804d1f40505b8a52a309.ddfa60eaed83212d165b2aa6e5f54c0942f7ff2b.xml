{"nodes":[{"pos":[1473,1510],"content":"UnicastIPAddressInformationCollection","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformationCollection","pos":[0,37]}]},{"pos":[34595,34634],"content":"UnicastIPAddressInformationCollection()","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformationCollection()","pos":[0,39]}]},{"pos":[35908,35913],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[37652,37662],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[38472,38520],"source":"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n"},{"pos":[39155,39166],"content":"Item[Int32]","needQuote":true,"nodes":[{"content":"Item[Int32]","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The zero-based index of the element.&lt;/p&gt;\\n","pos":[40141,40188],"source":"\\n<p>The zero-based index of the element.</p>\\n"},{"pos":[41286,41318],"content":"Add(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(UnicastIPAddressInformation)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The object to be added to the collection.&lt;/p&gt;\\n","pos":[42329,42381],"source":"\\n<p>The object to be added to the collection.</p>\\n"},{"pos":[43030,43037],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[44551,44588],"content":"Contains(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[47000,47044],"content":"CopyTo(UnicastIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(UnicastIPAddressInformation[], Int32)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A one-dimensional array that receives a copy of the collection.&lt;/p&gt;\\n","pos":[48148,48222],"source":"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which the copy begins.&lt;/p&gt;\\n","pos":[48286,48361],"source":"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[48480,48527],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[48528,48534],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than zero.","pos":[48651,48691],"source":"\\n<p>\\n<em>index</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[48692,48698],"source":" </p>\\n"},{"pos":[50493,50508],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[52520,52555],"content":"Remove(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(UnicastIPAddressInformation)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The object to be removed.&lt;/p&gt;\\n","pos":[53601,53637],"source":"\\n<p>The object to be removed.</p>\\n"},{"pos":[54600,54627],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"pos":[56242,56271],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[56471,56477],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56761,56801],"content":"ICollection<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ICollection&lt;UnicastIPAddressInformation&gt;","pos":[0,40],"source":"ICollection<UnicastIPAddressInformation>"}]},{"pos":[57158,57169],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[57254,57255],"content":"<","needQuote":true,"nodes":[]},{"pos":[57349,57376],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[57552,57563],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[57649,57652]},{"pos":[57753,57780],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[57863,57864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58319,58359],"content":"IEnumerable<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;UnicastIPAddressInformation&gt;","pos":[0,40],"source":"IEnumerable<UnicastIPAddressInformation>"}]},{"pos":[58716,58727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[58812,58813],"content":"<","needQuote":true,"nodes":[]},{"pos":[58907,58934],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[59110,59121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[59207,59210]},{"pos":[59311,59338],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[59421,59422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59767,59778],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[59977,59987],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[60082,60090],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60159,60160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60187,60188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60258,60266],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60335,60336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60363,60364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60547,60561],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[60680,60686],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[60753,60754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60804,60810],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60870,60871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60954,60960],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61027,61028],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61078,61084],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61144,61145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61359,61381],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[61529,61535],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61602,61603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61653,61659],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[61720,61721]},{"pos":[61776,61782],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61842,61843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61940,61946],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62013,62014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62064,62070],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62131,62132]},{"pos":[62187,62193],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62253,62254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62499,62530],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[62696,62711],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[62787,62788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62838,62844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62905,62906]},{"pos":[62961,62967],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63027,63028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63134,63149],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[63225,63226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63276,63282],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63343,63344]},{"pos":[63399,63405],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63465,63466],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63696,63709],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[63810,63821],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[63893,63894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63921,63922],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63995,64006],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64078,64079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64106,64107],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64282,64291],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[64384,64391],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[64459,64460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64487,64488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64557,64564],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[64632,64633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64660,64661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64836,64853],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[64962,64977],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65053,65054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65081,65082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65159,65174],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65250,65251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65278,65279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65574,65587],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[65704,65715],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[65774,65775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65802,65803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65884,65895],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[65954,65955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65982,65983],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66399,66441],"content":"AsQueryable<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;UnicastIPAddressInformation&gt;()","pos":[0,42],"source":"AsQueryable<UnicastIPAddressInformation>()"}]},{"pos":[66790,66830],"content":"AsQueryable<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;UnicastIPAddressInformation&gt;","pos":[0,40],"source":"AsQueryable<UnicastIPAddressInformation>"}]},{"pos":[66948,66949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66976,66977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67061,67104],"content":"AsQueryable(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsQueryable(Of UnicastIPAddressInformation)","pos":[0,43]}]},{"pos":[67225,67226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67253,67254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67729,67741],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[67874,67884],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[67951,67952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67979,67980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68069,68079],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[68146,68147],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68174,68175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68632,68673],"content":"AsParallel<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;UnicastIPAddressInformation&gt;()","pos":[0,41],"source":"AsParallel<UnicastIPAddressInformation>()"}]},{"pos":[69045,69084],"content":"AsParallel<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsParallel&lt;UnicastIPAddressInformation&gt;","pos":[0,39],"source":"AsParallel<UnicastIPAddressInformation>"}]},{"pos":[69210,69211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69238,69239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69331,69373],"content":"AsParallel(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsParallel(Of UnicastIPAddressInformation)","pos":[0,42]}]},{"pos":[69502,69503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69530,69531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70303,70434],"content":"Aggregate<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation&gt;)","pos":[0,131],"source":"Aggregate<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation>)"}]},{"pos":[71277,71315],"content":"Aggregate<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"Aggregate<UnicastIPAddressInformation>"}]},{"pos":[71432,71433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71483,71487],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[71545,71546],"content":"<","needQuote":true,"nodes":[]},{"pos":[71640,71667],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[71751,71752]},{"pos":[71851,71878],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[71962,71963]},{"pos":[72062,72089],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[72204,72205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72314,72355],"content":"Aggregate(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Aggregate(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[72475,72476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72526,72530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[72589,72592]},{"pos":[72693,72720],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[72804,72805]},{"pos":[72904,72931],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[73015,73016]},{"pos":[73115,73142],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[73225,73226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73253,73254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74139,74264],"content":"Aggregate<UnicastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, UnicastIPAddressInformation, TAccumulate&gt;)","pos":[0,125],"source":"Aggregate<UnicastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>)"}]},{"pos":[74973,75024],"content":"Aggregate<UnicastIPAddressInformation, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation, TAccumulate&gt;","pos":[0,51],"source":"Aggregate<UnicastIPAddressInformation, TAccumulate>"}]},{"pos":[75154,75155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75182,75193],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[75231,75232]},{"pos":[75287,75291],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[75349,75350],"content":"<","needQuote":true,"nodes":[]},{"pos":[75377,75388],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[75426,75427]},{"pos":[75526,75553],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[75637,75638]},{"pos":[75670,75681],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[75750,75751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75864,75918],"content":"Aggregate(Of UnicastIPAddressInformation, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of UnicastIPAddressInformation, TAccumulate)","pos":[0,54]}]},{"pos":[76051,76052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76079,76090],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76128,76129]},{"pos":[76184,76188],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[76247,76250]},{"pos":[76284,76295],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[76333,76334]},{"pos":[76433,76460],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[76544,76545]},{"pos":[76577,76588],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[76625,76626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76653,76654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77589,77751],"content":"Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, UnicastIPAddressInformation, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,162],"source":"Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[78612,78672],"content":"Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;UnicastIPAddressInformation, TAccumulate, TResult&gt;","pos":[0,60],"source":"Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>"}]},{"pos":[78811,78812],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78839,78850],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[78888,78889]},{"pos":[78944,78948],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[79006,79007],"content":"<","needQuote":true,"nodes":[]},{"pos":[79034,79045],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79083,79084]},{"pos":[79183,79210],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[79294,79295]},{"pos":[79327,79338],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79408,79409]},{"pos":[79464,79468],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[79526,79527],"content":"<","needQuote":true,"nodes":[]},{"pos":[79554,79565],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[79603,79604]},{"pos":[79636,79643],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[79708,79709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79843,79906],"content":"Aggregate(Of UnicastIPAddressInformation, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of UnicastIPAddressInformation, TAccumulate, TResult)","pos":[0,63]}]},{"pos":[80048,80049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80076,80087],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80125,80126]},{"pos":[80181,80185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[80244,80247]},{"pos":[80281,80292],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80330,80331]},{"pos":[80430,80457],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[80541,80542]},{"pos":[80574,80585],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[80622,80623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[80651,80652]},{"pos":[80707,80711],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[80770,80773]},{"pos":[80807,80818],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[80856,80857]},{"pos":[80889,80896],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[80929,80930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80957,80958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81897,81973],"content":"All<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,76],"source":"All<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[82546,82578],"content":"All<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"All&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"All<UnicastIPAddressInformation>"}]},{"pos":[82689,82690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82740,82744],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[82802,82803],"content":"<","needQuote":true,"nodes":[]},{"pos":[82897,82924],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[83008,83009]},{"pos":[83065,83072],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83165,83166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83276,83311],"content":"All(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"All(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[83425,83426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83476,83480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[83539,83542]},{"pos":[83643,83670],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[83754,83755]},{"pos":[83811,83818],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83879,83880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83907,83908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84529,84563],"content":"Any<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Any&lt;UnicastIPAddressInformation&gt;()","pos":[0,34],"source":"Any<UnicastIPAddressInformation>()"}]},{"pos":[84883,84915],"content":"Any<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Any<UnicastIPAddressInformation>"}]},{"pos":[85026,85027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85054,85055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85132,85167],"content":"Any(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[85281,85282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85309,85310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85931,86007],"content":"Any<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,76],"source":"Any<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[86580,86612],"content":"Any<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Any&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Any<UnicastIPAddressInformation>"}]},{"pos":[86723,86724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86774,86778],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[86836,86837],"content":"<","needQuote":true,"nodes":[]},{"pos":[86931,86958],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[87042,87043]},{"pos":[87099,87106],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87199,87200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87310,87345],"content":"Any(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Any(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[87459,87460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87510,87514],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[87573,87576]},{"pos":[87677,87704],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[87788,87789]},{"pos":[87845,87852],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[87913,87914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87941,87942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88581,88624],"content":"AsEnumerable<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;UnicastIPAddressInformation&gt;()","pos":[0,43],"source":"AsEnumerable<UnicastIPAddressInformation>()"}]},{"pos":[88980,89021],"content":"AsEnumerable<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;UnicastIPAddressInformation&gt;","pos":[0,41],"source":"AsEnumerable<UnicastIPAddressInformation>"}]},{"pos":[89141,89142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89169,89170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89256,89300],"content":"AsEnumerable(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of UnicastIPAddressInformation)","pos":[0,44]}]},{"pos":[89423,89424],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89451,89452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90108,90188],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Decimal&gt;)","pos":[0,80],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)"}]},{"pos":[90777,90813],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[90928,90929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90979,90983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[91041,91042],"content":"<","needQuote":true,"nodes":[]},{"pos":[91136,91163],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[91247,91248]},{"pos":[91304,91311],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[91404,91405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91519,91558],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[91676,91677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91727,91731],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[91790,91793]},{"pos":[91894,91921],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[92005,92006]},{"pos":[92062,92069],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[92130,92131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92158,92159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92917,92996],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Double&gt;)","pos":[0,79],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)"}]},{"pos":[93581,93617],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[93732,93733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93783,93787],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[93845,93846],"content":"<","needQuote":true,"nodes":[]},{"pos":[93940,93967],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[94051,94052]},{"pos":[94107,94113],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[94205,94206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94319,94358],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[94476,94477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94527,94531],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[94590,94593]},{"pos":[94694,94721],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[94805,94806]},{"pos":[94861,94867],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[94927,94928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94955,94956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95709,95787],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32&gt;)","pos":[0,78],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)"}]},{"pos":[96368,96404],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[96519,96520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96570,96574],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[96632,96633],"content":"<","needQuote":true,"nodes":[]},{"pos":[96727,96754],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[96838,96839]},{"pos":[96893,96898],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[96989,96990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97102,97141],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[97259,97260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97310,97314],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[97373,97376]},{"pos":[97477,97504],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[97588,97589]},{"pos":[97643,97648],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[97707,97708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97735,97736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98486,98564],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int64&gt;)","pos":[0,78],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)"}]},{"pos":[99145,99181],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[99296,99297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99347,99351],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[99409,99410],"content":"<","needQuote":true,"nodes":[]},{"pos":[99504,99531],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[99615,99616]},{"pos":[99670,99675],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[99766,99767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99879,99918],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[100036,100037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100087,100091],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[100150,100153]},{"pos":[100254,100281],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[100365,100366]},{"pos":[100420,100425],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[100484,100485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100512,100513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101301,101391],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,90],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[102047,102083],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[102198,102199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102249,102253],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[102311,102312],"content":"<","needQuote":true,"nodes":[]},{"pos":[102406,102433],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[102517,102518]},{"pos":[102577,102585],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[102647,102648],"content":"<","needQuote":true,"nodes":[]},{"pos":[102699,102706],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[102831,102832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102963,103002],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[103120,103121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103171,103175],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[103234,103237]},{"pos":[103338,103365],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[103449,103450]},{"pos":[103509,103517],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[103580,103583]},{"pos":[103641,103648],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[103709,103710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103737,103738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103765,103766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104598,104687],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,89],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[105339,105375],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[105490,105491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105541,105545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[105603,105604],"content":"<","needQuote":true,"nodes":[]},{"pos":[105698,105725],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[105809,105810]},{"pos":[105869,105877],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[105939,105940],"content":"<","needQuote":true,"nodes":[]},{"pos":[105990,105996],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[106120,106121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106251,106290],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[106408,106409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106459,106463],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[106522,106525]},{"pos":[106626,106653],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[106737,106738]},{"pos":[106797,106805],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[106868,106871]},{"pos":[106928,106934],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[106994,106995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107022,107023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107050,107051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107878,107966],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,88],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[108614,108650],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[108765,108766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108816,108820],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[108878,108879],"content":"<","needQuote":true,"nodes":[]},{"pos":[108973,109000],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[109084,109085]},{"pos":[109144,109152],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[109214,109215],"content":"<","needQuote":true,"nodes":[]},{"pos":[109264,109269],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109392,109393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[109522,109561],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[109679,109680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109730,109734],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[109793,109796]},{"pos":[109897,109924],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[110008,110009]},{"pos":[110068,110076],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[110139,110142]},{"pos":[110198,110203],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[110262,110263],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110290,110291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110318,110319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111143,111231],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,88],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[111879,111915],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[112030,112031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112081,112085],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[112143,112144],"content":"<","needQuote":true,"nodes":[]},{"pos":[112238,112265],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[112349,112350]},{"pos":[112409,112417],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[112479,112480],"content":"<","needQuote":true,"nodes":[]},{"pos":[112529,112534],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[112657,112658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112787,112826],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[112944,112945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112995,112999],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[113058,113061]},{"pos":[113162,113189],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[113273,113274]},{"pos":[113333,113341],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[113404,113407]},{"pos":[113463,113468],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[113527,113528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113555,113556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113583,113584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114410,114499],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,89],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[115151,115187],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[115302,115303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115353,115357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[115415,115416],"content":"<","needQuote":true,"nodes":[]},{"pos":[115510,115537],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[115621,115622]},{"pos":[115681,115689],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[115751,115752],"content":"<","needQuote":true,"nodes":[]},{"pos":[115802,115808],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[115932,115933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116063,116102],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[116220,116221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116271,116275],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[116334,116337]},{"pos":[116438,116465],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[116549,116550]},{"pos":[116609,116617],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[116680,116683]},{"pos":[116740,116746],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[116806,116807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116834,116835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116862,116863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117658,117737],"content":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Single&gt;)","pos":[0,79],"source":"Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)"}]},{"pos":[118322,118358],"content":"Average<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Average&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Average<UnicastIPAddressInformation>"}]},{"pos":[118473,118474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118524,118528],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[118586,118587],"content":"<","needQuote":true,"nodes":[]},{"pos":[118681,118708],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[118792,118793]},{"pos":[118848,118854],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[118946,118947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119060,119099],"content":"Average(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Average(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[119217,119218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119268,119272],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[119331,119334]},{"pos":[119435,119462],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[119546,119547]},{"pos":[119602,119608],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[119668,119669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119696,119697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120249,120264],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[120468,120481],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[120543,120544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120571,120572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120650,120666],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[120731,120732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120759,120760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121361,121438],"content":"Concat<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Concat&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;)","pos":[0,77],"source":"Concat<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)"}]},{"pos":[122055,122090],"content":"Concat<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Concat&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Concat<UnicastIPAddressInformation>"}]},{"pos":[122204,122205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122282,122293],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[122378,122379],"content":"<","needQuote":true,"nodes":[]},{"pos":[122473,122500],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[122615,122616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122741,122779],"content":"Concat(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Concat(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[122896,122897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122974,122985],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[123071,123074]},{"pos":[123175,123202],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[123285,123286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123313,123314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124021,124085],"content":"Append<UnicastIPAddressInformation>(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append&lt;UnicastIPAddressInformation&gt;(UnicastIPAddressInformation)","pos":[0,64],"source":"Append<UnicastIPAddressInformation>(UnicastIPAddressInformation)"}]},{"pos":[124563,124598],"content":"Append<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Append&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Append<UnicastIPAddressInformation>"}]},{"pos":[124712,124713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124807,124834],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[124917,124918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125003,125041],"content":"Append(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Append(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[125158,125159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125253,125280],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[125363,125364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126004,126069],"content":"Prepend<UnicastIPAddressInformation>(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend&lt;UnicastIPAddressInformation&gt;(UnicastIPAddressInformation)","pos":[0,65],"source":"Prepend<UnicastIPAddressInformation>(UnicastIPAddressInformation)"}]},{"pos":[126551,126587],"content":"Prepend<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Prepend&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Prepend<UnicastIPAddressInformation>"}]},{"pos":[126702,126703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126797,126824],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[126907,126908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126994,127033],"content":"Prepend(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Prepend(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[127151,127152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127246,127273],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[127356,127357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128002,128068],"content":"Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains&lt;UnicastIPAddressInformation&gt;(UnicastIPAddressInformation)","pos":[0,66],"source":"Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation)"}]},{"pos":[128554,128591],"content":"Contains<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;UnicastIPAddressInformation&gt;","pos":[0,37],"source":"Contains<UnicastIPAddressInformation>"}]},{"pos":[128707,128708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128802,128829],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[128912,128913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129000,129040],"content":"Contains(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of UnicastIPAddressInformation)","pos":[0,40]}]},{"pos":[129159,129160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129254,129281],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[129364,129365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130167,130281],"content":"Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation, IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Contains&lt;UnicastIPAddressInformation&gt;(UnicastIPAddressInformation, IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,114],"source":"Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation, IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[131081,131118],"content":"Contains<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Contains&lt;UnicastIPAddressInformation&gt;","pos":[0,37],"source":"Contains<UnicastIPAddressInformation>"}]},{"pos":[131234,131235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131329,131356],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[131440,131441]},{"pos":[131529,131546],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[131637,131638],"content":"<","needQuote":true,"nodes":[]},{"pos":[131732,131759],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[131874,131875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132012,132052],"content":"Contains(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(Of UnicastIPAddressInformation)","pos":[0,40]}]},{"pos":[132171,132172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132266,132293],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[132377,132378]},{"pos":[132466,132483],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[132575,132578]},{"pos":[132679,132706],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[132789,132790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132817,132818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133546,133582],"content":"Count<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Count&lt;UnicastIPAddressInformation&gt;()","pos":[0,36],"source":"Count<UnicastIPAddressInformation>()"}]},{"pos":[133910,133944],"content":"Count<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Count<UnicastIPAddressInformation>"}]},{"pos":[134057,134058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134085,134086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134165,134202],"content":"Count(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[134318,134319],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134346,134347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134978,135056],"content":"Count<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"Count<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[135637,135671],"content":"Count<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Count&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Count<UnicastIPAddressInformation>"}]},{"pos":[135784,135785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135835,135839],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[135897,135898],"content":"<","needQuote":true,"nodes":[]},{"pos":[135992,136019],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[136103,136104]},{"pos":[136160,136167],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136260,136261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136373,136410],"content":"Count(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Count(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[136526,136527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136577,136581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[136640,136643]},{"pos":[136744,136771],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[136855,136856]},{"pos":[136912,136919],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136980,136981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137008,137009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137658,137703],"content":"DefaultIfEmpty<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;UnicastIPAddressInformation&gt;()","pos":[0,45],"source":"DefaultIfEmpty<UnicastIPAddressInformation>()"}]},{"pos":[138067,138110],"content":"DefaultIfEmpty<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;UnicastIPAddressInformation&gt;","pos":[0,43],"source":"DefaultIfEmpty<UnicastIPAddressInformation>"}]},{"pos":[138232,138233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138260,138261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138349,138395],"content":"DefaultIfEmpty(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of UnicastIPAddressInformation)","pos":[0,46]}]},{"pos":[138520,138521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138548,138549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139169,139241],"content":"DefaultIfEmpty<UnicastIPAddressInformation>(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;UnicastIPAddressInformation&gt;(UnicastIPAddressInformation)","pos":[0,72],"source":"DefaultIfEmpty<UnicastIPAddressInformation>(UnicastIPAddressInformation)"}]},{"pos":[139751,139794],"content":"DefaultIfEmpty<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;UnicastIPAddressInformation&gt;","pos":[0,43],"source":"DefaultIfEmpty<UnicastIPAddressInformation>"}]},{"pos":[139916,139917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140011,140038],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[140121,140122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140215,140261],"content":"DefaultIfEmpty(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of UnicastIPAddressInformation)","pos":[0,46]}]},{"pos":[140386,140387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140481,140508],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[140591,140592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141195,141234],"content":"Distinct<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Distinct&lt;UnicastIPAddressInformation&gt;()","pos":[0,39],"source":"Distinct<UnicastIPAddressInformation>()"}]},{"pos":[141574,141611],"content":"Distinct<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;UnicastIPAddressInformation&gt;","pos":[0,37],"source":"Distinct<UnicastIPAddressInformation>"}]},{"pos":[141727,141728],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141755,141756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141838,141878],"content":"Distinct(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of UnicastIPAddressInformation)","pos":[0,40]}]},{"pos":[141997,141998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142025,142026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142708,142793],"content":"Distinct<UnicastIPAddressInformation>(IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Distinct&lt;UnicastIPAddressInformation&gt;(IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,85],"source":"Distinct<UnicastIPAddressInformation>(IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[143442,143479],"content":"Distinct<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Distinct&lt;UnicastIPAddressInformation&gt;","pos":[0,37],"source":"Distinct<UnicastIPAddressInformation>"}]},{"pos":[143595,143596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143679,143696],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[143787,143788],"content":"<","needQuote":true,"nodes":[]},{"pos":[143882,143909],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[144024,144025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144158,144198],"content":"Distinct(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Distinct(Of UnicastIPAddressInformation)","pos":[0,40]}]},{"pos":[144317,144318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144401,144418],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[144510,144513]},{"pos":[144614,144641],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[144724,144725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144752,144753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145454,145499],"content":"ElementAt<UnicastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;UnicastIPAddressInformation&gt;(Int32)","pos":[0,45],"source":"ElementAt<UnicastIPAddressInformation>(Int32)"}]},{"pos":[145886,145924],"content":"ElementAt<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAt&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"ElementAt<UnicastIPAddressInformation>"}]},{"pos":[146041,146042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146091,146096],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146155,146156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146253,146294],"content":"ElementAt(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAt(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[146414,146415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146464,146469],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146528,146529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147129,147183],"content":"ElementAtOrDefault<UnicastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;UnicastIPAddressInformation&gt;(Int32)","pos":[0,54],"source":"ElementAtOrDefault<UnicastIPAddressInformation>(Int32)"}]},{"pos":[147606,147653],"content":"ElementAtOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,47],"source":"ElementAtOrDefault<UnicastIPAddressInformation>"}]},{"pos":[147779,147780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147829,147834],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[147893,147894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148000,148050],"content":"ElementAtOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of UnicastIPAddressInformation)","pos":[0,50]}]},{"pos":[148179,148180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148229,148234],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148293,148294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149013,149090],"content":"Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;)","pos":[0,77],"source":"Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)"}]},{"pos":[149707,149742],"content":"Except<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Except<UnicastIPAddressInformation>"}]},{"pos":[149856,149857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149934,149945],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[150030,150031],"content":"<","needQuote":true,"nodes":[]},{"pos":[150125,150152],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[150267,150268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150393,150431],"content":"Except(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[150548,150549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150626,150637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[150723,150726]},{"pos":[150827,150854],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[150937,150938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150965,150966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151907,152032],"content":"Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Except&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;, IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,125],"source":"Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[152963,152998],"content":"Except<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Except&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Except<UnicastIPAddressInformation>"}]},{"pos":[153112,153113],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153190,153201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[153286,153287],"content":"<","needQuote":true,"nodes":[]},{"pos":[153381,153408],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[153524,153525]},{"pos":[153613,153630],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[153721,153722],"content":"<","needQuote":true,"nodes":[]},{"pos":[153816,153843],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[153958,153959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154134,154172],"content":"Except(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Except(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[154289,154290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[154367,154378],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[154464,154467]},{"pos":[154568,154595],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[154678,154679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[154707,154708]},{"pos":[154796,154813],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[154905,154908]},{"pos":[155009,155036],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[155119,155120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155147,155148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155939,155975],"content":"First<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"First&lt;UnicastIPAddressInformation&gt;()","pos":[0,36],"source":"First<UnicastIPAddressInformation>()"}]},{"pos":[156303,156337],"content":"First<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"First<UnicastIPAddressInformation>"}]},{"pos":[156450,156451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156478,156479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156558,156595],"content":"First(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[156711,156712],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156739,156740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157371,157449],"content":"First<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"First<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[158030,158064],"content":"First<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"First&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"First<UnicastIPAddressInformation>"}]},{"pos":[158177,158178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158228,158232],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[158290,158291],"content":"<","needQuote":true,"nodes":[]},{"pos":[158385,158412],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[158496,158497]},{"pos":[158553,158560],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[158653,158654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158766,158803],"content":"First(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"First(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[158919,158920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158970,158974],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[159033,159036]},{"pos":[159137,159164],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[159248,159249]},{"pos":[159305,159312],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[159373,159374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159401,159402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160051,160096],"content":"FirstOrDefault<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;UnicastIPAddressInformation&gt;()","pos":[0,45],"source":"FirstOrDefault<UnicastIPAddressInformation>()"}]},{"pos":[160460,160503],"content":"FirstOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,43],"source":"FirstOrDefault<UnicastIPAddressInformation>"}]},{"pos":[160625,160626],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160653,160654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160742,160788],"content":"FirstOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of UnicastIPAddressInformation)","pos":[0,46]}]},{"pos":[160913,160914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160941,160942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161618,161705],"content":"FirstOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,87],"source":"FirstOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[162322,162365],"content":"FirstOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,43],"source":"FirstOrDefault<UnicastIPAddressInformation>"}]},{"pos":[162487,162488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162538,162542],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[162600,162601],"content":"<","needQuote":true,"nodes":[]},{"pos":[162695,162722],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[162806,162807]},{"pos":[162863,162870],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[162963,162964],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163085,163131],"content":"FirstOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of UnicastIPAddressInformation)","pos":[0,46]}]},{"pos":[163256,163257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163307,163311],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[163370,163373]},{"pos":[163474,163501],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[163585,163586]},{"pos":[163642,163649],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[163710,163711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163738,163739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164501,164584],"content":"GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;)","pos":[0,83],"source":"GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)"}]},{"pos":[165157,165199],"content":"GroupBy<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,42],"source":"GroupBy<UnicastIPAddressInformation, TKey>"}]},{"pos":[165320,165321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165371,165375],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[165433,165434],"content":"<","needQuote":true,"nodes":[]},{"pos":[165528,165555],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[165639,165640]},{"pos":[165672,165676],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[165738,165739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165842,165887],"content":"GroupBy(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[166011,166012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166062,166066],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[166125,166128]},{"pos":[166229,166256],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[166340,166341]},{"pos":[166373,166377],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[166407,166408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166435,166436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167275,167383],"content":"GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,108],"source":"GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[168141,168183],"content":"GroupBy<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,42],"source":"GroupBy<UnicastIPAddressInformation, TKey>"}]},{"pos":[168304,168305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168355,168359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[168417,168418],"content":"<","needQuote":true,"nodes":[]},{"pos":[168512,168539],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[168623,168624]},{"pos":[168656,168660],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168723,168724]},{"pos":[168812,168829],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[168920,168921],"content":"<","needQuote":true,"nodes":[]},{"pos":[168948,168952],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[169014,169015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169168,169213],"content":"GroupBy(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[169337,169338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169388,169392],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[169451,169454]},{"pos":[169555,169582],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[169666,169667]},{"pos":[169699,169703],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[169733,169734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[169762,169763]},{"pos":[169851,169868],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[169960,169963]},{"pos":[169997,170001],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[170031,170032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170059,170060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171002,171140],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;)","pos":[0,138],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)"}]},{"pos":[171979,172031],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,52],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[172162,172163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172213,172217],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[172275,172276],"content":"<","needQuote":true,"nodes":[]},{"pos":[172370,172397],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[172481,172482]},{"pos":[172514,172518],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172581,172582]},{"pos":[172637,172641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[172699,172700],"content":"<","needQuote":true,"nodes":[]},{"pos":[172794,172821],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[172905,172906]},{"pos":[172938,172946],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[173012,173013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173137,173192],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,55]}]},{"pos":[173326,173327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173377,173381],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[173440,173443]},{"pos":[173544,173571],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[173655,173656]},{"pos":[173688,173692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[173722,173723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[173751,173752]},{"pos":[173807,173811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[173870,173873]},{"pos":[173974,174001],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[174085,174086]},{"pos":[174118,174126],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[174160,174161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174188,174189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175265,175428],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,163],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[176452,176504],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,52],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[176635,176636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176686,176690],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[176748,176749],"content":"<","needQuote":true,"nodes":[]},{"pos":[176843,176870],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[176954,176955]},{"pos":[176987,176991],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[177054,177055]},{"pos":[177110,177114],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[177172,177173],"content":"<","needQuote":true,"nodes":[]},{"pos":[177267,177294],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[177378,177379]},{"pos":[177411,177419],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[177486,177487]},{"pos":[177575,177592],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[177683,177684],"content":"<","needQuote":true,"nodes":[]},{"pos":[177711,177715],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[177777,177778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177952,178007],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,55]}]},{"pos":[178141,178142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178192,178196],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[178255,178258]},{"pos":[178359,178386],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[178470,178471]},{"pos":[178503,178507],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[178537,178538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[178566,178567]},{"pos":[178622,178626],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[178685,178688]},{"pos":[178789,178816],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[178900,178901]},{"pos":[178933,178941],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[178975,178976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[179004,179005]},{"pos":[179093,179110],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[179202,179205]},{"pos":[179239,179243],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[179273,179274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179301,179302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180468,180623],"content":"GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TResult&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;UnicastIPAddressInformation&gt;, TResult&gt;)","pos":[0,155],"source":"GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>)"}]},{"pos":[181617,181668],"content":"GroupBy<UnicastIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TResult&gt;","pos":[0,51],"source":"GroupBy<UnicastIPAddressInformation, TKey, TResult>"}]},{"pos":[181798,181799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181849,181853],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[181911,181912],"content":"<","needQuote":true,"nodes":[]},{"pos":[182006,182033],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[182117,182118]},{"pos":[182150,182154],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182217,182218]},{"pos":[182273,182277],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[182335,182336],"content":"<","needQuote":true,"nodes":[]},{"pos":[182363,182367],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182398,182399]},{"pos":[182481,182492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[182577,182578],"content":"<","needQuote":true,"nodes":[]},{"pos":[182672,182699],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[182815,182816]},{"pos":[182848,182855],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[182920,182921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183089,183143],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TResult)","pos":[0,54]}]},{"pos":[183276,183277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183327,183331],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183390,183393]},{"pos":[183494,183521],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[183605,183606]},{"pos":[183638,183642],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[183672,183673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183701,183702]},{"pos":[183757,183761],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183820,183823]},{"pos":[183857,183861],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[183892,183893]},{"pos":[183975,183986],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[184072,184075]},{"pos":[184176,184203],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[184286,184287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[184315,184316]},{"pos":[184348,184355],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[184388,184389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184416,184417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185664,185844],"content":"GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TResult&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TKey, IEnumerable&lt;UnicastIPAddressInformation&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,180],"source":"GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[187023,187074],"content":"GroupBy<UnicastIPAddressInformation, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TResult&gt;","pos":[0,51],"source":"GroupBy<UnicastIPAddressInformation, TKey, TResult>"}]},{"pos":[187204,187205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187255,187259],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187317,187318],"content":"<","needQuote":true,"nodes":[]},{"pos":[187412,187439],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[187523,187524]},{"pos":[187556,187560],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187623,187624]},{"pos":[187679,187683],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[187741,187742],"content":"<","needQuote":true,"nodes":[]},{"pos":[187769,187773],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187804,187805]},{"pos":[187887,187898],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[187983,187984],"content":"<","needQuote":true,"nodes":[]},{"pos":[188078,188105],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[188221,188222]},{"pos":[188254,188261],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[188327,188328]},{"pos":[188416,188433],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[188524,188525],"content":"<","needQuote":true,"nodes":[]},{"pos":[188552,188556],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[188618,188619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188837,188891],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TResult)","pos":[0,54]}]},{"pos":[189024,189025],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189075,189079],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189138,189141]},{"pos":[189242,189269],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[189353,189354]},{"pos":[189386,189390],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[189420,189421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[189449,189450]},{"pos":[189505,189509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[189568,189571]},{"pos":[189605,189609],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[189640,189641]},{"pos":[189723,189734],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[189820,189823]},{"pos":[189924,189951],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[190034,190035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190063,190064]},{"pos":[190096,190103],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[190136,190137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[190165,190166]},{"pos":[190254,190271],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[190363,190366]},{"pos":[190400,190404],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[190434,190435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190462,190463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191766,191957],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,191],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[193100,193161],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,61],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[193301,193302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193352,193356],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[193414,193415],"content":"<","needQuote":true,"nodes":[]},{"pos":[193509,193536],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[193620,193621]},{"pos":[193653,193657],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[193720,193721]},{"pos":[193776,193780],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[193838,193839],"content":"<","needQuote":true,"nodes":[]},{"pos":[193933,193960],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[194044,194045]},{"pos":[194077,194085],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[194152,194153]},{"pos":[194208,194212],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[194270,194271],"content":"<","needQuote":true,"nodes":[]},{"pos":[194298,194302],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[194333,194334]},{"pos":[194416,194427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[194512,194513],"content":"<","needQuote":true,"nodes":[]},{"pos":[194540,194548],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[194615,194616]},{"pos":[194648,194655],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[194720,194721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194910,194974],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)","pos":[0,64]}]},{"pos":[195117,195118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195168,195172],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195231,195234]},{"pos":[195335,195362],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[195446,195447]},{"pos":[195479,195483],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[195513,195514],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195542,195543]},{"pos":[195598,195602],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[195661,195664]},{"pos":[195765,195792],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[195876,195877]},{"pos":[195909,195917],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[195951,195952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[195980,195981]},{"pos":[196036,196040],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[196099,196102]},{"pos":[196136,196140],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[196171,196172]},{"pos":[196254,196265],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[196351,196354]},{"pos":[196388,196396],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[196430,196431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[196459,196460]},{"pos":[196492,196499],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[196532,196533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196560,196561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197960,198176],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement, TResult&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,216],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[199504,199565],"content":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;UnicastIPAddressInformation, TKey, TElement, TResult&gt;","pos":[0,61],"source":"GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>"}]},{"pos":[199705,199706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199756,199760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[199818,199819],"content":"<","needQuote":true,"nodes":[]},{"pos":[199913,199940],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[200024,200025]},{"pos":[200057,200061],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[200124,200125]},{"pos":[200180,200184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[200242,200243],"content":"<","needQuote":true,"nodes":[]},{"pos":[200337,200364],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[200448,200449]},{"pos":[200481,200489],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[200556,200557]},{"pos":[200612,200616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[200674,200675],"content":"<","needQuote":true,"nodes":[]},{"pos":[200702,200706],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[200737,200738]},{"pos":[200820,200831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[200916,200917],"content":"<","needQuote":true,"nodes":[]},{"pos":[200944,200952],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[201019,201020]},{"pos":[201052,201059],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[201125,201126]},{"pos":[201214,201231],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[201322,201323],"content":"<","needQuote":true,"nodes":[]},{"pos":[201350,201354],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[201416,201417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201656,201720],"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)","pos":[0,64]}]},{"pos":[201863,201864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201914,201918],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[201977,201980]},{"pos":[202081,202108],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[202192,202193]},{"pos":[202225,202229],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[202259,202260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202288,202289]},{"pos":[202344,202348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202407,202410]},{"pos":[202511,202538],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[202622,202623]},{"pos":[202655,202663],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[202697,202698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202726,202727]},{"pos":[202782,202786],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202845,202848]},{"pos":[202882,202886],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202917,202918]},{"pos":[203000,203011],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[203097,203100]},{"pos":[203134,203142],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[203176,203177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[203205,203206]},{"pos":[203238,203245],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[203278,203279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[203307,203308]},{"pos":[203396,203413],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[203505,203508]},{"pos":[203542,203546],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[203576,203577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203604,203605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205097,205305],"content":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;UnicastIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,208],"source":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>)"}]},{"pos":[206605,206666],"content":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,61],"source":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[206806,206807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206884,206895],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[206980,206981],"content":"<","needQuote":true,"nodes":[]},{"pos":[207008,207014],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[207079,207080]},{"pos":[207135,207139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207197,207198],"content":"<","needQuote":true,"nodes":[]},{"pos":[207292,207319],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[207403,207404]},{"pos":[207436,207440],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[207503,207504]},{"pos":[207559,207563],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207621,207622],"content":"<","needQuote":true,"nodes":[]},{"pos":[207649,207655],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[207688,207689]},{"pos":[207721,207725],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[207788,207789]},{"pos":[207844,207848],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[207906,207907],"content":"<","needQuote":true,"nodes":[]},{"pos":[208001,208028],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[208112,208113]},{"pos":[208195,208206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[208291,208292],"content":"<","needQuote":true,"nodes":[]},{"pos":[208319,208325],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[208390,208391]},{"pos":[208423,208430],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[208495,208496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208731,208795],"content":"GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)","pos":[0,64]}]},{"pos":[208938,208939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209016,209027],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[209113,209116]},{"pos":[209150,209156],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[209188,209189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209217,209218]},{"pos":[209273,209277],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209336,209339]},{"pos":[209440,209467],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[209551,209552]},{"pos":[209584,209588],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[209618,209619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209647,209648]},{"pos":[209703,209707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[209766,209769]},{"pos":[209803,209809],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[209842,209843]},{"pos":[209875,209879],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[209909,209910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[209938,209939]},{"pos":[209994,209998],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[210057,210060]},{"pos":[210161,210188],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[210272,210273]},{"pos":[210355,210366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[210452,210455]},{"pos":[210489,210495],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[210527,210528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[210556,210557]},{"pos":[210589,210596],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[210629,210630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210657,210658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212233,212466],"content":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;UnicastIPAddressInformation, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,233],"source":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[213951,214012],"content":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,61],"source":"GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[214152,214153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214230,214241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[214326,214327],"content":"<","needQuote":true,"nodes":[]},{"pos":[214354,214360],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[214425,214426]},{"pos":[214481,214485],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214543,214544],"content":"<","needQuote":true,"nodes":[]},{"pos":[214638,214665],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[214749,214750]},{"pos":[214782,214786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[214849,214850]},{"pos":[214905,214909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[214967,214968],"content":"<","needQuote":true,"nodes":[]},{"pos":[214995,215001],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[215034,215035]},{"pos":[215067,215071],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[215134,215135]},{"pos":[215190,215194],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[215252,215253],"content":"<","needQuote":true,"nodes":[]},{"pos":[215347,215374],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[215458,215459]},{"pos":[215541,215552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[215637,215638],"content":"<","needQuote":true,"nodes":[]},{"pos":[215665,215671],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[215736,215737]},{"pos":[215769,215776],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[215842,215843]},{"pos":[215931,215948],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[216039,216040],"content":"<","needQuote":true,"nodes":[]},{"pos":[216067,216071],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[216133,216134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216419,216483],"content":"GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)","pos":[0,64]}]},{"pos":[216626,216627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216704,216715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[216801,216804]},{"pos":[216838,216844],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[216876,216877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[216905,216906]},{"pos":[216961,216965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217024,217027]},{"pos":[217128,217155],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[217239,217240]},{"pos":[217272,217276],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[217306,217307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217335,217336]},{"pos":[217391,217395],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217454,217457]},{"pos":[217491,217497],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[217530,217531]},{"pos":[217563,217567],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[217597,217598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[217626,217627]},{"pos":[217682,217686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[217745,217748]},{"pos":[217849,217876],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[217960,217961]},{"pos":[218043,218054],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[218140,218143]},{"pos":[218177,218183],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[218215,218216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[218244,218245]},{"pos":[218277,218284],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[218317,218318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[218346,218347]},{"pos":[218435,218452],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[218544,218547]},{"pos":[218581,218585],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[218615,218616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218643,218644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[219924,220004],"content":"Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;)","pos":[0,80],"source":"Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)"}]},{"pos":[220633,220671],"content":"Intersect<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"Intersect<UnicastIPAddressInformation>"}]},{"pos":[220788,220789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220866,220877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[220962,220963],"content":"<","needQuote":true,"nodes":[]},{"pos":[221057,221084],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[221199,221200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221328,221369],"content":"Intersect(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[221489,221490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221567,221578],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[221664,221667]},{"pos":[221768,221795],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[221878,221879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221906,221907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222863,222991],"content":"Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Intersect&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;, IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,128],"source":"Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[223934,223972],"content":"Intersect<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Intersect&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"Intersect<UnicastIPAddressInformation>"}]},{"pos":[224089,224090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224167,224178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[224263,224264],"content":"<","needQuote":true,"nodes":[]},{"pos":[224358,224385],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[224501,224502]},{"pos":[224590,224607],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[224698,224699],"content":"<","needQuote":true,"nodes":[]},{"pos":[224793,224820],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[224935,224936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225114,225155],"content":"Intersect(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Intersect(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[225275,225276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225353,225364],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[225450,225453]},{"pos":[225554,225581],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[225664,225665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[225693,225694]},{"pos":[225782,225799],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[225891,225894]},{"pos":[225995,226022],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[226105,226106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226133,226134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227290,227480],"content":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;UnicastIPAddressInformation, TInner, TResult&gt;)","pos":[0,190],"source":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>)"}]},{"pos":[228621,228677],"content":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,56],"source":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[228812,228813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228890,228901],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[228986,228987],"content":"<","needQuote":true,"nodes":[]},{"pos":[229014,229020],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[229085,229086]},{"pos":[229141,229145],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229203,229204],"content":"<","needQuote":true,"nodes":[]},{"pos":[229298,229325],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[229409,229410]},{"pos":[229442,229446],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229509,229510]},{"pos":[229565,229569],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229627,229628],"content":"<","needQuote":true,"nodes":[]},{"pos":[229655,229661],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[229694,229695]},{"pos":[229727,229731],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229794,229795]},{"pos":[229850,229854],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229912,229913],"content":"<","needQuote":true,"nodes":[]},{"pos":[230007,230034],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[230118,230119]},{"pos":[230151,230157],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[230190,230191]},{"pos":[230223,230230],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[230295,230296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230486,230545],"content":"Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)","pos":[0,59]}]},{"pos":[230683,230684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230761,230772],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[230858,230861]},{"pos":[230895,230901],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[230933,230934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[230962,230963]},{"pos":[231018,231022],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231081,231084]},{"pos":[231185,231212],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[231296,231297]},{"pos":[231329,231333],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[231363,231364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[231392,231393]},{"pos":[231448,231452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231511,231514]},{"pos":[231548,231554],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[231587,231588]},{"pos":[231620,231624],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[231654,231655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[231683,231684]},{"pos":[231739,231743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[231802,231805]},{"pos":[231906,231933],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[232017,232018]},{"pos":[232050,232056],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[232089,232090]},{"pos":[232122,232129],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[232162,232163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232190,232191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233592,233807],"content":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;UnicastIPAddressInformation, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,215],"source":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[235133,235189],"content":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;UnicastIPAddressInformation, TInner, TKey, TResult&gt;","pos":[0,56],"source":"Join<UnicastIPAddressInformation, TInner, TKey, TResult>"}]},{"pos":[235324,235325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235402,235413],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[235498,235499],"content":"<","needQuote":true,"nodes":[]},{"pos":[235526,235532],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[235597,235598]},{"pos":[235653,235657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[235715,235716],"content":"<","needQuote":true,"nodes":[]},{"pos":[235810,235837],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[235921,235922]},{"pos":[235954,235958],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236021,236022]},{"pos":[236077,236081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236139,236140],"content":"<","needQuote":true,"nodes":[]},{"pos":[236167,236173],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[236206,236207]},{"pos":[236239,236243],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236306,236307]},{"pos":[236362,236366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236424,236425],"content":"<","needQuote":true,"nodes":[]},{"pos":[236519,236546],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[236630,236631]},{"pos":[236663,236669],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[236702,236703]},{"pos":[236735,236742],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[236808,236809]},{"pos":[236897,236914],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[237005,237006],"content":"<","needQuote":true,"nodes":[]},{"pos":[237033,237037],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[237099,237100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237340,237399],"content":"Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)","pos":[0,59]}]},{"pos":[237537,237538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237615,237626],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[237712,237715]},{"pos":[237749,237755],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[237787,237788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[237816,237817]},{"pos":[237872,237876],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[237935,237938]},{"pos":[238039,238066],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[238150,238151]},{"pos":[238183,238187],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[238217,238218],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238246,238247]},{"pos":[238302,238306],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238365,238368]},{"pos":[238402,238408],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[238441,238442]},{"pos":[238474,238478],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[238508,238509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[238537,238538]},{"pos":[238593,238597],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[238656,238659]},{"pos":[238760,238787],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[238871,238872]},{"pos":[238904,238910],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[238943,238944]},{"pos":[238976,238983],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[239016,239017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[239045,239046]},{"pos":[239134,239151],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[239243,239246]},{"pos":[239280,239284],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[239314,239315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239342,239343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240386,240421],"content":"Last<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Last&lt;UnicastIPAddressInformation&gt;()","pos":[0,35],"source":"Last<UnicastIPAddressInformation>()"}]},{"pos":[240745,240778],"content":"Last<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;UnicastIPAddressInformation&gt;","pos":[0,33],"source":"Last<UnicastIPAddressInformation>"}]},{"pos":[240890,240891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240918,240919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240997,241033],"content":"Last(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of UnicastIPAddressInformation)","pos":[0,36]}]},{"pos":[241148,241149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241176,241177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241803,241880],"content":"Last<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,77],"source":"Last<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[242457,242490],"content":"Last<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Last&lt;UnicastIPAddressInformation&gt;","pos":[0,33],"source":"Last<UnicastIPAddressInformation>"}]},{"pos":[242602,242603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242653,242657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[242715,242716],"content":"<","needQuote":true,"nodes":[]},{"pos":[242810,242837],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[242921,242922]},{"pos":[242978,242985],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[243078,243079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243190,243226],"content":"Last(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Last(Of UnicastIPAddressInformation)","pos":[0,36]}]},{"pos":[243341,243342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243392,243396],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[243455,243458]},{"pos":[243559,243586],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[243670,243671]},{"pos":[243727,243734],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[243795,243796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243823,243824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244468,244512],"content":"LastOrDefault<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;UnicastIPAddressInformation&gt;()","pos":[0,44],"source":"LastOrDefault<UnicastIPAddressInformation>()"}]},{"pos":[244872,244914],"content":"LastOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,42],"source":"LastOrDefault<UnicastIPAddressInformation>"}]},{"pos":[245035,245036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245063,245064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245151,245196],"content":"LastOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of UnicastIPAddressInformation)","pos":[0,45]}]},{"pos":[245320,245321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245348,245349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246020,246106],"content":"LastOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,86],"source":"LastOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[246719,246761],"content":"LastOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,42],"source":"LastOrDefault<UnicastIPAddressInformation>"}]},{"pos":[246882,246883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246933,246937],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[246995,246996],"content":"<","needQuote":true,"nodes":[]},{"pos":[247090,247117],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[247201,247202]},{"pos":[247258,247265],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[247358,247359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247479,247524],"content":"LastOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of UnicastIPAddressInformation)","pos":[0,45]}]},{"pos":[247648,247649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247699,247703],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[247762,247765]},{"pos":[247866,247893],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[247977,247978]},{"pos":[248034,248041],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[248102,248103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248130,248131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248794,248834],"content":"LongCount<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"LongCount&lt;UnicastIPAddressInformation&gt;()","pos":[0,40],"source":"LongCount<UnicastIPAddressInformation>()"}]},{"pos":[249178,249216],"content":"LongCount<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"LongCount<UnicastIPAddressInformation>"}]},{"pos":[249333,249334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249361,249362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249445,249486],"content":"LongCount(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[249606,249607],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249634,249635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250286,250368],"content":"LongCount<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"LongCount<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[250965,251003],"content":"LongCount<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"LongCount&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"LongCount<UnicastIPAddressInformation>"}]},{"pos":[251120,251121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251171,251175],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[251233,251234],"content":"<","needQuote":true,"nodes":[]},{"pos":[251328,251355],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[251439,251440]},{"pos":[251496,251503],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[251596,251597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251713,251754],"content":"LongCount(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"LongCount(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[251874,251875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251925,251929],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[251988,251991]},{"pos":[252092,252119],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[252203,252204]},{"pos":[252260,252267],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[252328,252329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252356,252357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252996,253030],"content":"Max<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;()","pos":[0,34],"source":"Max<UnicastIPAddressInformation>()"}]},{"pos":[253350,253382],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[253493,253494],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253521,253522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253599,253634],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[253748,253749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253776,253777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254398,254474],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)"}]},{"pos":[255047,255079],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[255190,255191],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255241,255245],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[255303,255304],"content":"<","needQuote":true,"nodes":[]},{"pos":[255398,255425],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[255509,255510]},{"pos":[255566,255573],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[255666,255667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255777,255812],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[255926,255927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255977,255981],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[256040,256043]},{"pos":[256144,256171],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[256255,256256]},{"pos":[256312,256319],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[256380,256381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256408,256409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257147,257222],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)"}]},{"pos":[257791,257823],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[257934,257935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257985,257989],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[258047,258048],"content":"<","needQuote":true,"nodes":[]},{"pos":[258142,258169],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[258253,258254]},{"pos":[258309,258315],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[258407,258408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258517,258552],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[258666,258667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258717,258721],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[258780,258783]},{"pos":[258884,258911],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[258995,258996]},{"pos":[259051,259057],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[259117,259118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259145,259146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259879,259953],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)"}]},{"pos":[260518,260550],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[260661,260662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260712,260716],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[260774,260775],"content":"<","needQuote":true,"nodes":[]},{"pos":[260869,260896],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[260980,260981]},{"pos":[261035,261040],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[261131,261132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261240,261275],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[261389,261390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[261440,261444],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[261503,261506]},{"pos":[261607,261634],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[261718,261719]},{"pos":[261773,261778],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[261837,261838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261865,261866],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262596,262670],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)"}]},{"pos":[263235,263267],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[263378,263379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263429,263433],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[263491,263492],"content":"<","needQuote":true,"nodes":[]},{"pos":[263586,263613],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[263697,263698]},{"pos":[263752,263757],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[263848,263849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263957,263992],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[264106,264107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264157,264161],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[264220,264223]},{"pos":[264324,264351],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[264435,264436]},{"pos":[264490,264495],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[264554,264555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264582,264583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265351,265437],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[266077,266109],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[266220,266221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266271,266275],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[266333,266334],"content":"<","needQuote":true,"nodes":[]},{"pos":[266428,266455],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[266539,266540]},{"pos":[266599,266607],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[266669,266670],"content":"<","needQuote":true,"nodes":[]},{"pos":[266721,266728],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[266853,266854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266981,267016],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[267130,267131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267181,267185],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[267244,267247]},{"pos":[267348,267375],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[267459,267460]},{"pos":[267519,267527],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[267590,267593]},{"pos":[267651,267658],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[267719,267720],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267747,267748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267775,267776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268588,268673],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[269309,269341],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[269452,269453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[269503,269507],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[269565,269566],"content":"<","needQuote":true,"nodes":[]},{"pos":[269660,269687],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[269771,269772]},{"pos":[269831,269839],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[269901,269902],"content":"<","needQuote":true,"nodes":[]},{"pos":[269952,269958],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[270082,270083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270209,270244],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[270358,270359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270409,270413],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[270472,270475]},{"pos":[270576,270603],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[270687,270688]},{"pos":[270747,270755],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[270818,270821]},{"pos":[270878,270884],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[270944,270945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270972,270973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271000,271001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271808,271892],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[272524,272556],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[272667,272668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272718,272722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[272780,272781],"content":"<","needQuote":true,"nodes":[]},{"pos":[272875,272902],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[272986,272987]},{"pos":[273046,273054],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[273116,273117],"content":"<","needQuote":true,"nodes":[]},{"pos":[273166,273171],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[273294,273295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273420,273455],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[273569,273570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273620,273624],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273683,273686]},{"pos":[273787,273814],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[273898,273899]},{"pos":[273958,273966],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[274029,274032]},{"pos":[274088,274093],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[274152,274153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274180,274181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274208,274209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275013,275097],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[275729,275761],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[275872,275873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275923,275927],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[275985,275986],"content":"<","needQuote":true,"nodes":[]},{"pos":[276080,276107],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[276191,276192]},{"pos":[276251,276259],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[276321,276322],"content":"<","needQuote":true,"nodes":[]},{"pos":[276371,276376],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[276499,276500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276625,276660],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[276774,276775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276825,276829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[276888,276891]},{"pos":[276992,277019],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[277103,277104]},{"pos":[277163,277171],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[277234,277237]},{"pos":[277293,277298],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[277357,277358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277385,277386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277413,277414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278220,278305],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[278941,278973],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[279084,279085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279135,279139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[279197,279198],"content":"<","needQuote":true,"nodes":[]},{"pos":[279292,279319],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[279403,279404]},{"pos":[279463,279471],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[279533,279534],"content":"<","needQuote":true,"nodes":[]},{"pos":[279584,279590],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[279714,279715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279841,279876],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[279990,279991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280041,280045],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[280104,280107]},{"pos":[280208,280235],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[280319,280320]},{"pos":[280379,280387],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[280450,280453]},{"pos":[280510,280516],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[280576,280577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280604,280605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280632,280633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281408,281483],"content":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)"}]},{"pos":[282052,282084],"content":"Max<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Max<UnicastIPAddressInformation>"}]},{"pos":[282195,282196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282246,282250],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[282308,282309],"content":"<","needQuote":true,"nodes":[]},{"pos":[282403,282430],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[282514,282515]},{"pos":[282570,282576],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[282668,282669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282778,282813],"content":"Max(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[282927,282928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282978,282982],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[283041,283044]},{"pos":[283145,283172],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[283256,283257]},{"pos":[283312,283318],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[283378,283379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283406,283407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284128,284213],"content":"Max<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, TResult&gt;)","pos":[0,85],"source":"Max<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)"}]},{"pos":[284788,284829],"content":"Max<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,41],"source":"Max<UnicastIPAddressInformation, TResult>"}]},{"pos":[284949,284950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285000,285004],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[285062,285063],"content":"<","needQuote":true,"nodes":[]},{"pos":[285157,285184],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[285268,285269]},{"pos":[285301,285308],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[285373,285374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285473,285517],"content":"Max(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Max(Of UnicastIPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[285640,285641],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285691,285695],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[285754,285757]},{"pos":[285858,285885],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[285969,285970]},{"pos":[286002,286009],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[286042,286043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286070,286071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286699,286733],"content":"Min<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;()","pos":[0,34],"source":"Min<UnicastIPAddressInformation>()"}]},{"pos":[287053,287085],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[287196,287197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287224,287225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287302,287337],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[287451,287452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287479,287480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288101,288177],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)"}]},{"pos":[288750,288782],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[288893,288894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288944,288948],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[289006,289007],"content":"<","needQuote":true,"nodes":[]},{"pos":[289101,289128],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[289212,289213]},{"pos":[289269,289276],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[289369,289370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[289480,289515],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[289629,289630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289680,289684],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289743,289746]},{"pos":[289847,289874],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[289958,289959]},{"pos":[290015,290022],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[290083,290084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290111,290112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290850,290925],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)"}]},{"pos":[291494,291526],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[291637,291638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[291688,291692],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[291750,291751],"content":"<","needQuote":true,"nodes":[]},{"pos":[291845,291872],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[291956,291957]},{"pos":[292012,292018],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[292110,292111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292220,292255],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[292369,292370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292420,292424],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[292483,292486]},{"pos":[292587,292614],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[292698,292699]},{"pos":[292754,292760],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[292820,292821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292848,292849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293582,293656],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)"}]},{"pos":[294221,294253],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[294364,294365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[294415,294419],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[294477,294478],"content":"<","needQuote":true,"nodes":[]},{"pos":[294572,294599],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[294683,294684]},{"pos":[294738,294743],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[294834,294835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294943,294978],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[295092,295093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295143,295147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[295206,295209]},{"pos":[295310,295337],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[295421,295422]},{"pos":[295476,295481],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[295540,295541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295568,295569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296299,296373],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)"}]},{"pos":[296938,296970],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[297081,297082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297132,297136],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[297194,297195],"content":"<","needQuote":true,"nodes":[]},{"pos":[297289,297316],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[297400,297401]},{"pos":[297455,297460],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[297551,297552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297660,297695],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[297809,297810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297860,297864],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[297923,297926]},{"pos":[298027,298054],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[298138,298139]},{"pos":[298193,298198],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[298257,298258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298285,298286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299054,299140],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[299780,299812],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[299923,299924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299974,299978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[300036,300037],"content":"<","needQuote":true,"nodes":[]},{"pos":[300131,300158],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[300242,300243]},{"pos":[300302,300310],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[300372,300373],"content":"<","needQuote":true,"nodes":[]},{"pos":[300424,300431],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[300556,300557],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300684,300719],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[300833,300834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[300884,300888],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[300947,300950]},{"pos":[301051,301078],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[301162,301163]},{"pos":[301222,301230],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[301293,301296]},{"pos":[301354,301361],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[301422,301423],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301450,301451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301478,301479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302291,302376],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[303012,303044],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[303155,303156],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303206,303210],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[303268,303269],"content":"<","needQuote":true,"nodes":[]},{"pos":[303363,303390],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[303474,303475]},{"pos":[303534,303542],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[303604,303605],"content":"<","needQuote":true,"nodes":[]},{"pos":[303655,303661],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[303785,303786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303912,303947],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[304061,304062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304112,304116],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[304175,304178]},{"pos":[304279,304306],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[304390,304391]},{"pos":[304450,304458],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[304521,304524]},{"pos":[304581,304587],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[304647,304648],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304675,304676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304703,304704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305511,305595],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[306227,306259],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[306370,306371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306421,306425],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[306483,306484],"content":"<","needQuote":true,"nodes":[]},{"pos":[306578,306605],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[306689,306690]},{"pos":[306749,306757],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[306819,306820],"content":"<","needQuote":true,"nodes":[]},{"pos":[306869,306874],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[306997,306998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307123,307158],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[307272,307273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307323,307327],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[307386,307389]},{"pos":[307490,307517],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[307601,307602]},{"pos":[307661,307669],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[307732,307735]},{"pos":[307791,307796],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[307855,307856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307883,307884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307911,307912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308716,308800],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[309432,309464],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[309575,309576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309626,309630],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309688,309689],"content":"<","needQuote":true,"nodes":[]},{"pos":[309783,309810],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[309894,309895]},{"pos":[309954,309962],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[310024,310025],"content":"<","needQuote":true,"nodes":[]},{"pos":[310074,310079],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[310202,310203],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310328,310363],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[310477,310478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310528,310532],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[310591,310594]},{"pos":[310695,310722],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[310806,310807]},{"pos":[310866,310874],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[310937,310940]},{"pos":[310996,311001],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[311060,311061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311088,311089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311116,311117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311923,312008],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[312644,312676],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[312787,312788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312838,312842],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[312900,312901],"content":"<","needQuote":true,"nodes":[]},{"pos":[312995,313022],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[313106,313107]},{"pos":[313166,313174],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[313236,313237],"content":"<","needQuote":true,"nodes":[]},{"pos":[313287,313293],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[313417,313418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313544,313579],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[313693,313694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313744,313748],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[313807,313810]},{"pos":[313911,313938],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[314022,314023]},{"pos":[314082,314090],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[314153,314156]},{"pos":[314213,314219],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[314279,314280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314307,314308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314335,314336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315111,315186],"content":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)"}]},{"pos":[315755,315787],"content":"Min<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Min<UnicastIPAddressInformation>"}]},{"pos":[315898,315899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315949,315953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[316011,316012],"content":"<","needQuote":true,"nodes":[]},{"pos":[316106,316133],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[316217,316218]},{"pos":[316273,316279],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[316371,316372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[316481,316516],"content":"Min(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[316630,316631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316681,316685],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[316744,316747]},{"pos":[316848,316875],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[316959,316960]},{"pos":[317015,317021],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[317081,317082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317109,317110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317831,317916],"content":"Min<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, TResult&gt;)","pos":[0,85],"source":"Min<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)"}]},{"pos":[318491,318532],"content":"Min<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,41],"source":"Min<UnicastIPAddressInformation, TResult>"}]},{"pos":[318652,318653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318703,318707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[318765,318766],"content":"<","needQuote":true,"nodes":[]},{"pos":[318860,318887],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[318971,318972]},{"pos":[319004,319011],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[319076,319077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319176,319220],"content":"Min(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Min(Of UnicastIPAddressInformation, TResult)","pos":[0,44]}]},{"pos":[319343,319344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319394,319398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[319457,319460]},{"pos":[319561,319588],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[319672,319673]},{"pos":[319705,319712],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[319745,319746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319773,319774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320328,320345],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[320557,320572],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[320636,320637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320664,320665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320745,320763],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[320830,320831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[320858,320859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321425,321508],"content":"OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;)","pos":[0,83],"source":"OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)"}]},{"pos":[322081,322123],"content":"OrderBy<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,42],"source":"OrderBy<UnicastIPAddressInformation, TKey>"}]},{"pos":[322244,322245],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322295,322299],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[322357,322358],"content":"<","needQuote":true,"nodes":[]},{"pos":[322452,322479],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[322563,322564]},{"pos":[322596,322600],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[322662,322663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322766,322811],"content":"OrderBy(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of UnicastIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[322935,322936],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322986,322990],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[323049,323052]},{"pos":[323153,323180],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[323264,323265]},{"pos":[323297,323301],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[323331,323332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323359,323360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324183,324283],"content":"OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,100],"source":"OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[325009,325051],"content":"OrderBy<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,42],"source":"OrderBy<UnicastIPAddressInformation, TKey>"}]},{"pos":[325172,325173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325223,325227],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[325285,325286],"content":"<","needQuote":true,"nodes":[]},{"pos":[325380,325407],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[325491,325492]},{"pos":[325524,325528],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[325591,325592]},{"pos":[325672,325681],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[325764,325765],"content":"<","needQuote":true,"nodes":[]},{"pos":[325792,325796],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[325858,325859],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326004,326049],"content":"OrderBy(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of UnicastIPAddressInformation, TKey)","pos":[0,45]}]},{"pos":[326173,326174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326224,326228],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[326287,326290]},{"pos":[326391,326418],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[326502,326503]},{"pos":[326535,326539],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326569,326570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[326598,326599]},{"pos":[326679,326688],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[326772,326775]},{"pos":[326809,326813],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[326843,326844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326871,326872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327707,327800],"content":"OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;)","pos":[0,93],"source":"OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)"}]},{"pos":[328413,328465],"content":"OrderByDescending<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,52],"source":"OrderByDescending<UnicastIPAddressInformation, TKey>"}]},{"pos":[328596,328597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328647,328651],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[328709,328710],"content":"<","needQuote":true,"nodes":[]},{"pos":[328804,328831],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[328915,328916]},{"pos":[328948,328952],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[329014,329015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329128,329183],"content":"OrderByDescending(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of UnicastIPAddressInformation, TKey)","pos":[0,55]}]},{"pos":[329317,329318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[329368,329372],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[329431,329434]},{"pos":[329535,329562],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[329646,329647]},{"pos":[329679,329683],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[329713,329714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329741,329742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330615,330725],"content":"OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,110],"source":"OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)"}]},{"pos":[331491,331543],"content":"OrderByDescending<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,52],"source":"OrderByDescending<UnicastIPAddressInformation, TKey>"}]},{"pos":[331674,331675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331725,331729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[331787,331788],"content":"<","needQuote":true,"nodes":[]},{"pos":[331882,331909],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[331993,331994]},{"pos":[332026,332030],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[332093,332094]},{"pos":[332174,332183],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[332266,332267],"content":"<","needQuote":true,"nodes":[]},{"pos":[332294,332298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[332360,332361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332516,332571],"content":"OrderByDescending(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of UnicastIPAddressInformation, TKey)","pos":[0,55]}]},{"pos":[332705,332706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[332756,332760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[332819,332822]},{"pos":[332923,332950],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[333034,333035]},{"pos":[333067,333071],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333101,333102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[333130,333131]},{"pos":[333211,333220],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[333304,333307]},{"pos":[333341,333345],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[333375,333376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333403,333404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334149,334187],"content":"Reverse<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Reverse&lt;UnicastIPAddressInformation&gt;()","pos":[0,38],"source":"Reverse<UnicastIPAddressInformation>()"}]},{"pos":[334523,334559],"content":"Reverse<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Reverse&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"Reverse<UnicastIPAddressInformation>"}]},{"pos":[334674,334675],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334702,334703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334784,334823],"content":"Reverse(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Reverse(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[334941,334942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334969,334970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335593,335681],"content":"Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, TResult&gt;)","pos":[0,88],"source":"Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)"}]},{"pos":[336268,336312],"content":"Select<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,44],"source":"Select<UnicastIPAddressInformation, TResult>"}]},{"pos":[336435,336436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336486,336490],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336548,336549],"content":"<","needQuote":true,"nodes":[]},{"pos":[336643,336670],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[336754,336755]},{"pos":[336787,336794],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[336859,336860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336962,337009],"content":"Select(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of UnicastIPAddressInformation, TResult)","pos":[0,47]}]},{"pos":[337135,337136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337186,337190],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[337249,337252]},{"pos":[337353,337380],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[337464,337465]},{"pos":[337497,337504],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[337537,337538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337565,337566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338338,338433],"content":"Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, Int32, TResult&gt;)","pos":[0,95],"source":"Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, TResult>)"}]},{"pos":[339068,339112],"content":"Select<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,44],"source":"Select<UnicastIPAddressInformation, TResult>"}]},{"pos":[339235,339236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339286,339290],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[339348,339349],"content":"<","needQuote":true,"nodes":[]},{"pos":[339443,339470],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[339554,339555]},{"pos":[339609,339614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[339674,339675]},{"pos":[339707,339714],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[339779,339780],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339895,339942],"content":"Select(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"Select(Of UnicastIPAddressInformation, TResult)","pos":[0,47]}]},{"pos":[340068,340069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340119,340123],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[340182,340185]},{"pos":[340286,340313],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[340397,340398]},{"pos":[340452,340457],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[340517,340518]},{"pos":[340550,340557],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[340590,340591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340618,340619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341480,341585],"content":"SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,105],"source":"SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TResult>>)"}]},{"pos":[342327,342375],"content":"SelectMany<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,48],"source":"SelectMany<UnicastIPAddressInformation, TResult>"}]},{"pos":[342502,342503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342553,342557],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[342615,342616],"content":"<","needQuote":true,"nodes":[]},{"pos":[342710,342737],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[342821,342822]},{"pos":[342904,342915],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[343000,343001],"content":"<","needQuote":true,"nodes":[]},{"pos":[343028,343035],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[343132,343133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343279,343330],"content":"SelectMany(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of UnicastIPAddressInformation, TResult)","pos":[0,51]}]},{"pos":[343460,343461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343511,343515],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[343574,343577]},{"pos":[343678,343705],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[343789,343790]},{"pos":[343872,343883],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[343969,343972]},{"pos":[344006,344013],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[344046,344047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344074,344075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344102,344103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345044,345156],"content":"SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TResult&gt;(Func&lt;UnicastIPAddressInformation, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,112],"source":"SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TResult>>)"}]},{"pos":[345946,345994],"content":"SelectMany<UnicastIPAddressInformation, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TResult&gt;","pos":[0,48],"source":"SelectMany<UnicastIPAddressInformation, TResult>"}]},{"pos":[346121,346122],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346172,346176],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[346234,346235],"content":"<","needQuote":true,"nodes":[]},{"pos":[346329,346356],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[346440,346441]},{"pos":[346495,346500],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[346560,346561]},{"pos":[346643,346654],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[346739,346740],"content":"<","needQuote":true,"nodes":[]},{"pos":[346767,346774],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[346871,346872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347031,347082],"content":"SelectMany(Of UnicastIPAddressInformation, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of UnicastIPAddressInformation, TResult)","pos":[0,51]}]},{"pos":[347212,347213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347263,347267],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[347326,347329]},{"pos":[347430,347457],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[347541,347542]},{"pos":[347596,347601],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[347661,347662]},{"pos":[347744,347755],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[347841,347844]},{"pos":[347878,347885],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[347918,347919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347946,347947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347974,347975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349041,349220],"content":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TCollection, TResult&gt;(Func&lt;UnicastIPAddressInformation, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;UnicastIPAddressInformation, TCollection, TResult&gt;)","pos":[0,179],"source":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)"}]},{"pos":[350289,350350],"content":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TCollection, TResult&gt;","pos":[0,61],"source":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>"}]},{"pos":[350490,350491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350541,350545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[350603,350604],"content":"<","needQuote":true,"nodes":[]},{"pos":[350698,350725],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[350809,350810]},{"pos":[350892,350903],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[350988,350989],"content":"<","needQuote":true,"nodes":[]},{"pos":[351016,351027],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[351129,351130]},{"pos":[351185,351189],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[351247,351248],"content":"<","needQuote":true,"nodes":[]},{"pos":[351342,351369],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[351453,351454]},{"pos":[351486,351497],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[351535,351536]},{"pos":[351568,351575],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[351640,351641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351812,351876],"content":"SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)","pos":[0,64]}]},{"pos":[352019,352020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352070,352074],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352133,352136]},{"pos":[352237,352264],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[352348,352349]},{"pos":[352431,352442],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[352528,352531]},{"pos":[352565,352576],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[352613,352614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352641,352642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[352670,352671]},{"pos":[352726,352730],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[352789,352792]},{"pos":[352893,352920],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[353004,353005]},{"pos":[353037,353048],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[353086,353087]},{"pos":[353119,353126],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[353159,353160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353187,353188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354429,354615],"content":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TCollection, TResult&gt;(Func&lt;UnicastIPAddressInformation, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;UnicastIPAddressInformation, TCollection, TResult&gt;)","pos":[0,186],"source":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)"}]},{"pos":[355732,355793],"content":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;UnicastIPAddressInformation, TCollection, TResult&gt;","pos":[0,61],"source":"SelectMany<UnicastIPAddressInformation, TCollection, TResult>"}]},{"pos":[355933,355934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[355984,355988],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356046,356047],"content":"<","needQuote":true,"nodes":[]},{"pos":[356141,356168],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[356252,356253]},{"pos":[356307,356312],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[356372,356373]},{"pos":[356455,356466],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[356551,356552],"content":"<","needQuote":true,"nodes":[]},{"pos":[356579,356590],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[356692,356693]},{"pos":[356748,356752],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356810,356811],"content":"<","needQuote":true,"nodes":[]},{"pos":[356905,356932],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[357016,357017]},{"pos":[357049,357060],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[357098,357099]},{"pos":[357131,357138],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[357203,357204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357388,357452],"content":"SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)","pos":[0,64]}]},{"pos":[357595,357596],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357646,357650],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[357709,357712]},{"pos":[357813,357840],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[357924,357925]},{"pos":[357979,357984],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[358044,358045]},{"pos":[358127,358138],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[358224,358227]},{"pos":[358261,358272],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[358309,358310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358337,358338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[358366,358367]},{"pos":[358422,358426],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[358485,358488]},{"pos":[358589,358616],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[358700,358701]},{"pos":[358733,358744],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[358782,358783]},{"pos":[358815,358822],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[358855,358856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358883,358884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359968,360052],"content":"SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;)","pos":[0,84],"source":"SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)"}]},{"pos":[360697,360739],"content":"SequenceEqual<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;UnicastIPAddressInformation&gt;","pos":[0,42],"source":"SequenceEqual<UnicastIPAddressInformation>"}]},{"pos":[360860,360861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360938,360949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[361034,361035],"content":"<","needQuote":true,"nodes":[]},{"pos":[361129,361156],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[361271,361272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361404,361449],"content":"SequenceEqual(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of UnicastIPAddressInformation)","pos":[0,45]}]},{"pos":[361573,361574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361651,361662],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[361748,361751]},{"pos":[361852,361879],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[361962,361963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361990,361991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362967,363099],"content":"SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;, IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,132],"source":"SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[364058,364100],"content":"SequenceEqual<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;UnicastIPAddressInformation&gt;","pos":[0,42],"source":"SequenceEqual<UnicastIPAddressInformation>"}]},{"pos":[364221,364222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364299,364310],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[364395,364396],"content":"<","needQuote":true,"nodes":[]},{"pos":[364490,364517],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[364633,364634]},{"pos":[364722,364739],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[364830,364831],"content":"<","needQuote":true,"nodes":[]},{"pos":[364925,364952],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[365067,365068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365250,365295],"content":"SequenceEqual(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of UnicastIPAddressInformation)","pos":[0,45]}]},{"pos":[365419,365420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365497,365508],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[365594,365597]},{"pos":[365698,365725],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[365808,365809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[365837,365838]},{"pos":[365926,365943],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[366035,366038]},{"pos":[366139,366166],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[366249,366250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366277,366278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367092,367129],"content":"Single<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"Single&lt;UnicastIPAddressInformation&gt;()","pos":[0,37],"source":"Single<UnicastIPAddressInformation>()"}]},{"pos":[367461,367496],"content":"Single<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Single<UnicastIPAddressInformation>"}]},{"pos":[367610,367611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367638,367639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367719,367757],"content":"Single(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[367874,367875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367902,367903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368539,368618],"content":"Single<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,79],"source":"Single<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[369203,369238],"content":"Single<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Single&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"Single<UnicastIPAddressInformation>"}]},{"pos":[369352,369353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369403,369407],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[369465,369466],"content":"<","needQuote":true,"nodes":[]},{"pos":[369560,369587],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[369671,369672]},{"pos":[369728,369735],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[369828,369829],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369942,369980],"content":"Single(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Single(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[370097,370098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370148,370152],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[370211,370214]},{"pos":[370315,370342],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[370426,370427]},{"pos":[370483,370490],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[370551,370552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370579,370580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371234,371280],"content":"SingleOrDefault<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;UnicastIPAddressInformation&gt;()","pos":[0,46],"source":"SingleOrDefault<UnicastIPAddressInformation>()"}]},{"pos":[371648,371692],"content":"SingleOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,44],"source":"SingleOrDefault<UnicastIPAddressInformation>"}]},{"pos":[371815,371816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[371843,371844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371933,371980],"content":"SingleOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of UnicastIPAddressInformation)","pos":[0,47]}]},{"pos":[372106,372107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372134,372135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[372816,372904],"content":"SingleOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,88],"source":"SingleOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[373525,373569],"content":"SingleOrDefault<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;UnicastIPAddressInformation&gt;","pos":[0,44],"source":"SingleOrDefault<UnicastIPAddressInformation>"}]},{"pos":[373692,373693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373743,373747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[373805,373806],"content":"<","needQuote":true,"nodes":[]},{"pos":[373900,373927],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[374011,374012]},{"pos":[374068,374075],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[374168,374169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374291,374338],"content":"SingleOrDefault(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of UnicastIPAddressInformation)","pos":[0,47]}]},{"pos":[374464,374465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[374515,374519],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[374578,374581]},{"pos":[374682,374709],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[374793,374794]},{"pos":[374850,374857],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[374918,374919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374946,374947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375633,375673],"content":"Skip<UnicastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;UnicastIPAddressInformation&gt;(Int32)","pos":[0,40],"source":"Skip<UnicastIPAddressInformation>(Int32)"}]},{"pos":[376040,376073],"content":"Skip<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Skip&lt;UnicastIPAddressInformation&gt;","pos":[0,33],"source":"Skip<UnicastIPAddressInformation>"}]},{"pos":[376185,376186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376235,376240],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[376299,376300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376392,376428],"content":"Skip(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Skip(Of UnicastIPAddressInformation)","pos":[0,36]}]},{"pos":[376543,376544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376593,376598],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[376657,376658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377317,377399],"content":"SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[377996,378034],"content":"SkipWhile<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"SkipWhile<UnicastIPAddressInformation>"}]},{"pos":[378151,378152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378202,378206],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[378264,378265],"content":"<","needQuote":true,"nodes":[]},{"pos":[378359,378386],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[378470,378471]},{"pos":[378527,378534],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[378627,378628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378744,378785],"content":"SkipWhile(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[378905,378906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378956,378960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[379019,379022]},{"pos":[379123,379150],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[379234,379235]},{"pos":[379291,379298],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[379359,379360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379387,379388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380184,380273],"content":"SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,89],"source":"SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[380918,380956],"content":"SkipWhile<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"SkipWhile<UnicastIPAddressInformation>"}]},{"pos":[381073,381074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[381124,381128],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[381186,381187],"content":"<","needQuote":true,"nodes":[]},{"pos":[381281,381308],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[381392,381393]},{"pos":[381447,381452],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[381512,381513]},{"pos":[381569,381576],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[381669,381670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381799,381840],"content":"SkipWhile(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"SkipWhile(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[381960,381961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382011,382015],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[382074,382077]},{"pos":[382178,382205],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[382289,382290]},{"pos":[382344,382349],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[382409,382410]},{"pos":[382466,382473],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[382534,382535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382562,382563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383348,383424],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Decimal&gt;)","pos":[0,76],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)"}]},{"pos":[383997,384029],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[384140,384141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384191,384195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[384253,384254],"content":"<","needQuote":true,"nodes":[]},{"pos":[384348,384375],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[384459,384460]},{"pos":[384516,384523],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[384616,384617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384727,384762],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[384876,384877],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384927,384931],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[384990,384993]},{"pos":[385094,385121],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[385205,385206]},{"pos":[385262,385269],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[385330,385331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385358,385359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386097,386172],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Double&gt;)","pos":[0,75],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)"}]},{"pos":[386741,386773],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[386884,386885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386935,386939],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[386997,386998],"content":"<","needQuote":true,"nodes":[]},{"pos":[387092,387119],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[387203,387204]},{"pos":[387259,387265],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[387357,387358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387467,387502],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[387616,387617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387667,387671],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[387730,387733]},{"pos":[387834,387861],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[387945,387946]},{"pos":[388001,388007],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[388067,388068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388095,388096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388829,388903],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32&gt;)","pos":[0,74],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)"}]},{"pos":[389468,389500],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[389611,389612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389662,389666],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[389724,389725],"content":"<","needQuote":true,"nodes":[]},{"pos":[389819,389846],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[389930,389931]},{"pos":[389985,389990],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390081,390082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390190,390225],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[390339,390340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390390,390394],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[390453,390456]},{"pos":[390557,390584],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[390668,390669]},{"pos":[390723,390728],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[390787,390788],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390815,390816],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391546,391620],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int64&gt;)","pos":[0,74],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)"}]},{"pos":[392185,392217],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[392328,392329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392379,392383],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392441,392442],"content":"<","needQuote":true,"nodes":[]},{"pos":[392536,392563],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[392647,392648]},{"pos":[392702,392707],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[392798,392799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392907,392942],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[393056,393057],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393107,393111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[393170,393173]},{"pos":[393274,393301],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[393385,393386]},{"pos":[393440,393445],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[393504,393505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393532,393533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394301,394387],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Decimal&gt;&gt;)","pos":[0,86],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)"}]},{"pos":[395027,395059],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[395170,395171],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395221,395225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[395283,395284],"content":"<","needQuote":true,"nodes":[]},{"pos":[395378,395405],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[395489,395490]},{"pos":[395549,395557],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[395619,395620],"content":"<","needQuote":true,"nodes":[]},{"pos":[395671,395678],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[395803,395804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395931,395966],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[396080,396081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396131,396135],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[396194,396197]},{"pos":[396298,396325],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[396409,396410]},{"pos":[396469,396477],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[396540,396543]},{"pos":[396601,396608],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[396669,396670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396697,396698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396725,396726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397538,397623],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Double&gt;&gt;)","pos":[0,85],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)"}]},{"pos":[398259,398291],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[398402,398403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398453,398457],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398515,398516],"content":"<","needQuote":true,"nodes":[]},{"pos":[398610,398637],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[398721,398722]},{"pos":[398781,398789],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[398851,398852],"content":"<","needQuote":true,"nodes":[]},{"pos":[398902,398908],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[399032,399033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399159,399194],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[399308,399309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399359,399363],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399422,399425]},{"pos":[399526,399553],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[399637,399638]},{"pos":[399697,399705],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[399768,399771]},{"pos":[399828,399834],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[399894,399895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399922,399923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399950,399951],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400758,400842],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int32&gt;&gt;)","pos":[0,84],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)"}]},{"pos":[401474,401506],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[401617,401618],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401668,401672],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[401730,401731],"content":"<","needQuote":true,"nodes":[]},{"pos":[401825,401852],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[401936,401937]},{"pos":[401996,402004],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[402066,402067],"content":"<","needQuote":true,"nodes":[]},{"pos":[402116,402121],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[402244,402245],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402370,402405],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[402519,402520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402570,402574],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[402633,402636]},{"pos":[402737,402764],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[402848,402849]},{"pos":[402908,402916],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[402979,402982]},{"pos":[403038,403043],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[403102,403103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403130,403131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403158,403159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403963,404047],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Int64&gt;&gt;)","pos":[0,84],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)"}]},{"pos":[404679,404711],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[404822,404823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404873,404877],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[404935,404936],"content":"<","needQuote":true,"nodes":[]},{"pos":[405030,405057],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[405141,405142]},{"pos":[405201,405209],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[405271,405272],"content":"<","needQuote":true,"nodes":[]},{"pos":[405321,405326],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[405449,405450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405575,405610],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[405724,405725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405775,405779],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[405838,405841]},{"pos":[405942,405969],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[406053,406054]},{"pos":[406113,406121],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[406184,406187]},{"pos":[406243,406248],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[406307,406308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406335,406336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406363,406364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407170,407255],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Nullable&lt;Single&gt;&gt;)","pos":[0,85],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)"}]},{"pos":[407891,407923],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[408034,408035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408085,408089],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[408147,408148],"content":"<","needQuote":true,"nodes":[]},{"pos":[408242,408269],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[408353,408354]},{"pos":[408413,408421],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[408483,408484],"content":"<","needQuote":true,"nodes":[]},{"pos":[408534,408540],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[408664,408665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408791,408826],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[408940,408941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408991,408995],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[409054,409057]},{"pos":[409158,409185],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[409269,409270]},{"pos":[409329,409337],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[409400,409403]},{"pos":[409460,409466],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[409526,409527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409554,409555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409582,409583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410358,410433],"content":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Single&gt;)","pos":[0,75],"source":"Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)"}]},{"pos":[411002,411034],"content":"Sum<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Sum&lt;UnicastIPAddressInformation&gt;","pos":[0,32],"source":"Sum<UnicastIPAddressInformation>"}]},{"pos":[411145,411146],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411196,411200],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[411258,411259],"content":"<","needQuote":true,"nodes":[]},{"pos":[411353,411380],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[411464,411465]},{"pos":[411520,411526],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[411618,411619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411728,411763],"content":"Sum(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Sum(Of UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[411877,411878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[411928,411932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[411991,411994]},{"pos":[412095,412122],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[412206,412207]},{"pos":[412262,412268],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[412328,412329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412356,412357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413004,413044],"content":"Take<UnicastIPAddressInformation>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;UnicastIPAddressInformation&gt;(Int32)","pos":[0,40],"source":"Take<UnicastIPAddressInformation>(Int32)"}]},{"pos":[413411,413444],"content":"Take<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Take&lt;UnicastIPAddressInformation&gt;","pos":[0,33],"source":"Take<UnicastIPAddressInformation>"}]},{"pos":[413556,413557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413606,413611],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[413670,413671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413763,413799],"content":"Take(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Take(Of UnicastIPAddressInformation)","pos":[0,36]}]},{"pos":[413914,413915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[413964,413969],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[414028,414029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414688,414770],"content":"TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,82],"source":"TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[415367,415405],"content":"TakeWhile<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"TakeWhile<UnicastIPAddressInformation>"}]},{"pos":[415522,415523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[415573,415577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[415635,415636],"content":"<","needQuote":true,"nodes":[]},{"pos":[415730,415757],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[415841,415842]},{"pos":[415898,415905],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[415998,415999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416115,416156],"content":"TakeWhile(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[416276,416277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416327,416331],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[416390,416393]},{"pos":[416494,416521],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[416605,416606]},{"pos":[416662,416669],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[416730,416731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416758,416759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417555,417644],"content":"TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,89],"source":"TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[418289,418327],"content":"TakeWhile<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;UnicastIPAddressInformation&gt;","pos":[0,38],"source":"TakeWhile<UnicastIPAddressInformation>"}]},{"pos":[418444,418445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418495,418499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418557,418558],"content":"<","needQuote":true,"nodes":[]},{"pos":[418652,418679],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[418763,418764]},{"pos":[418818,418823],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[418883,418884]},{"pos":[418940,418947],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[419040,419041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419170,419211],"content":"TakeWhile(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"TakeWhile(Of UnicastIPAddressInformation)","pos":[0,41]}]},{"pos":[419331,419332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419382,419386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[419445,419448]},{"pos":[419549,419576],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[419660,419661]},{"pos":[419715,419720],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[419780,419781]},{"pos":[419837,419844],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[419905,419906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419933,419934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420608,420646],"content":"ToArray<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToArray&lt;UnicastIPAddressInformation&gt;()","pos":[0,38],"source":"ToArray<UnicastIPAddressInformation>()"}]},{"pos":[420982,421018],"content":"ToArray<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToArray&lt;UnicastIPAddressInformation&gt;","pos":[0,36],"source":"ToArray<UnicastIPAddressInformation>"}]},{"pos":[421133,421134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421161,421162],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421243,421282],"content":"ToArray(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToArray(Of UnicastIPAddressInformation)","pos":[0,39]}]},{"pos":[421400,421401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421428,421429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422061,422149],"content":"ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;)","pos":[0,88],"source":"ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)"}]},{"pos":[422742,422789],"content":"ToDictionary<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,47],"source":"ToDictionary<UnicastIPAddressInformation, TKey>"}]},{"pos":[422915,422916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422966,422970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[423028,423029],"content":"<","needQuote":true,"nodes":[]},{"pos":[423123,423150],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[423234,423235]},{"pos":[423267,423271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[423333,423334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423442,423492],"content":"ToDictionary(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of UnicastIPAddressInformation, TKey)","pos":[0,50]}]},{"pos":[423621,423622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423672,423676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[423735,423738]},{"pos":[423839,423866],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[423950,423951]},{"pos":[423983,423987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[424017,424018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424045,424046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424910,425023],"content":"ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,113],"source":"ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[425801,425848],"content":"ToDictionary<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,47],"source":"ToDictionary<UnicastIPAddressInformation, TKey>"}]},{"pos":[425974,425975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426025,426029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[426087,426088],"content":"<","needQuote":true,"nodes":[]},{"pos":[426182,426209],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[426293,426294]},{"pos":[426326,426330],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426393,426394]},{"pos":[426482,426499],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[426590,426591],"content":"<","needQuote":true,"nodes":[]},{"pos":[426618,426622],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[426684,426685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426843,426893],"content":"ToDictionary(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of UnicastIPAddressInformation, TKey)","pos":[0,50]}]},{"pos":[427022,427023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[427073,427077],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[427136,427139]},{"pos":[427240,427267],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[427351,427352]},{"pos":[427384,427388],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427418,427419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[427447,427448]},{"pos":[427536,427553],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[427645,427648]},{"pos":[427682,427686],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[427716,427717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427744,427745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[428712,428855],"content":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;)","pos":[0,143],"source":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)"}]},{"pos":[429714,429771],"content":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,57],"source":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[429907,429908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429958,429962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[430020,430021],"content":"<","needQuote":true,"nodes":[]},{"pos":[430115,430142],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[430226,430227]},{"pos":[430259,430263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[430326,430327]},{"pos":[430382,430386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[430444,430445],"content":"<","needQuote":true,"nodes":[]},{"pos":[430539,430566],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[430650,430651]},{"pos":[430683,430691],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[430757,430758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430887,430947],"content":"ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,60]}]},{"pos":[431086,431087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[431137,431141],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[431200,431203]},{"pos":[431304,431331],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[431415,431416]},{"pos":[431448,431452],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[431482,431483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[431511,431512]},{"pos":[431567,431571],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[431630,431633]},{"pos":[431734,431761],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[431845,431846]},{"pos":[431878,431886],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[431920,431921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431948,431949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433050,433218],"content":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,168],"source":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[434262,434319],"content":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,57],"source":"ToDictionary<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[434455,434456],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434506,434510],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[434568,434569],"content":"<","needQuote":true,"nodes":[]},{"pos":[434663,434690],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[434774,434775]},{"pos":[434807,434811],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[434874,434875]},{"pos":[434930,434934],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[434992,434993],"content":"<","needQuote":true,"nodes":[]},{"pos":[435087,435114],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[435198,435199]},{"pos":[435231,435239],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[435306,435307]},{"pos":[435395,435412],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[435503,435504],"content":"<","needQuote":true,"nodes":[]},{"pos":[435531,435535],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[435597,435598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435777,435837],"content":"ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,60]}]},{"pos":[435976,435977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436027,436031],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[436090,436093]},{"pos":[436194,436221],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[436305,436306]},{"pos":[436338,436342],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[436372,436373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436401,436402]},{"pos":[436457,436461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[436520,436523]},{"pos":[436624,436651],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[436735,436736]},{"pos":[436768,436776],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[436810,436811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436839,436840]},{"pos":[436928,436945],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[437037,437040]},{"pos":[437074,437078],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[437108,437109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437136,437137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438023,438060],"content":"ToList<UnicastIPAddressInformation>()","needQuote":true,"nodes":[{"content":"ToList&lt;UnicastIPAddressInformation&gt;()","pos":[0,37],"source":"ToList<UnicastIPAddressInformation>()"}]},{"pos":[438392,438427],"content":"ToList<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"ToList&lt;UnicastIPAddressInformation&gt;","pos":[0,35],"source":"ToList<UnicastIPAddressInformation>"}]},{"pos":[438541,438542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438569,438570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438650,438688],"content":"ToList(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"ToList(Of UnicastIPAddressInformation)","pos":[0,38]}]},{"pos":[438805,438806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438833,438834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[439455,439539],"content":"ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;)","pos":[0,84],"source":"ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)"}]},{"pos":[440116,440159],"content":"ToLookup<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,43],"source":"ToLookup<UnicastIPAddressInformation, TKey>"}]},{"pos":[440281,440282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440332,440336],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[440394,440395],"content":"<","needQuote":true,"nodes":[]},{"pos":[440489,440516],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[440600,440601]},{"pos":[440633,440637],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[440699,440700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440804,440850],"content":"ToLookup(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of UnicastIPAddressInformation, TKey)","pos":[0,46]}]},{"pos":[440975,440976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441026,441030],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[441089,441092]},{"pos":[441193,441220],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[441304,441305]},{"pos":[441337,441341],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[441371,441372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441399,441400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442244,442353],"content":"ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,109],"source":"ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[443115,443158],"content":"ToLookup<UnicastIPAddressInformation, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey&gt;","pos":[0,43],"source":"ToLookup<UnicastIPAddressInformation, TKey>"}]},{"pos":[443280,443281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[443331,443335],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[443393,443394],"content":"<","needQuote":true,"nodes":[]},{"pos":[443488,443515],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[443599,443600]},{"pos":[443632,443636],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[443699,443700]},{"pos":[443788,443805],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[443896,443897],"content":"<","needQuote":true,"nodes":[]},{"pos":[443924,443928],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[443990,443991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444145,444191],"content":"ToLookup(Of UnicastIPAddressInformation, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of UnicastIPAddressInformation, TKey)","pos":[0,46]}]},{"pos":[444316,444317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444367,444371],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[444430,444433]},{"pos":[444534,444561],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[444645,444646]},{"pos":[444678,444682],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[444712,444713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[444741,444742]},{"pos":[444830,444847],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[444939,444942]},{"pos":[444976,444980],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[445010,445011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445038,445039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445986,446125],"content":"ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;)","pos":[0,139],"source":"ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)"}]},{"pos":[446968,447021],"content":"ToLookup<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,53],"source":"ToLookup<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[447153,447154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[447204,447208],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447266,447267],"content":"<","needQuote":true,"nodes":[]},{"pos":[447361,447388],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[447472,447473]},{"pos":[447505,447509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[447572,447573]},{"pos":[447628,447632],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[447690,447691],"content":"<","needQuote":true,"nodes":[]},{"pos":[447785,447812],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[447896,447897]},{"pos":[447929,447937],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[448003,448004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[448129,448185],"content":"ToLookup(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,56]}]},{"pos":[448320,448321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448371,448375],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[448434,448437]},{"pos":[448538,448565],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[448649,448650]},{"pos":[448682,448686],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[448716,448717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[448745,448746]},{"pos":[448801,448805],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[448864,448867]},{"pos":[448968,448995],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[449079,449080]},{"pos":[449112,449120],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[449154,449155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449182,449183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450264,450428],"content":"ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey, TElement&gt;(Func&lt;UnicastIPAddressInformation, TKey&gt;, Func&lt;UnicastIPAddressInformation, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,164],"source":"ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[451456,451509],"content":"ToLookup<UnicastIPAddressInformation, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;UnicastIPAddressInformation, TKey, TElement&gt;","pos":[0,53],"source":"ToLookup<UnicastIPAddressInformation, TKey, TElement>"}]},{"pos":[451641,451642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451692,451696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[451754,451755],"content":"<","needQuote":true,"nodes":[]},{"pos":[451849,451876],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[451960,451961]},{"pos":[451993,451997],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[452060,452061]},{"pos":[452116,452120],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[452178,452179],"content":"<","needQuote":true,"nodes":[]},{"pos":[452273,452300],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[452384,452385]},{"pos":[452417,452425],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[452492,452493]},{"pos":[452581,452598],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[452689,452690],"content":"<","needQuote":true,"nodes":[]},{"pos":[452717,452721],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[452783,452784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452959,453015],"content":"ToLookup(Of UnicastIPAddressInformation, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of UnicastIPAddressInformation, TKey, TElement)","pos":[0,56]}]},{"pos":[453150,453151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453201,453205],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[453264,453267]},{"pos":[453368,453395],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[453479,453480]},{"pos":[453512,453516],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[453546,453547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[453575,453576]},{"pos":[453631,453635],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[453694,453697]},{"pos":[453798,453825],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[453909,453910]},{"pos":[453942,453950],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[453984,453985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[454013,454014]},{"pos":[454102,454119],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[454211,454214]},{"pos":[454248,454252],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[454282,454283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454310,454311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455326,455402],"content":"Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;)","pos":[0,76],"source":"Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)"}]},{"pos":[456015,456049],"content":"Union<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Union<UnicastIPAddressInformation>"}]},{"pos":[456162,456163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456240,456251],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[456336,456337],"content":"<","needQuote":true,"nodes":[]},{"pos":[456431,456458],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[456573,456574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456698,456735],"content":"Union(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[456851,456852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456929,456940],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[457026,457029]},{"pos":[457130,457157],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[457240,457241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457268,457269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458205,458329],"content":"Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)","needQuote":true,"nodes":[{"content":"Union&lt;UnicastIPAddressInformation&gt;(IEnumerable&lt;UnicastIPAddressInformation&gt;, IEqualityComparer&lt;UnicastIPAddressInformation&gt;)","pos":[0,124],"source":"Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)"}]},{"pos":[459256,459290],"content":"Union<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Union&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Union<UnicastIPAddressInformation>"}]},{"pos":[459403,459404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459481,459492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[459577,459578],"content":"<","needQuote":true,"nodes":[]},{"pos":[459672,459699],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[459815,459816]},{"pos":[459904,459921],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[460012,460013],"content":"<","needQuote":true,"nodes":[]},{"pos":[460107,460134],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[460249,460250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460424,460461],"content":"Union(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Union(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[460577,460578],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460655,460666],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[460752,460755]},{"pos":[460856,460883],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[460966,460967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[460995,460996]},{"pos":[461084,461101],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[461193,461196]},{"pos":[461297,461324],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[461407,461408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461435,461436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462343,462421],"content":"Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Boolean&gt;)","pos":[0,78],"source":"Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)"}]},{"pos":[463002,463036],"content":"Where<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Where<UnicastIPAddressInformation>"}]},{"pos":[463149,463150],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463200,463204],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[463262,463263],"content":"<","needQuote":true,"nodes":[]},{"pos":[463357,463384],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[463468,463469]},{"pos":[463525,463532],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[463625,463626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463738,463775],"content":"Where(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[463891,463892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463942,463946],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[464005,464008]},{"pos":[464109,464136],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[464220,464221]},{"pos":[464277,464284],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[464345,464346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464373,464374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465150,465235],"content":"Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;UnicastIPAddressInformation&gt;(Func&lt;UnicastIPAddressInformation, Int32, Boolean&gt;)","pos":[0,85],"source":"Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)"}]},{"pos":[465864,465898],"content":"Where<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"Where&lt;UnicastIPAddressInformation&gt;","pos":[0,34],"source":"Where<UnicastIPAddressInformation>"}]},{"pos":[466011,466012],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466062,466066],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[466124,466125],"content":"<","needQuote":true,"nodes":[]},{"pos":[466219,466246],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[466330,466331]},{"pos":[466385,466390],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[466450,466451]},{"pos":[466507,466514],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[466607,466608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466733,466770],"content":"Where(Of UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Where(Of UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[466886,466887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466937,466941],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[467000,467003]},{"pos":[467104,467131],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[467215,467216]},{"pos":[467270,467275],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[467335,467336]},{"pos":[467392,467399],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[467460,467461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467488,467489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468354,468479],"content":"Zip<UnicastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<UnicastIPAddressInformation, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;UnicastIPAddressInformation, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;UnicastIPAddressInformation, TSecond, TResult&gt;)","pos":[0,125],"source":"Zip<UnicastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<UnicastIPAddressInformation, TSecond, TResult>)"}]},{"pos":[469282,469332],"content":"Zip<UnicastIPAddressInformation, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;UnicastIPAddressInformation, TSecond, TResult&gt;","pos":[0,50],"source":"Zip<UnicastIPAddressInformation, TSecond, TResult>"}]},{"pos":[469461,469462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469539,469550],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[469635,469636],"content":"<","needQuote":true,"nodes":[]},{"pos":[469663,469670],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[469736,469737]},{"pos":[469792,469796],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469854,469855],"content":"<","needQuote":true,"nodes":[]},{"pos":[469949,469976],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[470060,470061]},{"pos":[470093,470100],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[470134,470135]},{"pos":[470167,470174],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[470239,470240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470387,470440],"content":"Zip(Of UnicastIPAddressInformation, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of UnicastIPAddressInformation, TSecond, TResult)","pos":[0,53]}]},{"pos":[470572,470573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470650,470661],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[470747,470750]},{"pos":[470784,470791],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[470824,470825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[470853,470854]},{"pos":[470909,470913],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[470972,470975]},{"pos":[471076,471103],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":",","pos":[471187,471188]},{"pos":[471220,471227],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[471261,471262]},{"pos":[471294,471301],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[471334,471335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471362,471363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471899,471905],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[472046,472060],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[472279,472290],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[472354,472355],"content":"<","needQuote":true,"nodes":[]},{"pos":[472382,472383],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[472503,472514],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[472579,472582]},{"pos":[472616,472617],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[472644,472645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472848,472874],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[473075,473089],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[473308,473319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[473383,473384],"content":"<","needQuote":true,"nodes":[]},{"pos":[473411,473412],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[473532,473543],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[473608,473611]},{"pos":[473645,473646],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[473673,473674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473869,473887],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[474088,474112],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[474291,474302],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[474361,474362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474429,474440],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[474517,474518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474631,474642],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[474701,474702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474769,474780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[474857,474858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475086,475095],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[475309,475353],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[475753,475774],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[475843,475844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475921,475932],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[476017,476018],"content":"<","needQuote":true,"nodes":[]},{"pos":[476045,476053],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[476119,476120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476249,476273],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[476345,476346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476423,476434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[476520,476523]},{"pos":[476557,476565],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[476599,476600],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476627,476628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477001,477024],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[477219,477229],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[477296,477297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477364,477375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[477452,477453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477574,477584],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[477651,477652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477719,477730],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[477807,477808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478061,478079],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[478328,478369],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[478786,478805],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[478881,478882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478959,478970],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[479055,479056],"content":"<","needQuote":true,"nodes":[]},{"pos":[479083,479090],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[479155,479156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479293,479315],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[479394,479395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479472,479483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[479569,479572]},{"pos":[479606,479613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[479646,479647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479674,479675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480100,480173],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[480706,480724],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[480791,480792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480869,480880],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480965,480966],"content":"<","needQuote":true,"nodes":[]},{"pos":[480993,481000],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481066,481067]},{"pos":[481122,481126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481184,481185],"content":"<","needQuote":true,"nodes":[]},{"pos":[481212,481219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481253,481254]},{"pos":[481286,481293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[481327,481328]},{"pos":[481360,481367],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[481432,481433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481586,481607],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[481677,481678],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481755,481766],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[481852,481855]},{"pos":[481889,481896],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[481929,481930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[481958,481959]},{"pos":[482014,482018],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[482077,482080]},{"pos":[482114,482121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482155,482156]},{"pos":[482188,482195],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[482229,482230]},{"pos":[482262,482269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[482302,482303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482330,482331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482763,482773],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[483018,483125],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[483764,483795],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[483875,483876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483953,483964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[484049,484050],"content":"<","needQuote":true,"nodes":[]},{"pos":[484077,484084],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[484150,484151]},{"pos":[484183,484194],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[484232,484233]},{"pos":[484288,484292],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[484350,484351],"content":"<","needQuote":true,"nodes":[]},{"pos":[484378,484389],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[484427,484428]},{"pos":[484460,484467],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[484501,484502]},{"pos":[484534,484545],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[484614,484615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484772,484806],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[484889,484890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484967,484978],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[485064,485067]},{"pos":[485101,485108],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[485141,485142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[485170,485171]},{"pos":[485203,485214],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[485252,485253]},{"pos":[485308,485312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[485371,485374]},{"pos":[485408,485419],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[485457,485458]},{"pos":[485490,485497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[485531,485532]},{"pos":[485564,485575],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[485612,485613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485640,485641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486230,486374],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[487165,487205],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[487294,487295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487372,487383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[487468,487469],"content":"<","needQuote":true,"nodes":[]},{"pos":[487496,487503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487569,487570]},{"pos":[487602,487613],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[487651,487652]},{"pos":[487707,487711],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[487769,487770],"content":"<","needQuote":true,"nodes":[]},{"pos":[487797,487808],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[487846,487847]},{"pos":[487879,487886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[487920,487921]},{"pos":[487953,487964],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[488034,488035]},{"pos":[488090,488094],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488152,488153],"content":"<","needQuote":true,"nodes":[]},{"pos":[488180,488191],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[488229,488230]},{"pos":[488262,488269],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[488334,488335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488513,488556],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[488648,488649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488726,488737],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[488823,488826]},{"pos":[488860,488867],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[488900,488901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[488929,488930]},{"pos":[488962,488973],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[489011,489012]},{"pos":[489067,489071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489130,489133]},{"pos":[489167,489178],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[489216,489217]},{"pos":[489249,489256],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[489290,489291]},{"pos":[489323,489334],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[489371,489372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[489400,489401]},{"pos":[489456,489460],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489519,489522]},{"pos":[489556,489567],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[489605,489606]},{"pos":[489638,489645],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[489678,489679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489706,489707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490370,490428],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[490931,490943],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[491004,491005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491082,491093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[491178,491179],"content":"<","needQuote":true,"nodes":[]},{"pos":[491206,491213],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491279,491280]},{"pos":[491335,491339],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[491397,491398],"content":"<","needQuote":true,"nodes":[]},{"pos":[491425,491432],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[491466,491467]},{"pos":[491523,491530],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[491623,491624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491778,491793],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[491857,491858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491935,491946],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[492032,492035]},{"pos":[492069,492076],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[492109,492110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[492138,492139]},{"pos":[492194,492198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[492257,492260]},{"pos":[492294,492301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[492335,492336]},{"pos":[492392,492399],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[492460,492461],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492488,492489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492921,492955],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[493320,493332],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[493393,493394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493471,493482],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[493567,493568],"content":"<","needQuote":true,"nodes":[]},{"pos":[493595,493602],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[493667,493668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493790,493805],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[493869,493870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493947,493958],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[494044,494047]},{"pos":[494081,494088],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[494121,494122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494149,494150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494531,494589],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[495092,495104],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[495165,495166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495243,495254],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[495339,495340],"content":"<","needQuote":true,"nodes":[]},{"pos":[495367,495374],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[495440,495441]},{"pos":[495496,495500],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[495558,495559],"content":"<","needQuote":true,"nodes":[]},{"pos":[495586,495593],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[495627,495628]},{"pos":[495684,495691],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[495784,495785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495939,495954],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[496018,496019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496096,496107],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[496193,496196]},{"pos":[496230,496237],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[496270,496271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[496299,496300]},{"pos":[496355,496359],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496418,496421]},{"pos":[496455,496462],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[496496,496497]},{"pos":[496553,496560],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[496621,496622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496649,496650],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497091,497134],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[497535,497556],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[497626,497627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497704,497715],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[497800,497801],"content":"<","needQuote":true,"nodes":[]},{"pos":[497828,497835],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[497900,497901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498032,498056],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[498129,498130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498207,498218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[498304,498307]},{"pos":[498341,498348],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[498381,498382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498409,498410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498822,498884],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[499403,499419],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[499484,499485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499562,499573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[499658,499659],"content":"<","needQuote":true,"nodes":[]},{"pos":[499686,499693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499759,499760]},{"pos":[499815,499819],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[499877,499878],"content":"<","needQuote":true,"nodes":[]},{"pos":[499905,499912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[499946,499947]},{"pos":[500003,500010],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[500103,500104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500262,500281],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[500349,500350],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500427,500438],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[500524,500527]},{"pos":[500561,500568],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[500601,500602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500630,500631]},{"pos":[500686,500690],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[500749,500752]},{"pos":[500786,500793],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[500827,500828]},{"pos":[500884,500891],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[500952,500953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500980,500981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501460,501521],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[502036,502052],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[502117,502118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502195,502206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[502291,502292],"content":"<","needQuote":true,"nodes":[]},{"pos":[502319,502326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502392,502393]},{"pos":[502448,502452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[502510,502511],"content":"<","needQuote":true,"nodes":[]},{"pos":[502538,502545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[502579,502580]},{"pos":[502635,502641],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[502733,502734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502891,502910],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[502978,502979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503056,503067],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[503153,503156]},{"pos":[503190,503197],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[503230,503231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[503259,503260]},{"pos":[503315,503319],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[503378,503381]},{"pos":[503415,503422],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[503456,503457]},{"pos":[503512,503518],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[503578,503579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503606,503607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504082,504142],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[504653,504669],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[504734,504735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504812,504823],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[504908,504909],"content":"<","needQuote":true,"nodes":[]},{"pos":[504936,504943],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[505009,505010]},{"pos":[505065,505069],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[505127,505128],"content":"<","needQuote":true,"nodes":[]},{"pos":[505155,505162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[505196,505197]},{"pos":[505251,505256],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[505347,505348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505504,505523],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[505591,505592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505669,505680],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[505766,505769]},{"pos":[505803,505810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[505843,505844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[505872,505873]},{"pos":[505928,505932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[505991,505994]},{"pos":[506028,506035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[506069,506070]},{"pos":[506124,506129],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[506188,506189],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506216,506217],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506689,506749],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[507260,507276],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[507341,507342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507419,507430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[507515,507516],"content":"<","needQuote":true,"nodes":[]},{"pos":[507543,507550],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507616,507617]},{"pos":[507672,507676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[507734,507735],"content":"<","needQuote":true,"nodes":[]},{"pos":[507762,507769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[507803,507804]},{"pos":[507858,507863],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[507954,507955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508111,508130],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[508198,508199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508276,508287],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[508373,508376]},{"pos":[508410,508417],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[508450,508451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[508479,508480]},{"pos":[508535,508539],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[508598,508601]},{"pos":[508635,508642],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[508676,508677]},{"pos":[508731,508736],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[508795,508796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508823,508824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509315,509387],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[509973,509989],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[510054,510055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510132,510143],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[510228,510229],"content":"<","needQuote":true,"nodes":[]},{"pos":[510256,510263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[510329,510330]},{"pos":[510385,510389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[510447,510448],"content":"<","needQuote":true,"nodes":[]},{"pos":[510475,510482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[510516,510517]},{"pos":[510576,510584],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[510646,510647],"content":"<","needQuote":true,"nodes":[]},{"pos":[510698,510705],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[510830,510831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511006,511025],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[511093,511094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511171,511182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[511268,511271]},{"pos":[511305,511312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[511345,511346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[511374,511375]},{"pos":[511430,511434],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[511493,511496]},{"pos":[511530,511537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[511571,511572]},{"pos":[511631,511639],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[511702,511705]},{"pos":[511763,511770],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[511831,511832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511859,511860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511887,511888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512424,512495],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[513077,513093],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[513158,513159],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513236,513247],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[513332,513333],"content":"<","needQuote":true,"nodes":[]},{"pos":[513360,513367],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[513433,513434]},{"pos":[513489,513493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[513551,513552],"content":"<","needQuote":true,"nodes":[]},{"pos":[513579,513586],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[513620,513621]},{"pos":[513680,513688],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[513750,513751],"content":"<","needQuote":true,"nodes":[]},{"pos":[513801,513807],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[513931,513932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514106,514125],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[514193,514194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514271,514282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[514368,514371]},{"pos":[514405,514412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[514445,514446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[514474,514475]},{"pos":[514530,514534],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[514593,514596]},{"pos":[514630,514637],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[514671,514672]},{"pos":[514731,514739],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[514802,514805]},{"pos":[514862,514868],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[514928,514929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514956,514957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514984,514985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515517,515587],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[516165,516181],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[516246,516247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516324,516335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[516420,516421],"content":"<","needQuote":true,"nodes":[]},{"pos":[516448,516455],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[516521,516522]},{"pos":[516577,516581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[516639,516640],"content":"<","needQuote":true,"nodes":[]},{"pos":[516667,516674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[516708,516709]},{"pos":[516768,516776],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[516838,516839],"content":"<","needQuote":true,"nodes":[]},{"pos":[516888,516893],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[517016,517017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517190,517209],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[517277,517278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517355,517366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[517452,517455]},{"pos":[517489,517496],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[517529,517530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[517558,517559]},{"pos":[517614,517618],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[517677,517680]},{"pos":[517714,517721],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[517755,517756]},{"pos":[517815,517823],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[517886,517889]},{"pos":[517945,517950],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[518009,518010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518037,518038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518065,518066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518595,518665],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[519243,519259],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[519324,519325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519402,519413],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[519498,519499],"content":"<","needQuote":true,"nodes":[]},{"pos":[519526,519533],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519599,519600]},{"pos":[519655,519659],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[519717,519718],"content":"<","needQuote":true,"nodes":[]},{"pos":[519745,519752],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[519786,519787]},{"pos":[519846,519854],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[519916,519917],"content":"<","needQuote":true,"nodes":[]},{"pos":[519966,519971],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[520094,520095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520268,520287],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[520355,520356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520433,520444],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[520530,520533]},{"pos":[520567,520574],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[520607,520608],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520636,520637]},{"pos":[520692,520696],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[520755,520758]},{"pos":[520792,520799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[520833,520834]},{"pos":[520893,520901],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[520964,520967]},{"pos":[521023,521028],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[521087,521088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521115,521116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521143,521144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521674,521745],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[522327,522343],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[522408,522409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522486,522497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[522582,522583],"content":"<","needQuote":true,"nodes":[]},{"pos":[522610,522617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[522683,522684]},{"pos":[522739,522743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[522801,522802],"content":"<","needQuote":true,"nodes":[]},{"pos":[522829,522836],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[522870,522871]},{"pos":[522930,522938],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[523000,523001],"content":"<","needQuote":true,"nodes":[]},{"pos":[523051,523057],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[523181,523182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523356,523375],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[523443,523444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523521,523532],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[523618,523621]},{"pos":[523655,523662],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[523695,523696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[523724,523725]},{"pos":[523780,523784],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[523843,523846]},{"pos":[523880,523887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[523921,523922]},{"pos":[523981,523989],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[524052,524055]},{"pos":[524112,524118],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[524178,524179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524206,524207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524234,524235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524751,524812],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[525327,525343],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[525408,525409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525486,525497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[525582,525583],"content":"<","needQuote":true,"nodes":[]},{"pos":[525610,525617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[525683,525684]},{"pos":[525739,525743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[525801,525802],"content":"<","needQuote":true,"nodes":[]},{"pos":[525829,525836],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[525870,525871]},{"pos":[525926,525932],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[526024,526025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526182,526201],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[526269,526270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526347,526358],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[526444,526447]},{"pos":[526481,526488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[526521,526522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526550,526551]},{"pos":[526606,526610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[526669,526672]},{"pos":[526706,526713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[526747,526748]},{"pos":[526803,526809],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[526869,526870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[526897,526898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527327,527353],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[527660,527673],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[527735,527736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527803,527814],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[527891,527892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528002,528018],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[528083,528084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528151,528162],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[528239,528240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528605,528664],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[529211,529226],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[529290,529291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[529368,529379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[529464,529465],"content":"<","needQuote":true,"nodes":[]},{"pos":[529492,529499],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[529565,529566]},{"pos":[529648,529659],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[529744,529745],"content":"<","needQuote":true,"nodes":[]},{"pos":[529772,529779],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[529844,529845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530014,530032],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[530099,530100],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530177,530188],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530274,530277]},{"pos":[530311,530318],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530351,530352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[530380,530381]},{"pos":[530463,530474],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[530560,530563]},{"pos":[530597,530604],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[530637,530638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530665,530666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531122,531168],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[531576,531591],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[531655,531656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531733,531744],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[531829,531830],"content":"<","needQuote":true,"nodes":[]},{"pos":[531857,531864],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[531930,531931]},{"pos":[531963,531970],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[532003,532004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532133,532151],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[532218,532219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532296,532307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[532393,532396]},{"pos":[532430,532437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[532470,532471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[532499,532500]},{"pos":[532532,532539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[532572,532573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532961,533008],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[533420,533436],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[533501,533502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533579,533590],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[533675,533676],"content":"<","needQuote":true,"nodes":[]},{"pos":[533703,533710],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[533776,533777]},{"pos":[533809,533816],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[533849,533850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533980,533999],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[534067,534068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534145,534156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[534242,534245]},{"pos":[534279,534286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534319,534320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[534348,534349]},{"pos":[534381,534388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[534421,534422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534814,534862],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[535278,535295],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[535361,535362],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535439,535450],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[535535,535536],"content":"<","needQuote":true,"nodes":[]},{"pos":[535563,535570],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[535636,535637]},{"pos":[535669,535676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[535709,535710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535841,535861],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[535930,535931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536008,536019],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[536105,536108]},{"pos":[536142,536149],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536182,536183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[536211,536212]},{"pos":[536244,536251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[536284,536285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536730,536806],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[537416,537433],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[537499,537500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537577,537588],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[537673,537674],"content":"<","needQuote":true,"nodes":[]},{"pos":[537701,537708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537774,537775]},{"pos":[537807,537814],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[537848,537849]},{"pos":[537937,537954],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[538045,538046],"content":"<","needQuote":true,"nodes":[]},{"pos":[538073,538080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538145,538146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538327,538347],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[538416,538417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538494,538505],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[538591,538594]},{"pos":[538628,538635],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[538668,538669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[538697,538698]},{"pos":[538730,538737],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[538771,538772]},{"pos":[538860,538877],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[538969,538972]},{"pos":[539006,539013],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[539046,539047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539074,539075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[539572,539608],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[539981,539995],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[540058,540059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540136,540147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[540232,540233],"content":"<","needQuote":true,"nodes":[]},{"pos":[540260,540267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540332,540333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540457,540474],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[540540,540541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540618,540629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[540715,540718]},{"pos":[540752,540759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[540792,540793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540820,540821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541210,541270],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[541781,541795],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[541858,541859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[541936,541947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[542032,542033],"content":"<","needQuote":true,"nodes":[]},{"pos":[542060,542067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542133,542134]},{"pos":[542189,542193],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542251,542252],"content":"<","needQuote":true,"nodes":[]},{"pos":[542279,542286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[542320,542321]},{"pos":[542377,542384],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[542477,542478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[542634,542651],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[542717,542718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542795,542806],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[542892,542895]},{"pos":[542929,542936],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[542969,542970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[542998,542999]},{"pos":[543054,543058],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[543117,543120]},{"pos":[543154,543161],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[543195,543196]},{"pos":[543252,543259],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[543320,543321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543348,543349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543798,543843],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[544252,544275],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[544347,544348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544425,544436],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[544521,544522],"content":"<","needQuote":true,"nodes":[]},{"pos":[544549,544556],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[544621,544622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544755,544781],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[544856,544857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544934,544945],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[545031,545034]},{"pos":[545068,545075],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[545108,545109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545136,545137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545534,545588],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[546028,546051],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[546123,546124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546201,546212],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[546297,546298],"content":"<","needQuote":true,"nodes":[]},{"pos":[546325,546332],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[546398,546399]},{"pos":[546431,546438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546471,546472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546609,546635],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[546710,546711],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546788,546799],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[546885,546888]},{"pos":[546922,546929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[546962,546963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[546991,546992]},{"pos":[547024,547031],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[547064,547065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547474,547513],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[547898,547915],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[547981,547982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548059,548070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[548155,548156],"content":"<","needQuote":true,"nodes":[]},{"pos":[548183,548190],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[548255,548256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548383,548403],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[548472,548473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548550,548561],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[548647,548650]},{"pos":[548684,548691],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[548724,548725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548752,548753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549172,549239],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[549818,549835],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[549901,549902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549979,549990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[550075,550076],"content":"<","needQuote":true,"nodes":[]},{"pos":[550103,550110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[550176,550177]},{"pos":[550265,550282],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[550373,550374],"content":"<","needQuote":true,"nodes":[]},{"pos":[550401,550408],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[550473,550474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550651,550671],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[550740,550741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550818,550829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[550915,550918]},{"pos":[550952,550959],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[550992,550993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[551021,551022]},{"pos":[551110,551127],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[551219,551222]},{"pos":[551256,551263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[551296,551297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551324,551325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551817,551864],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[552301,552319],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[552386,552387],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552464,552475],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[552560,552561],"content":"<","needQuote":true,"nodes":[]},{"pos":[552588,552595],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[552661,552662]},{"pos":[552716,552721],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[552780,552781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552922,552943],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[553013,553014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553091,553102],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[553188,553191]},{"pos":[553225,553232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[553265,553266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[553294,553295]},{"pos":[553349,553354],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[553413,553414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553836,553892],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[554365,554392],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[554468,554469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554546,554557],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[554642,554643],"content":"<","needQuote":true,"nodes":[]},{"pos":[554670,554677],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[554743,554744]},{"pos":[554798,554803],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[554862,554863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555013,555043],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[555122,555123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555200,555211],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[555297,555300]},{"pos":[555334,555341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[555374,555375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[555403,555404]},{"pos":[555458,555463],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[555522,555523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555991,556050],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[556597,556612],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[556676,556677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556754,556765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[556850,556851],"content":"<","needQuote":true,"nodes":[]},{"pos":[556878,556885],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[556951,556952]},{"pos":[557034,557045],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[557130,557131],"content":"<","needQuote":true,"nodes":[]},{"pos":[557158,557165],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557230,557231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557400,557418],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[557485,557486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557563,557574],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[557660,557663]},{"pos":[557697,557704],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[557737,557738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[557766,557767]},{"pos":[557849,557860],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[557946,557949]},{"pos":[557983,557990],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[558023,558024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558051,558052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558598,558685],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[559426,559441],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[559505,559506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559583,559594],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559679,559680],"content":"<","needQuote":true,"nodes":[]},{"pos":[559707,559714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[559780,559781]},{"pos":[559863,559874],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[559959,559960],"content":"<","needQuote":true,"nodes":[]},{"pos":[559987,559994],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[560060,560061]},{"pos":[560149,560166],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[560257,560258],"content":"<","needQuote":true,"nodes":[]},{"pos":[560285,560292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[560357,560358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560577,560595],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[560662,560663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560740,560751],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[560837,560840]},{"pos":[560874,560881],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[560914,560915],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[560943,560944]},{"pos":[561026,561037],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[561123,561126]},{"pos":[561160,561167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561200,561201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[561229,561230]},{"pos":[561318,561335],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[561427,561430]},{"pos":[561464,561471],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[561504,561505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561532,561533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562093,562129],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[562502,562516],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[562579,562580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562657,562668],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[562753,562754],"content":"<","needQuote":true,"nodes":[]},{"pos":[562781,562788],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[562853,562854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562978,562995],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[563061,563062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563139,563150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[563236,563239]},{"pos":[563273,563280],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[563313,563314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563341,563342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563731,563791],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[564302,564316],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[564379,564380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564457,564468],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[564553,564554],"content":"<","needQuote":true,"nodes":[]},{"pos":[564581,564588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564654,564655]},{"pos":[564710,564714],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[564772,564773],"content":"<","needQuote":true,"nodes":[]},{"pos":[564800,564807],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[564841,564842]},{"pos":[564898,564905],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[564998,564999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565155,565172],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[565238,565239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565316,565327],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[565413,565416]},{"pos":[565450,565457],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[565490,565491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[565519,565520]},{"pos":[565575,565579],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[565638,565641]},{"pos":[565675,565682],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[565716,565717]},{"pos":[565773,565780],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[565841,565842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565869,565870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566319,566364],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[566773,566796],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[566868,566869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566946,566957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[567042,567043],"content":"<","needQuote":true,"nodes":[]},{"pos":[567070,567077],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567142,567143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567276,567302],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[567377,567378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567455,567466],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[567552,567555]},{"pos":[567589,567596],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[567629,567630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567657,567658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568083,568152],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[568699,568722],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[568794,568795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568872,568883],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[568968,568969],"content":"<","needQuote":true,"nodes":[]},{"pos":[568996,569003],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569069,569070]},{"pos":[569125,569129],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[569187,569188],"content":"<","needQuote":true,"nodes":[]},{"pos":[569215,569222],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[569256,569257]},{"pos":[569313,569320],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[569413,569414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569579,569605],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[569680,569681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569758,569769],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[569855,569858]},{"pos":[569892,569899],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[569932,569933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[569961,569962]},{"pos":[570017,570021],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[570080,570083]},{"pos":[570117,570124],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[570158,570159]},{"pos":[570215,570222],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[570283,570284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570311,570312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570802,570867],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[571370,571392],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[571463,571464],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571541,571552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571637,571638],"content":"<","needQuote":true,"nodes":[]},{"pos":[571665,571672],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571738,571739]},{"pos":[571794,571798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[571856,571857],"content":"<","needQuote":true,"nodes":[]},{"pos":[571884,571891],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[571925,571926]},{"pos":[571958,571962],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[572024,572025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572172,572197],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[572271,572272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572349,572360],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572446,572449]},{"pos":[572483,572490],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[572523,572524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[572552,572553]},{"pos":[572608,572612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[572671,572674]},{"pos":[572708,572715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[572749,572750]},{"pos":[572782,572786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[572816,572817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572844,572845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573359,573449],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[574137,574159],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[574230,574231],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574308,574319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[574404,574405],"content":"<","needQuote":true,"nodes":[]},{"pos":[574432,574439],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574505,574506]},{"pos":[574561,574565],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[574623,574624],"content":"<","needQuote":true,"nodes":[]},{"pos":[574651,574658],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[574692,574693]},{"pos":[574725,574729],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[574792,574793]},{"pos":[574881,574898],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[574989,574990],"content":"<","needQuote":true,"nodes":[]},{"pos":[575017,575021],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[575083,575084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575281,575306],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[575380,575381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575458,575469],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[575555,575558]},{"pos":[575592,575599],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[575632,575633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575661,575662]},{"pos":[575717,575721],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[575780,575783]},{"pos":[575817,575824],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[575858,575859]},{"pos":[575891,575895],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[575925,575926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[575954,575955]},{"pos":[576043,576060],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[576152,576155]},{"pos":[576189,576193],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[576223,576224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576251,576252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576840,576940],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[577589,577621],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[577702,577703],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577780,577791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[577876,577877],"content":"<","needQuote":true,"nodes":[]},{"pos":[577904,577911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577977,577978]},{"pos":[578033,578037],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578095,578096],"content":"<","needQuote":true,"nodes":[]},{"pos":[578123,578130],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578164,578165]},{"pos":[578197,578201],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[578264,578265]},{"pos":[578320,578324],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[578382,578383],"content":"<","needQuote":true,"nodes":[]},{"pos":[578410,578417],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578451,578452]},{"pos":[578484,578492],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[578558,578559],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578727,578762],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[578846,578847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578924,578935],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[579021,579024]},{"pos":[579058,579065],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[579098,579099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579127,579128]},{"pos":[579183,579187],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579246,579249]},{"pos":[579283,579290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579324,579325]},{"pos":[579357,579361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[579391,579392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[579420,579421]},{"pos":[579476,579480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[579539,579542]},{"pos":[579576,579583],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[579617,579618]},{"pos":[579650,579658],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[579692,579693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579720,579721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580350,580475],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[581309,581341],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[581422,581423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581500,581511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[581596,581597],"content":"<","needQuote":true,"nodes":[]},{"pos":[581624,581631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581697,581698]},{"pos":[581753,581757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[581815,581816],"content":"<","needQuote":true,"nodes":[]},{"pos":[581843,581850],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581884,581885]},{"pos":[581917,581921],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[581984,581985]},{"pos":[582040,582044],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[582102,582103],"content":"<","needQuote":true,"nodes":[]},{"pos":[582130,582137],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[582171,582172]},{"pos":[582204,582212],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[582279,582280]},{"pos":[582368,582385],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[582476,582477],"content":"<","needQuote":true,"nodes":[]},{"pos":[582504,582508],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[582570,582571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582789,582824],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[582908,582909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582986,582997],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[583083,583086]},{"pos":[583120,583127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[583160,583161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583189,583190]},{"pos":[583245,583249],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583308,583311]},{"pos":[583345,583352],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583386,583387]},{"pos":[583419,583423],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[583453,583454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583482,583483]},{"pos":[583538,583542],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[583601,583604]},{"pos":[583638,583645],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583679,583680]},{"pos":[583712,583720],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[583754,583755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[583783,583784]},{"pos":[583872,583889],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[583981,583984]},{"pos":[584018,584022],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[584052,584053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584080,584081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584807,584924],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[585728,585759],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[585839,585840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585917,585928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[586013,586014],"content":"<","needQuote":true,"nodes":[]},{"pos":[586041,586048],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586114,586115]},{"pos":[586170,586174],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[586232,586233],"content":"<","needQuote":true,"nodes":[]},{"pos":[586260,586267],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586301,586302]},{"pos":[586334,586338],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[586401,586402]},{"pos":[586457,586461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[586519,586520],"content":"<","needQuote":true,"nodes":[]},{"pos":[586547,586551],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[586582,586583]},{"pos":[586665,586676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[586761,586762],"content":"<","needQuote":true,"nodes":[]},{"pos":[586789,586796],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[586862,586863]},{"pos":[586895,586902],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[586967,586968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587180,587214],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[587297,587298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587375,587386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[587472,587475]},{"pos":[587509,587516],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[587549,587550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[587578,587579]},{"pos":[587634,587638],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[587697,587700]},{"pos":[587734,587741],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587775,587776]},{"pos":[587808,587812],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[587842,587843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[587871,587872]},{"pos":[587927,587931],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[587990,587993]},{"pos":[588027,588031],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[588062,588063]},{"pos":[588145,588156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[588242,588245]},{"pos":[588279,588286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[588319,588320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[588348,588349]},{"pos":[588381,588388],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[588421,588422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588449,588450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589204,589346],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[590335,590366],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[590446,590447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590524,590535],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[590620,590621],"content":"<","needQuote":true,"nodes":[]},{"pos":[590648,590655],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590721,590722]},{"pos":[590777,590781],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[590839,590840],"content":"<","needQuote":true,"nodes":[]},{"pos":[590867,590874],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[590908,590909]},{"pos":[590941,590945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[591008,591009]},{"pos":[591064,591068],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[591126,591127],"content":"<","needQuote":true,"nodes":[]},{"pos":[591154,591158],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[591189,591190]},{"pos":[591272,591283],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[591368,591369],"content":"<","needQuote":true,"nodes":[]},{"pos":[591396,591403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[591469,591470]},{"pos":[591502,591509],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[591575,591576]},{"pos":[591664,591681],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[591772,591773],"content":"<","needQuote":true,"nodes":[]},{"pos":[591800,591804],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[591866,591867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592129,592163],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[592246,592247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592324,592335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[592421,592424]},{"pos":[592458,592465],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[592498,592499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592527,592528]},{"pos":[592583,592587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592646,592649]},{"pos":[592683,592690],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592724,592725]},{"pos":[592757,592761],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[592791,592792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592820,592821]},{"pos":[592876,592880],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592939,592942]},{"pos":[592976,592980],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[593011,593012]},{"pos":[593094,593105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[593191,593194]},{"pos":[593228,593235],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[593268,593269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[593297,593298]},{"pos":[593330,593337],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[593370,593371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[593399,593400]},{"pos":[593488,593505],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[593597,593600]},{"pos":[593634,593638],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[593668,593669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593696,593697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594525,594678],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[595631,595672],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[595762,595763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595840,595851],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[595936,595937],"content":"<","needQuote":true,"nodes":[]},{"pos":[595964,595971],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596037,596038]},{"pos":[596093,596097],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596155,596156],"content":"<","needQuote":true,"nodes":[]},{"pos":[596183,596190],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596224,596225]},{"pos":[596257,596261],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[596324,596325]},{"pos":[596380,596384],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596442,596443],"content":"<","needQuote":true,"nodes":[]},{"pos":[596470,596477],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596511,596512]},{"pos":[596544,596552],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[596619,596620]},{"pos":[596675,596679],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596737,596738],"content":"<","needQuote":true,"nodes":[]},{"pos":[596765,596769],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[596800,596801]},{"pos":[596883,596894],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596979,596980],"content":"<","needQuote":true,"nodes":[]},{"pos":[597007,597015],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[597082,597083]},{"pos":[597115,597122],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[597187,597188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597421,597465],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[597558,597559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597636,597647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[597733,597736]},{"pos":[597770,597777],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[597810,597811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597839,597840]},{"pos":[597895,597899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597958,597961]},{"pos":[597995,598002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598036,598037]},{"pos":[598069,598073],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[598103,598104],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598132,598133]},{"pos":[598188,598192],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[598251,598254]},{"pos":[598288,598295],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598329,598330]},{"pos":[598362,598370],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[598404,598405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598433,598434]},{"pos":[598489,598493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[598552,598555]},{"pos":[598589,598593],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[598624,598625]},{"pos":[598707,598718],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[598804,598807]},{"pos":[598841,598849],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[598883,598884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[598912,598913]},{"pos":[598945,598952],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[598985,598986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599013,599014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599885,600063],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[601201,601242],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[601332,601333],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601410,601421],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[601506,601507],"content":"<","needQuote":true,"nodes":[]},{"pos":[601534,601541],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601607,601608]},{"pos":[601663,601667],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601725,601726],"content":"<","needQuote":true,"nodes":[]},{"pos":[601753,601760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601794,601795]},{"pos":[601827,601831],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[601894,601895]},{"pos":[601950,601954],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[602012,602013],"content":"<","needQuote":true,"nodes":[]},{"pos":[602040,602047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602081,602082]},{"pos":[602114,602122],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[602189,602190]},{"pos":[602245,602249],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[602307,602308],"content":"<","needQuote":true,"nodes":[]},{"pos":[602335,602339],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[602370,602371]},{"pos":[602453,602464],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[602549,602550],"content":"<","needQuote":true,"nodes":[]},{"pos":[602577,602585],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[602652,602653]},{"pos":[602685,602692],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[602758,602759]},{"pos":[602847,602864],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[602955,602956],"content":"<","needQuote":true,"nodes":[]},{"pos":[602983,602987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[603049,603050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603333,603377],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[603470,603471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603548,603559],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[603645,603648]},{"pos":[603682,603689],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[603722,603723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[603751,603752]},{"pos":[603807,603811],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[603870,603873]},{"pos":[603907,603914],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[603948,603949]},{"pos":[603981,603985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[604015,604016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604044,604045]},{"pos":[604100,604104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604163,604166]},{"pos":[604200,604207],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604241,604242]},{"pos":[604274,604282],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[604316,604317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604345,604346]},{"pos":[604401,604405],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604464,604467]},{"pos":[604501,604505],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[604536,604537]},{"pos":[604619,604630],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[604716,604719]},{"pos":[604753,604761],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[604795,604796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604824,604825]},{"pos":[604857,604864],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[604897,604898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604926,604927]},{"pos":[605015,605032],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[605124,605127]},{"pos":[605161,605165],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[605195,605196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605223,605224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606194,606360],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[607458,607498],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[607587,607588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607665,607676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[607761,607762],"content":"<","needQuote":true,"nodes":[]},{"pos":[607789,607795],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[607860,607861]},{"pos":[607943,607954],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[608039,608040],"content":"<","needQuote":true,"nodes":[]},{"pos":[608067,608073],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[608138,608139]},{"pos":[608194,608198],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608256,608257],"content":"<","needQuote":true,"nodes":[]},{"pos":[608284,608290],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[608323,608324]},{"pos":[608356,608360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[608423,608424]},{"pos":[608479,608483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608541,608542],"content":"<","needQuote":true,"nodes":[]},{"pos":[608569,608575],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[608608,608609]},{"pos":[608641,608645],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[608708,608709]},{"pos":[608764,608768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[608826,608827],"content":"<","needQuote":true,"nodes":[]},{"pos":[608854,608860],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[608893,608894]},{"pos":[608976,608987],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609072,609073],"content":"<","needQuote":true,"nodes":[]},{"pos":[609100,609106],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[609171,609172]},{"pos":[609204,609211],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[609276,609277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609556,609599],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[609691,609692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609769,609780],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[609866,609869]},{"pos":[609903,609909],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[609941,609942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[609970,609971]},{"pos":[610053,610064],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[610150,610153]},{"pos":[610187,610193],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[610225,610226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610254,610255]},{"pos":[610310,610314],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610373,610376]},{"pos":[610410,610416],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[610449,610450]},{"pos":[610482,610486],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610516,610517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610545,610546]},{"pos":[610601,610605],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610664,610667]},{"pos":[610701,610707],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[610740,610741]},{"pos":[610773,610777],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[610807,610808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610836,610837]},{"pos":[610892,610896],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610955,610958]},{"pos":[610992,610998],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[611031,611032]},{"pos":[611114,611125],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[611211,611214]},{"pos":[611248,611254],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[611286,611287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[611315,611316]},{"pos":[611348,611355],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[611388,611389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611416,611417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[612409,612600],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[613883,613923],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[614012,614013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614090,614101],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614186,614187],"content":"<","needQuote":true,"nodes":[]},{"pos":[614214,614220],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[614285,614286]},{"pos":[614368,614379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[614464,614465],"content":"<","needQuote":true,"nodes":[]},{"pos":[614492,614498],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[614563,614564]},{"pos":[614619,614623],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[614681,614682],"content":"<","needQuote":true,"nodes":[]},{"pos":[614709,614715],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[614748,614749]},{"pos":[614781,614785],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[614848,614849]},{"pos":[614904,614908],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[614966,614967],"content":"<","needQuote":true,"nodes":[]},{"pos":[614994,615000],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[615033,615034]},{"pos":[615066,615070],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[615133,615134]},{"pos":[615189,615193],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[615251,615252],"content":"<","needQuote":true,"nodes":[]},{"pos":[615279,615285],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[615318,615319]},{"pos":[615401,615412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615497,615498],"content":"<","needQuote":true,"nodes":[]},{"pos":[615525,615531],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[615596,615597]},{"pos":[615629,615636],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[615702,615703]},{"pos":[615791,615808],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[615899,615900],"content":"<","needQuote":true,"nodes":[]},{"pos":[615927,615931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[615993,615994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616323,616366],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[616458,616459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616536,616547],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616633,616636]},{"pos":[616670,616676],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[616708,616709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[616737,616738]},{"pos":[616820,616831],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616917,616920]},{"pos":[616954,616960],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[616992,616993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617021,617022]},{"pos":[617077,617081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617140,617143]},{"pos":[617177,617183],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[617216,617217]},{"pos":[617249,617253],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617283,617284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617312,617313]},{"pos":[617368,617372],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617431,617434]},{"pos":[617468,617474],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[617507,617508]},{"pos":[617540,617544],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[617574,617575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617603,617604]},{"pos":[617659,617663],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617722,617725]},{"pos":[617759,617765],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[617798,617799]},{"pos":[617881,617892],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[617978,617981]},{"pos":[618015,618021],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[618053,618054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618082,618083]},{"pos":[618115,618122],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[618155,618156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[618184,618185]},{"pos":[618273,618290],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[618382,618385]},{"pos":[618419,618423],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[618453,618454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618481,618482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619420,619482],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[620041,620059],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[620126,620127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620204,620215],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620300,620301],"content":"<","needQuote":true,"nodes":[]},{"pos":[620328,620335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620401,620402]},{"pos":[620484,620495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620580,620581],"content":"<","needQuote":true,"nodes":[]},{"pos":[620608,620615],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620680,620681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620853,620874],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[620944,620945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621022,621033],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621119,621122]},{"pos":[621156,621163],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621196,621197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[621225,621226]},{"pos":[621308,621319],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621405,621408]},{"pos":[621442,621449],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[621482,621483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621510,621511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622069,622159],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[622912,622930],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[622997,622998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623075,623086],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623171,623172],"content":"<","needQuote":true,"nodes":[]},{"pos":[623199,623206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623272,623273]},{"pos":[623355,623366],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[623451,623452],"content":"<","needQuote":true,"nodes":[]},{"pos":[623479,623486],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623552,623553]},{"pos":[623641,623658],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[623749,623750],"content":"<","needQuote":true,"nodes":[]},{"pos":[623777,623784],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[623849,623850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624072,624093],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[624163,624164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624241,624252],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624338,624341]},{"pos":[624375,624382],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624415,624416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624444,624445]},{"pos":[624527,624538],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[624624,624627]},{"pos":[624661,624668],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[624701,624702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[624730,624731]},{"pos":[624819,624836],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[624928,624931]},{"pos":[624965,624972],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[625005,625006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625033,625034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625713,625861],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[626800,626835],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[626919,626920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626997,627008],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627093,627094],"content":"<","needQuote":true,"nodes":[]},{"pos":[627121,627127],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[627192,627193]},{"pos":[627275,627286],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[627371,627372],"content":"<","needQuote":true,"nodes":[]},{"pos":[627399,627405],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[627470,627471]},{"pos":[627526,627530],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627588,627589],"content":"<","needQuote":true,"nodes":[]},{"pos":[627616,627622],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[627655,627656]},{"pos":[627688,627692],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[627755,627756]},{"pos":[627811,627815],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[627873,627874],"content":"<","needQuote":true,"nodes":[]},{"pos":[627901,627907],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[627940,627941]},{"pos":[627973,627977],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[628040,628041]},{"pos":[628096,628100],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[628158,628159],"content":"<","needQuote":true,"nodes":[]},{"pos":[628186,628192],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[628225,628226]},{"pos":[628258,628264],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[628297,628298]},{"pos":[628330,628337],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[628402,628403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628637,628675],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[628762,628763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628840,628851],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628937,628940]},{"pos":[628974,628980],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[629012,629013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629041,629042]},{"pos":[629124,629135],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[629221,629224]},{"pos":[629258,629264],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[629296,629297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629325,629326]},{"pos":[629381,629385],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629444,629447]},{"pos":[629481,629487],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[629520,629521]},{"pos":[629553,629557],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[629587,629588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629616,629617]},{"pos":[629672,629676],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[629735,629738]},{"pos":[629772,629778],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[629811,629812]},{"pos":[629844,629848],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[629878,629879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[629907,629908]},{"pos":[629963,629967],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[630026,630029]},{"pos":[630063,630069],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[630102,630103]},{"pos":[630135,630141],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[630174,630175]},{"pos":[630207,630214],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[630247,630248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630275,630276],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631139,631312],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[632436,632471],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[632555,632556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632633,632644],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[632729,632730],"content":"<","needQuote":true,"nodes":[]},{"pos":[632757,632763],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[632828,632829]},{"pos":[632911,632922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[633007,633008],"content":"<","needQuote":true,"nodes":[]},{"pos":[633035,633041],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633106,633107]},{"pos":[633162,633166],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633224,633225],"content":"<","needQuote":true,"nodes":[]},{"pos":[633252,633258],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[633291,633292]},{"pos":[633324,633328],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[633391,633392]},{"pos":[633447,633451],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633509,633510],"content":"<","needQuote":true,"nodes":[]},{"pos":[633537,633543],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633576,633577]},{"pos":[633609,633613],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[633676,633677]},{"pos":[633732,633736],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[633794,633795],"content":"<","needQuote":true,"nodes":[]},{"pos":[633822,633828],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[633861,633862]},{"pos":[633894,633900],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[633933,633934]},{"pos":[633966,633973],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[634039,634040]},{"pos":[634128,634145],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[634236,634237],"content":"<","needQuote":true,"nodes":[]},{"pos":[634264,634268],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[634330,634331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634615,634653],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[634740,634741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634818,634829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[634915,634918]},{"pos":[634952,634958],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[634990,634991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635019,635020]},{"pos":[635102,635113],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[635199,635202]},{"pos":[635236,635242],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[635274,635275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635303,635304]},{"pos":[635359,635363],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635422,635425]},{"pos":[635459,635465],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[635498,635499]},{"pos":[635531,635535],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[635565,635566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635594,635595]},{"pos":[635650,635654],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[635713,635716]},{"pos":[635750,635756],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[635789,635790]},{"pos":[635822,635826],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[635856,635857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635885,635886]},{"pos":[635941,635945],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[636004,636007]},{"pos":[636041,636047],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[636080,636081]},{"pos":[636113,636119],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[636152,636153]},{"pos":[636185,636192],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[636225,636226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[636254,636255]},{"pos":[636343,636360],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[636452,636455]},{"pos":[636489,636493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[636523,636524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636551,636552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637357,637392],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[637761,637774],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[637836,637837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637914,637925],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[638010,638011],"content":"<","needQuote":true,"nodes":[]},{"pos":[638038,638045],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[638110,638111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638234,638250],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[638315,638316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638393,638404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[638490,638493]},{"pos":[638527,638534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[638567,638568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638595,638596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638981,639040],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[639547,639560],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[639622,639623],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639700,639711],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[639796,639797],"content":"<","needQuote":true,"nodes":[]},{"pos":[639824,639831],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639897,639898]},{"pos":[639953,639957],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[640015,640016],"content":"<","needQuote":true,"nodes":[]},{"pos":[640043,640050],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640084,640085]},{"pos":[640141,640148],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[640241,640242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640397,640413],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[640478,640479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640556,640567],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[640653,640656]},{"pos":[640690,640697],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[640730,640731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[640759,640760]},{"pos":[640815,640819],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[640878,640881]},{"pos":[640915,640922],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[640956,640957]},{"pos":[641013,641020],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[641081,641082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641109,641110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641555,641599],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[642004,642026],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[642097,642098],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642175,642186],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642271,642272],"content":"<","needQuote":true,"nodes":[]},{"pos":[642299,642306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642371,642372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642504,642529],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[642603,642604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642681,642692],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[642778,642781]},{"pos":[642815,642822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642855,642856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642883,642884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643305,643373],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[643916,643938],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[644009,644010],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644087,644098],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[644183,644184],"content":"<","needQuote":true,"nodes":[]},{"pos":[644211,644218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644284,644285]},{"pos":[644340,644344],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[644402,644403],"content":"<","needQuote":true,"nodes":[]},{"pos":[644430,644437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[644471,644472]},{"pos":[644528,644535],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[644628,644629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644793,644818],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[644892,644893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644970,644981],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645067,645070]},{"pos":[645104,645111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645144,645145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[645173,645174]},{"pos":[645229,645233],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[645292,645295]},{"pos":[645329,645336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[645370,645371]},{"pos":[645427,645434],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[645495,645496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645523,645524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645992,646032],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[646421,646439],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[646506,646507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646584,646595],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[646680,646681],"content":"<","needQuote":true,"nodes":[]},{"pos":[646708,646715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646780,646781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646909,646930],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[647000,647001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647078,647089],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647175,647178]},{"pos":[647212,647219],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647252,647253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647280,647281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647686,647750],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[648277,648295],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[648362,648363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648440,648451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648536,648537],"content":"<","needQuote":true,"nodes":[]},{"pos":[648564,648571],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648637,648638]},{"pos":[648693,648697],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[648755,648756],"content":"<","needQuote":true,"nodes":[]},{"pos":[648783,648790],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[648824,648825]},{"pos":[648881,648888],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[648981,648982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649142,649163],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[649233,649234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649311,649322],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649408,649411]},{"pos":[649445,649452],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649485,649486],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649514,649515]},{"pos":[649570,649574],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[649633,649636]},{"pos":[649670,649677],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649711,649712]},{"pos":[649768,649775],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[649836,649837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649864,649865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650315,650349],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[650714,650726],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[650787,650788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650865,650876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[650961,650962],"content":"<","needQuote":true,"nodes":[]},{"pos":[650989,650996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651061,651062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651184,651199],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[651263,651264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651341,651352],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651438,651441]},{"pos":[651475,651482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651515,651516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651543,651544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651925,651983],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[652486,652498],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[652559,652560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652637,652648],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[652733,652734],"content":"<","needQuote":true,"nodes":[]},{"pos":[652761,652768],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[652834,652835]},{"pos":[652890,652894],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[652952,652953],"content":"<","needQuote":true,"nodes":[]},{"pos":[652980,652987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653021,653022]},{"pos":[653078,653085],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[653178,653179],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653333,653348],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[653412,653413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653490,653501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[653587,653590]},{"pos":[653624,653631],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653664,653665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[653693,653694]},{"pos":[653749,653753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[653812,653815]},{"pos":[653849,653856],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653890,653891]},{"pos":[653947,653954],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[654015,654016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654043,654044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654507,654564],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[655063,655075],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[655136,655137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655214,655225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[655310,655311],"content":"<","needQuote":true,"nodes":[]},{"pos":[655338,655345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655411,655412]},{"pos":[655467,655471],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[655529,655530],"content":"<","needQuote":true,"nodes":[]},{"pos":[655557,655564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[655598,655599]},{"pos":[655654,655660],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[655752,655753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655906,655921],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[655985,655986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656063,656074],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[656160,656163]},{"pos":[656197,656204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656237,656238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[656266,656267]},{"pos":[656322,656326],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[656385,656388]},{"pos":[656422,656429],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656463,656464]},{"pos":[656519,656525],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[656585,656586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656613,656614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657073,657129],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[657624,657636],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[657697,657698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657775,657786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[657871,657872],"content":"<","needQuote":true,"nodes":[]},{"pos":[657899,657906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[657972,657973]},{"pos":[658028,658032],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[658090,658091],"content":"<","needQuote":true,"nodes":[]},{"pos":[658118,658125],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[658159,658160]},{"pos":[658214,658219],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[658310,658311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658463,658478],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[658542,658543],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658620,658631],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[658717,658720]},{"pos":[658754,658761],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[658794,658795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[658823,658824]},{"pos":[658879,658883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[658942,658945]},{"pos":[658979,658986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[659020,659021]},{"pos":[659075,659080],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[659139,659140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659167,659168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659624,659680],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[660175,660187],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[660248,660249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660326,660337],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660422,660423],"content":"<","needQuote":true,"nodes":[]},{"pos":[660450,660457],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660523,660524]},{"pos":[660579,660583],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[660641,660642],"content":"<","needQuote":true,"nodes":[]},{"pos":[660669,660676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[660710,660711]},{"pos":[660765,660770],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[660861,660862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661014,661029],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[661093,661094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661171,661182],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[661268,661271]},{"pos":[661305,661312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661345,661346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[661374,661375]},{"pos":[661430,661434],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[661493,661496]},{"pos":[661530,661537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661571,661572]},{"pos":[661626,661631],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[661690,661691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661718,661719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662194,662262],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[662832,662844],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[662905,662906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[662983,662994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663079,663080],"content":"<","needQuote":true,"nodes":[]},{"pos":[663107,663114],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663180,663181]},{"pos":[663236,663240],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[663298,663299],"content":"<","needQuote":true,"nodes":[]},{"pos":[663326,663333],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[663367,663368]},{"pos":[663427,663435],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[663497,663498],"content":"<","needQuote":true,"nodes":[]},{"pos":[663549,663556],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[663681,663682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663853,663868],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[663932,663933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[664010,664021],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[664107,664110]},{"pos":[664144,664151],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664184,664185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[664213,664214]},{"pos":[664269,664273],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[664332,664335]},{"pos":[664369,664376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[664410,664411]},{"pos":[664470,664478],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[664541,664544]},{"pos":[664602,664609],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[664670,664671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664698,664699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664726,664727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665247,665314],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[665880,665892],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[665953,665954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666031,666042],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[666127,666128],"content":"<","needQuote":true,"nodes":[]},{"pos":[666155,666162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666228,666229]},{"pos":[666284,666288],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[666346,666347],"content":"<","needQuote":true,"nodes":[]},{"pos":[666374,666381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666415,666416]},{"pos":[666475,666483],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[666545,666546],"content":"<","needQuote":true,"nodes":[]},{"pos":[666596,666602],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[666726,666727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666897,666912],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[666976,666977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667054,667065],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[667151,667154]},{"pos":[667188,667195],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[667228,667229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[667257,667258]},{"pos":[667313,667317],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[667376,667379]},{"pos":[667413,667420],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[667454,667455]},{"pos":[667514,667522],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[667585,667588]},{"pos":[667645,667651],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[667711,667712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667739,667740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667767,667768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668284,668350],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[668912,668924],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[668985,668986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[669063,669074],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[669159,669160],"content":"<","needQuote":true,"nodes":[]},{"pos":[669187,669194],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669260,669261]},{"pos":[669316,669320],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[669378,669379],"content":"<","needQuote":true,"nodes":[]},{"pos":[669406,669413],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669447,669448]},{"pos":[669507,669515],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[669577,669578],"content":"<","needQuote":true,"nodes":[]},{"pos":[669627,669632],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[669755,669756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669925,669940],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[670004,670005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670082,670093],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[670179,670182]},{"pos":[670216,670223],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[670256,670257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[670285,670286]},{"pos":[670341,670345],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[670404,670407]},{"pos":[670441,670448],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670482,670483]},{"pos":[670542,670550],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[670613,670616]},{"pos":[670672,670677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[670736,670737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670764,670765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[670792,670793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671306,671372],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[671934,671946],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[672007,672008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[672085,672096],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[672181,672182],"content":"<","needQuote":true,"nodes":[]},{"pos":[672209,672216],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672282,672283]},{"pos":[672338,672342],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[672400,672401],"content":"<","needQuote":true,"nodes":[]},{"pos":[672428,672435],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672469,672470]},{"pos":[672529,672537],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[672599,672600],"content":"<","needQuote":true,"nodes":[]},{"pos":[672649,672654],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[672777,672778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672947,672962],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[673026,673027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[673104,673115],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[673201,673204]},{"pos":[673238,673245],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[673278,673279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[673307,673308]},{"pos":[673363,673367],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[673426,673429]},{"pos":[673463,673470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[673504,673505]},{"pos":[673564,673572],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[673635,673638]},{"pos":[673694,673699],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[673758,673759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673786,673787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673814,673815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[674329,674396],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[674962,674974],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[675035,675036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675113,675124],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[675209,675210],"content":"<","needQuote":true,"nodes":[]},{"pos":[675237,675244],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675310,675311]},{"pos":[675366,675370],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[675428,675429],"content":"<","needQuote":true,"nodes":[]},{"pos":[675456,675463],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675497,675498]},{"pos":[675557,675565],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[675627,675628],"content":"<","needQuote":true,"nodes":[]},{"pos":[675678,675684],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[675808,675809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675979,675994],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[676058,676059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[676136,676147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[676233,676236]},{"pos":[676270,676277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[676310,676311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[676339,676340]},{"pos":[676395,676399],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[676458,676461]},{"pos":[676495,676502],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676536,676537]},{"pos":[676596,676604],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[676667,676670]},{"pos":[676727,676733],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[676793,676794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676821,676822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676849,676850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[677350,677407],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[677906,677918],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[677979,677980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678057,678068],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[678153,678154],"content":"<","needQuote":true,"nodes":[]},{"pos":[678181,678188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678254,678255]},{"pos":[678310,678314],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[678372,678373],"content":"<","needQuote":true,"nodes":[]},{"pos":[678400,678407],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678441,678442]},{"pos":[678497,678503],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[678595,678596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[678749,678764],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[678828,678829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[678906,678917],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[679003,679006]},{"pos":[679040,679047],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[679080,679081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[679109,679110]},{"pos":[679165,679169],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[679228,679231]},{"pos":[679265,679272],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679306,679307]},{"pos":[679362,679368],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[679428,679429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679456,679457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679907,679974],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[680479,680500],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[680570,680571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[680648,680659],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[680744,680745],"content":"<","needQuote":true,"nodes":[]},{"pos":[680772,680779],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680845,680846]},{"pos":[680901,680905],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[680963,680964],"content":"<","needQuote":true,"nodes":[]},{"pos":[680991,680998],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681032,681033]},{"pos":[681065,681072],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[681137,681138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681281,681305],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[681378,681379],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[681456,681467],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[681553,681556]},{"pos":[681590,681597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[681630,681631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[681659,681660]},{"pos":[681715,681719],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[681778,681781]},{"pos":[681815,681822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[681856,681857]},{"pos":[681889,681896],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[681929,681930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681957,681958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[682397,682431],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[682796,682808],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[682869,682870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682947,682958],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[683043,683044],"content":"<","needQuote":true,"nodes":[]},{"pos":[683071,683078],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683143,683144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683266,683281],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[683345,683346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683423,683434],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683520,683523]},{"pos":[683557,683564],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683597,683598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683625,683626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684007,684065],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[684568,684580],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[684641,684642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[684719,684730],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[684815,684816],"content":"<","needQuote":true,"nodes":[]},{"pos":[684843,684850],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684916,684917]},{"pos":[684972,684976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[685034,685035],"content":"<","needQuote":true,"nodes":[]},{"pos":[685062,685069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685103,685104]},{"pos":[685160,685167],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[685260,685261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685415,685430],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[685494,685495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[685572,685583],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[685669,685672]},{"pos":[685706,685713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[685746,685747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[685775,685776]},{"pos":[685831,685835],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[685894,685897]},{"pos":[685931,685938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[685972,685973]},{"pos":[686029,686036],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[686097,686098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686125,686126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[686589,686646],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[687145,687157],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[687218,687219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[687296,687307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687392,687393],"content":"<","needQuote":true,"nodes":[]},{"pos":[687420,687427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687493,687494]},{"pos":[687549,687553],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687611,687612],"content":"<","needQuote":true,"nodes":[]},{"pos":[687639,687646],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687680,687681]},{"pos":[687736,687742],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[687834,687835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[687988,688003],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[688067,688068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688145,688156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[688242,688245]},{"pos":[688279,688286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688319,688320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688348,688349]},{"pos":[688404,688408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[688467,688470]},{"pos":[688504,688511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[688545,688546]},{"pos":[688601,688607],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[688667,688668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688695,688696],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[689155,689211],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[689706,689718],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[689779,689780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[689857,689868],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[689953,689954],"content":"<","needQuote":true,"nodes":[]},{"pos":[689981,689988],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690054,690055]},{"pos":[690110,690114],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[690172,690173],"content":"<","needQuote":true,"nodes":[]},{"pos":[690200,690207],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[690241,690242]},{"pos":[690296,690301],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[690392,690393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690545,690560],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[690624,690625],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[690702,690713],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[690799,690802]},{"pos":[690836,690843],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[690876,690877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[690905,690906]},{"pos":[690961,690965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[691024,691027]},{"pos":[691061,691068],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[691102,691103]},{"pos":[691157,691162],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[691221,691222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691249,691250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[691706,691762],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[692257,692269],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[692330,692331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692408,692419],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692504,692505],"content":"<","needQuote":true,"nodes":[]},{"pos":[692532,692539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692605,692606]},{"pos":[692661,692665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692723,692724],"content":"<","needQuote":true,"nodes":[]},{"pos":[692751,692758],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692792,692793]},{"pos":[692847,692852],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[692943,692944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693096,693111],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[693175,693176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[693253,693264],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[693350,693353]},{"pos":[693387,693394],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[693427,693428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[693456,693457]},{"pos":[693512,693516],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[693575,693578]},{"pos":[693612,693619],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[693653,693654]},{"pos":[693708,693713],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[693772,693773],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693800,693801],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[694276,694344],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[694914,694926],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[694987,694988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[695065,695076],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[695161,695162],"content":"<","needQuote":true,"nodes":[]},{"pos":[695189,695196],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695262,695263]},{"pos":[695318,695322],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[695380,695381],"content":"<","needQuote":true,"nodes":[]},{"pos":[695408,695415],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[695449,695450]},{"pos":[695509,695517],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[695579,695580],"content":"<","needQuote":true,"nodes":[]},{"pos":[695631,695638],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[695763,695764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695935,695950],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[696014,696015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[696092,696103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[696189,696192]},{"pos":[696226,696233],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[696266,696267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[696295,696296]},{"pos":[696351,696355],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[696414,696417]},{"pos":[696451,696458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[696492,696493]},{"pos":[696552,696560],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[696623,696626]},{"pos":[696684,696691],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[696752,696753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696780,696781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696808,696809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[697329,697396],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[697962,697974],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[698035,698036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[698113,698124],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[698209,698210],"content":"<","needQuote":true,"nodes":[]},{"pos":[698237,698244],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698310,698311]},{"pos":[698366,698370],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698428,698429],"content":"<","needQuote":true,"nodes":[]},{"pos":[698456,698463],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698497,698498]},{"pos":[698557,698565],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[698627,698628],"content":"<","needQuote":true,"nodes":[]},{"pos":[698678,698684],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[698808,698809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[698979,698994],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[699058,699059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699136,699147],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[699233,699236]},{"pos":[699270,699277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[699310,699311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[699339,699340]},{"pos":[699395,699399],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[699458,699461]},{"pos":[699495,699502],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[699536,699537]},{"pos":[699596,699604],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[699667,699670]},{"pos":[699727,699733],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[699793,699794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699821,699822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699849,699850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[700366,700432],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[700994,701006],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[701067,701068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[701145,701156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[701241,701242],"content":"<","needQuote":true,"nodes":[]},{"pos":[701269,701276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701342,701343]},{"pos":[701398,701402],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[701460,701461],"content":"<","needQuote":true,"nodes":[]},{"pos":[701488,701495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[701529,701530]},{"pos":[701589,701597],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[701659,701660],"content":"<","needQuote":true,"nodes":[]},{"pos":[701709,701714],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[701837,701838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702007,702022],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[702086,702087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[702164,702175],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[702261,702264]},{"pos":[702298,702305],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[702338,702339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[702367,702368]},{"pos":[702423,702427],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[702486,702489]},{"pos":[702523,702530],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[702564,702565]},{"pos":[702624,702632],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[702695,702698]},{"pos":[702754,702759],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[702818,702819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702846,702847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702874,702875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[703388,703454],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[704016,704028],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[704089,704090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[704167,704178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[704263,704264],"content":"<","needQuote":true,"nodes":[]},{"pos":[704291,704298],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704364,704365]},{"pos":[704420,704424],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[704482,704483],"content":"<","needQuote":true,"nodes":[]},{"pos":[704510,704517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[704551,704552]},{"pos":[704611,704619],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[704681,704682],"content":"<","needQuote":true,"nodes":[]},{"pos":[704731,704736],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[704859,704860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705029,705044],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[705108,705109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[705186,705197],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[705283,705286]},{"pos":[705320,705327],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[705360,705361],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[705389,705390]},{"pos":[705445,705449],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[705508,705511]},{"pos":[705545,705552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[705586,705587]},{"pos":[705646,705654],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[705717,705720]},{"pos":[705776,705781],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[705840,705841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705868,705869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705896,705897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[706411,706478],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[707044,707056],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[707117,707118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[707195,707206],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[707291,707292],"content":"<","needQuote":true,"nodes":[]},{"pos":[707319,707326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707392,707393]},{"pos":[707448,707452],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[707510,707511],"content":"<","needQuote":true,"nodes":[]},{"pos":[707538,707545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[707579,707580]},{"pos":[707639,707647],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[707709,707710],"content":"<","needQuote":true,"nodes":[]},{"pos":[707760,707766],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[707890,707891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708061,708076],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[708140,708141],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[708218,708229],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[708315,708318]},{"pos":[708352,708359],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[708392,708393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[708421,708422]},{"pos":[708477,708481],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[708540,708543]},{"pos":[708577,708584],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[708618,708619]},{"pos":[708678,708686],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[708749,708752]},{"pos":[708809,708815],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[708875,708876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708903,708904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708931,708932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[709432,709489],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[709988,710000],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[710061,710062],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710139,710150],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710235,710236],"content":"<","needQuote":true,"nodes":[]},{"pos":[710263,710270],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710336,710337]},{"pos":[710392,710396],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[710454,710455],"content":"<","needQuote":true,"nodes":[]},{"pos":[710482,710489],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[710523,710524]},{"pos":[710579,710585],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[710677,710678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[710831,710846],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[710910,710911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710988,710999],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[711085,711088]},{"pos":[711122,711129],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[711162,711163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[711191,711192]},{"pos":[711247,711251],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[711310,711313]},{"pos":[711347,711354],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[711388,711389]},{"pos":[711444,711450],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[711510,711511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711538,711539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[711989,712056],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[712561,712582],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[712652,712653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[712730,712741],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[712826,712827],"content":"<","needQuote":true,"nodes":[]},{"pos":[712854,712861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[712927,712928]},{"pos":[712983,712987],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[713045,713046],"content":"<","needQuote":true,"nodes":[]},{"pos":[713073,713080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713114,713115]},{"pos":[713147,713154],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[713219,713220],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[713363,713387],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[713460,713461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[713538,713549],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[713635,713638]},{"pos":[713672,713679],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[713712,713713],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713741,713742]},{"pos":[713797,713801],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713860,713863]},{"pos":[713897,713904],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[713938,713939]},{"pos":[713971,713978],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[714011,714012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714039,714040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714469,714497],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[714812,714827],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[714891,714892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[714959,714970],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[715047,715048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715160,715178],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[715245,715246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[715313,715324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[715401,715402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715751,715816],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[716319,716341],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[716412,716413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[716490,716501],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716586,716587],"content":"<","needQuote":true,"nodes":[]},{"pos":[716614,716621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716687,716688]},{"pos":[716743,716747],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[716805,716806],"content":"<","needQuote":true,"nodes":[]},{"pos":[716833,716840],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716874,716875]},{"pos":[716907,716911],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[716973,716974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717121,717146],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[717220,717221],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717298,717309],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[717395,717398]},{"pos":[717432,717439],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[717472,717473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[717501,717502]},{"pos":[717557,717561],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[717620,717623]},{"pos":[717657,717664],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[717698,717699]},{"pos":[717731,717735],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[717765,717766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717793,717794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718300,718382],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[719038,719060],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[719131,719132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719209,719220],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[719305,719306],"content":"<","needQuote":true,"nodes":[]},{"pos":[719333,719340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719406,719407]},{"pos":[719462,719466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[719524,719525],"content":"<","needQuote":true,"nodes":[]},{"pos":[719552,719559],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719593,719594]},{"pos":[719626,719630],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[719693,719694]},{"pos":[719774,719783],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[719866,719867],"content":"<","needQuote":true,"nodes":[]},{"pos":[719894,719898],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[719960,719961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720150,720175],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[720249,720250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[720327,720338],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720424,720427]},{"pos":[720461,720468],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720501,720502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720530,720531]},{"pos":[720586,720590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[720649,720652]},{"pos":[720686,720693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[720727,720728]},{"pos":[720760,720764],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[720794,720795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720823,720824]},{"pos":[720904,720913],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[720997,721000]},{"pos":[721034,721038],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[721068,721069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721096,721097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721650,721725],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[722268,722300],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[722381,722382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[722459,722470],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[722555,722556],"content":"<","needQuote":true,"nodes":[]},{"pos":[722583,722590],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722656,722657]},{"pos":[722712,722716],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[722774,722775],"content":"<","needQuote":true,"nodes":[]},{"pos":[722802,722809],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[722843,722844]},{"pos":[722876,722880],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[722942,722943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723100,723135],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[723219,723220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723297,723308],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[723394,723397]},{"pos":[723431,723438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[723471,723472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[723500,723501]},{"pos":[723556,723560],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[723619,723622]},{"pos":[723656,723663],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[723697,723698]},{"pos":[723730,723734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[723764,723765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[723792,723793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[724339,724431],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[725127,725159],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[725240,725241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725318,725329],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[725414,725415],"content":"<","needQuote":true,"nodes":[]},{"pos":[725442,725449],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[725515,725516]},{"pos":[725571,725575],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[725633,725634],"content":"<","needQuote":true,"nodes":[]},{"pos":[725661,725668],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[725702,725703]},{"pos":[725735,725739],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[725802,725803]},{"pos":[725883,725892],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[725975,725976],"content":"<","needQuote":true,"nodes":[]},{"pos":[726003,726007],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726069,726070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726269,726304],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[726388,726389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[726466,726477],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[726563,726566]},{"pos":[726600,726607],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[726640,726641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726669,726670]},{"pos":[726725,726729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726788,726791]},{"pos":[726825,726832],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[726866,726867]},{"pos":[726899,726903],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726933,726934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726962,726963]},{"pos":[727043,727052],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[727136,727139]},{"pos":[727173,727177],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[727207,727208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727235,727236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727788,727826],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[728207,728223],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[728288,728289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728366,728377],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[728462,728463],"content":"<","needQuote":true,"nodes":[]},{"pos":[728490,728497],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[728562,728563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[728689,728708],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[728776,728777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[728854,728865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[728951,728954]},{"pos":[728988,728995],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[729028,729029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729056,729057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[729442,729512],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[730029,730053],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[730126,730127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[730204,730215],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[730300,730301],"content":"<","needQuote":true,"nodes":[]},{"pos":[730328,730335],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730401,730402]},{"pos":[730457,730461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730519,730520],"content":"<","needQuote":true,"nodes":[]},{"pos":[730547,730554],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[730588,730589]},{"pos":[730621,730628],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[730693,730694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[730840,730867],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[730943,730944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[731021,731032],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[731118,731121]},{"pos":[731155,731162],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[731195,731196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731224,731225]},{"pos":[731280,731284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[731343,731346]},{"pos":[731380,731387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[731421,731422]},{"pos":[731454,731461],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[731494,731495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731522,731523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732008,732085],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[732650,732674],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[732747,732748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[732825,732836],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[732921,732922],"content":"<","needQuote":true,"nodes":[]},{"pos":[732949,732956],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733022,733023]},{"pos":[733078,733082],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[733140,733141],"content":"<","needQuote":true,"nodes":[]},{"pos":[733168,733175],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[733209,733210]},{"pos":[733264,733269],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[733329,733330]},{"pos":[733362,733369],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[733434,733435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[733594,733621],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[733697,733698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[733775,733786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[733872,733875]},{"pos":[733909,733916],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[733949,733950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[733978,733979]},{"pos":[734034,734038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[734097,734100]},{"pos":[734134,734141],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[734175,734176]},{"pos":[734230,734235],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[734295,734296]},{"pos":[734328,734335],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[734368,734369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734396,734397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734940,735027],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[735699,735727],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[735804,735805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[735882,735893],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[735978,735979],"content":"<","needQuote":true,"nodes":[]},{"pos":[736006,736013],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736079,736080]},{"pos":[736135,736139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[736197,736198],"content":"<","needQuote":true,"nodes":[]},{"pos":[736225,736232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736266,736267]},{"pos":[736349,736360],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[736445,736446],"content":"<","needQuote":true,"nodes":[]},{"pos":[736473,736480],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[736577,736578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736768,736799],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[736879,736880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736957,736968],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[737054,737057]},{"pos":[737091,737098],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[737131,737132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[737160,737161]},{"pos":[737216,737220],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[737279,737282]},{"pos":[737316,737323],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737357,737358]},{"pos":[737440,737451],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[737537,737540]},{"pos":[737574,737581],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[737614,737615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737642,737643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737670,737671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738281,738375],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[739095,739123],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[739200,739201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739278,739289],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[739374,739375],"content":"<","needQuote":true,"nodes":[]},{"pos":[739402,739409],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739475,739476]},{"pos":[739531,739535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[739593,739594],"content":"<","needQuote":true,"nodes":[]},{"pos":[739621,739628],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[739662,739663]},{"pos":[739717,739722],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[739782,739783]},{"pos":[739865,739876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[739961,739962],"content":"<","needQuote":true,"nodes":[]},{"pos":[739989,739996],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[740093,740094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[740297,740328],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[740408,740409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740486,740497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[740583,740586]},{"pos":[740620,740627],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[740660,740661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[740689,740690]},{"pos":[740745,740749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[740808,740811]},{"pos":[740845,740852],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740886,740887]},{"pos":[740941,740946],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[741006,741007]},{"pos":[741089,741100],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741186,741189]},{"pos":[741223,741230],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[741263,741264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741291,741292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741319,741320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741969,742110],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[742989,743030],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[743120,743121],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743198,743209],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743294,743295],"content":"<","needQuote":true,"nodes":[]},{"pos":[743322,743329],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743395,743396]},{"pos":[743451,743455],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[743513,743514],"content":"<","needQuote":true,"nodes":[]},{"pos":[743541,743548],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[743582,743583]},{"pos":[743665,743676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743761,743762],"content":"<","needQuote":true,"nodes":[]},{"pos":[743789,743800],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[743902,743903]},{"pos":[743958,743962],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[744020,744021],"content":"<","needQuote":true,"nodes":[]},{"pos":[744048,744055],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[744089,744090]},{"pos":[744122,744133],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[744171,744172]},{"pos":[744204,744211],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[744276,744277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744492,744536],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[744629,744630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744707,744718],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[744804,744807]},{"pos":[744841,744848],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[744881,744882],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[744910,744911]},{"pos":[744966,744970],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[745029,745032]},{"pos":[745066,745073],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745107,745108]},{"pos":[745190,745201],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[745287,745290]},{"pos":[745324,745335],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[745372,745373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745400,745401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[745429,745430]},{"pos":[745485,745489],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[745548,745551]},{"pos":[745585,745592],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745626,745627]},{"pos":[745659,745670],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[745708,745709]},{"pos":[745741,745748],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[745781,745782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745809,745810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746581,746729],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[747656,747697],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[747787,747788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747865,747876],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[747961,747962],"content":"<","needQuote":true,"nodes":[]},{"pos":[747989,747996],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748062,748063]},{"pos":[748118,748122],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748180,748181],"content":"<","needQuote":true,"nodes":[]},{"pos":[748208,748215],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748249,748250]},{"pos":[748304,748309],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[748369,748370]},{"pos":[748452,748463],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[748548,748549],"content":"<","needQuote":true,"nodes":[]},{"pos":[748576,748587],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[748689,748690]},{"pos":[748745,748749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[748807,748808],"content":"<","needQuote":true,"nodes":[]},{"pos":[748835,748842],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[748876,748877]},{"pos":[748909,748920],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[748958,748959]},{"pos":[748991,748998],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[749063,749064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749292,749336],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[749429,749430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749507,749518],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[749604,749607]},{"pos":[749641,749648],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[749681,749682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[749710,749711]},{"pos":[749766,749770],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[749829,749832]},{"pos":[749866,749873],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[749907,749908]},{"pos":[749962,749967],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[750027,750028]},{"pos":[750110,750121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[750207,750210]},{"pos":[750244,750255],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[750292,750293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750320,750321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750349,750350]},{"pos":[750405,750409],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[750468,750471]},{"pos":[750505,750512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[750546,750547]},{"pos":[750579,750590],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[750628,750629]},{"pos":[750661,750668],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[750701,750702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750729,750730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[751476,751542],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[752117,752139],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[752210,752211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752288,752299],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752384,752385],"content":"<","needQuote":true,"nodes":[]},{"pos":[752412,752419],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752485,752486]},{"pos":[752568,752579],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[752664,752665],"content":"<","needQuote":true,"nodes":[]},{"pos":[752692,752699],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[752764,752765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752941,752966],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[753040,753041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[753118,753129],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753215,753218]},{"pos":[753252,753259],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753292,753293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[753321,753322]},{"pos":[753404,753415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[753501,753504]},{"pos":[753538,753545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[753578,753579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753606,753607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754181,754275],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[755044,755066],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[755137,755138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755215,755226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755311,755312],"content":"<","needQuote":true,"nodes":[]},{"pos":[755339,755346],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755412,755413]},{"pos":[755495,755506],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[755591,755592],"content":"<","needQuote":true,"nodes":[]},{"pos":[755619,755626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755692,755693]},{"pos":[755781,755798],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[755889,755890],"content":"<","needQuote":true,"nodes":[]},{"pos":[755917,755924],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[755989,755990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756216,756241],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[756315,756316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756393,756404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756490,756493]},{"pos":[756527,756534],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756567,756568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756596,756597]},{"pos":[756679,756690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[756776,756779]},{"pos":[756813,756820],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[756853,756854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[756882,756883]},{"pos":[756971,756988],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[757080,757083]},{"pos":[757117,757124],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757157,757158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757185,757186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757768,757805],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[758182,758197],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[758261,758262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758339,758350],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[758435,758436],"content":"<","needQuote":true,"nodes":[]},{"pos":[758463,758470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[758535,758536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758661,758679],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[758746,758747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[758824,758835],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[758921,758924]},{"pos":[758958,758965],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[758998,758999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759026,759027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[759420,759481],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[759996,760011],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[760075,760076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760153,760164],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[760249,760250],"content":"<","needQuote":true,"nodes":[]},{"pos":[760277,760284],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760350,760351]},{"pos":[760406,760410],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[760468,760469],"content":"<","needQuote":true,"nodes":[]},{"pos":[760496,760503],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760537,760538]},{"pos":[760594,760601],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[760694,760695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760852,760870],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[760937,760938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[761015,761026],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[761112,761115]},{"pos":[761149,761156],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[761189,761190],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[761218,761219]},{"pos":[761274,761278],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[761337,761340]},{"pos":[761374,761381],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[761415,761416]},{"pos":[761472,761479],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[761540,761541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761568,761569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762022,762068],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[762481,762505],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[762578,762579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762656,762667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762752,762753],"content":"<","needQuote":true,"nodes":[]},{"pos":[762780,762787],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[762852,762853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[762987,763014],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[763090,763091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[763168,763179],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[763265,763268]},{"pos":[763302,763309],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763342,763343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763370,763371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763800,763870],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[764421,764445],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[764518,764519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[764596,764607],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[764692,764693],"content":"<","needQuote":true,"nodes":[]},{"pos":[764720,764727],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764793,764794]},{"pos":[764849,764853],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[764911,764912],"content":"<","needQuote":true,"nodes":[]},{"pos":[764939,764946],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[764980,764981]},{"pos":[765037,765044],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[765137,765138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[765304,765331],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[765407,765408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765485,765496],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[765582,765585]},{"pos":[765619,765626],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[765659,765660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[765688,765689]},{"pos":[765744,765748],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[765807,765810]},{"pos":[765844,765851],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765885,765886]},{"pos":[765942,765949],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[766010,766011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766038,766039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766521,766563],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[766980,766993],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[767055,767056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767133,767144],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[767229,767230],"content":"<","needQuote":true,"nodes":[]},{"pos":[767257,767264],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[767330,767331]},{"pos":[767385,767390],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[767449,767450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767586,767602],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[767667,767668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[767745,767756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[767842,767845]},{"pos":[767879,767886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[767919,767920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[767948,767949]},{"pos":[768003,768008],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[768067,768068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[768485,768549],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[769076,769094],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[769161,769162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769239,769250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[769335,769336],"content":"<","needQuote":true,"nodes":[]},{"pos":[769363,769370],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769436,769437]},{"pos":[769492,769496],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[769554,769555],"content":"<","needQuote":true,"nodes":[]},{"pos":[769582,769589],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769623,769624]},{"pos":[769680,769687],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[769780,769781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769941,769962],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[770032,770033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[770110,770121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[770207,770210]},{"pos":[770244,770251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[770284,770285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[770313,770314]},{"pos":[770369,770373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[770432,770435]},{"pos":[770469,770476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[770510,770511]},{"pos":[770567,770574],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[770635,770636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770663,770664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[771165,771236],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[771811,771829],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[771896,771897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771974,771985],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[772070,772071],"content":"<","needQuote":true,"nodes":[]},{"pos":[772098,772105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772171,772172]},{"pos":[772227,772231],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[772289,772290],"content":"<","needQuote":true,"nodes":[]},{"pos":[772317,772324],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772358,772359]},{"pos":[772413,772418],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[772478,772479]},{"pos":[772535,772542],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[772635,772636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772809,772830],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[772900,772901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[772978,772989],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[773075,773078]},{"pos":[773112,773119],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[773152,773153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[773181,773182]},{"pos":[773237,773241],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[773300,773303]},{"pos":[773337,773344],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[773378,773379]},{"pos":[773433,773438],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[773498,773499]},{"pos":[773555,773562],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[773623,773624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773651,773652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[774161,774219],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[774722,774734],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[774795,774796],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774873,774884],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[774969,774970],"content":"<","needQuote":true,"nodes":[]},{"pos":[774997,775004],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775070,775071]},{"pos":[775126,775130],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[775188,775189],"content":"<","needQuote":true,"nodes":[]},{"pos":[775216,775223],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775257,775258]},{"pos":[775314,775321],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[775414,775415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775569,775584],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[775648,775649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[775726,775737],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[775823,775826]},{"pos":[775860,775867],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[775900,775901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[775929,775930]},{"pos":[775985,775989],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[776048,776051]},{"pos":[776085,776092],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[776126,776127]},{"pos":[776183,776190],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[776251,776252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776279,776280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776743,776800],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[777299,777311],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[777372,777373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777450,777461],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[777546,777547],"content":"<","needQuote":true,"nodes":[]},{"pos":[777574,777581],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777647,777648]},{"pos":[777703,777707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[777765,777766],"content":"<","needQuote":true,"nodes":[]},{"pos":[777793,777800],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777834,777835]},{"pos":[777890,777896],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[777988,777989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778142,778157],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[778221,778222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[778299,778310],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[778396,778399]},{"pos":[778433,778440],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[778473,778474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[778502,778503]},{"pos":[778558,778562],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[778621,778624]},{"pos":[778658,778665],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778699,778700]},{"pos":[778755,778761],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[778821,778822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778849,778850],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779309,779365],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[779860,779872],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[779933,779934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[780011,780022],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[780107,780108],"content":"<","needQuote":true,"nodes":[]},{"pos":[780135,780142],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780208,780209]},{"pos":[780264,780268],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[780326,780327],"content":"<","needQuote":true,"nodes":[]},{"pos":[780354,780361],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[780395,780396]},{"pos":[780450,780455],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[780546,780547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780699,780714],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[780778,780779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[780856,780867],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[780953,780956]},{"pos":[780990,780997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[781030,781031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[781059,781060]},{"pos":[781115,781119],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[781178,781181]},{"pos":[781215,781222],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781256,781257]},{"pos":[781311,781316],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[781375,781376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781403,781404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781860,781916],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[782411,782423],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[782484,782485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[782562,782573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[782658,782659],"content":"<","needQuote":true,"nodes":[]},{"pos":[782686,782693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782759,782760]},{"pos":[782815,782819],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[782877,782878],"content":"<","needQuote":true,"nodes":[]},{"pos":[782905,782912],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782946,782947]},{"pos":[783001,783006],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[783097,783098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783250,783265],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[783329,783330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[783407,783418],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[783504,783507]},{"pos":[783541,783548],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[783581,783582],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[783610,783611]},{"pos":[783666,783670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[783729,783732]},{"pos":[783766,783773],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[783807,783808]},{"pos":[783862,783867],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[783926,783927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[783954,783955],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784430,784498],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[785068,785080],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[785141,785142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[785219,785230],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[785315,785316],"content":"<","needQuote":true,"nodes":[]},{"pos":[785343,785350],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785416,785417]},{"pos":[785472,785476],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[785534,785535],"content":"<","needQuote":true,"nodes":[]},{"pos":[785562,785569],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[785603,785604]},{"pos":[785663,785671],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[785733,785734],"content":"<","needQuote":true,"nodes":[]},{"pos":[785785,785792],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[785917,785918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786089,786104],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[786168,786169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[786246,786257],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[786343,786346]},{"pos":[786380,786387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[786420,786421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[786449,786450]},{"pos":[786505,786509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[786568,786571]},{"pos":[786605,786612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786646,786647]},{"pos":[786706,786714],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[786777,786780]},{"pos":[786838,786845],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[786906,786907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786934,786935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786962,786963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[787483,787550],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[788116,788128],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[788189,788190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788267,788278],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[788363,788364],"content":"<","needQuote":true,"nodes":[]},{"pos":[788391,788398],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788464,788465]},{"pos":[788520,788524],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[788582,788583],"content":"<","needQuote":true,"nodes":[]},{"pos":[788610,788617],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788651,788652]},{"pos":[788711,788719],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[788781,788782],"content":"<","needQuote":true,"nodes":[]},{"pos":[788832,788838],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[788962,788963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789133,789148],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[789212,789213],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789290,789301],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[789387,789390]},{"pos":[789424,789431],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[789464,789465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[789493,789494]},{"pos":[789549,789553],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[789612,789615]},{"pos":[789649,789656],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[789690,789691]},{"pos":[789750,789758],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[789821,789824]},{"pos":[789881,789887],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[789947,789948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789975,789976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790003,790004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790520,790586],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[791148,791160],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[791221,791222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[791299,791310],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[791395,791396],"content":"<","needQuote":true,"nodes":[]},{"pos":[791423,791430],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791496,791497]},{"pos":[791552,791556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[791614,791615],"content":"<","needQuote":true,"nodes":[]},{"pos":[791642,791649],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791683,791684]},{"pos":[791743,791751],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[791813,791814],"content":"<","needQuote":true,"nodes":[]},{"pos":[791863,791868],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[791991,791992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792161,792176],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[792240,792241],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792318,792329],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[792415,792418]},{"pos":[792452,792459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[792492,792493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[792521,792522]},{"pos":[792577,792581],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[792640,792643]},{"pos":[792677,792684],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792718,792719]},{"pos":[792778,792786],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[792849,792852]},{"pos":[792908,792913],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[792972,792973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793000,793001],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793028,793029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793542,793608],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[794170,794182],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[794243,794244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[794321,794332],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[794417,794418],"content":"<","needQuote":true,"nodes":[]},{"pos":[794445,794452],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794518,794519]},{"pos":[794574,794578],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[794636,794637],"content":"<","needQuote":true,"nodes":[]},{"pos":[794664,794671],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794705,794706]},{"pos":[794765,794773],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[794835,794836],"content":"<","needQuote":true,"nodes":[]},{"pos":[794885,794890],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[795013,795014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795183,795198],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[795262,795263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795340,795351],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[795437,795440]},{"pos":[795474,795481],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[795514,795515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[795543,795544]},{"pos":[795599,795603],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[795662,795665]},{"pos":[795699,795706],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795740,795741]},{"pos":[795800,795808],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[795871,795874]},{"pos":[795930,795935],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[795994,795995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796022,796023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796050,796051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796565,796632],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[797198,797210],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[797271,797272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[797349,797360],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[797445,797446],"content":"<","needQuote":true,"nodes":[]},{"pos":[797473,797480],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797546,797547]},{"pos":[797602,797606],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[797664,797665],"content":"<","needQuote":true,"nodes":[]},{"pos":[797692,797699],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797733,797734]},{"pos":[797793,797801],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[797863,797864],"content":"<","needQuote":true,"nodes":[]},{"pos":[797914,797920],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[798044,798045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798215,798230],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[798294,798295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798372,798383],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[798469,798472]},{"pos":[798506,798513],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[798546,798547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[798575,798576]},{"pos":[798631,798635],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[798694,798697]},{"pos":[798731,798738],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798772,798773]},{"pos":[798832,798840],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[798903,798906]},{"pos":[798963,798969],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[799029,799030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799057,799058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799085,799086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799586,799643],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[800142,800154],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[800215,800216],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[800293,800304],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[800389,800390],"content":"<","needQuote":true,"nodes":[]},{"pos":[800417,800424],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800490,800491]},{"pos":[800546,800550],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[800608,800609],"content":"<","needQuote":true,"nodes":[]},{"pos":[800636,800643],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800677,800678]},{"pos":[800733,800739],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[800831,800832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[800985,801000],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[801064,801065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801142,801153],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[801239,801242]},{"pos":[801276,801283],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[801316,801317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[801345,801346]},{"pos":[801401,801405],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[801464,801467]},{"pos":[801501,801508],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801542,801543]},{"pos":[801598,801604],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[801664,801665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[801692,801693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802136,802178],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[802595,802608],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[802670,802671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[802748,802759],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[802844,802845],"content":"<","needQuote":true,"nodes":[]},{"pos":[802872,802879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[802945,802946]},{"pos":[803000,803005],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[803064,803065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[803201,803217],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[803282,803283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[803360,803371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[803457,803460]},{"pos":[803494,803501],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[803534,803535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[803563,803564]},{"pos":[803618,803623],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[803682,803683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[804100,804164],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[804691,804709],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[804776,804777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804854,804865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[804950,804951],"content":"<","needQuote":true,"nodes":[]},{"pos":[804978,804985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805051,805052]},{"pos":[805107,805111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[805169,805170],"content":"<","needQuote":true,"nodes":[]},{"pos":[805197,805204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805238,805239]},{"pos":[805295,805302],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[805395,805396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805556,805577],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[805647,805648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[805725,805736],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[805822,805825]},{"pos":[805859,805866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[805899,805900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[805928,805929]},{"pos":[805984,805988],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[806047,806050]},{"pos":[806084,806091],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[806125,806126]},{"pos":[806182,806189],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[806250,806251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806278,806279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[806780,806851],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[807426,807444],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[807511,807512],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807589,807600],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[807685,807686],"content":"<","needQuote":true,"nodes":[]},{"pos":[807713,807720],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807786,807787]},{"pos":[807842,807846],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[807904,807905],"content":"<","needQuote":true,"nodes":[]},{"pos":[807932,807939],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807973,807974]},{"pos":[808028,808033],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[808093,808094]},{"pos":[808150,808157],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[808250,808251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808424,808445],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[808515,808516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[808593,808604],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[808690,808693]},{"pos":[808727,808734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[808767,808768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[808796,808797]},{"pos":[808852,808856],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[808915,808918]},{"pos":[808952,808959],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[808993,808994]},{"pos":[809048,809053],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[809113,809114]},{"pos":[809170,809177],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[809238,809239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809266,809267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809748,809786],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[810167,810183],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[810248,810249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810326,810337],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[810422,810423],"content":"<","needQuote":true,"nodes":[]},{"pos":[810450,810457],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810522,810523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810649,810668],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[810736,810737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[810814,810825],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[810911,810914]},{"pos":[810948,810955],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810988,810989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811016,811017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811408,811478],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[812001,812028],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[812104,812105],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812182,812193],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[812278,812279],"content":"<","needQuote":true,"nodes":[]},{"pos":[812306,812313],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812379,812380]},{"pos":[812435,812439],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[812497,812498],"content":"<","needQuote":true,"nodes":[]},{"pos":[812525,812532],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[812566,812567]},{"pos":[812599,812603],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[812665,812666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812818,812848],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[812927,812928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[813005,813016],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[813102,813105]},{"pos":[813139,813146],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813179,813180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813208,813209]},{"pos":[813264,813268],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[813327,813330]},{"pos":[813364,813371],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813405,813406]},{"pos":[813438,813442],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[813472,813473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813500,813501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814035,814130],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[814838,814865],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[814941,814942],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815019,815030],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815115,815116],"content":"<","needQuote":true,"nodes":[]},{"pos":[815143,815150],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815216,815217]},{"pos":[815272,815276],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[815334,815335],"content":"<","needQuote":true,"nodes":[]},{"pos":[815362,815369],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815403,815404]},{"pos":[815436,815440],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[815503,815504]},{"pos":[815592,815609],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[815700,815701],"content":"<","needQuote":true,"nodes":[]},{"pos":[815728,815732],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[815794,815795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[815997,816027],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[816106,816107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816184,816195],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[816281,816284]},{"pos":[816318,816325],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[816358,816359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816387,816388]},{"pos":[816443,816447],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[816506,816509]},{"pos":[816543,816550],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[816584,816585]},{"pos":[816617,816621],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[816651,816652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816680,816681]},{"pos":[816769,816786],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[816878,816881]},{"pos":[816915,816919],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[816949,816950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816977,816978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817586,817691],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[818360,818397],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[818483,818484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[818561,818572],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[818657,818658],"content":"<","needQuote":true,"nodes":[]},{"pos":[818685,818692],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818758,818759]},{"pos":[818814,818818],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[818876,818877],"content":"<","needQuote":true,"nodes":[]},{"pos":[818904,818911],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[818945,818946]},{"pos":[818978,818982],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[819045,819046]},{"pos":[819101,819105],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819163,819164],"content":"<","needQuote":true,"nodes":[]},{"pos":[819191,819198],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819232,819233]},{"pos":[819265,819273],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[819339,819340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[819513,819553],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[819642,819643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819720,819731],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[819817,819820]},{"pos":[819854,819861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819894,819895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[819923,819924]},{"pos":[819979,819983],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820042,820045]},{"pos":[820079,820086],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820120,820121]},{"pos":[820153,820157],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[820187,820188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[820216,820217]},{"pos":[820272,820276],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820335,820338]},{"pos":[820372,820379],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820413,820414]},{"pos":[820446,820454],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[820488,820489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820516,820517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[821166,821296],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[822150,822187],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[822273,822274],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822351,822362],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[822447,822448],"content":"<","needQuote":true,"nodes":[]},{"pos":[822475,822482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822548,822549]},{"pos":[822604,822608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822666,822667],"content":"<","needQuote":true,"nodes":[]},{"pos":[822694,822701],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822735,822736]},{"pos":[822768,822772],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[822835,822836]},{"pos":[822891,822895],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822953,822954],"content":"<","needQuote":true,"nodes":[]},{"pos":[822981,822988],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[823022,823023]},{"pos":[823055,823063],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[823130,823131]},{"pos":[823219,823236],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[823327,823328],"content":"<","needQuote":true,"nodes":[]},{"pos":[823355,823359],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[823421,823422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823645,823685],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[823774,823775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[823852,823863],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[823949,823952]},{"pos":[823986,823993],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[824026,824027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824055,824056]},{"pos":[824111,824115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[824174,824177]},{"pos":[824211,824218],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824252,824253]},{"pos":[824285,824289],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[824319,824320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824348,824349]},{"pos":[824404,824408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[824467,824470]},{"pos":[824504,824511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[824545,824546]},{"pos":[824578,824586],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[824620,824621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[824649,824650]},{"pos":[824738,824755],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[824847,824850]},{"pos":[824884,824888],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[824918,824919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824946,824947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825601,825638],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[826015,826030],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[826094,826095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826172,826183],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[826268,826269],"content":"<","needQuote":true,"nodes":[]},{"pos":[826296,826303],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[826368,826369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826494,826512],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[826579,826580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826657,826668],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[826754,826757]},{"pos":[826791,826798],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[826831,826832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[826859,826860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827244,827310],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[827817,827840],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[827912,827913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[827990,828001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[828086,828087],"content":"<","needQuote":true,"nodes":[]},{"pos":[828114,828121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828187,828188]},{"pos":[828243,828247],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[828305,828306],"content":"<","needQuote":true,"nodes":[]},{"pos":[828333,828340],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[828374,828375]},{"pos":[828407,828411],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[828473,828474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828622,828648],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[828723,828724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[828801,828812],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[828898,828901]},{"pos":[828935,828942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[828975,828976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[829004,829005]},{"pos":[829060,829064],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[829123,829126]},{"pos":[829160,829167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829201,829202]},{"pos":[829234,829238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[829268,829269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829296,829297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829815,829906],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[830598,830621],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[830693,830694],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830771,830782],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[830867,830868],"content":"<","needQuote":true,"nodes":[]},{"pos":[830895,830902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830968,830969]},{"pos":[831024,831028],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[831086,831087],"content":"<","needQuote":true,"nodes":[]},{"pos":[831114,831121],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[831155,831156]},{"pos":[831188,831192],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[831255,831256]},{"pos":[831344,831361],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[831452,831453],"content":"<","needQuote":true,"nodes":[]},{"pos":[831480,831484],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[831546,831547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831745,831771],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[831846,831847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[831924,831935],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[832021,832024]},{"pos":[832058,832065],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[832098,832099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[832127,832128]},{"pos":[832183,832187],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[832246,832249]},{"pos":[832283,832290],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832324,832325]},{"pos":[832357,832361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832391,832392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[832420,832421]},{"pos":[832509,832526],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[832618,832621]},{"pos":[832655,832659],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[832689,832690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[832717,832718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833310,833411],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[834064,834097],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[834179,834180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[834257,834268],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[834353,834354],"content":"<","needQuote":true,"nodes":[]},{"pos":[834381,834388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834454,834455]},{"pos":[834510,834514],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[834572,834573],"content":"<","needQuote":true,"nodes":[]},{"pos":[834600,834607],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834641,834642]},{"pos":[834674,834678],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[834741,834742]},{"pos":[834797,834801],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[834859,834860],"content":"<","needQuote":true,"nodes":[]},{"pos":[834887,834894],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[834928,834929]},{"pos":[834961,834969],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[835035,835036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[835205,835241],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[835326,835327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835404,835415],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[835501,835504]},{"pos":[835538,835545],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[835578,835579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[835607,835608]},{"pos":[835663,835667],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[835726,835729]},{"pos":[835763,835770],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835804,835805]},{"pos":[835837,835841],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[835871,835872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[835900,835901]},{"pos":[835956,835960],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[836019,836022]},{"pos":[836056,836063],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836097,836098]},{"pos":[836130,836138],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[836172,836173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836200,836201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836834,836960],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[837798,837831],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[837913,837914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[837991,838002],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[838087,838088],"content":"<","needQuote":true,"nodes":[]},{"pos":[838115,838122],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838188,838189]},{"pos":[838244,838248],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838306,838307],"content":"<","needQuote":true,"nodes":[]},{"pos":[838334,838341],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838375,838376]},{"pos":[838408,838412],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[838475,838476]},{"pos":[838531,838535],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[838593,838594],"content":"<","needQuote":true,"nodes":[]},{"pos":[838621,838628],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[838662,838663]},{"pos":[838695,838703],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[838770,838771]},{"pos":[838859,838876],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[838967,838968],"content":"<","needQuote":true,"nodes":[]},{"pos":[838995,838999],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839061,839062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[839281,839317],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[839402,839403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839480,839491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[839577,839580]},{"pos":[839614,839621],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[839654,839655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839683,839684]},{"pos":[839739,839743],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[839802,839805]},{"pos":[839839,839846],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839880,839881]},{"pos":[839913,839917],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[839947,839948],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[839976,839977]},{"pos":[840032,840036],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[840095,840098]},{"pos":[840132,840139],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[840173,840174]},{"pos":[840206,840214],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[840248,840249],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[840277,840278]},{"pos":[840366,840383],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[840475,840478]},{"pos":[840512,840516],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[840546,840547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840574,840575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841260,841318],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[841861,841875],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[841938,841939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842016,842027],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[842112,842113],"content":"<","needQuote":true,"nodes":[]},{"pos":[842140,842147],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842213,842214]},{"pos":[842296,842307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[842392,842393],"content":"<","needQuote":true,"nodes":[]},{"pos":[842420,842427],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842492,842493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842661,842678],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[842744,842745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[842822,842833],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[842919,842922]},{"pos":[842956,842963],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[842996,842997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[843025,843026]},{"pos":[843108,843119],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[843205,843208]},{"pos":[843242,843249],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[843282,843283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843310,843311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[843853,843939],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[844676,844690],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[844753,844754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844831,844842],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[844927,844928],"content":"<","needQuote":true,"nodes":[]},{"pos":[844955,844962],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845028,845029]},{"pos":[845111,845122],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[845207,845208],"content":"<","needQuote":true,"nodes":[]},{"pos":[845235,845242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845308,845309]},{"pos":[845397,845414],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[845505,845506],"content":"<","needQuote":true,"nodes":[]},{"pos":[845533,845540],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[845605,845606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845824,845841],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[845907,845908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845985,845996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846082,846085]},{"pos":[846119,846126],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846159,846160],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846188,846189]},{"pos":[846271,846282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846368,846371]},{"pos":[846405,846412],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846445,846446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846474,846475]},{"pos":[846563,846580],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[846672,846675]},{"pos":[846709,846716],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846749,846750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846777,846778],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847367,847427],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[847938,847952],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[848015,848016],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848093,848104],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[848189,848190],"content":"<","needQuote":true,"nodes":[]},{"pos":[848217,848224],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848290,848291]},{"pos":[848346,848350],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[848408,848409],"content":"<","needQuote":true,"nodes":[]},{"pos":[848436,848443],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848477,848478]},{"pos":[848534,848541],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[848634,848635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[848791,848808],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[848874,848875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848952,848963],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[849049,849052]},{"pos":[849086,849093],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849126,849127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[849155,849156]},{"pos":[849211,849215],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[849274,849277]},{"pos":[849311,849318],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[849352,849353]},{"pos":[849409,849416],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[849477,849478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849505,849506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849991,850058],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[850617,850631],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[850694,850695],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[850772,850783],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[850868,850869],"content":"<","needQuote":true,"nodes":[]},{"pos":[850896,850903],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[850969,850970]},{"pos":[851025,851029],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[851087,851088],"content":"<","needQuote":true,"nodes":[]},{"pos":[851115,851122],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851156,851157]},{"pos":[851211,851216],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[851276,851277]},{"pos":[851333,851340],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[851433,851434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[851603,851620],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[851686,851687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851764,851775],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[851861,851864]},{"pos":[851898,851905],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[851938,851939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[851967,851968]},{"pos":[852023,852027],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[852086,852089]},{"pos":[852123,852130],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852164,852165]},{"pos":[852219,852224],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[852284,852285]},{"pos":[852341,852348],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[852409,852410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852437,852438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852972,853076],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[853800,853829],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[853907,853908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[853985,853996],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854081,854082],"content":"<","needQuote":true,"nodes":[]},{"pos":[854109,854115],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[854180,854181]},{"pos":[854263,854274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854359,854360],"content":"<","needQuote":true,"nodes":[]},{"pos":[854387,854394],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[854460,854461]},{"pos":[854516,854520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[854578,854579],"content":"<","needQuote":true,"nodes":[]},{"pos":[854606,854612],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[854645,854646]},{"pos":[854678,854685],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[854719,854720]},{"pos":[854752,854759],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[854824,854825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855016,855048],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[855129,855130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855207,855218],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855304,855307]},{"pos":[855341,855347],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[855379,855380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[855408,855409]},{"pos":[855491,855502],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855588,855591]},{"pos":[855625,855632],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[855665,855666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[855694,855695]},{"pos":[855750,855754],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[855813,855816]},{"pos":[855850,855856],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[855889,855890]},{"pos":[855922,855929],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[855963,855964]},{"pos":[855996,856003],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[856036,856037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856064,856065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[856567,856578],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[856946,856951],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[857506,857511],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[857669,857674],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[858241,858251],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[858833,858840],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[859009,859019],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[859446,859473],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[860008,860040],"content":"Add(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Add(UnicastIPAddressInformation)","pos":[0,32]}]},{"pos":[860476,860479],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[860627,860628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860722,860749],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[860832,860833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860929,860932],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[861083,861084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[861178,861205],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[861288,861289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861752,861758],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[861970,861973],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[862044,862045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862072,862073],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[862100,862101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862197,862200],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[862274,862275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[862302,862303],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[862330,862331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862782,862789],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[863113,863118],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[863268,863269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863296,863297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863391,863396],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[863549,863550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863577,863578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863932,863939],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[864151,864156],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[864229,864230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864257,864258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864352,864357],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[864433,864434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864461,864462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864982,865019],"content":"Contains(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Contains(UnicastIPAddressInformation)","pos":[0,37]}]},{"pos":[865470,865478],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[865631,865632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[865726,865753],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[865836,865837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[865938,865946],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[866102,866103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[866197,866224],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[866307,866308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866791,866802],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[867029,867037],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[867113,867114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867141,867142],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[867169,867170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867271,867279],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[867358,867359],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[867386,867387],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[867414,867415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867976,868020],"content":"CopyTo(UnicastIPAddressInformation[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(UnicastIPAddressInformation[], Int32)","pos":[0,44]}]},{"pos":[868568,868574],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[868725,868726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[868820,868847],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":"[]","pos":[868931,868933]},{"content":",","pos":[868965,868966]},{"pos":[869020,869025],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[869084,869085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869199,869205],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[869359,869360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869454,869481],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[869564,869566],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[869595,869596]},{"pos":[869650,869655],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[869714,869715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870211,870240],"content":"UnicastIPAddressInformation[]","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation[]","pos":[0,29]}]},{"pos":[870521,870548],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"content":"[]","pos":[870632,870634]},{"pos":[870743,870770],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[870853,870855],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[871069,871087],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[871385,871391],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[871465,871466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871493,871494],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[871522,871524]},{"content":",","pos":[871556,871557]},{"pos":[871611,871616],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[871675,871676],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871790,871796],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[871873,871874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871901,871902],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[871929,871931],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[871960,871961]},{"pos":[872015,872020],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[872079,872080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872589,872604],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[872952,872965],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[873123,873124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873151,873152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873254,873267],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[873428,873429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873456,873457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873958,873998],"content":"IEnumerator<UnicastIPAddressInformation>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;UnicastIPAddressInformation&gt;","pos":[0,40],"source":"IEnumerator<UnicastIPAddressInformation>"}]},{"pos":[874355,874366],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[874451,874452],"content":"<","needQuote":true,"nodes":[]},{"pos":[874546,874573],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[874749,874760],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[874846,874849]},{"pos":[874950,874977],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[875060,875061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875401,875416],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[875652,875665],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[875746,875747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[875774,875775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875877,875890],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[875974,875975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876002,876003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[876266,876280],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[876499,876510],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[876574,876575],"content":"<","needQuote":true,"nodes":[]},{"pos":[876602,876603],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[876723,876734],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[876799,876802]},{"pos":[876836,876837],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[876864,876865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877359,877394],"content":"Remove(UnicastIPAddressInformation)","needQuote":true,"nodes":[{"content":"Remove(UnicastIPAddressInformation)","pos":[0,35]}]},{"pos":[877839,877845],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[877996,877997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878091,878118],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[878201,878202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878301,878307],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[878461,878462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878556,878583],"content":"UnicastIPAddressInformation","needQuote":true,"nodes":[{"content":"UnicastIPAddressInformation","pos":[0,27]}]},{"pos":[878666,878667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879142,879151],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[879372,879378],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[879452,879453],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879480,879481],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[879508,879509],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879608,879614],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[879691,879692],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879719,879720],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[879747,879748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880041,880056],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[880195,880208],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880278,880279],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880306,880307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880399,880412],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[880482,880483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[880510,880511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880727,880738],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[880920,880941],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[881135,881162],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[881381,881398],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[881573,881593],"content":"InvalidCastException","needQuote":true,"nodes":[{"content":"InvalidCastException","pos":[0,20]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  commentId: T:System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  id: UnicastIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.#ctor\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Count\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.IsReadOnly\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item(System.Int32)\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  - vb\n  name: UnicastIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnicastIPAddressInformationCollection\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 430\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Stores a set of <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types.</p>\\n\"\n  syntax:\n    content: 'public class UnicastIPAddressInformationCollection : ICollection<UnicastIPAddressInformation>, IEnumerable<UnicastIPAddressInformation>, IEnumerable'\n    content.vb: >-\n      Public Class UnicastIPAddressInformationCollection\n          Implements ICollection(Of UnicastIPAddressInformation), IEnumerable(Of UnicastIPAddressInformation), IEnumerable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: UnicastIPAddressInformationCollection\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Net.NetworkInformation.UnicastIPAddressInformation,System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.UnicastIPAddressInformation,{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.UnicastIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TSecond},{TResult}})\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.#ctor\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: UnicastIPAddressInformationCollection()\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.UnicastIPAddressInformationCollection()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 432\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected UnicastIPAddressInformationCollection()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: UnicastIPAddressInformationCollection.UnicastIPAddressInformationCollection()\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Count\n  commentId: P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Count\n  id: Count\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Count\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Count\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 433\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  syntax:\n    content: public virtual int Count { get; }\n    content.vb: Public Overridable ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>An <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the number of <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Count\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: UnicastIPAddressInformationCollection.Count\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.IsReadOnly\n  commentId: P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsReadOnly\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 434\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\\n\"\n  syntax:\n    content: public virtual bool IsReadOnly { get; }\n    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.IsReadOnly\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: UnicastIPAddressInformationCollection.IsReadOnly\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item(System.Int32)\n  commentId: P:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Item[Int32]\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item[System.Int32]\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: this[]\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 435\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance at the specified index in the collection.</p>\\n\"\n  syntax:\n    content: public virtual UnicastIPAddressInformation this[int index] { get; }\n    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As UnicastIPAddressInformation\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index of the element.</p>\\n\"\n    return:\n      type: System.Net.NetworkInformation.UnicastIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the specified location.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  fullName.vb: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Item(System.Int32)\n  name.vb: Item(Int32)\n  nameWithType: UnicastIPAddressInformationCollection.Item[Int32]\n  nameWithType.vb: UnicastIPAddressInformationCollection.Item(Int32)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  id: Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Add(UnicastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 436\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Add(UnicastIPAddressInformation address)\n    content.vb: Public Overridable Sub Add(address As UnicastIPAddressInformation)\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.UnicastIPAddressInformation\n      description: \"\\n<p>The object to be added to the collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: UnicastIPAddressInformationCollection.Add(UnicastIPAddressInformation)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear\n  id: Clear\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Clear()\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Clear\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 437\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because this operation is not supported for this collection.</p>\\n\"\n  syntax:\n    content: public virtual void Clear()\n    content.vb: Public Overridable Sub Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Clear\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: UnicastIPAddressInformationCollection.Clear()\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  id: Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Contains(UnicastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Contains\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 438\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Checks whether the collection contains the specified <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public virtual bool Contains(UnicastIPAddressInformation address)\n    content.vb: Public Overridable Function Contains(address As UnicastIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.UnicastIPAddressInformation\n      description: \"\\n<p>The <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be searched in the collection.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object exists in the collection; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: UnicastIPAddressInformationCollection.Contains(UnicastIPAddressInformation)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  id: CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(UnicastIPAddressInformation[], Int32)\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CopyTo\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 439\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Copies the elements in this collection to a one-dimensional array of type <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual void CopyTo(UnicastIPAddressInformation[] array, int offset)\n    content.vb: Public Overridable Sub CopyTo(array As UnicastIPAddressInformation(), offset As Integer)\n    parameters:\n    - id: array\n      type: System.Net.NetworkInformation.UnicastIPAddressInformation[]\n      description: \"\\n<p>A one-dimensional array that receives a copy of the collection.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in this <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is greater than the available space from <em>offset</em> to the end of the destination <em>array</em>. </p>\\n\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"\\n<p>The elements in this <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  fullName.vb: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(UnicastIPAddressInformation(), Int32)\n  nameWithType: UnicastIPAddressInformationCollection.CopyTo(UnicastIPAddressInformation[], Int32)\n  nameWithType.vb: UnicastIPAddressInformationCollection.CopyTo(UnicastIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 440\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: public virtual IEnumerator<UnicastIPAddressInformation> GetEnumerator()\n    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of UnicastIPAddressInformation)\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.UnicastIPAddressInformation}\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.GetEnumerator\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: UnicastIPAddressInformationCollection.GetEnumerator()\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  id: Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: Remove(UnicastIPAddressInformation)\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Remove\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 441\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> because the collection is read-only and elements cannot be removed.</p>\\n\"\n  syntax:\n    content: public virtual bool Remove(UnicastIPAddressInformation address)\n    content.vb: Public Overridable Function Remove(address As UnicastIPAddressInformation) As Boolean\n    parameters:\n    - id: address\n      type: System.Net.NetworkInformation.UnicastIPAddressInformation\n      description: \"\\n<p>The object to be removed.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Always throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: UnicastIPAddressInformationCollection.Remove(UnicastIPAddressInformation)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 442\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Returns an object that can be used to iterate through this collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An object that implements the <xref href=\\\"System.Collections.IEnumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> interface and provides access to the <xref href=\\\"System.Net.NetworkInformation.UnicastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> types in this collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: UnicastIPAddressInformationCollection.IEnumerable.GetEnumerator()\n  nameWithType.vb: UnicastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<UnicastIPAddressInformation>\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: ICollection(Of UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  nameWithType: ICollection<UnicastIPAddressInformation>\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<UnicastIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: IEnumerable(Of UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  nameWithType: IEnumerable<UnicastIPAddressInformation>\n  nameWithType.vb: IEnumerable(Of UnicastIPAddressInformation)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  commentId: T:System.Collections.IEnumerable\n  nameWithType: IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<UnicastIPAddressInformation>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: AsQueryable(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<UnicastIPAddressInformation>\n    fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<UnicastIPAddressInformation>()\n  nameWithType.vb: Queryable.AsQueryable(Of UnicastIPAddressInformation)()\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<UnicastIPAddressInformation>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: AsParallel(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<UnicastIPAddressInformation>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of UnicastIPAddressInformation)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<UnicastIPAddressInformation>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Net.NetworkInformation.UnicastIPAddressInformation,System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Net.NetworkInformation.UnicastIPAddressInformation, System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Net.NetworkInformation.UnicastIPAddressInformation, System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Aggregate(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Aggregate(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, UnicastIPAddressInformation, UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.UnicastIPAddressInformation,{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<UnicastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate))\n  name.vb: Aggregate(Of UnicastIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, UnicastIPAddressInformation, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<UnicastIPAddressInformation, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of UnicastIPAddressInformation, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<UnicastIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of UnicastIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, UnicastIPAddressInformation, TAccumulate))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.UnicastIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of UnicastIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, UnicastIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of UnicastIPAddressInformation, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<UnicastIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, UnicastIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of UnicastIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, UnicastIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: All(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.All(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Any(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Any(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: Any(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: AsEnumerable(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single))\n  name.vb: Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Average(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Concat(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Concat(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: Append(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  nameWithType.vb: Enumerable.Append(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: Prepend(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  nameWithType.vb: Enumerable.Prepend(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: Contains(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  nameWithType.vb: Enumerable.Contains(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation, IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Contains(Of UnicastIPAddressInformation)(UnicastIPAddressInformation, IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<UnicastIPAddressInformation>(UnicastIPAddressInformation, IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Contains(Of UnicastIPAddressInformation)(UnicastIPAddressInformation, IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Count(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Count(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: Count(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: DefaultIfEmpty(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: DefaultIfEmpty(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<UnicastIPAddressInformation>(UnicastIPAddressInformation)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of UnicastIPAddressInformation)(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Distinct(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Distinct(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<UnicastIPAddressInformation>(IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Distinct(Of UnicastIPAddressInformation)(IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<UnicastIPAddressInformation>(IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Distinct(Of UnicastIPAddressInformation)(IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<UnicastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Int32)\n  name.vb: ElementAt(Of UnicastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<UnicastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of UnicastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<UnicastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Int32)\n  name.vb: ElementAtOrDefault(Of UnicastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<UnicastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of UnicastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Except(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Except(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Except(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: First(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.First(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: First(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.First(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: FirstOrDefault(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: FirstOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), TResult))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of UnicastIPAddressInformation), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of UnicastIPAddressInformation), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of UnicastIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<TKey, IEnumerable<UnicastIPAddressInformation>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of UnicastIPAddressInformation), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<UnicastIPAddressInformation, TKey, TElement, TResult>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of UnicastIPAddressInformation, TKey, TElement, TResult)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, IEnumerable(Of TInner), TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Intersect(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Intersect(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Intersect(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TResult))\n  name.vb: Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<UnicastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, TInner, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<UnicastIPAddressInformation, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<UnicastIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<UnicastIPAddressInformation, TKey>, Func<TInner, TKey>, Func<UnicastIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of UnicastIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of UnicastIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of UnicastIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Last(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Last(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: Last(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: LastOrDefault(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: LastOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: LongCount(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.LongCount(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: LongCount(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Max(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single))\n  name.vb: Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult))\n  name.vb: Max(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Max(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Min(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single))\n  name.vb: Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult))\n  name.vb: Min(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Min(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey))\n  name.vb: OrderBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey))\n  name.vb: OrderByDescending(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Reverse(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Reverse(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult))\n  name.vb: Select(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, TResult>)\n  nameWithType.vb: Enumerable.Select(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, TResult))\n  name.vb: Select(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, Int32, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<UnicastIPAddressInformation, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of UnicastIPAddressInformation, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<UnicastIPAddressInformation, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of UnicastIPAddressInformation, TResult)(Func(Of UnicastIPAddressInformation, Int32, IEnumerable(Of TResult)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)(Func(Of UnicastIPAddressInformation, IEnumerable(Of TCollection)), Func(Of UnicastIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<UnicastIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)(Func(Of UnicastIPAddressInformation, IEnumerable(Of TCollection)), Func(Of UnicastIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult))\n  name.vb: SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)(Func(Of UnicastIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of UnicastIPAddressInformation, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<UnicastIPAddressInformation, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<UnicastIPAddressInformation, TCollection, TResult>(Func<UnicastIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<UnicastIPAddressInformation, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of UnicastIPAddressInformation, TCollection, TResult)(Func(Of UnicastIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of UnicastIPAddressInformation, TCollection, TResult))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: SequenceEqual(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: SequenceEqual(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: Single(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.Single(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: Single(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: SingleOrDefault(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: SingleOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<UnicastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Int32)\n  name.vb: Skip(Of UnicastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<UnicastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of UnicastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: SkipWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Decimal))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Decimal))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Double))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Double>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Double))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int64))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int64))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Decimal)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Double)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int32)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Int64)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Nullable(Of Single)))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Single))\n  name.vb: Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Single>)\n  nameWithType.vb: Enumerable.Sum(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Single))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<UnicastIPAddressInformation>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Int32)\n  name.vb: Take(Of UnicastIPAddressInformation)(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<UnicastIPAddressInformation>(Int32)\n  nameWithType.vb: Enumerable.Take(Of UnicastIPAddressInformation)(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: TakeWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: ToArray(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToArray(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey))\n  name.vb: ToDictionary(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement))\n  name.vb: ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<UnicastIPAddressInformation>()\n  fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.UnicastIPAddressInformation>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.UnicastIPAddressInformation)()\n  name.vb: ToList(Of UnicastIPAddressInformation)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<UnicastIPAddressInformation>()\n  nameWithType.vb: Enumerable.ToList(Of UnicastIPAddressInformation)()\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey))\n  name.vb: ToLookup(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<UnicastIPAddressInformation, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of UnicastIPAddressInformation, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<UnicastIPAddressInformation, TKey>(Func<UnicastIPAddressInformation, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of UnicastIPAddressInformation, TKey)(Func(Of UnicastIPAddressInformation, TKey), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement))\n  name.vb: ToLookup(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<UnicastIPAddressInformation, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of UnicastIPAddressInformation, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<UnicastIPAddressInformation, TKey, TElement>(Func<UnicastIPAddressInformation, TKey>, Func<UnicastIPAddressInformation, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of UnicastIPAddressInformation, TKey, TElement)(Func(Of UnicastIPAddressInformation, TKey), Func(Of UnicastIPAddressInformation, TElement), IEqualityComparer(Of TKey))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Union(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.UnicastIPAddressInformation})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.UnicastIPAddressInformation>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.UnicastIPAddressInformation))\n  name.vb: Union(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<UnicastIPAddressInformation>(IEnumerable<UnicastIPAddressInformation>, IEqualityComparer<UnicastIPAddressInformation>)\n  nameWithType.vb: Enumerable.Union(Of UnicastIPAddressInformation)(IEnumerable(Of UnicastIPAddressInformation), IEqualityComparer(Of UnicastIPAddressInformation))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Boolean))\n  name.vb: Where(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.UnicastIPAddressInformation>(System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.UnicastIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, System.Int32, System.Boolean))\n  name.vb: Where(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<UnicastIPAddressInformation>\n    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of UnicastIPAddressInformation)\n    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<UnicastIPAddressInformation>(Func<UnicastIPAddressInformation, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of UnicastIPAddressInformation)(Func(Of UnicastIPAddressInformation, Int32, Boolean))\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.UnicastIPAddressInformation,{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<UnicastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<UnicastIPAddressInformation, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult))\n  name.vb: Zip(Of UnicastIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of UnicastIPAddressInformation, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<UnicastIPAddressInformation, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of UnicastIPAddressInformation, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.UnicastIPAddressInformation, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<UnicastIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<UnicastIPAddressInformation, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of UnicastIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of UnicastIPAddressInformation, TSecond, TResult))\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.ICollection`1\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  commentId: N:System.Collections\n  nameWithType: System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  commentId: T:System.Linq.Queryable\n  nameWithType: Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  commentId: T:System.Linq.Enumerable\n  nameWithType: Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  commentId: N:System.Linq\n  nameWithType: System.Linq\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Count\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Count\n  nameWithType: ICollection<UnicastIPAddressInformation>.Count\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.IsReadOnly\n  nameWithType: ICollection<UnicastIPAddressInformation>.IsReadOnly\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: UnicastIPAddressInformation\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  commentId: T:System.Net.NetworkInformation.UnicastIPAddressInformation\n  nameWithType: UnicastIPAddressInformation\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(UnicastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  nameWithType: ICollection<UnicastIPAddressInformation>.Add(UnicastIPAddressInformation)\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).Add(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Clear\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Clear\n  nameWithType: ICollection<UnicastIPAddressInformation>.Clear()\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).Clear()\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(UnicastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  nameWithType: ICollection<UnicastIPAddressInformation>.Contains(UnicastIPAddressInformation)\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).Contains(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(UnicastIPAddressInformation[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation(), System.Int32)\n  name.vb: CopyTo(UnicastIPAddressInformation(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).CopyTo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)\n  nameWithType: ICollection<UnicastIPAddressInformation>.CopyTo(UnicastIPAddressInformation[], Int32)\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).CopyTo(UnicastIPAddressInformation(), Int32)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformation[]\n  name: UnicastIPAddressInformation[]\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformation[]\n  fullname.vb: System.Net.NetworkInformation.UnicastIPAddressInformation()\n  name.vb: UnicastIPAddressInformation()\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: ()\n    fullName: ()\n  nameWithType: UnicastIPAddressInformation[]\n  nameWithType.vb: UnicastIPAddressInformation()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.UnicastIPAddressInformation>.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.UnicastIPAddressInformation).GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.UnicastIPAddressInformation}.GetEnumerator\n  nameWithType: IEnumerable<UnicastIPAddressInformation>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of UnicastIPAddressInformation).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<UnicastIPAddressInformation>\n  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.UnicastIPAddressInformation>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.UnicastIPAddressInformation)\n  name.vb: IEnumerator(Of UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  nameWithType: IEnumerator<UnicastIPAddressInformation>\n  nameWithType.vb: IEnumerator(Of UnicastIPAddressInformation)\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerator`1\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(UnicastIPAddressInformation)\n  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.UnicastIPAddressInformation>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.UnicastIPAddressInformation).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformation\n    name: UnicastIPAddressInformation\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformation\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.UnicastIPAddressInformation}.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)\n  nameWithType: ICollection<UnicastIPAddressInformation>.Remove(UnicastIPAddressInformation)\n  nameWithType.vb: ICollection(Of UnicastIPAddressInformation).Remove(UnicastIPAddressInformation)\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n  nameWithType: IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  commentId: T:System.Collections.IEnumerator\n  nameWithType: IEnumerator\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidCastException\n  isExternal: false\n  name: InvalidCastException\n  fullName: System.InvalidCastException\n  nameWithType: InvalidCastException\n  commentId: T:System.InvalidCastException\n"}