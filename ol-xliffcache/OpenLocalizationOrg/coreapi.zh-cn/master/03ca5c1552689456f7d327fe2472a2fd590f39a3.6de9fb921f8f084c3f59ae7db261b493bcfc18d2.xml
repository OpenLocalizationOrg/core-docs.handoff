{"nodes":[{"pos":[621,645],"content":"LinkedList<T>.Enumerator","needQuote":true,"nodes":[{"content":"LinkedList&lt;T&gt;.Enumerator","pos":[0,24],"source":"LinkedList<T>.Enumerator"}]},{"pos":[3178,3185],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[5002,5021],"content":"IEnumerator.Current","needQuote":true,"nodes":[{"content":"IEnumerator.Current","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The element in the collection at the current position of the enumerator.&lt;/p&gt;\\n","pos":[5879,5962],"source":"\\n<p>The element in the collection at the current position of the enumerator.</p>\\n"},{"content":"\\n&lt;p&gt;The enumerator is positioned before the first element of the collection or after the last element.","pos":[6089,6192],"source":"\\n<p>The enumerator is positioned before the first element of the collection or after the last element."},{"content":"&lt;/p&gt;\\n","pos":[6193,6199],"source":" </p>\\n"},{"pos":[7232,7241],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[8488,8498],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the enumerator was successfully advanced to the next element; &lt;strong&gt;false&lt;/strong&gt; if the enumerator has passed the end of the collection.&lt;/p&gt;\\n","pos":[9285,9463],"source":"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n"},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[9590,9656],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[9657,9663],"source":" </p>\\n"},{"pos":[10479,10498],"content":"IEnumerator.Reset()","needQuote":true,"nodes":[{"content":"IEnumerator.Reset()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The collection was modified after the enumerator was created.","pos":[11421,11487],"source":"\\n<p>The collection was modified after the enumerator was created."},{"content":"&lt;/p&gt;\\n","pos":[11488,11494],"source":" </p>\\n"},{"pos":[12441,12467],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[12743,12757],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[12976,12987],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[13051,13052],"content":"<","needQuote":true,"nodes":[]},{"pos":[13079,13080],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13200,13211],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[13276,13279]},{"pos":[13313,13314],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13341,13342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13580,13591],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[13780,13791],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[13985,13999],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14124,14130],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14179,14180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14230,14236],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14296,14297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14383,14389],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14438,14439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14489,14495],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14555,14556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14759,14772],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14879,14890],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14944,14945],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14972,14973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15049,15060],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15114,15115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15142,15143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15332,15342],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15443,15451],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15502,15503],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15530,15531],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15604,15612],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15663,15664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15691,15692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15895,15917],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[16065,16071],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16138,16139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16189,16195],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16256,16257]},{"pos":[16312,16318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16378,16379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16476,16482],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16549,16550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16600,16606],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16667,16668]},{"pos":[16723,16729],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16789,16790],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17035,17066],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[17232,17247],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17323,17324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17374,17380],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17441,17442]},{"pos":[17497,17503],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17563,17564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17670,17685],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17761,17762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17812,17818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17879,17880]},{"pos":[17935,17941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18001,18002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18228,18237],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18330,18337],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18405,18406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18433,18434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18503,18510],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18578,18579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18606,18607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18770,18784],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[19003,19014],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[19078,19079],"content":"<","needQuote":true,"nodes":[]},{"pos":[19106,19107],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19227,19238],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[19303,19306]},{"pos":[19340,19341],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[19368,19369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19564,19582],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[19725,19731],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19865,19874],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[20028,20034],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20297,20304],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[20622,20623],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[20758,20765],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[21081,21082],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21230,21237],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[21470,21479],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[21582,21589],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[21641,21642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21669,21670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21744,21751],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[21803,21804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21831,21832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22045,22055],"content":"MoveNext()","needQuote":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[22184,22192],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[22257,22258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22285,22286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22373,22381],"content":"MoveNext","needQuote":true,"nodes":[{"content":"MoveNext","pos":[0,8]}]},{"pos":[22446,22447],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22474,22475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22653,22660],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22855,22862],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[22985,22990],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[23052,23053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23080,23081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23165,23170],"content":"Reset","needQuote":true,"nodes":[{"content":"Reset","pos":[0,5]}]},{"pos":[23232,23233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23260,23261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23451,23476],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Collections.Generic.LinkedList`1.Enumerator\n  commentId: T:System.Collections.Generic.LinkedList`1.Enumerator\n  id: LinkedList`1.Enumerator\n  parent: System.Collections.Generic\n  children:\n  - System.Collections.Generic.LinkedList`1.Enumerator.Current\n  - System.Collections.Generic.LinkedList`1.Enumerator.Dispose\n  - System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  - System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current\n  - System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  - vb\n  name: LinkedList<T>.Enumerator\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator\n  type: Struct\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Enumerator\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 474\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Enumerates the elements of a <xref href=\\\"System.Collections.Generic.LinkedList`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: >-\n      [SuppressMessage(\"Microsoft.Performance\", \"CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes\", Justification = \"not an expected scenario\")]\n\n      public struct Enumerator : IEnumerator<T>, IDisposable, IEnumerator\n    content.vb: >-\n      <SuppressMessage(\"Microsoft.Performance\", \"CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes\", Justification:=\"not an expected scenario\")>\n\n      Public Structure Enumerator\n          Implements IEnumerator(Of T), IDisposable, IEnumerator\n  seealso:\n  - type: System.Collections.Generic.IEnumerable`1\n    commentId: T:System.Collections.Generic.IEnumerable`1\n  - type: System.Collections.Generic.IEnumerator`1\n    commentId: T:System.Collections.Generic.IEnumerator`1\n  implements:\n  - System.Collections.Generic.IEnumerator{{T}}\n  - System.Collections.IEnumerator\n  - System.IDisposable\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator\n  name.vb: LinkedList(Of T).Enumerator\n  nameWithType: LinkedList<T>.Enumerator\n  nameWithType.vb: LinkedList(Of T).Enumerator\n- uid: System.Collections.Generic.LinkedList`1.Enumerator.Current\n  commentId: P:System.Collections.Generic.LinkedList`1.Enumerator.Current\n  id: Current\n  parent: System.Collections.Generic.LinkedList`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Current\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 492\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the element at the current position of the enumerator.</p>\\n\"\n  syntax:\n    content: public T Current { get; }\n    content.vb: Public ReadOnly Property Current As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>The element in the <xref href=\\\"System.Collections.Generic.LinkedList`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> at the current position of the enumerator.</p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n    commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  - type: System.Collections.IEnumerator\n    commentId: T:System.Collections.IEnumerator\n  implements:\n  - System.Collections.Generic.IEnumerator{{T}}.Current\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator.Current\n  nameWithType: LinkedList<T>.Enumerator.Current\n  nameWithType.vb: LinkedList(Of T).Enumerator.Current\n- uid: System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Collections.Generic.LinkedList`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Current\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Current\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 497\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Gets the element at the current position of the enumerator.</p>\\n\"\n  syntax:\n    content: object IEnumerator.Current { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>The element in the collection at the current position of the enumerator.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset\n    commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n    commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  implements:\n  - System.Collections.IEnumerator.Current\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator.System.Collections.IEnumerator.Current\n  name.vb: System.Collections.IEnumerator.Current\n  nameWithType: LinkedList<T>.Enumerator.IEnumerator.Current\n  nameWithType.vb: LinkedList(Of T).Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Collections.Generic.LinkedList`1.Enumerator.Dispose\n  commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose\n  id: Dispose\n  parent: System.Collections.Generic.LinkedList`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 545\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Releases all resources used by the <xref href=\\\"System.Collections.Generic.LinkedList`1.Enumerator\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator.Dispose()\n  nameWithType: LinkedList<T>.Enumerator.Dispose()\n  nameWithType.vb: LinkedList(Of T).Enumerator.Dispose()\n- uid: System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Generic.LinkedList`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: MoveNext()\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator.MoveNext()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MoveNext\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 510\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Advances the enumerator to the next element of the <xref href=\\\"System.Collections.Generic.LinkedList`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool MoveNext()\n    content.vb: Public Function MoveNext As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.Current\n    commentId: P:System.Collections.Generic.LinkedList`1.Enumerator.Current\n  implements:\n  - System.Collections.IEnumerator.MoveNext\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator.MoveNext()\n  nameWithType: LinkedList<T>.Enumerator.MoveNext()\n  nameWithType.vb: LinkedList(Of T).Enumerator.MoveNext()\n- uid: System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset\n  commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Collections.Generic.LinkedList`1.Enumerator\n  langs:\n  - csharp\n  - vb\n  name: IEnumerator.Reset()\n  fullName: System.Collections.Generic.LinkedList<T>.Enumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Collections.IEnumerator.Reset\n    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs\n    startLine: 533\n  assemblies:\n  - System.Collections\n  namespace: System.Collections.Generic\n  summary: \"\\n<p>Sets the enumerator to its initial position, which is before the first element in the collection. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: void IEnumerator.Reset()\n    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The collection was modified after the enumerator was created. </p>\\n\"\n  seealso:\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.Current\n    commentId: P:System.Collections.Generic.LinkedList`1.Enumerator.Current\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current\n    commentId: P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current\n  - type: System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n    commentId: M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext\n  implements:\n  - System.Collections.IEnumerator.Reset\n  fullName.vb: System.Collections.Generic.LinkedList(Of T).Enumerator.System.Collections.IEnumerator.Reset()\n  name.vb: System.Collections.IEnumerator.Reset()\n  nameWithType: LinkedList<T>.Enumerator.IEnumerator.Reset()\n  nameWithType.vb: LinkedList(Of T).Enumerator.System.Collections.IEnumerator.Reset()\nreferences:\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.IEnumerator{{T}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator{`0}\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.IEnumerator{{T}}.Current\n  parent: System.Collections.Generic.IEnumerator{{T}}\n  definition: System.Collections.Generic.IEnumerator`1.Current\n  name: Current\n  fullName: System.Collections.Generic.IEnumerator<T>.Current\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current\n  nameWithType: IEnumerator<T>.Current\n  nameWithType.vb: IEnumerator(Of T).Current\n  commentId: P:System.Collections.Generic.IEnumerator{`0}.Current\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Collections.Generic.IEnumerator`1.Current\n  isExternal: true\n  name: Current\n  fullName: System.Collections.Generic.IEnumerator<T>.Current\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current\n  nameWithType: IEnumerator<T>.Current\n  nameWithType.vb: IEnumerator(Of T).Current\n  commentId: P:System.Collections.Generic.IEnumerator`1.Current\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Collections.IEnumerator.Current\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Current\n  fullName: System.Collections.IEnumerator.Current\n  nameWithType: IEnumerator.Current\n  commentId: P:System.Collections.IEnumerator.Current\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDisposable.Dispose()\n  commentId: M:System.IDisposable.Dispose\n- uid: System.Collections.IEnumerator.MoveNext\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: MoveNext()\n  fullName: System.Collections.IEnumerator.MoveNext()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.MoveNext\n    name: MoveNext\n    fullName: System.Collections.IEnumerator.MoveNext\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.MoveNext()\n  commentId: M:System.Collections.IEnumerator.MoveNext\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.IEnumerator.Reset\n  parent: System.Collections.IEnumerator\n  isExternal: false\n  name: Reset()\n  fullName: System.Collections.IEnumerator.Reset()\n  spec.csharp:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerator.Reset\n    name: Reset\n    fullName: System.Collections.IEnumerator.Reset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator.Reset()\n  commentId: M:System.Collections.IEnumerator.Reset\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}