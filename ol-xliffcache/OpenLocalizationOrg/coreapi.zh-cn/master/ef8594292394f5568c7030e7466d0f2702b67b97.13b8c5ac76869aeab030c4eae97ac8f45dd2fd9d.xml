{"nodes":[{"pos":[572,586],"content":"DateTimeFormat","needQuote":true,"nodes":[{"content":"DateTimeFormat","pos":[0,14]}]},{"pos":[1925,1947],"content":"DateTimeFormat(String)","needQuote":true,"nodes":[{"content":"DateTimeFormat(String)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;The format string.&lt;/p&gt;\\n","pos":[2851,2880],"source":"\\n<p>The format string.</p>\\n"},{"pos":[3333,3372],"content":"DateTimeFormat(String, IFormatProvider)","needQuote":true,"nodes":[{"content":"DateTimeFormat(String, IFormatProvider)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The format sting.&lt;/p&gt;\\n","pos":[4387,4415],"source":"\\n<p>The format sting.</p>\\n"},{"content":"\\n&lt;p&gt;The format provider.&lt;/p&gt;\\n","pos":[4497,4528],"source":"\\n<p>The format provider.</p>\\n"},{"pos":[4909,4923],"content":"DateTimeStyles","needQuote":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The formatting options that customize string parsing for some date and time parsing methods.&lt;/p&gt;\\n","pos":[5787,5890],"source":"\\n<p>The formatting options that customize string parsing for some date and time parsing methods.</p>\\n"},{"pos":[6262,6276],"content":"FormatProvider","needQuote":true,"nodes":[{"content":"FormatProvider","pos":[0,14]}]},{"content":"\\n&lt;p&gt;&lt;/p&gt;\\n","pos":[7068,7079],"source":"\\n<p></p>\\n"},{"pos":[7450,7462],"content":"FormatString","needQuote":true,"nodes":[{"content":"FormatString","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The format strings to control the formatting produced when a date or time is represented as a string.&lt;/p&gt;\\n","pos":[8285,8397],"source":"\\n<p>The format strings to control the formatting produced when a date or time is represented as a string.</p>\\n"},{"pos":[8598,8626],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[8823,8829],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8989,8999],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9094,9102],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9171,9172],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9199,9200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9270,9278],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9347,9348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9375,9376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9559,9573],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9692,9698],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9765,9766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9816,9822],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9882,9883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9966,9972],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10039,10040],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10090,10096],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10156,10157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10371,10393],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[10541,10547],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10614,10615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10665,10671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10732,10733]},{"pos":[10788,10794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10854,10855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10952,10958],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11025,11026],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11076,11082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11143,11144]},{"pos":[11199,11205],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11265,11266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11511,11542],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[11708,11723],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11799,11800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11850,11856],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11917,11918]},{"pos":[11973,11979],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12039,12040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12146,12161],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12237,12238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12288,12294],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12355,12356]},{"pos":[12411,12417],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12477,12478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12708,12721],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12822,12833],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[12905,12906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12933,12934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13007,13018],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[13090,13091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13118,13119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13294,13303],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13396,13403],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13471,13472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13499,13500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13569,13576],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13644,13645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13672,13673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13848,13865],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[13974,13989],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14065,14066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14093,14094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14171,14186],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14262,14263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14290,14291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14436,14442],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[14573,14579],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14733,14748],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[14956,14970],"content":"DateTimeStyles","needQuote":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[15157,15177],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]}],"content":"items:\n- uid: System.Runtime.Serialization.DateTimeFormat\n  commentId: T:System.Runtime.Serialization.DateTimeFormat\n  id: DateTimeFormat\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)\n  - System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)\n  - System.Runtime.Serialization.DateTimeFormat.DateTimeStyles\n  - System.Runtime.Serialization.DateTimeFormat.FormatProvider\n  - System.Runtime.Serialization.DateTimeFormat.FormatString\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormat\n  fullName: System.Runtime.Serialization.DateTimeFormat\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DateTimeFormat\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 10\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Specifies date-time format options.</p>\\n\"\n  syntax:\n    content: public class DateTimeFormat\n    content.vb: Public Class DateTimeFormat\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: DateTimeFormat\n- uid: System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)\n  commentId: M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Serialization.DateTimeFormat\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormat(String)\n  fullName: System.Runtime.Serialization.DateTimeFormat.DateTimeFormat(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 12\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DateTimeFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the format string.</p>\\n\"\n  syntax:\n    content: public DateTimeFormat(string formatString)\n    content.vb: Public Sub New(formatString As String)\n    parameters:\n    - id: formatString\n      type: System.String\n      description: \"\\n<p>The format string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormat.DateTimeFormat(String)\n- uid: System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)\n  commentId: M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)\n  id: '#ctor(System.String,System.IFormatProvider)'\n  parent: System.Runtime.Serialization.DateTimeFormat\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormat(String, IFormatProvider)\n  fullName: System.Runtime.Serialization.DateTimeFormat.DateTimeFormat(System.String, System.IFormatProvider)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 13\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DateTimeFormat\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class using the format string and format provider.</p>\\n\"\n  syntax:\n    content: public DateTimeFormat(string formatString, IFormatProvider formatProvider)\n    content.vb: Public Sub New(formatString As String, formatProvider As IFormatProvider)\n    parameters:\n    - id: formatString\n      type: System.String\n      description: \"\\n<p>The format sting.</p>\\n\"\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: \"\\n<p>The format provider.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormat.DateTimeFormat(String, IFormatProvider)\n- uid: System.Runtime.Serialization.DateTimeFormat.DateTimeStyles\n  commentId: P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles\n  id: DateTimeStyles\n  parent: System.Runtime.Serialization.DateTimeFormat\n  langs:\n  - csharp\n  - vb\n  name: DateTimeStyles\n  fullName: System.Runtime.Serialization.DateTimeFormat.DateTimeStyles\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DateTimeStyles\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets or sets the formatting options that customize string parsing for some date and time parsing methods.</p>\\n\"\n  syntax:\n    content: public DateTimeStyles DateTimeStyles { get; set; }\n    content.vb: Public Property DateTimeStyles As DateTimeStyles\n    parameters: []\n    return:\n      type: System.Globalization.DateTimeStyles\n      description: \"\\n<p>The formatting options that customize string parsing for some date and time parsing methods.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormat.DateTimeStyles\n- uid: System.Runtime.Serialization.DateTimeFormat.FormatProvider\n  commentId: P:System.Runtime.Serialization.DateTimeFormat.FormatProvider\n  id: FormatProvider\n  parent: System.Runtime.Serialization.DateTimeFormat\n  langs:\n  - csharp\n  - vb\n  name: FormatProvider\n  fullName: System.Runtime.Serialization.DateTimeFormat.FormatProvider\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FormatProvider\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets an object that controls formatting.</p>\\n\"\n  syntax:\n    content: public IFormatProvider FormatProvider { get; }\n    content.vb: Public ReadOnly Property FormatProvider As IFormatProvider\n    parameters: []\n    return:\n      type: System.IFormatProvider\n      description: \"\\n<p></p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormat.FormatProvider\n- uid: System.Runtime.Serialization.DateTimeFormat.FormatString\n  commentId: P:System.Runtime.Serialization.DateTimeFormat.FormatString\n  id: FormatString\n  parent: System.Runtime.Serialization.DateTimeFormat\n  langs:\n  - csharp\n  - vb\n  name: FormatString\n  fullName: System.Runtime.Serialization.DateTimeFormat.FormatString\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FormatString\n    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the format strings to control the formatting produced when a date or time is represented as a string.</p>\\n\"\n  syntax:\n    content: public string FormatString { get; }\n    content.vb: Public ReadOnly Property FormatString As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The format strings to control the formatting produced when a date or time is represented as a string.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormat.FormatString\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  commentId: T:System.IFormatProvider\n  nameWithType: IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n  commentId: T:System.Globalization.DateTimeStyles\n  nameWithType: DateTimeStyles\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  commentId: N:System.Globalization\n  nameWithType: System.Globalization\n"}