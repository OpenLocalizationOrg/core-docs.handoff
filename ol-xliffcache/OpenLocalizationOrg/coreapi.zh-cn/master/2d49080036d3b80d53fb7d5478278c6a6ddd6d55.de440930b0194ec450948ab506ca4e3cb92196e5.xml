{"nodes":[{"pos":[2644,2657],"content":"ModuleBuilder","needQuote":true,"nodes":[{"content":"ModuleBuilder","pos":[0,13]}]},{"pos":[8753,8761],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The dynamic assembly that defined the current dynamic module.&lt;/p&gt;\\n","pos":[9586,9658],"source":"\\n<p>The dynamic assembly that defined the current dynamic module.</p>\\n"},{"pos":[10094,10112],"content":"FullyQualifiedName","needQuote":true,"nodes":[{"content":"FullyQualifiedName","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The fully qualified module name.&lt;/p&gt;\\n","pos":[10960,11003],"source":"\\n<p>The fully qualified module name.</p>\\n"},{"pos":[11541,11545],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"content":"\\n&lt;p&gt;Text that indicates that this is an in-memory module.&lt;/p&gt;\\n","pos":[12241,12305],"source":"\\n<p>Text that indicates that this is an in-memory module.</p>\\n"},{"pos":[12742,12765],"content":"CreateGlobalFunctions()","needQuote":true,"nodes":[{"content":"CreateGlobalFunctions()","pos":[0,23]}]},{"content":"\\n&lt;p&gt;This method was called previously.","pos":[13562,13601],"source":"\\n<p>This method was called previously."},{"content":"&lt;/p&gt;\\n","pos":[13602,13608],"source":" </p>\\n"},{"pos":[14119,14159],"content":"DefineEnum(String, TypeAttributes, Type)","needQuote":true,"nodes":[{"content":"DefineEnum(String, TypeAttributes, Type)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The full path of the enumeration type.","pos":[15190,15233],"source":"\\n<p>The full path of the enumeration type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[15234,15278],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[15279,15285],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The underlying type for the enumeration.","pos":[15644,15689],"source":"\\n<p>The underlying type for the enumeration."},{"content":"This must be a built-in integer type.","pos":[15690,15727]},{"content":"&lt;/p&gt;\\n","pos":[15728,15734],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined enumeration.&lt;/p&gt;\\n","pos":[15815,15850],"source":"\\n<p>The defined enumeration.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[16528,16574],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[16575,16581],"source":" </p>\\n"},{"pos":[17292,17370],"content":"DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])","pos":[0,78]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[18526,18554],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[18555,18599],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[18600,18606],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention for the method.","pos":[18971,19014],"source":"\\n<p>The calling convention for the method."},{"content":"&lt;/p&gt;\\n","pos":[19015,19021],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[19088,19123],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[19124,19130],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the method's parameters.","pos":[19203,19245],"source":"\\n<p>The types of the method's parameters."},{"content":"&lt;/p&gt;\\n","pos":[19246,19252],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined global method.&lt;/p&gt;\\n","pos":[19335,19372],"source":"\\n<p>The defined global method.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[19916,19962],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[19963,19969],"source":" </p>\\n"},{"pos":[21561,21675],"content":"DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","needQuote":true,"nodes":[{"content":"DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])","pos":[0,114]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[23343,23371],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded null characters.","pos":[23372,23426],"source":" <em>name</em> cannot contain embedded null characters."},{"content":"&lt;/p&gt;\\n","pos":[23427,23433],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The calling convention for the method.","pos":[23798,23841],"source":"\\n<p>The calling convention for the method."},{"content":"&lt;/p&gt;\\n","pos":[23842,23848],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[23915,23950],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[23951,23957],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the method's parameters.","pos":[24992,25034],"source":"\\n<p>The types of the method's parameters."},{"content":"&lt;/p&gt;\\n","pos":[25035,25041],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;An array of arrays of types.","pos":[25138,25171],"source":"\\n<p>An array of arrays of types."},{"content":"Each array of types represents the required custom modifiers for the corresponding parameter of the global method.","pos":[25172,25286]},{"content":"If a particular argument has no required custom modifiers, specify &lt;strong&gt;null&lt;/strong&gt; instead of an array of types.","pos":[25287,25405],"source":" If a particular argument has no required custom modifiers, specify <strong>null</strong> instead of an array of types."},{"content":"If the global method has no arguments, or if none of the arguments have required custom modifiers, specify &lt;strong&gt;null&lt;/strong&gt; instead of an array of arrays.&lt;/p&gt;\\n","pos":[25406,25571],"source":" If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n"},{"content":"\\n&lt;p&gt;An array of arrays of types.","pos":[25668,25701],"source":"\\n<p>An array of arrays of types."},{"content":"Each array of types represents the optional custom modifiers for the corresponding parameter.","pos":[25702,25795]},{"content":"If a particular argument has no optional custom modifiers, specify &lt;strong&gt;null&lt;/strong&gt; instead of an array of types.","pos":[25796,25914],"source":" If a particular argument has no optional custom modifiers, specify <strong>null</strong> instead of an array of types."},{"content":"If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify &lt;strong&gt;null&lt;/strong&gt; instead of an array of arrays.&lt;/p&gt;\\n","pos":[25915,26080],"source":" If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n"},{"content":"\\n&lt;p&gt;The defined global method.&lt;/p&gt;\\n","pos":[26163,26200],"source":"\\n<p>The defined global method.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[26744,26790],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[26791,26797],"source":" </p>\\n"},{"pos":[28279,28337],"content":"DefineGlobalMethod(String, MethodAttributes, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineGlobalMethod(String, MethodAttributes, Type, Type[])","pos":[0,58]}]},{"content":"\\n&lt;p&gt;The name of the method.","pos":[29356,29384],"source":"\\n<p>The name of the method."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[29385,29429],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[29430,29436],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[29770,29805],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[29806,29812],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the method's parameters.","pos":[29885,29927],"source":"\\n<p>The types of the method's parameters."},{"content":"&lt;/p&gt;\\n","pos":[29928,29934],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The defined global method.&lt;/p&gt;\\n","pos":[30017,30054],"source":"\\n<p>The defined global method.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[30657,30703],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[30704,30710],"source":" </p>\\n"},{"pos":[31883,31937],"content":"DefineInitializedData(String, Byte[], FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineInitializedData(String, Byte[], FieldAttributes)","pos":[0,54]}]},{"content":"\\n&lt;p&gt;The name used to refer to the data.","pos":[32962,33002],"source":"\\n<p>The name used to refer to the data."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[33003,33047],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[33048,33054],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The binary large object (BLOB) of data.","pos":[33117,33161],"source":"\\n<p>The binary large object (BLOB) of data."},{"content":"&lt;/p&gt;\\n","pos":[33162,33168],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes for the field.","pos":[33257,33291],"source":"\\n<p>The attributes for the field."},{"content":"The default is &lt;strong&gt;Static&lt;/strong&gt;.","pos":[33292,33331],"source":" The default is <strong>Static</strong>."},{"content":"&lt;/p&gt;\\n","pos":[33332,33338],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A field to reference the data.&lt;/p&gt;\\n","pos":[33420,33461],"source":"\\n<p>A field to reference the data.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The size of &lt;em&gt;data&lt;/em&gt; is less than or equal to zero or greater than or equal to 0x3f0000.","pos":[33572,33729],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The size of <em>data</em> is less than or equal to zero or greater than or equal to 0x3f0000."},{"content":"&lt;/p&gt;\\n","pos":[33730,33736],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; or &lt;em&gt;data&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[33841,33904],"source":"\\n<p>\\n<em>name</em> or <em>data</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[33905,33911],"source":" </p>\\n"},{"pos":[34884,34902],"content":"DefineType(String)","needQuote":true,"nodes":[{"content":"DefineType(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The full path of the type, including the namespace.","pos":[35758,35814],"source":"\\n<p>The full path of the type, including the namespace."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[35815,35859],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[35860,35866],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A private type with the specified name.&lt;/p&gt;\\n","pos":[35947,35997],"source":"\\n<p>A private type with the specified name.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[36108,36268],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[36269,36275],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[36380,36426],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[36427,36433],"source":" </p>\\n"},{"pos":[36903,36937],"content":"DefineType(String, TypeAttributes)","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[37858,37889],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[37890,37934],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[37935,37941],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the defined type.","pos":[38023,38063],"source":"\\n<p>The attributes of the defined type."},{"content":"&lt;/p&gt;\\n","pos":[38064,38070],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; created with all of the requested attributes.&lt;/p&gt;\\n","pos":[38151,38238],"source":"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[38349,38509],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[38510,38516],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[38621,38667],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[38668,38674],"source":" </p>\\n"},{"pos":[39196,39236],"content":"DefineType(String, TypeAttributes, Type)","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes, Type)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[40231,40262],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[40263,40307],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[40308,40314],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attribute to be associated with the type.","pos":[40396,40446],"source":"\\n<p>The attribute to be associated with the type."},{"content":"&lt;/p&gt;\\n","pos":[40447,40453],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the defined type extends.","pos":[40516,40560],"source":"\\n<p>The type that the defined type extends."},{"content":"&lt;/p&gt;\\n","pos":[40561,40567],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; created with all of the requested attributes.&lt;/p&gt;\\n","pos":[40648,40735],"source":"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[40846,41006],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[41007,41013],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[41118,41164],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[41165,41171],"source":" </p>\\n"},{"pos":[41738,41785],"content":"DefineType(String, TypeAttributes, Type, Int32)","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes, Type, Int32)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[42853,42884],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[42885,42929],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[42930,42936],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the defined type.","pos":[43018,43058],"source":"\\n<p>The attributes of the defined type."},{"content":"&lt;/p&gt;\\n","pos":[43059,43065],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the defined type extends.","pos":[43128,43172],"source":"\\n<p>The type that the defined type extends."},{"content":"&lt;/p&gt;\\n","pos":[43173,43179],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The total size of the type.","pos":[43245,43277],"source":"\\n<p>The total size of the type."},{"content":"&lt;/p&gt;\\n","pos":[43278,43284],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; object.&lt;/p&gt;\\n","pos":[43365,43414],"source":"\\n<p>A <strong>TypeBuilder</strong> object.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[43525,43685],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[43686,43692],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[43797,43843],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[43844,43850],"source":" </p>\\n"},{"pos":[44490,44543],"content":"DefineType(String, TypeAttributes, Type, PackingSize)","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes, Type, PackingSize)","pos":[0,53]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[45647,45678],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[45679,45723],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[45724,45730],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the defined type.","pos":[45812,45852],"source":"\\n<p>The attributes of the defined type."},{"content":"&lt;/p&gt;\\n","pos":[45853,45859],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the defined type extends.","pos":[45922,45966],"source":"\\n<p>The type that the defined type extends."},{"content":"&lt;/p&gt;\\n","pos":[45967,45973],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The packing size of the type.","pos":[46061,46095],"source":"\\n<p>The packing size of the type."},{"content":"&lt;/p&gt;\\n","pos":[46096,46102],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; object.&lt;/p&gt;\\n","pos":[46183,46232],"source":"\\n<p>A <strong>TypeBuilder</strong> object.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[46343,46503],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[46504,46510],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[46615,46661],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[46662,46668],"source":" </p>\\n"},{"pos":[47353,47413],"content":"DefineType(String, TypeAttributes, Type, PackingSize, Int32)","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes, Type, PackingSize, Int32)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[48612,48643],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[48644,48688],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[48689,48695],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes of the defined type.","pos":[48777,48817],"source":"\\n<p>The attributes of the defined type."},{"content":"&lt;/p&gt;\\n","pos":[48818,48824],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the defined type extends.","pos":[48887,48931],"source":"\\n<p>The type that the defined type extends."},{"content":"&lt;/p&gt;\\n","pos":[48932,48938],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The packing size of the type.","pos":[49029,49063],"source":"\\n<p>The packing size of the type."},{"content":"&lt;/p&gt;\\n","pos":[49064,49070],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The total size of the type.","pos":[49136,49168],"source":"\\n<p>The total size of the type."},{"content":"&lt;/p&gt;\\n","pos":[49169,49175],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; created with all of the requested attributes.&lt;/p&gt;\\n","pos":[49256,49343],"source":"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[49454,49614],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[49615,49621],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[49726,49772],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49773,49779],"source":" </p>\\n"},{"pos":[50369,50417],"content":"DefineType(String, TypeAttributes, Type, Type[])","needQuote":true,"nodes":[{"content":"DefineType(String, TypeAttributes, Type, Type[])","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The full path of the type.","pos":[51569,51600],"source":"\\n<p>The full path of the type."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[51601,51645],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[51646,51652],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes to be associated with the type.","pos":[51734,51785],"source":"\\n<p>The attributes to be associated with the type."},{"content":"&lt;/p&gt;\\n","pos":[51786,51792],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The type that the defined type extends.","pos":[51855,51899],"source":"\\n<p>The type that the defined type extends."},{"content":"&lt;/p&gt;\\n","pos":[51900,51906],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The list of interfaces that the type implements.","pos":[51975,52028],"source":"\\n<p>The list of interfaces that the type implements."},{"content":"&lt;/p&gt;\\n","pos":[52029,52035],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A &lt;strong&gt;TypeBuilder&lt;/strong&gt; created with all of the requested attributes.&lt;/p&gt;\\n","pos":[52116,52203],"source":"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n"},{"content":"\\n&lt;p&gt;A type with the given name exists in the parent assembly of this module.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;Nested type attributes are set on a type that is not nested.","pos":[52314,52474],"source":"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested."},{"content":"&lt;/p&gt;\\n","pos":[52475,52481],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[52586,52632],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[52633,52639],"source":" </p>\\n"},{"pos":[53502,53557],"content":"DefineUninitializedData(String, Int32, FieldAttributes)","needQuote":true,"nodes":[{"content":"DefineUninitializedData(String, Int32, FieldAttributes)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The name used to refer to the data.","pos":[54589,54629],"source":"\\n<p>The name used to refer to the data."},{"content":"&lt;em&gt;name&lt;/em&gt; cannot contain embedded nulls.","pos":[54630,54674],"source":" <em>name</em> cannot contain embedded nulls."},{"content":"&lt;/p&gt;\\n","pos":[54675,54681],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The size of the data field.","pos":[54743,54775],"source":"\\n<p>The size of the data field."},{"content":"&lt;/p&gt;\\n","pos":[54776,54782],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The attributes for the field.","pos":[54871,54905],"source":"\\n<p>The attributes for the field."},{"content":"&lt;/p&gt;\\n","pos":[54906,54912],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A field to reference the data.&lt;/p&gt;\\n","pos":[54994,55035],"source":"\\n<p>A field to reference the data.</p>\\n"},{"content":"\\n&lt;p&gt;The length of &lt;em&gt;name&lt;/em&gt; is zero.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;size&lt;/em&gt; is less than or equal to zero, or greater than or equal to 0x003f0000.","pos":[55146,55296],"source":"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than or equal to zero, or greater than or equal to 0x003f0000."},{"content":"&lt;/p&gt;\\n","pos":[55297,55303],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[55408,55454],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[55455,55461],"source":" </p>\\n"},{"pos":[56130,56144],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance, or &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[56896,56973],"source":"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; equals the type and value of this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[57034,57163],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[57855,57917],"content":"GetArrayMethod(Type, String, CallingConventions, Type, Type[])","needQuote":true,"nodes":[{"content":"GetArrayMethod(Type, String, CallingConventions, Type, Type[])","pos":[0,62]}]},{"content":"\\n&lt;p&gt;An array class.","pos":[59027,59047],"source":"\\n<p>An array class."},{"content":"&lt;/p&gt;\\n","pos":[59048,59054],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The name of a method on the array class.","pos":[59123,59168],"source":"\\n<p>The name of a method on the array class."},{"content":"&lt;/p&gt;\\n","pos":[59169,59175],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The method's calling convention.","pos":[59274,59311],"source":"\\n<p>The method's calling convention."},{"content":"&lt;/p&gt;\\n","pos":[59312,59318],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The return type of the method.","pos":[59385,59420],"source":"\\n<p>The return type of the method."},{"content":"&lt;/p&gt;\\n","pos":[59421,59427],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The types of the method's parameters.","pos":[59500,59542],"source":"\\n<p>The types of the method's parameters."},{"content":"&lt;/p&gt;\\n","pos":[59543,59549],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The named method on an array class.&lt;/p&gt;\\n","pos":[59624,59670],"source":"\\n<p>The named method on an array class.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayClass&lt;/em&gt; is not an array.","pos":[59781,59824],"source":"\\n<p>\\n<em>arrayClass</em> is not an array."},{"content":"&lt;/p&gt;\\n","pos":[59825,59831],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;arrayClass&lt;/em&gt; or &lt;em&gt;methodName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[59936,60011],"source":"\\n<p>\\n<em>arrayClass</em> or <em>methodName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[60012,60018],"source":" </p>\\n"},{"pos":[60722,60735],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[61403,61448],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[62018,62061],"content":"SetCustomAttribute(ConstructorInfo, Byte[])","needQuote":true,"nodes":[{"content":"SetCustomAttribute(ConstructorInfo, Byte[])","pos":[0,43]}]},{"content":"\\n&lt;p&gt;The constructor for the custom attribute.","pos":[63107,63153],"source":"\\n<p>The constructor for the custom attribute."},{"content":"&lt;/p&gt;\\n","pos":[63154,63160],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A byte BLOB representing the attribute.","pos":[63234,63278],"source":"\\n<p>A byte BLOB representing the attribute."},{"content":"&lt;/p&gt;\\n","pos":[63279,63285],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;con&lt;/em&gt; or &lt;em&gt;binaryAttribute&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[63404,63477],"source":"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[63478,63484],"source":" </p>\\n"},{"pos":[64253,64295],"content":"SetCustomAttribute(CustomAttributeBuilder)","needQuote":true,"nodes":[{"content":"SetCustomAttribute(CustomAttributeBuilder)","pos":[0,42]}]},{"content":"\\n&lt;p&gt;An instance of a helper class that specifies the custom attribute to apply.","pos":[65257,65337],"source":"\\n<p>An instance of a helper class that specifies the custom attribute to apply."},{"content":"&lt;/p&gt;\\n","pos":[65338,65344],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;customBuilder&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[65463,65518],"source":"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[65519,65525],"source":" </p>\\n"},{"pos":[65728,65750],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[65929,65935],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66102,66108],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[66323,66330],"content":"_Module","needQuote":true,"nodes":[{"content":"_Module","pos":[0,7]}]},{"pos":[66577,66590],"content":"ISerializable","needQuote":true,"nodes":[{"content":"ISerializable","pos":[0,13]}]},{"pos":[66840,66864],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[67128,67142],"content":"FilterTypeName","needQuote":true,"nodes":[{"content":"FilterTypeName","pos":[0,14]}]},{"pos":[67407,67431],"content":"FilterTypeNameIgnoreCase","needQuote":true,"nodes":[{"content":"FilterTypeNameIgnoreCase","pos":[0,24]}]},{"pos":[67710,67720],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[67837,67845],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[67925,67926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67953,67954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68035,68043],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[68123,68124],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68151,68152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68382,68410],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[68579,68598],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[68689,68690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68741,68748],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68809,68810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68918,68937],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[69028,69029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69080,69087],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69148,69149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69436,69470],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[69664,69683],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[69774,69775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69823,69827],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[69886,69887]},{"pos":[69943,69950],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70011,70012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70132,70151],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[70242,70243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70291,70295],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[70354,70355]},{"pos":[70411,70418],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70479,70480],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70775,70799],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[70973,70982],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[71063,71064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71112,71116],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[71175,71176]},{"pos":[71232,71239],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71300,71301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71411,71420],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[71501,71502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71550,71554],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[71613,71614]},{"pos":[71670,71677],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71738,71739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72000,72025],"content":"GetCustomAttributesData()","needQuote":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[72172,72195],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[72290,72291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72318,72319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72415,72438],"content":"GetCustomAttributesData","needQuote":true,"nodes":[{"content":"GetCustomAttributesData","pos":[0,23]}]},{"pos":[72533,72534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72561,72562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72814,72834],"content":"ResolveMethod(Int32)","needQuote":true,"nodes":[{"content":"ResolveMethod(Int32)","pos":[0,20]}]},{"pos":[72987,73000],"content":"ResolveMethod","needQuote":true,"nodes":[{"content":"ResolveMethod","pos":[0,13]}]},{"pos":[73085,73086],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73135,73140],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73199,73200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73300,73313],"content":"ResolveMethod","needQuote":true,"nodes":[{"content":"ResolveMethod","pos":[0,13]}]},{"pos":[73398,73399],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73448,73453],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73512,73513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73792,73828],"content":"ResolveMethod(Int32, Type[], Type[])","needQuote":true,"nodes":[{"content":"ResolveMethod(Int32, Type[], Type[])","pos":[0,36]}]},{"pos":[74185,74198],"content":"ResolveMethod","needQuote":true,"nodes":[{"content":"ResolveMethod","pos":[0,13]}]},{"pos":[74283,74284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74333,74338],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[74398,74399]},{"pos":[74452,74456],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[74515,74517]},{"content":",","pos":[74549,74550]},{"pos":[74603,74607],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[74666,74668]},{"pos":[74699,74700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74828,74841],"content":"ResolveMethod","needQuote":true,"nodes":[{"content":"ResolveMethod","pos":[0,13]}]},{"pos":[74926,74927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74976,74981],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[75041,75042]},{"pos":[75095,75099],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[75157,75159],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[75188,75189]},{"pos":[75242,75246],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[75304,75306],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[75334,75335],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75692,75711],"content":"ResolveField(Int32)","needQuote":true,"nodes":[{"content":"ResolveField(Int32)","pos":[0,19]}]},{"pos":[75862,75874],"content":"ResolveField","needQuote":true,"nodes":[{"content":"ResolveField","pos":[0,12]}]},{"pos":[75958,75959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76008,76013],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[76072,76073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76172,76184],"content":"ResolveField","needQuote":true,"nodes":[{"content":"ResolveField","pos":[0,12]}]},{"pos":[76268,76269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76318,76323],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[76382,76383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76659,76694],"content":"ResolveField(Int32, Type[], Type[])","needQuote":true,"nodes":[{"content":"ResolveField(Int32, Type[], Type[])","pos":[0,35]}]},{"pos":[77047,77059],"content":"ResolveField","needQuote":true,"nodes":[{"content":"ResolveField","pos":[0,12]}]},{"pos":[77143,77144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77193,77198],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[77258,77259]},{"pos":[77312,77316],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[77375,77377]},{"content":",","pos":[77409,77410]},{"pos":[77463,77467],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[77526,77528]},{"pos":[77559,77560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77687,77699],"content":"ResolveField","needQuote":true,"nodes":[{"content":"ResolveField","pos":[0,12]}]},{"pos":[77783,77784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77833,77838],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[77898,77899]},{"pos":[77952,77956],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78014,78016],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[78045,78046]},{"pos":[78099,78103],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78161,78163],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[78191,78192],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78545,78563],"content":"ResolveType(Int32)","needQuote":true,"nodes":[{"content":"ResolveType(Int32)","pos":[0,18]}]},{"pos":[78712,78723],"content":"ResolveType","needQuote":true,"nodes":[{"content":"ResolveType","pos":[0,11]}]},{"pos":[78806,78807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78856,78861],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78920,78921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79019,79030],"content":"ResolveType","needQuote":true,"nodes":[{"content":"ResolveType","pos":[0,11]}]},{"pos":[79113,79114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79163,79168],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79227,79228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79501,79535],"content":"ResolveType(Int32, Type[], Type[])","needQuote":true,"nodes":[{"content":"ResolveType(Int32, Type[], Type[])","pos":[0,34]}]},{"pos":[79884,79895],"content":"ResolveType","needQuote":true,"nodes":[{"content":"ResolveType","pos":[0,11]}]},{"pos":[79978,79979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80028,80033],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[80093,80094]},{"pos":[80147,80151],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[80210,80212]},{"content":",","pos":[80244,80245]},{"pos":[80298,80302],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[80361,80363]},{"pos":[80394,80395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80521,80532],"content":"ResolveType","needQuote":true,"nodes":[{"content":"ResolveType","pos":[0,11]}]},{"pos":[80615,80616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80665,80670],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[80730,80731]},{"pos":[80784,80788],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80846,80848],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[80877,80878]},{"pos":[80931,80935],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80993,80995],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[81023,81024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81376,81396],"content":"ResolveMember(Int32)","needQuote":true,"nodes":[{"content":"ResolveMember(Int32)","pos":[0,20]}]},{"pos":[81549,81562],"content":"ResolveMember","needQuote":true,"nodes":[{"content":"ResolveMember","pos":[0,13]}]},{"pos":[81647,81648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81697,81702],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81761,81762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81862,81875],"content":"ResolveMember","needQuote":true,"nodes":[{"content":"ResolveMember","pos":[0,13]}]},{"pos":[81960,81961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82010,82015],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[82074,82075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82354,82390],"content":"ResolveMember(Int32, Type[], Type[])","needQuote":true,"nodes":[{"content":"ResolveMember(Int32, Type[], Type[])","pos":[0,36]}]},{"pos":[82747,82760],"content":"ResolveMember","needQuote":true,"nodes":[{"content":"ResolveMember","pos":[0,13]}]},{"pos":[82845,82846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82895,82900],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[82960,82961]},{"pos":[83014,83018],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[83077,83079]},{"content":",","pos":[83111,83112]},{"pos":[83165,83169],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[83228,83230]},{"pos":[83261,83262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83390,83403],"content":"ResolveMember","needQuote":true,"nodes":[{"content":"ResolveMember","pos":[0,13]}]},{"pos":[83488,83489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83538,83543],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[83603,83604]},{"pos":[83657,83661],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[83719,83721],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[83750,83751]},{"pos":[83804,83808],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[83866,83868],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[83896,83897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84258,84281],"content":"ResolveSignature(Int32)","needQuote":true,"nodes":[{"content":"ResolveSignature(Int32)","pos":[0,23]}]},{"pos":[84440,84456],"content":"ResolveSignature","needQuote":true,"nodes":[{"content":"ResolveSignature","pos":[0,16]}]},{"pos":[84544,84545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84594,84599],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84658,84659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84762,84778],"content":"ResolveSignature","needQuote":true,"nodes":[{"content":"ResolveSignature","pos":[0,16]}]},{"pos":[84866,84867],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84916,84921],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84980,84981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85238,85258],"content":"ResolveString(Int32)","needQuote":true,"nodes":[{"content":"ResolveString(Int32)","pos":[0,20]}]},{"pos":[85411,85424],"content":"ResolveString","needQuote":true,"nodes":[{"content":"ResolveString","pos":[0,13]}]},{"pos":[85509,85510],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85559,85564],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85623,85624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85724,85737],"content":"ResolveString","needQuote":true,"nodes":[{"content":"ResolveString","pos":[0,13]}]},{"pos":[85822,85823],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85872,85877],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85936,85937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86250,86302],"content":"GetPEKind(PortableExecutableKinds, ImageFileMachine)","needQuote":true,"nodes":[{"content":"GetPEKind(PortableExecutableKinds, ImageFileMachine)","pos":[0,52]}]},{"pos":[86578,86587],"content":"GetPEKind","needQuote":true,"nodes":[{"content":"GetPEKind","pos":[0,9]}]},{"pos":[86668,86669],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86747,86770],"content":"PortableExecutableKinds","needQuote":true,"nodes":[{"content":"PortableExecutableKinds","pos":[0,23]}]},{"content":",","pos":[86859,86860]},{"pos":[86936,86952],"content":"ImageFileMachine","needQuote":true,"nodes":[{"content":"ImageFileMachine","pos":[0,16]}]},{"pos":[87033,87034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87196,87205],"content":"GetPEKind","needQuote":true,"nodes":[{"content":"GetPEKind","pos":[0,9]}]},{"pos":[87286,87287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87365,87388],"content":"PortableExecutableKinds","needQuote":true,"nodes":[{"content":"PortableExecutableKinds","pos":[0,23]}]},{"content":",","pos":[87477,87478]},{"pos":[87554,87570],"content":"ImageFileMachine","needQuote":true,"nodes":[{"content":"ImageFileMachine","pos":[0,16]}]},{"pos":[87651,87652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88077,88127],"content":"GetObjectData(SerializationInfo, StreamingContext)","needQuote":true,"nodes":[{"content":"GetObjectData(SerializationInfo, StreamingContext)","pos":[0,50]}]},{"pos":[88441,88454],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[88539,88540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88623,88640],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[88734,88735]},{"pos":[88822,88838],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[88930,88931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89111,89124],"content":"GetObjectData","needQuote":true,"nodes":[{"content":"GetObjectData","pos":[0,13]}]},{"pos":[89209,89210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89293,89310],"content":"SerializationInfo","needQuote":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"content":",","pos":[89404,89405]},{"pos":[89492,89508],"content":"StreamingContext","needQuote":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[89600,89601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89972,89996],"content":"GetType(String, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean)","pos":[0,24]}]},{"pos":[90170,90177],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90256,90257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90307,90313],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[90374,90375]},{"pos":[90431,90438],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90499,90500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90610,90617],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[90696,90697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90747,90753],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[90814,90815]},{"pos":[90871,90878],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90939,90940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91200,91215],"content":"GetType(String)","needQuote":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[91358,91365],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[91444,91445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91495,91501],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[91561,91562],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91657,91664],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[91743,91744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91794,91800],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[91860,91861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92127,92160],"content":"GetType(String, Boolean, Boolean)","needQuote":true,"nodes":[{"content":"GetType(String, Boolean, Boolean)","pos":[0,33]}]},{"pos":[92365,92372],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[92451,92452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92502,92508],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[92569,92570]},{"pos":[92626,92633],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[92695,92696]},{"pos":[92752,92759],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92820,92821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92946,92953],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[93032,93033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93083,93089],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[93150,93151]},{"pos":[93207,93214],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[93276,93277]},{"pos":[93333,93340],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[93401,93402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93717,93746],"content":"FindTypes(TypeFilter, Object)","needQuote":true,"nodes":[{"content":"FindTypes(TypeFilter, Object)","pos":[0,29]}]},{"pos":[93952,93961],"content":"FindTypes","needQuote":true,"nodes":[{"content":"FindTypes","pos":[0,9]}]},{"pos":[94042,94043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94108,94118],"content":"TypeFilter","needQuote":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"content":",","pos":[94194,94195]},{"pos":[94250,94256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94316,94317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94443,94452],"content":"FindTypes","needQuote":true,"nodes":[{"content":"FindTypes","pos":[0,9]}]},{"pos":[94533,94534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94599,94609],"content":"TypeFilter","needQuote":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"content":",","pos":[94685,94686]},{"pos":[94741,94747],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[94807,94808],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95075,95085],"content":"GetTypes()","needQuote":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[95202,95210],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[95290,95291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95318,95319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95400,95408],"content":"GetTypes","needQuote":true,"nodes":[{"content":"GetTypes","pos":[0,8]}]},{"pos":[95488,95489],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95516,95517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95722,95734],"content":"IsResource()","needQuote":true,"nodes":[{"content":"IsResource()","pos":[0,12]}]},{"pos":[95855,95865],"content":"IsResource","needQuote":true,"nodes":[{"content":"IsResource","pos":[0,10]}]},{"pos":[95947,95948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95975,95976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96059,96069],"content":"IsResource","needQuote":true,"nodes":[{"content":"IsResource","pos":[0,10]}]},{"pos":[96151,96152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96179,96180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96388,96399],"content":"GetFields()","needQuote":true,"nodes":[{"content":"GetFields()","pos":[0,11]}]},{"pos":[96518,96527],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[96608,96609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96636,96637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96719,96728],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[96809,96810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96837,96838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97076,97099],"content":"GetFields(BindingFlags)","needQuote":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[97280,97289],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[97370,97371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97438,97450],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[97527,97528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97642,97651],"content":"GetFields","needQuote":true,"nodes":[{"content":"GetFields","pos":[0,9]}]},{"pos":[97732,97733],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97800,97812],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[97889,97890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98154,98170],"content":"GetField(String)","needQuote":true,"nodes":[{"content":"GetField(String)","pos":[0,16]}]},{"pos":[98315,98323],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[98403,98404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98454,98460],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98520,98521],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98617,98625],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[98705,98706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98756,98762],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98822,98823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99093,99123],"content":"GetField(String, BindingFlags)","needQuote":true,"nodes":[{"content":"GetField(String, BindingFlags)","pos":[0,30]}]},{"pos":[99331,99339],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[99419,99420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99470,99476],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[99537,99538]},{"pos":[99610,99622],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[99699,99700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99827,99835],"content":"GetField","needQuote":true,"nodes":[{"content":"GetField","pos":[0,8]}]},{"pos":[99915,99916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99966,99972],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[100033,100034]},{"pos":[100106,100118],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[100195,100196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100467,100479],"content":"GetMethods()","needQuote":true,"nodes":[{"content":"GetMethods()","pos":[0,12]}]},{"pos":[100600,100610],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[100692,100693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100720,100721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100804,100814],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[100896,100897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100924,100925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101166,101190],"content":"GetMethods(BindingFlags)","needQuote":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[101373,101383],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[101465,101466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101533,101545],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[101622,101623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101738,101748],"content":"GetMethods","needQuote":true,"nodes":[{"content":"GetMethods","pos":[0,10]}]},{"pos":[101830,101831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101898,101910],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[101987,101988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102400,102488],"content":"GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,88]}]},{"pos":[103245,103254],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[103335,103336],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103386,103392],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[103453,103454]},{"pos":[103526,103538],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[103616,103617]},{"pos":[103683,103689],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[103761,103762]},{"pos":[103840,103858],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[103942,103943]},{"pos":[103996,104000],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[104059,104061]},{"content":",","pos":[104093,104094]},{"pos":[104171,104188],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[104271,104273]},{"pos":[104304,104305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104547,104556],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[104637,104638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104688,104694],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[104755,104756]},{"pos":[104828,104840],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[104918,104919]},{"pos":[104985,104991],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[105063,105064]},{"pos":[105142,105160],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[105244,105245]},{"pos":[105298,105302],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[105360,105362],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[105391,105392]},{"pos":[105469,105486],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[105568,105570],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[105598,105599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106186,106211],"content":"GetMethod(String, Type[])","needQuote":true,"nodes":[{"content":"GetMethod(String, Type[])","pos":[0,25]}]},{"pos":[106504,106513],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[106594,106595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106645,106651],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[106712,106713]},{"pos":[106766,106770],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[106829,106831]},{"pos":[106862,106863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106974,106983],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[107064,107065],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107115,107121],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[107182,107183]},{"pos":[107236,107240],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[107298,107300],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[107328,107329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107645,107662],"content":"GetMethod(String)","needQuote":true,"nodes":[{"content":"GetMethod(String)","pos":[0,17]}]},{"pos":[107809,107818],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[107899,107900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107950,107956],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108016,108017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108114,108123],"content":"GetMethod","needQuote":true,"nodes":[{"content":"GetMethod","pos":[0,9]}]},{"pos":[108204,108205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108255,108261],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108321,108322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108713,108805],"content":"GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","needQuote":true,"nodes":[{"content":"GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])","pos":[0,92]}]},{"pos":[109578,109591],"content":"GetMethodImpl","needQuote":true,"nodes":[{"content":"GetMethodImpl","pos":[0,13]}]},{"pos":[109676,109677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109727,109733],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[109794,109795]},{"pos":[109867,109879],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[109957,109958]},{"pos":[110024,110030],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[110102,110103]},{"pos":[110181,110199],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[110283,110284]},{"pos":[110337,110341],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[110400,110402]},{"content":",","pos":[110434,110435]},{"pos":[110512,110529],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"content":"[]","pos":[110612,110614]},{"pos":[110645,110646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110892,110905],"content":"GetMethodImpl","needQuote":true,"nodes":[{"content":"GetMethodImpl","pos":[0,13]}]},{"pos":[110990,110991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111041,111047],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[111108,111109]},{"pos":[111181,111193],"content":"BindingFlags","needQuote":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"content":",","pos":[111271,111272]},{"pos":[111338,111344],"content":"Binder","needQuote":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"content":",","pos":[111416,111417]},{"pos":[111495,111513],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"content":",","pos":[111597,111598]},{"pos":[111651,111655],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[111713,111715],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[111744,111745]},{"pos":[111822,111839],"content":"ParameterModifier","needQuote":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[111921,111923],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[111951,111952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112533,112555],"content":"GetSignerCertificate()","needQuote":true,"nodes":[{"content":"GetSignerCertificate()","pos":[0,22]}]},{"pos":[112696,112716],"content":"GetSignerCertificate","needQuote":true,"nodes":[{"content":"GetSignerCertificate","pos":[0,20]}]},{"pos":[112808,112809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[112836,112837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112930,112950],"content":"GetSignerCertificate","needQuote":true,"nodes":[{"content":"GetSignerCertificate","pos":[0,20]}]},{"pos":[113042,113043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113070,113071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113361,113393],"content":"_Module.GetTypeInfoCount(UInt32)","needQuote":true,"nodes":[{"content":"_Module.GetTypeInfoCount(UInt32)","pos":[0,32]}]},{"pos":[113708,113732],"content":"_Module.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"_Module.GetTypeInfoCount","pos":[0,24]}]},{"pos":[113859,113860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113910,113916],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[113976,113977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114121,114176],"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount","pos":[0,55]}]},{"pos":[114303,114304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[114354,114360],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[114420,114421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114884,114927],"content":"_Module.GetTypeInfo(UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_Module.GetTypeInfo(UInt32, UInt32, IntPtr)","pos":[0,43]}]},{"pos":[115300,115319],"content":"_Module.GetTypeInfo","needQuote":true,"nodes":[{"content":"_Module.GetTypeInfo","pos":[0,19]}]},{"pos":[115441,115442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115492,115498],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[115559,115560]},{"pos":[115615,115621],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[115682,115683]},{"pos":[115738,115744],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[115804,115805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115971,116021],"content":"System.Runtime.InteropServices._Module.GetTypeInfo","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfo","pos":[0,50]}]},{"pos":[116143,116144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116194,116200],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[116261,116262]},{"pos":[116317,116323],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[116384,116385]},{"pos":[116440,116446],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[116506,116507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117043,117102],"content":"_Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","needQuote":true,"nodes":[{"content":"_Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)","pos":[0,59]}]},{"pos":[117550,117571],"content":"_Module.GetIDsOfNames","needQuote":true,"nodes":[{"content":"_Module.GetIDsOfNames","pos":[0,21]}]},{"pos":[117695,117696],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117744,117748],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[117807,117808]},{"pos":[117863,117869],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[117930,117931]},{"pos":[117986,117992],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[118053,118054]},{"pos":[118109,118115],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[118176,118177]},{"pos":[118232,118238],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[118298,118299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118494,118546],"content":"System.Runtime.InteropServices._Module.GetIDsOfNames","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetIDsOfNames","pos":[0,52]}]},{"pos":[118670,118671],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118719,118723],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[118782,118783]},{"pos":[118838,118844],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[118905,118906]},{"pos":[118961,118967],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[119028,119029]},{"pos":[119084,119090],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[119151,119152]},{"pos":[119207,119213],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[119273,119274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119905,119980],"content":"_Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"_Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)","pos":[0,75]}]},{"pos":[120515,120529],"content":"_Module.Invoke","needQuote":true,"nodes":[{"content":"_Module.Invoke","pos":[0,14]}]},{"pos":[120646,120647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120697,120703],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[120764,120765]},{"pos":[120818,120822],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[120881,120882]},{"pos":[120937,120943],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[121004,121005]},{"pos":[121059,121064],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[121124,121125]},{"pos":[121180,121186],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[121247,121248]},{"pos":[121303,121309],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[121370,121371]},{"pos":[121426,121432],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[121493,121494]},{"pos":[121549,121555],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[121615,121616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121845,121890],"content":"System.Runtime.InteropServices._Module.Invoke","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.Invoke","pos":[0,45]}]},{"pos":[122007,122008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122058,122064],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[122125,122126]},{"pos":[122179,122183],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[122242,122243]},{"pos":[122298,122304],"content":"UInt32","needQuote":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"content":",","pos":[122365,122366]},{"pos":[122420,122425],"content":"Int16","needQuote":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"content":",","pos":[122485,122486]},{"pos":[122541,122547],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[122608,122609]},{"pos":[122664,122670],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[122731,122732]},{"pos":[122787,122793],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"content":",","pos":[122854,122855]},{"pos":[122910,122916],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[122976,122977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123534,123550],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[123812,123827],"content":"MDStreamVersion","needQuote":true,"nodes":[{"content":"MDStreamVersion","pos":[0,15]}]},{"pos":[124086,124101],"content":"ModuleVersionId","needQuote":true,"nodes":[{"content":"ModuleVersionId","pos":[0,15]}]},{"pos":[124358,124371],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[124618,124627],"content":"ScopeName","needQuote":true,"nodes":[{"content":"ScopeName","pos":[0,9]}]},{"pos":[124865,124877],"content":"ModuleHandle","needQuote":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[125125,125147],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[125295,125301],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[125368,125369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125419,125425],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[125486,125487]},{"pos":[125542,125548],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[125608,125609],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125706,125712],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[125779,125780],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125830,125836],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[125897,125898]},{"pos":[125953,125959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126019,126020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126265,126296],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[126462,126477],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[126553,126554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126604,126610],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[126671,126672]},{"pos":[126727,126733],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126793,126794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126900,126915],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[126991,126992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127042,127048],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[127109,127110]},{"pos":[127165,127171],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[127231,127232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127458,127467],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[127560,127567],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[127635,127636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127663,127664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127733,127740],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[127808,127809],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127836,127837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128012,128029],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[128138,128153],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[128229,128230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128257,128258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128335,128350],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[128426,128427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128454,128455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128791,128811],"content":"HasModuleVersionId()","needQuote":true,"nodes":[{"content":"HasModuleVersionId()","pos":[0,20]}]},{"pos":[128968,128986],"content":"HasModuleVersionId","needQuote":true,"nodes":[{"content":"HasModuleVersionId","pos":[0,18]}]},{"pos":[129065,129066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129093,129094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129195,129213],"content":"HasModuleVersionId","needQuote":true,"nodes":[{"content":"HasModuleVersionId","pos":[0,18]}]},{"pos":[129292,129293],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129320,129321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129720,129740],"content":"GetModuleVersionId()","needQuote":true,"nodes":[{"content":"GetModuleVersionId()","pos":[0,20]}]},{"pos":[129897,129915],"content":"GetModuleVersionId","needQuote":true,"nodes":[{"content":"GetModuleVersionId","pos":[0,18]}]},{"pos":[129994,129995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130022,130023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130124,130142],"content":"GetModuleVersionId","needQuote":true,"nodes":[{"content":"GetModuleVersionId","pos":[0,18]}]},{"pos":[130221,130222],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130249,130250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130701,130725],"content":"GetCustomAttribute(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Type)","pos":[0,24]}]},{"pos":[130924,130942],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[131030,131031],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131079,131083],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[131141,131142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131265,131283],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[131371,131372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131420,131424],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[131482,131483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[131949,131972],"content":"GetCustomAttribute<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;()","pos":[0,23],"source":"GetCustomAttribute<T>()"}]},{"pos":[132277,132298],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[132389,132390],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132417,132418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132531,132555],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[132649,132650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132677,132678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133202,133223],"content":"GetCustomAttributes()","needQuote":true,"nodes":[{"content":"GetCustomAttributes()","pos":[0,21]}]},{"pos":[133400,133419],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[133508,133509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133536,133537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133648,133667],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[133756,133757],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[133784,133785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134258,134283],"content":"GetCustomAttributes(Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type)","pos":[0,25]}]},{"pos":[134484,134503],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[134592,134593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134641,134645],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[134703,134704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134828,134847],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[134936,134937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134985,134989],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[135047,135048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135518,135542],"content":"GetCustomAttributes<T>()","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;()","pos":[0,24],"source":"GetCustomAttributes<T>()"}]},{"pos":[135851,135873],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[135965,135966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135993,135994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136108,136133],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[136228,136229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136256,136257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136789,136804],"content":"IsDefined(Type)","needQuote":true,"nodes":[{"content":"IsDefined(Type)","pos":[0,15]}]},{"pos":[136985,136994],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[137073,137074],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137122,137126],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[137184,137185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137299,137308],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[137387,137388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137436,137440],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[137498,137499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137723,137729],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[137847,137864],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[138028,138058],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[138259,138287],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[138532,138558],"content":"HasModuleVersionId(Module)","needQuote":true,"nodes":[{"content":"HasModuleVersionId(Module)","pos":[0,26]}]},{"pos":[138765,138783],"content":"HasModuleVersionId","needQuote":true,"nodes":[{"content":"HasModuleVersionId","pos":[0,18]}]},{"pos":[138862,138863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138924,138930],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[139001,139002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139129,139147],"content":"HasModuleVersionId","needQuote":true,"nodes":[{"content":"HasModuleVersionId","pos":[0,18]}]},{"pos":[139226,139227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139288,139294],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[139365,139366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139636,139652],"content":"ModuleExtensions","needQuote":true,"nodes":[{"content":"ModuleExtensions","pos":[0,16]}]},{"pos":[139897,139923],"content":"GetModuleVersionId(Module)","needQuote":true,"nodes":[{"content":"GetModuleVersionId(Module)","pos":[0,26]}]},{"pos":[140130,140148],"content":"GetModuleVersionId","needQuote":true,"nodes":[{"content":"GetModuleVersionId","pos":[0,18]}]},{"pos":[140227,140228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140289,140295],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[140366,140367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140494,140512],"content":"GetModuleVersionId","needQuote":true,"nodes":[{"content":"GetModuleVersionId","pos":[0,18]}]},{"pos":[140591,140592],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140653,140659],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[140730,140731],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141038,141070],"content":"GetCustomAttribute(Module, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Module, Type)","pos":[0,32]}]},{"pos":[141320,141338],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[141426,141427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141488,141494],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[141566,141567]},{"pos":[141620,141624],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[141682,141683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141831,141849],"content":"GetCustomAttribute","needQuote":true,"nodes":[{"content":"GetCustomAttribute","pos":[0,18]}]},{"pos":[141937,141938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141999,142005],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[142077,142078]},{"pos":[142131,142135],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[142193,142194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142509,142534],"content":"CustomAttributeExtensions","needQuote":true,"nodes":[{"content":"CustomAttributeExtensions","pos":[0,25]}]},{"pos":[142818,142847],"content":"GetCustomAttribute<T>(Module)","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;(Module)","pos":[0,29],"source":"GetCustomAttribute<T>(Module)"}]},{"pos":[143232,143253],"content":"GetCustomAttribute<T>","needQuote":true,"nodes":[{"content":"GetCustomAttribute&lt;T&gt;","pos":[0,21],"source":"GetCustomAttribute<T>"}]},{"pos":[143344,143345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143406,143412],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[143483,143484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143623,143647],"content":"GetCustomAttribute(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttribute(Of T)","pos":[0,24]}]},{"pos":[143741,143742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143803,143809],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[143880,143881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144279,144306],"content":"GetCustomAttributes(Module)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Module)","pos":[0,27]}]},{"pos":[144533,144552],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[144641,144642],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144703,144709],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[144780,144781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144918,144937],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[145026,145027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145088,145094],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[145165,145166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145494,145527],"content":"GetCustomAttributes(Module, Type)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Module, Type)","pos":[0,33]}]},{"pos":[145779,145798],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[145887,145888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145949,145955],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[146027,146028]},{"pos":[146081,146085],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[146143,146144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146293,146312],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[146401,146402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146463,146469],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[146541,146542]},{"pos":[146595,146599],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[146657,146658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146995,147025],"content":"GetCustomAttributes<T>(Module)","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;(Module)","pos":[0,30],"source":"GetCustomAttributes<T>(Module)"}]},{"pos":[147414,147436],"content":"GetCustomAttributes<T>","needQuote":true,"nodes":[{"content":"GetCustomAttributes&lt;T&gt;","pos":[0,22],"source":"GetCustomAttributes<T>"}]},{"pos":[147528,147529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147590,147596],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[147667,147668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147808,147833],"content":"GetCustomAttributes(Of T)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Of T)","pos":[0,25]}]},{"pos":[147928,147929],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147990,147996],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[148067,148068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148471,148494],"content":"IsDefined(Module, Type)","needQuote":true,"nodes":[{"content":"IsDefined(Module, Type)","pos":[0,23]}]},{"pos":[148726,148735],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[148814,148815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148876,148882],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[148954,148955]},{"pos":[149008,149012],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[149070,149071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149210,149219],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[149298,149299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149360,149366],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":",","pos":[149438,149439]},{"pos":[149492,149496],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[149554,149555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149848,149856],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[150074,150082],"content":"Assembly","needQuote":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[150302,150320],"content":"FullyQualifiedName","needQuote":true,"nodes":[{"content":"FullyQualifiedName","pos":[0,18]}]},{"pos":[150544,150550],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[150728,150732],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[150944,150958],"content":"TypeAttributes","needQuote":true,"nodes":[{"content":"TypeAttributes","pos":[0,14]}]},{"pos":[151147,151151],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[151327,151338],"content":"EnumBuilder","needQuote":true,"nodes":[{"content":"EnumBuilder","pos":[0,11]}]},{"pos":[151562,151578],"content":"MethodAttributes","needQuote":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[151809,151827],"content":"CallingConventions","needQuote":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[151993,151999],"content":"Type[]","needQuote":true,"nodes":[{"content":"Type[]","pos":[0,6]}]},{"pos":[152119,152123],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[152161,152163]},{"pos":[152226,152230],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[152267,152269],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[152441,152454],"content":"MethodBuilder","needQuote":true,"nodes":[{"content":"MethodBuilder","pos":[0,13]}]},{"pos":[152617,152625],"content":"Type[][]","needQuote":true,"nodes":[{"content":"Type[][]","pos":[0,8]}]},{"pos":[152751,152755],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[152814,152816]},{"content":"[]","pos":[152848,152850]},{"pos":[152913,152917],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[152975,152977],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[153005,153007],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[153107,153113],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[153233,153237],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[153296,153298]},{"pos":[153361,153365],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[153423,153425],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[153589,153604],"content":"FieldAttributes","needQuote":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[153836,153848],"content":"FieldBuilder","needQuote":true,"nodes":[{"content":"FieldBuilder","pos":[0,12]}]},{"pos":[154080,154091],"content":"TypeBuilder","needQuote":true,"nodes":[{"content":"TypeBuilder","pos":[0,11]}]},{"pos":[154282,154287],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[154466,154477],"content":"PackingSize","needQuote":true,"nodes":[{"content":"PackingSize","pos":[0,11]}]},{"pos":[154719,154733],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[154874,154880],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[154958,154959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155009,155015],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155075,155076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155170,155176],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[155254,155255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155305,155311],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155371,155372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155556,155563],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[155737,155747],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[155966,155979],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[156102,156113],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[156196,156197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156224,156225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156309,156320],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[156403,156404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156431,156432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156635,156650],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[156892,156914],"content":"CustomAttributeBuilder","needQuote":true,"nodes":[{"content":"CustomAttributeBuilder","pos":[0,22]}]},{"pos":[157158,157183],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[157396,157413],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[157589,157610],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Reflection.Emit.ModuleBuilder\n  commentId: T:System.Reflection.Emit.ModuleBuilder\n  id: ModuleBuilder\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.ModuleBuilder.Assembly\n  - System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  - System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  - System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  - System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.GetHashCode\n  - System.Reflection.Emit.ModuleBuilder.Name\n  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  langs:\n  - csharp\n  - vb\n  name: ModuleBuilder\n  fullName: System.Reflection.Emit.ModuleBuilder\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ModuleBuilder\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 52\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines and represents a module in a dynamic assembly.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(MayLeakOnAbort = true)]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_ModuleBuilder))]\n\n      [ComVisible(true)]\n\n      public class ModuleBuilder : Module, _Module, ISerializable, ICustomAttributeProvider, _ModuleBuilder\n    content.vb: >-\n      <HostProtection(MayLeakOnAbort:=True)>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_ModuleBuilder))>\n\n      <ComVisible(True)>\n\n      Public Class ModuleBuilder\n          Inherits\n           Module  Implements _Module, ISerializable, ICustomAttributeProvider, _ModuleBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.Module\n  implements:\n  - System.Runtime.InteropServices._Module\n  - System.Runtime.Serialization.ISerializable\n  - System.Reflection.ICustomAttributeProvider\n  inheritedMembers:\n  - System.Reflection.Module.FilterTypeName\n  - System.Reflection.Module.FilterTypeNameIgnoreCase\n  - System.Reflection.Module.ToString\n  - System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Module.GetCustomAttributesData\n  - System.Reflection.Module.ResolveMethod(System.Int32)\n  - System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveField(System.Int32)\n  - System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveType(System.Int32)\n  - System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveMember(System.Int32)\n  - System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveSignature(System.Int32)\n  - System.Reflection.Module.ResolveString(System.Int32)\n  - System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  - System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Module.GetType(System.String,System.Boolean)\n  - System.Reflection.Module.GetType(System.String)\n  - System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  - System.Reflection.Module.GetTypes\n  - System.Reflection.Module.IsResource\n  - System.Reflection.Module.GetFields\n  - System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetField(System.String)\n  - System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetMethods\n  - System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Module.GetMethod(System.String,System.Type[])\n  - System.Reflection.Module.GetMethod(System.String)\n  - System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Module.GetSignerCertificate\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.Module.CustomAttributes\n  - System.Reflection.Module.MDStreamVersion\n  - System.Reflection.Module.ModuleVersionId\n  - System.Reflection.Module.MetadataToken\n  - System.Reflection.Module.ScopeName\n  - System.Reflection.Module.ModuleHandle\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ModuleBuilder\n  extensionMethods:\n  - System.Reflection.Module.System.Reflection.ModuleExtensions.HasModuleVersionId\n  - System.Reflection.Module.System.Reflection.ModuleExtensions.GetModuleVersionId\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  - System.Reflection.Module.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n- uid: System.Reflection.Emit.ModuleBuilder.Assembly\n  commentId: P:System.Reflection.Emit.ModuleBuilder.Assembly\n  id: Assembly\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: Assembly\n  fullName: System.Reflection.Emit.ModuleBuilder.Assembly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Assembly\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1079\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets the dynamic assembly that defined this instance of <xref href=\\\"System.Reflection.Emit.ModuleBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override Assembly Assembly { get; }\n    content.vb: Public Overrides ReadOnly Property Assembly As Assembly\n    parameters: []\n    return:\n      type: System.Reflection.Assembly\n      description: \"\\n<p>The dynamic assembly that defined the current dynamic module.</p>\\n\"\n  overridden: System.Reflection.Module.Assembly\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ModuleBuilder.Assembly\n- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  commentId: P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  id: FullyQualifiedName\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: FullyQualifiedName\n  fullName: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullyQualifiedName\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 950\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Gets a <strong>String</strong> representing the fully qualified name and path to this module.</p>\\n\"\n  syntax:\n    content: >-\n      public override string FullyQualifiedName\n\n      {\n          [SecurityCritical]\n          get;\n      }\n    content.vb: Public Overrides ReadOnly Property FullyQualifiedName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The fully qualified module name.</p>\\n\"\n  overridden: System.Reflection.Module.FullyQualifiedName\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ModuleBuilder.FullyQualifiedName\n- uid: System.Reflection.Emit.ModuleBuilder.Name\n  commentId: P:System.Reflection.Emit.ModuleBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.Emit.ModuleBuilder.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1071\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>A string that indicates that this is an in-memory module.</p>\\n\"\n  syntax:\n    content: public override string Name { get; }\n    content.vb: Public Overrides ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Text that indicates that this is an in-memory module.</p>\\n\"\n  overridden: System.Reflection.Module.Name\n  modifiers.csharp:\n  - public\n  - override\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - ReadOnly\n  nameWithType: ModuleBuilder.Name\n- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  commentId: M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  id: CreateGlobalFunctions\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: CreateGlobalFunctions()\n  fullName: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateGlobalFunctions\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1528\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Completes the global function definitions and global data definitions for this dynamic module.</p>\\n\"\n  syntax:\n    content: public void CreateGlobalFunctions()\n    content.vb: Public Sub CreateGlobalFunctions\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>This method was called previously. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.CreateGlobalFunctions()\n- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  id: DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineEnum(String, TypeAttributes, Type)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String, System.Reflection.TypeAttributes, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineEnum\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1214\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines an enumeration type that is a value type with a single non-static field called <em>value__</em> of the specified type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public EnumBuilder DefineEnum(string name, TypeAttributes visibility, Type underlyingType)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineEnum(name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the enumeration type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: visibility\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The type attributes for the enumeration. The attributes are any bits defined by <xref href=\\\"System.Reflection.TypeAttributes.VisibilityMask\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: underlyingType\n      type: System.Type\n      description: \"\\n<p>The underlying type for the enumeration. This must be a built-in integer type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.EnumBuilder\n      description: \"\\n<p>The defined enumeration.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>Attributes other than visibility attributes are provided.</p>\\n<p>-or- </p>\\n<p>An enumeration with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>The visibility attributes do not match the scope of the enumeration. For example, <xref href=\\\"System.Reflection.TypeAttributes.NestedPublic\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is specified for <em>visibility</em>, but the enumeration is not a nested type. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineEnum(String, TypeAttributes, Type)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineGlobalMethod\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1428\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. <em>attributes</em> must include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention for the method. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the method's parameters. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>The defined global method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The method is not static. That is, <em>attributes</em> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>An element in the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type())\n  name.vb: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type())\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  nameWithType.vb: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type())\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type[], System.Type[], System.Type[], System.Type[][], System.Type[][])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineGlobalMethod\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1436\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)\n    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded null characters. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. <em>attributes</em> must include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The calling convention for the method. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: requiredReturnTypeCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the required custom modifiers for the return type, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Runtime.CompilerServices.IsBoxed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If the return type has no required custom modifiers, specify <strong>null</strong>. </p>\\n\"\n    - id: optionalReturnTypeCustomModifiers\n      type: System.Type[]\n      description: \"\\n<p>An array of types representing the optional custom modifiers for the return type, such as <xref href=\\\"System.Runtime.CompilerServices.IsConst\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Runtime.CompilerServices.IsBoxed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If the return type has no optional custom modifiers, specify <strong>null</strong>. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the method's parameters. </p>\\n\"\n    - id: requiredParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify <strong>null</strong> instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    - id: optionalParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: \"\\n<p>An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify <strong>null</strong> instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <strong>null</strong> instead of an array of arrays.</p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>The defined global method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The method is not static. That is, <em>attributes</em> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or-</p>\\n<p>An element in the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The <xref href=\\\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Reflection.CallingConventions, System.Type, System.Type(), System.Type(), System.Type(), System.Type()(), System.Type()())\n  name.vb: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType.vb: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type(), Type(), Type(), Type()(), Type()())\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineGlobalMethod\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1421\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines a global method with the specified name, attributes, return type, and parameter types.</p>\\n\"\n  syntax:\n    content: public MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)\n    content.vb: Public Function DefineGlobalMethod(name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the method. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: \"\\n<p>The attributes of the method. <em>attributes</em> must include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the method's parameters. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: \"\\n<p>The defined global method.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The method is not static. That is, <em>attributes</em> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>-or- </p>\\n<p>The length of <em>name</em> is zero </p>\\n<p>-or-</p>\\n<p>An element in the <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> array is <strong>null</strong>.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String, System.Reflection.MethodAttributes, System.Type, System.Type())\n  name.vb: DefineGlobalMethod(String, MethodAttributes, Type, Type())\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  nameWithType.vb: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type())\n- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineInitializedData(String, Byte[], FieldAttributes)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String, System.Byte[], System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineInitializedData\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1552\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines an initialized data field in the .sdata section of the portable executable (PE) file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public FieldBuilder DefineInitializedData(string name, byte[] data, FieldAttributes attributes)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineInitializedData(name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name used to refer to the data. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: data\n      type: System.Byte[]\n      description: \"\\n<p>The binary large object (BLOB) of data. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes for the field. The default is <strong>Static</strong>. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>A field to reference the data.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>The size of <em>data</em> is less than or equal to zero or greater than or equal to 0x3f0000. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> or <em>data</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String, System.Byte(), System.Reflection.FieldAttributes)\n  name.vb: DefineInitializedData(String, Byte(), FieldAttributes)\n  nameWithType: ModuleBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n  nameWithType.vb: ModuleBuilder.DefineInitializedData(String, Byte(), FieldAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  id: DefineType(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1099\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> for a private type with the specified name in this module.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineType(string name)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineType(name As String) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type, including the namespace. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A private type with the specified name.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  id: DefineType(System.String,System.Reflection.TypeAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1110\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given the type name and the type attributes.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineType(name As String, attr As TypeAttributes) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the defined type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes, Type)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1121\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given type name, its attributes, and the type that the defined type extends.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function DefineType(name As String, attr As TypeAttributes, parent As Type) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attribute to be associated with the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the defined type extends. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes, Type, Int32)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1136\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, int typesize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the defined type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the defined type extends. </p>\\n\"\n    - id: typesize\n      type: System.Int32\n      description: \"\\n<p>The total size of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes, Type, PackingSize)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1186\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packsize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the defined type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the defined type extends. </p>\\n\"\n    - id: packsize\n      type: System.Reflection.Emit.PackingSize\n      description: \"\\n<p>The packing size of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Reflection.Emit.PackingSize, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1151\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packingSize, int typesize)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, packingSize As PackingSize, typesize As Integer) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes of the defined type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the defined type extends. </p>\\n\"\n    - id: packingSize\n      type: System.Reflection.Emit.PackingSize\n      description: \"\\n<p>The packing size of the type. </p>\\n\"\n    - id: typesize\n      type: System.Int32\n      description: \"\\n<p>The total size of the type. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineType(String, TypeAttributes, Type, Type[])\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineType\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1165\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Constructs a <strong>TypeBuilder</strong> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [ComVisible(true)]\n\n      public TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, Type[] interfaces)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <ComVisible(True)>\n\n      Public Function DefineType(name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The full path of the type. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: \"\\n<p>The attributes to be associated with the type. </p>\\n\"\n    - id: parent\n      type: System.Type\n      description: \"\\n<p>The type that the defined type extends. </p>\\n\"\n    - id: interfaces\n      type: System.Type[]\n      description: \"\\n<p>The list of interfaces that the type implements. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: \"\\n<p>A <strong>TypeBuilder</strong> created with all of the requested attributes.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>A type with the given name exists in the parent assembly of this module.</p>\\n<p>-or- </p>\\n<p>Nested type attributes are set on a type that is not nested. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.DefineType(System.String, System.Reflection.TypeAttributes, System.Type, System.Type())\n  name.vb: DefineType(String, TypeAttributes, Type, Type())\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type[])\n  nameWithType.vb: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type())\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: DefineUninitializedData(String, Int32, FieldAttributes)\n  fullName: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String, System.Int32, System.Reflection.FieldAttributes)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DefineUninitializedData\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 1587\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Function DefineUninitializedData(name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name used to refer to the data. <em>name</em> cannot contain embedded nulls. </p>\\n\"\n    - id: size\n      type: System.Int32\n      description: \"\\n<p>The size of the data field. </p>\\n\"\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: \"\\n<p>The attributes for the field. </p>\\n\"\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: \"\\n<p>A field to reference the data.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The length of <em>name</em> is zero.</p>\\n<p>-or- </p>\\n<p>\\n<em>size</em> is less than or equal to zero, or greater than or equal to 0x003f0000. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has been previously called. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 764\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to the specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Reflection.Module.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ModuleBuilder.Equals(Object)\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  fullName: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetArrayMethod\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 2038\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the named method on an array class.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public MethodInfo GetArrayMethod(Type arrayClass, string methodName, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function GetArrayMethod(arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo\n    parameters:\n    - id: arrayClass\n      type: System.Type\n      description: \"\\n<p>An array class. </p>\\n\"\n    - id: methodName\n      type: System.String\n      description: \"\\n<p>The name of a method on the array class. </p>\\n\"\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: \"\\n<p>The method's calling convention. </p>\\n\"\n    - id: returnType\n      type: System.Type\n      description: \"\\n<p>The return type of the method. </p>\\n\"\n    - id: parameterTypes\n      type: System.Type[]\n      description: \"\\n<p>The types of the method's parameters. </p>\\n\"\n    return:\n      type: System.Reflection.MethodInfo\n      description: \"\\n<p>The named method on an array class.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>arrayClass</em> is not an array. </p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>arrayClass</em> or <em>methodName</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type, System.String, System.Reflection.CallingConventions, System.Type, System.Type())\n  name.vb: GetArrayMethod(Type, String, CallingConventions, Type, Type())\n  nameWithType: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  nameWithType.vb: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type())\n- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Reflection.Emit.ModuleBuilder.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 769\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Reflection.Module.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: ModuleBuilder.GetHashCode()\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 2212\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [ComVisible(true)]\n\n      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)\n    content.vb: >-\n      <SecurityCritical>\n\n      <ComVisible(True)>\n\n      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: \"\\n<p>The constructor for the custom attribute. </p>\\n\"\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: \"\\n<p>A byte BLOB representing the attribute. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())\n  name.vb: SetCustomAttribute(ConstructorInfo, Byte())\n  nameWithType: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType.vb: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte())\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  fullName: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetCustomAttribute\n    path: src/mscorlib/src/System/Reflection/Emit/ModuleBuilder.cs\n    startLine: 2233\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Applies a custom attribute to this module by using a custom attribute builder.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: \"\\n<p>An instance of a helper class that specifies the custom attribute to apply. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>customBuilder</em> is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.Runtime.InteropServices._Module\n  parent: System.Runtime.InteropServices\n  isExternal: true\n  name: _Module\n  fullName: System.Runtime.InteropServices._Module\n  nameWithType: _Module\n  commentId: T:System.Runtime.InteropServices._Module\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n  nameWithType: ISerializable\n  commentId: T:System.Runtime.Serialization.ISerializable\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Reflection.Module.FilterTypeName\n  parent: System.Reflection.Module\n  isExternal: true\n  name: FilterTypeName\n  fullName: System.Reflection.Module.FilterTypeName\n  nameWithType: Module.FilterTypeName\n  commentId: F:System.Reflection.Module.FilterTypeName\n- uid: System.Reflection.Module.FilterTypeNameIgnoreCase\n  parent: System.Reflection.Module\n  isExternal: true\n  name: FilterTypeNameIgnoreCase\n  fullName: System.Reflection.Module.FilterTypeNameIgnoreCase\n  nameWithType: Module.FilterTypeNameIgnoreCase\n  commentId: F:System.Reflection.Module.FilterTypeNameIgnoreCase\n- uid: System.Reflection.Module.ToString\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ToString()\n  fullName: System.Reflection.Module.ToString()\n  spec.csharp:\n  - uid: System.Reflection.Module.ToString\n    name: ToString\n    fullName: System.Reflection.Module.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ToString\n    name: ToString\n    fullName: System.Reflection.Module.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.ToString()\n  commentId: M:System.Reflection.Module.ToString\n- uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Module.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Module.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.Module.GetCustomAttributes(System.Boolean)\n- uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Module.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.Module.GetCustomAttributes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.Module.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.Module.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.Module.IsDefined\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n- uid: System.Reflection.Module.GetCustomAttributesData\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetCustomAttributesData()\n  fullName: System.Reflection.Module.GetCustomAttributesData()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.Module.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetCustomAttributesData\n    name: GetCustomAttributesData\n    fullName: System.Reflection.Module.GetCustomAttributesData\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetCustomAttributesData()\n  commentId: M:System.Reflection.Module.GetCustomAttributesData\n- uid: System.Reflection.Module.ResolveMethod(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveMethod(Int32)\n  fullName: System.Reflection.Module.ResolveMethod(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveMethod(System.Int32)\n    name: ResolveMethod\n    fullName: System.Reflection.Module.ResolveMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveMethod(System.Int32)\n    name: ResolveMethod\n    fullName: System.Reflection.Module.ResolveMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveMethod(Int32)\n  commentId: M:System.Reflection.Module.ResolveMethod(System.Int32)\n- uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveMethod(Int32, Type[], Type[])\n  fullName: System.Reflection.Module.ResolveMethod(System.Int32, System.Type[], System.Type[])\n  fullname.vb: System.Reflection.Module.ResolveMethod(System.Int32, System.Type(), System.Type())\n  name.vb: ResolveMethod(Int32, Type(), Type())\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n    name: ResolveMethod\n    fullName: System.Reflection.Module.ResolveMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n    name: ResolveMethod\n    fullName: System.Reflection.Module.ResolveMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveMethod(Int32, Type[], Type[])\n  nameWithType.vb: Module.ResolveMethod(Int32, Type(), Type())\n  commentId: M:System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n- uid: System.Reflection.Module.ResolveField(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveField(Int32)\n  fullName: System.Reflection.Module.ResolveField(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveField(System.Int32)\n    name: ResolveField\n    fullName: System.Reflection.Module.ResolveField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveField(System.Int32)\n    name: ResolveField\n    fullName: System.Reflection.Module.ResolveField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveField(Int32)\n  commentId: M:System.Reflection.Module.ResolveField(System.Int32)\n- uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveField(Int32, Type[], Type[])\n  fullName: System.Reflection.Module.ResolveField(System.Int32, System.Type[], System.Type[])\n  fullname.vb: System.Reflection.Module.ResolveField(System.Int32, System.Type(), System.Type())\n  name.vb: ResolveField(Int32, Type(), Type())\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n    name: ResolveField\n    fullName: System.Reflection.Module.ResolveField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n    name: ResolveField\n    fullName: System.Reflection.Module.ResolveField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveField(Int32, Type[], Type[])\n  nameWithType.vb: Module.ResolveField(Int32, Type(), Type())\n  commentId: M:System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n- uid: System.Reflection.Module.ResolveType(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveType(Int32)\n  fullName: System.Reflection.Module.ResolveType(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveType(System.Int32)\n    name: ResolveType\n    fullName: System.Reflection.Module.ResolveType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveType(System.Int32)\n    name: ResolveType\n    fullName: System.Reflection.Module.ResolveType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveType(Int32)\n  commentId: M:System.Reflection.Module.ResolveType(System.Int32)\n- uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveType(Int32, Type[], Type[])\n  fullName: System.Reflection.Module.ResolveType(System.Int32, System.Type[], System.Type[])\n  fullname.vb: System.Reflection.Module.ResolveType(System.Int32, System.Type(), System.Type())\n  name.vb: ResolveType(Int32, Type(), Type())\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n    name: ResolveType\n    fullName: System.Reflection.Module.ResolveType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n    name: ResolveType\n    fullName: System.Reflection.Module.ResolveType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveType(Int32, Type[], Type[])\n  nameWithType.vb: Module.ResolveType(Int32, Type(), Type())\n  commentId: M:System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n- uid: System.Reflection.Module.ResolveMember(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveMember(Int32)\n  fullName: System.Reflection.Module.ResolveMember(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveMember(System.Int32)\n    name: ResolveMember\n    fullName: System.Reflection.Module.ResolveMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveMember(System.Int32)\n    name: ResolveMember\n    fullName: System.Reflection.Module.ResolveMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveMember(Int32)\n  commentId: M:System.Reflection.Module.ResolveMember(System.Int32)\n- uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveMember(Int32, Type[], Type[])\n  fullName: System.Reflection.Module.ResolveMember(System.Int32, System.Type[], System.Type[])\n  fullname.vb: System.Reflection.Module.ResolveMember(System.Int32, System.Type(), System.Type())\n  name.vb: ResolveMember(Int32, Type(), Type())\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n    name: ResolveMember\n    fullName: System.Reflection.Module.ResolveMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n    name: ResolveMember\n    fullName: System.Reflection.Module.ResolveMember\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveMember(Int32, Type[], Type[])\n  nameWithType.vb: Module.ResolveMember(Int32, Type(), Type())\n  commentId: M:System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n- uid: System.Reflection.Module.ResolveSignature(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveSignature(Int32)\n  fullName: System.Reflection.Module.ResolveSignature(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveSignature(System.Int32)\n    name: ResolveSignature\n    fullName: System.Reflection.Module.ResolveSignature\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveSignature(System.Int32)\n    name: ResolveSignature\n    fullName: System.Reflection.Module.ResolveSignature\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveSignature(Int32)\n  commentId: M:System.Reflection.Module.ResolveSignature(System.Int32)\n- uid: System.Reflection.Module.ResolveString(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ResolveString(Int32)\n  fullName: System.Reflection.Module.ResolveString(System.Int32)\n  spec.csharp:\n  - uid: System.Reflection.Module.ResolveString(System.Int32)\n    name: ResolveString\n    fullName: System.Reflection.Module.ResolveString\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.ResolveString(System.Int32)\n    name: ResolveString\n    fullName: System.Reflection.Module.ResolveString\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.ResolveString(Int32)\n  commentId: M:System.Reflection.Module.ResolveString(System.Int32)\n- uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  fullName: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds, System.Reflection.ImageFileMachine)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n    name: GetPEKind\n    fullName: System.Reflection.Module.GetPEKind\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.PortableExecutableKinds\n    name: PortableExecutableKinds\n    fullName: System.Reflection.PortableExecutableKinds\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ImageFileMachine\n    name: ImageFileMachine\n    fullName: System.Reflection.ImageFileMachine\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n    name: GetPEKind\n    fullName: System.Reflection.Module.GetPEKind\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.PortableExecutableKinds\n    name: PortableExecutableKinds\n    fullName: System.Reflection.PortableExecutableKinds\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ImageFileMachine\n    name: ImageFileMachine\n    fullName: System.Reflection.ImageFileMachine\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  commentId: M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  fullName: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Reflection.Module.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n    name: GetObjectData\n    fullName: System.Reflection.Module.GetObjectData\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.SerializationInfo\n    name: SerializationInfo\n    fullName: System.Runtime.Serialization.SerializationInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.StreamingContext\n    name: StreamingContext\n    fullName: System.Runtime.Serialization.StreamingContext\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetObjectData(SerializationInfo, StreamingContext)\n  commentId: M:System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetType(String, Boolean)\n  fullName: System.Reflection.Module.GetType(System.String, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetType(System.String,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetType(String, Boolean)\n  commentId: M:System.Reflection.Module.GetType(System.String,System.Boolean)\n- uid: System.Reflection.Module.GetType(System.String)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetType(String)\n  fullName: System.Reflection.Module.GetType(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetType(System.String)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetType(System.String)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetType(String)\n  commentId: M:System.Reflection.Module.GetType(System.String)\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetType(String, Boolean, Boolean)\n  fullName: System.Reflection.Module.GetType(System.String, System.Boolean, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n    name: GetType\n    fullName: System.Reflection.Module.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetType(String, Boolean, Boolean)\n  commentId: M:System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: FindTypes(TypeFilter, Object)\n  fullName: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter, System.Object)\n  spec.csharp:\n  - uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n    name: FindTypes\n    fullName: System.Reflection.Module.FindTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeFilter\n    name: TypeFilter\n    fullName: System.Reflection.TypeFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n    name: FindTypes\n    fullName: System.Reflection.Module.FindTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.TypeFilter\n    name: TypeFilter\n    fullName: System.Reflection.TypeFilter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.FindTypes(TypeFilter, Object)\n  commentId: M:System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n- uid: System.Reflection.Module.GetTypes\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetTypes()\n  fullName: System.Reflection.Module.GetTypes()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.Module.GetTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetTypes\n    name: GetTypes\n    fullName: System.Reflection.Module.GetTypes\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetTypes()\n  commentId: M:System.Reflection.Module.GetTypes\n- uid: System.Reflection.Module.IsResource\n  parent: System.Reflection.Module\n  isExternal: true\n  name: IsResource()\n  fullName: System.Reflection.Module.IsResource()\n  spec.csharp:\n  - uid: System.Reflection.Module.IsResource\n    name: IsResource\n    fullName: System.Reflection.Module.IsResource\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.IsResource\n    name: IsResource\n    fullName: System.Reflection.Module.IsResource\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.IsResource()\n  commentId: M:System.Reflection.Module.IsResource\n- uid: System.Reflection.Module.GetFields\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetFields()\n  fullName: System.Reflection.Module.GetFields()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetFields\n    name: GetFields\n    fullName: System.Reflection.Module.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetFields\n    name: GetFields\n    fullName: System.Reflection.Module.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetFields()\n  commentId: M:System.Reflection.Module.GetFields\n- uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetFields(BindingFlags)\n  fullName: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.Module.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n    name: GetFields\n    fullName: System.Reflection.Module.GetFields\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetFields(BindingFlags)\n  commentId: M:System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n- uid: System.Reflection.Module.GetField(System.String)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetField(String)\n  fullName: System.Reflection.Module.GetField(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetField(System.String)\n    name: GetField\n    fullName: System.Reflection.Module.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetField(System.String)\n    name: GetField\n    fullName: System.Reflection.Module.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetField(String)\n  commentId: M:System.Reflection.Module.GetField(System.String)\n- uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetField(String, BindingFlags)\n  fullName: System.Reflection.Module.GetField(System.String, System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.Module.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n    name: GetField\n    fullName: System.Reflection.Module.GetField\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetField(String, BindingFlags)\n  commentId: M:System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n- uid: System.Reflection.Module.GetMethods\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethods()\n  fullName: System.Reflection.Module.GetMethods()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethods\n    name: GetMethods\n    fullName: System.Reflection.Module.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethods\n    name: GetMethods\n    fullName: System.Reflection.Module.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethods()\n  commentId: M:System.Reflection.Module.GetMethods\n- uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethods(BindingFlags)\n  fullName: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.Module.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n    name: GetMethods\n    fullName: System.Reflection.Module.GetMethods\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethods(BindingFlags)\n  commentId: M:System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Reflection.Module.GetMethod(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Module.GetMethod(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethod(String, Type[])\n  fullName: System.Reflection.Module.GetMethod(System.String, System.Type[])\n  fullname.vb: System.Reflection.Module.GetMethod(System.String, System.Type())\n  name.vb: GetMethod(String, Type())\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethod(String, Type[])\n  nameWithType.vb: Module.GetMethod(String, Type())\n  commentId: M:System.Reflection.Module.GetMethod(System.String,System.Type[])\n- uid: System.Reflection.Module.GetMethod(System.String)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethod(String)\n  fullName: System.Reflection.Module.GetMethod(System.String)\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethod(System.String)\n    name: GetMethod\n    fullName: System.Reflection.Module.GetMethod\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethod(String)\n  commentId: M:System.Reflection.Module.GetMethod(System.String)\n- uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type[], System.Reflection.ParameterModifier[])\n  fullname.vb: System.Reflection.Module.GetMethodImpl(System.String, System.Reflection.BindingFlags, System.Reflection.Binder, System.Reflection.CallingConventions, System.Type(), System.Reflection.ParameterModifier())\n  name.vb: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  spec.csharp:\n  - uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethodImpl\n    fullName: System.Reflection.Module.GetMethodImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n    name: GetMethodImpl\n    fullName: System.Reflection.Module.GetMethodImpl\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.BindingFlags\n    name: BindingFlags\n    fullName: System.Reflection.BindingFlags\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.Binder\n    name: Binder\n    fullName: System.Reflection.Binder\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.CallingConventions\n    name: CallingConventions\n    fullName: System.Reflection.CallingConventions\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: Module.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType.vb: Module.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type(), ParameterModifier())\n  commentId: M:System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n- uid: System.Reflection.Module.GetSignerCertificate\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetSignerCertificate()\n  fullName: System.Reflection.Module.GetSignerCertificate()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetSignerCertificate\n    name: GetSignerCertificate\n    fullName: System.Reflection.Module.GetSignerCertificate\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetSignerCertificate\n    name: GetSignerCertificate\n    fullName: System.Reflection.Module.GetSignerCertificate\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetSignerCertificate()\n  commentId: M:System.Reflection.Module.GetSignerCertificate\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: _Module.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(System.UInt32)\n  name.vb: System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  spec.csharp:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n    name: _Module.GetTypeInfoCount\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n    name: System.Runtime.InteropServices._Module.GetTypeInfoCount\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module._Module.GetTypeInfoCount(UInt32)\n  nameWithType.vb: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  commentId: M:System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: _Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: _Module.GetTypeInfo\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._Module.GetTypeInfo\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module._Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType.vb: Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: _Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: _Module.GetIDsOfNames\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n    name: System.Runtime.InteropServices._Module.GetIDsOfNames\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module._Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType.vb: Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  commentId: M:System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: _Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)\n  name.vb: System.Runtime.InteropServices._Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  spec.csharp:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: _Module.Invoke\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n    name: System.Runtime.InteropServices._Module.Invoke\n    fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.UInt32\n    name: UInt32\n    fullName: System.UInt32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int16\n    name: Int16\n    fullName: System.Int16\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.IntPtr\n    name: IntPtr\n    fullName: System.IntPtr\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module._Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType.vb: Module.System.Runtime.InteropServices._Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  commentId: M:System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n- uid: System.Reflection.Module.CustomAttributes\n  parent: System.Reflection.Module\n  isExternal: true\n  name: CustomAttributes\n  fullName: System.Reflection.Module.CustomAttributes\n  nameWithType: Module.CustomAttributes\n  commentId: P:System.Reflection.Module.CustomAttributes\n- uid: System.Reflection.Module.MDStreamVersion\n  parent: System.Reflection.Module\n  isExternal: true\n  name: MDStreamVersion\n  fullName: System.Reflection.Module.MDStreamVersion\n  nameWithType: Module.MDStreamVersion\n  commentId: P:System.Reflection.Module.MDStreamVersion\n- uid: System.Reflection.Module.ModuleVersionId\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ModuleVersionId\n  fullName: System.Reflection.Module.ModuleVersionId\n  nameWithType: Module.ModuleVersionId\n  commentId: P:System.Reflection.Module.ModuleVersionId\n- uid: System.Reflection.Module.MetadataToken\n  parent: System.Reflection.Module\n  isExternal: true\n  name: MetadataToken\n  fullName: System.Reflection.Module.MetadataToken\n  nameWithType: Module.MetadataToken\n  commentId: P:System.Reflection.Module.MetadataToken\n- uid: System.Reflection.Module.ScopeName\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ScopeName\n  fullName: System.Reflection.Module.ScopeName\n  nameWithType: Module.ScopeName\n  commentId: P:System.Reflection.Module.ScopeName\n- uid: System.Reflection.Module.ModuleHandle\n  parent: System.Reflection.Module\n  isExternal: true\n  name: ModuleHandle\n  fullName: System.Reflection.Module.ModuleHandle\n  nameWithType: Module.ModuleHandle\n  commentId: P:System.Reflection.Module.ModuleHandle\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Reflection.Module.System.Reflection.ModuleExtensions.HasModuleVersionId\n  parent: System.Reflection.ModuleExtensions\n  definition: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n  name: HasModuleVersionId()\n  fullName: System.Reflection.ModuleExtensions.HasModuleVersionId()\n  spec.csharp:\n  - uid: System.Reflection.ModuleExtensions.HasModuleVersionId\n    name: HasModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.HasModuleVersionId\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ModuleExtensions.HasModuleVersionId\n    name: HasModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.HasModuleVersionId\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ModuleExtensions.HasModuleVersionId()\n  commentId: M:System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n- uid: System.Reflection.Module.System.Reflection.ModuleExtensions.GetModuleVersionId\n  parent: System.Reflection.ModuleExtensions\n  definition: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n  name: GetModuleVersionId()\n  fullName: System.Reflection.ModuleExtensions.GetModuleVersionId()\n  spec.csharp:\n  - uid: System.Reflection.ModuleExtensions.GetModuleVersionId\n    name: GetModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.GetModuleVersionId\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ModuleExtensions.GetModuleVersionId\n    name: GetModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.GetModuleVersionId\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ModuleExtensions.GetModuleVersionId()\n  commentId: M:System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n  name: GetCustomAttribute(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n  name: GetCustomAttribute<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  name.vb: GetCustomAttribute(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n  name: GetCustomAttributes()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n  name: GetCustomAttributes(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n  name: GetCustomAttributes<T>()\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>()\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  name.vb: GetCustomAttributes(Of T)()\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>()\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)()\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n- uid: System.Reflection.Module.System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  definition: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n  name: IsDefined(Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n- uid: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n  isExternal: true\n  name: HasModuleVersionId(Module)\n  fullName: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n  spec.csharp:\n  - uid: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n    name: HasModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.HasModuleVersionId\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n    name: HasModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.HasModuleVersionId\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ModuleExtensions.HasModuleVersionId(Module)\n  commentId: M:System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n- uid: System.Reflection.ModuleExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: ModuleExtensions\n  fullName: System.Reflection.ModuleExtensions\n  nameWithType: ModuleExtensions\n  commentId: T:System.Reflection.ModuleExtensions\n- uid: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n  isExternal: true\n  name: GetModuleVersionId(Module)\n  fullName: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n  spec.csharp:\n  - uid: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n    name: GetModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.GetModuleVersionId\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n    name: GetModuleVersionId\n    fullName: System.Reflection.ModuleExtensions.GetModuleVersionId\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ModuleExtensions.GetModuleVersionId(Module)\n  commentId: M:System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n  isExternal: true\n  name: GetCustomAttribute(Module, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n    name: GetCustomAttribute\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Module, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions\n  parent: System.Reflection\n  isExternal: false\n  name: CustomAttributeExtensions\n  fullName: System.Reflection.CustomAttributeExtensions\n  nameWithType: CustomAttributeExtensions\n  commentId: T:System.Reflection.CustomAttributeExtensions\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n  isExternal: true\n  name: GetCustomAttribute<T>(Module)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>(System.Reflection.Module)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)(System.Reflection.Module)\n  name.vb: GetCustomAttribute(Of T)(Module)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n    name: GetCustomAttribute<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n    name: GetCustomAttribute(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Module)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttribute(Of T)(Module)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n  isExternal: true\n  name: GetCustomAttributes(Module)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n  isExternal: true\n  name: GetCustomAttributes(Module, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n    name: GetCustomAttributes\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n  isExternal: true\n  name: GetCustomAttributes<T>(Module)\n  fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>(System.Reflection.Module)\n  fullname.vb: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)(System.Reflection.Module)\n  name.vb: GetCustomAttributes(Of T)(Module)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n    name: GetCustomAttributes<T>\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes<T>\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n    name: GetCustomAttributes(Of T)\n    fullName: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(Of T)\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Module)\n  nameWithType.vb: CustomAttributeExtensions.GetCustomAttributes(Of T)(Module)\n  commentId: M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n  isExternal: true\n  name: IsDefined(Module, Type)\n  fullName: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module, System.Type)\n  spec.csharp:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n    name: IsDefined\n    fullName: System.Reflection.CustomAttributeExtensions.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Reflection.Module\n    name: Module\n    fullName: System.Reflection.Module\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: CustomAttributeExtensions.IsDefined(Module, Type)\n  commentId: M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n- uid: System.Reflection.Module.Assembly\n  parent: System.Reflection.Module\n  isExternal: true\n  name: Assembly\n  fullName: System.Reflection.Module.Assembly\n  nameWithType: Module.Assembly\n  commentId: P:System.Reflection.Module.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  fullName: System.Reflection.Assembly\n  nameWithType: Assembly\n  commentId: T:System.Reflection.Assembly\n- uid: System.Reflection.Module.FullyQualifiedName\n  parent: System.Reflection.Module\n  isExternal: true\n  name: FullyQualifiedName\n  fullName: System.Reflection.Module.FullyQualifiedName\n  nameWithType: Module.FullyQualifiedName\n  commentId: P:System.Reflection.Module.FullyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.Module.Name\n  parent: System.Reflection.Module\n  isExternal: true\n  name: Name\n  fullName: System.Reflection.Module.Name\n  nameWithType: Module.Name\n  commentId: P:System.Reflection.Module.Name\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n  nameWithType: TypeAttributes\n  commentId: T:System.Reflection.TypeAttributes\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Reflection.Emit.EnumBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: EnumBuilder\n  fullName: System.Reflection.Emit.EnumBuilder\n  nameWithType: EnumBuilder\n  commentId: T:System.Reflection.Emit.EnumBuilder\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n  nameWithType: MethodAttributes\n  commentId: T:System.Reflection.MethodAttributes\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  fullName: System.Reflection.CallingConventions\n  nameWithType: CallingConventions\n  commentId: T:System.Reflection.CallingConventions\n- uid: System.Type[]\n  name: Type[]\n  fullName: System.Type[]\n  fullname.vb: System.Type()\n  name.vb: Type()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n  - name: ()\n    fullName: ()\n  nameWithType: Type[]\n  nameWithType.vb: Type()\n- uid: System.Reflection.Emit.MethodBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n  nameWithType: MethodBuilder\n  commentId: T:System.Reflection.Emit.MethodBuilder\n- uid: System.Type[][]\n  name: Type[][]\n  fullName: System.Type[][]\n  fullname.vb: System.Type()()\n  name.vb: Type()()\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ()\n    fullName: ()\n  nameWithType: Type[][]\n  nameWithType.vb: Type()()\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n  nameWithType: FieldAttributes\n  commentId: T:System.Reflection.FieldAttributes\n- uid: System.Reflection.Emit.FieldBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldBuilder\n  fullName: System.Reflection.Emit.FieldBuilder\n  nameWithType: FieldBuilder\n  commentId: T:System.Reflection.Emit.FieldBuilder\n- uid: System.Reflection.Emit.TypeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeBuilder\n  fullName: System.Reflection.Emit.TypeBuilder\n  nameWithType: TypeBuilder\n  commentId: T:System.Reflection.Emit.TypeBuilder\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.Emit.PackingSize\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n  nameWithType: PackingSize\n  commentId: T:System.Reflection.Emit.PackingSize\n- uid: System.Reflection.Module.Equals(System.Object)\n  parent: System.Reflection.Module\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Reflection.Module.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Reflection.Module.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.Module.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.Equals(System.Object)\n    name: Equals\n    fullName: System.Reflection.Module.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Module.Equals(Object)\n  commentId: M:System.Reflection.Module.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  fullName: System.Reflection.MethodInfo\n  nameWithType: MethodInfo\n  commentId: T:System.Reflection.MethodInfo\n- uid: System.Reflection.Module.GetHashCode\n  parent: System.Reflection.Module\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Reflection.Module.GetHashCode()\n  spec.csharp:\n  - uid: System.Reflection.Module.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.Module.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.Module.GetHashCode\n    name: GetHashCode\n    fullName: System.Reflection.Module.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Module.GetHashCode()\n  commentId: M:System.Reflection.Module.GetHashCode\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n  nameWithType: ConstructorInfo\n  commentId: T:System.Reflection.ConstructorInfo\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  commentId: T:System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}