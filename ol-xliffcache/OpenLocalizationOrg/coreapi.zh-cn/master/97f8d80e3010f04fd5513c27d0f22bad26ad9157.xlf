<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97f8d80e3010f04fd5513c27d0f22bad26ad9157</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Reflection.Module.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94229dc5126c06cbbca4c23285674ad59b24ef73</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="new">Module</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="new">Assembly</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An &lt;strong&gt;Assembly&lt;/strong&gt; object.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An &lt;strong&gt;Assembly&lt;/strong&gt; object.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>CustomAttributes</source>
          <target state="new">CustomAttributes</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A collection that contains this module's custom attributes.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A collection that contains this module's custom attributes.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>FullyQualifiedName</source>
          <target state="new">FullyQualifiedName</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The fully qualified module name.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The fully qualified module name.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have the required permissions.</source>
          <target state="new">\n&lt;p&gt;The caller does not have the required permissions.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new">Name</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The module name with no path.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The module name with no path.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with this instance.</source>
          <target state="new">\n&lt;p&gt;The object to compare with this instance.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;o&lt;/em&gt; is equal to this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;o&lt;/em&gt; is equal to this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>GetType(String, Boolean, Boolean)</source>
          <target state="new">GetType(String, Boolean, Boolean)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the type to locate.</source>
          <target state="new">\n&lt;p&gt;The name of the type to locate.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name must be fully qualified with the namespace.</source>
          <target state="new">The name must be fully qualified with the namespace.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; to throw an exception if the type cannot be found; &lt;strong&gt;false&lt;/strong&gt; to return &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; to throw an exception if the type cannot be found; &lt;strong&gt;false&lt;/strong&gt; to return &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; for case-insensitive search; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; for case-insensitive search; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</source>
          <target state="new">\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;throwOnError&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;, and the type cannot be found.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;throwOnError&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;, and the type cannot be found.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;String&lt;/strong&gt; representing the name of this module.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;String&lt;/strong&gt; representing the name of this module.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>FilterTypeName</source>
          <target state="new">FilterTypeName</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>FilterTypeNameIgnoreCase</source>
          <target state="new">FilterTypeNameIgnoreCase</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>ModuleVersionId</source>
          <target state="new">ModuleVersionId</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ScopeName</source>
          <target state="new">ScopeName</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The module name.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;The module name.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>FindTypes(TypeFilter, Object)</source>
          <target state="new">FindTypes(TypeFilter, Object)</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The delegate used to filter the classes.</source>
          <target state="new">\n&lt;p&gt;The delegate used to filter the classes.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An Object used to filter the classes.</source>
          <target state="new">\n&lt;p&gt;An Object used to filter the classes.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of type &lt;strong&gt;Type&lt;/strong&gt; containing classes that were accepted by the filter.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of type &lt;strong&gt;Type&lt;/strong&gt; containing classes that were accepted by the filter.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;One or more classes in a module could not be loaded.</source>
          <target state="new">\n&lt;p&gt;One or more classes in a module could not be loaded.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>GetField(String)</source>
          <target state="new">GetField(String)</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The field name.</source>
          <target state="new">\n&lt;p&gt;The field name.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;FieldInfo&lt;/strong&gt; object having the specified name, or &lt;strong&gt;null&lt;/strong&gt; if the field does not exist.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;FieldInfo&lt;/strong&gt; object having the specified name, or &lt;strong&gt;null&lt;/strong&gt; if the field does not exist.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>GetField(String, BindingFlags)</source>
          <target state="new">GetField(String, BindingFlags)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The field name.</source>
          <target state="new">\n&lt;p&gt;The field name.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;One of the &lt;strong&gt;BindingFlags&lt;/strong&gt; bit flags used to control the search.</source>
          <target state="new">\n&lt;p&gt;One of the &lt;strong&gt;BindingFlags&lt;/strong&gt; bit flags used to control the search.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;FieldInfo&lt;/strong&gt; object having the specified name and binding attributes, or &lt;strong&gt;null&lt;/strong&gt; if the field does not exist.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;FieldInfo&lt;/strong&gt; object having the specified name and binding attributes, or &lt;strong&gt;null&lt;/strong&gt; if the field does not exist.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;The &lt;em&gt;name&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>GetFields()</source>
          <target state="new">GetFields()</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>GetFields(BindingFlags)</source>
          <target state="new">GetFields(BindingFlags)</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>GetMethod(String)</source>
          <target state="new">GetMethod(String)</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method name.</source>
          <target state="new">\n&lt;p&gt;The method name.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;MethodInfo&lt;/strong&gt; object having the specified name, or &lt;strong&gt;null&lt;/strong&gt; if the method does not exist.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;MethodInfo&lt;/strong&gt; object having the specified name, or &lt;strong&gt;null&lt;/strong&gt; if the method does not exist.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>GetMethod(String, Type[])</source>
          <target state="new">GetMethod(String, Type[])</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method name.</source>
          <target state="new">\n&lt;p&gt;The method name.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The parameter types to search for.</source>
          <target state="new">\n&lt;p&gt;The parameter types to search for.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;MethodInfo&lt;/strong&gt; object in accordance with the specified criteria, or &lt;strong&gt;null&lt;/strong&gt; if the method does not exist.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;MethodInfo&lt;/strong&gt; object in accordance with the specified criteria, or &lt;strong&gt;null&lt;/strong&gt; if the method does not exist.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, &lt;em&gt;types&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, or &lt;em&gt;types&lt;/em&gt; (i) is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, &lt;em&gt;types&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, or &lt;em&gt;types&lt;/em&gt; (i) is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>GetMethods()</source>
          <target state="new">GetMethods()</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>GetMethods(BindingFlags)</source>
          <target state="new">GetMethods(BindingFlags)</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>GetType(String)</source>
          <target state="new">GetType(String)</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the type to locate.</source>
          <target state="new">\n&lt;p&gt;The name of the type to locate.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name must be fully qualified with the namespace.</source>
          <target state="new">The name must be fully qualified with the namespace.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Type&lt;/strong&gt; object representing the given type, if the type is in this module; otherwise, &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Type&lt;/strong&gt; object representing the given type, if the type is in this module; otherwise, &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</source>
          <target state="new">\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>GetType(String, Boolean)</source>
          <target state="new">GetType(String, Boolean)</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the type to locate.</source>
          <target state="new">\n&lt;p&gt;The name of the type to locate.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The name must be fully qualified with the namespace.</source>
          <target state="new">The name must be fully qualified with the namespace.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; for case-insensitive search; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; for case-insensitive search; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A &lt;strong&gt;Type&lt;/strong&gt; object representing the given type, if the type is in this module; otherwise, &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;A &lt;strong&gt;Type&lt;/strong&gt; object representing the given type, if the type is in this module; otherwise, &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</source>
          <target state="new">\n&lt;p&gt;The class initializers are invoked and an exception is thrown.</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; is a zero-length string.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that could not be found.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was found but could not be loaded.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The current assembly was loaded into the reflection-only context, and &lt;em&gt;className&lt;/em&gt; requires a dependent assembly that was not preloaded.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</source>
          <target state="new">\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly, but the file is not a valid assembly.</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;className&lt;/em&gt; requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>GetTypes()</source>
          <target state="new">GetTypes()</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of type &lt;strong&gt;Type&lt;/strong&gt; containing types defined within the module that is reflected by this instance.&lt;/p&gt;\n</source>
          <target state="new">\n&lt;p&gt;An array of type &lt;strong&gt;Type&lt;/strong&gt; containing types defined within the module that is reflected by this instance.&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;One or more classes in a module could not be loaded.</source>
          <target state="new">\n&lt;p&gt;One or more classes in a module could not be loaded.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The caller does not have the required permission.</source>
          <target state="new">\n&lt;p&gt;The caller does not have the required permission.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">&lt;/p&gt;\n</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>ICustomAttributeProvider.GetCustomAttributes(Boolean)</source>
          <target state="new">ICustomAttributeProvider.GetCustomAttributes(Boolean)</target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)</source>
          <target state="new">ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>ICustomAttributeProvider.IsDefined(Type, Boolean)</source>
          <target state="new">ICustomAttributeProvider.IsDefined(Type, Boolean)</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>System.Reflection</source>
          <target state="new">System.Reflection</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>ICustomAttributeProvider</source>
          <target state="new">ICustomAttributeProvider</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Assembly</source>
          <target state="new">Assembly</target>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;CustomAttributeData&gt;</source>
          <target state="new">IEnumerable&lt;CustomAttributeData&gt;</target>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>CustomAttributeData</source>
          <target state="new">CustomAttributeData</target>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>CustomAttributeData</source>
          <target state="new">CustomAttributeData</target>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;T&gt;</source>
          <target state="new">IEnumerable&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>System.Collections.Generic</source>
          <target state="new">System.Collections.Generic</target>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="new">Int32</target>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>TypeFilter</source>
          <target state="new">TypeFilter</target>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Guid</source>
          <target state="new">Guid</target>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Type[]</source>
          <target state="new">Type[]</target>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>FieldInfo</source>
          <target state="new">FieldInfo</target>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>BindingFlags</source>
          <target state="new">BindingFlags</target>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>FieldInfo[]</source>
          <target state="new">FieldInfo[]</target>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>FieldInfo</source>
          <target state="new">FieldInfo</target>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>FieldInfo</source>
          <target state="new">FieldInfo</target>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>MethodInfo</source>
          <target state="new">MethodInfo</target>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>MethodInfo[]</source>
          <target state="new">MethodInfo[]</target>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>MethodInfo</source>
          <target state="new">MethodInfo</target>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>MethodInfo</source>
          <target state="new">MethodInfo</target>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes(Boolean)</source>
          <target state="new">GetCustomAttributes(Boolean)</target>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes</source>
          <target state="new">GetCustomAttributes</target>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes</source>
          <target state="new">GetCustomAttributes</target>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Object[]</source>
          <target state="new">Object[]</target>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>[]</source>
          <target state="new">[]</target>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>()</source>
          <target state="new">()</target>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes(Type, Boolean)</source>
          <target state="new">GetCustomAttributes(Type, Boolean)</target>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes</source>
          <target state="new">GetCustomAttributes</target>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>GetCustomAttributes</source>
          <target state="new">GetCustomAttributes</target>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>IsDefined(Type, Boolean)</source>
          <target state="new">IsDefined(Type, Boolean)</target>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>IsDefined</source>
          <target state="new">IsDefined</target>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>IsDefined</source>
          <target state="new">IsDefined</target>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="new">Boolean</target>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>SecurityException</source>
          <target state="new">SecurityException</target>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>ArgumentNullException</source>
          <target state="new">ArgumentNullException</target>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>TargetInvocationException</source>
          <target state="new">TargetInvocationException</target>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>ArgumentException</source>
          <target state="new">ArgumentException</target>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>TypeLoadException</source>
          <target state="new">TypeLoadException</target>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>FileNotFoundException</source>
          <target state="new">FileNotFoundException</target>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>FileLoadException</source>
          <target state="new">FileLoadException</target>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>BadImageFormatException</source>
          <target state="new">BadImageFormatException</target>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>ReflectionTypeLoadException</source>
          <target state="new">ReflectionTypeLoadException</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>