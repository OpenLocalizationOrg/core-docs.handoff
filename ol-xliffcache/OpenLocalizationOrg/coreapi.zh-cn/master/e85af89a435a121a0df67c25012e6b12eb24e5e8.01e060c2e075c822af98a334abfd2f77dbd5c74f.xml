{"nodes":[{"pos":[895,905],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[2888,2904],"content":"CustomAttributes","needQuote":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A collection that contains this member's custom attributes.&lt;/p&gt;\\n","pos":[3739,3809],"source":"\\n<p>A collection that contains this member's custom attributes.</p>\\n"},{"pos":[4164,4177],"content":"DeclaringType","needQuote":true,"nodes":[{"content":"DeclaringType","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;Type&lt;/strong&gt; object for the class that declares this member.&lt;/p&gt;\\n","pos":[4854,4938],"source":"\\n<p>The <strong>Type</strong> object for the class that declares this member.</p>\\n"},{"pos":[5292,5305],"content":"MetadataToken","needQuote":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[7774,7780],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"content":"\\n&lt;p&gt;This method is not implemented.&lt;/p&gt;\\n","pos":[8978,9020],"source":"\\n<p>This method is not implemented.</p>\\n"},{"pos":[9426,9430],"content":"Name","needQuote":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[10563,10577],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance, or &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11293,11370],"source":"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; equals the type and value of this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11431,11560],"source":"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[11935,11948],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[12582,12627],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[12988,12998],"content":"MemberType","needQuote":true,"nodes":[{"content":"MemberType","pos":[0,10]}]},{"pos":[14664,14717],"content":"ICustomAttributeProvider.GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes(Boolean)","pos":[0,53]}]},{"pos":[16396,16455],"content":"ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)","pos":[0,59]}]},{"pos":[18238,18287],"content":"ICustomAttributeProvider.IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider.IsDefined(Type, Boolean)","pos":[0,49]}]},{"pos":[19622,19639],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[19803,19809],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19994,20018],"content":"ICustomAttributeProvider","needQuote":true,"nodes":[{"content":"ICustomAttributeProvider","pos":[0,24]}]},{"pos":[20254,20264],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20359,20367],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20436,20437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20464,20465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20535,20543],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[20612,20613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20640,20641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20838,20860],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[21008,21014],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21081,21082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21132,21138],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21199,21200]},{"pos":[21255,21261],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21321,21322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21419,21425],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[21492,21493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21543,21549],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[21610,21611]},{"pos":[21666,21672],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21732,21733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21978,22009],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[22175,22190],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22266,22267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22317,22323],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22384,22385]},{"pos":[22440,22446],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22506,22507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22613,22628],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[22704,22705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22755,22761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[22822,22823]},{"pos":[22878,22884],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22944,22945],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23171,23180],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[23273,23280],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23348,23349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23376,23377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23446,23453],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[23521,23522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23549,23550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23725,23742],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[23851,23866],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[23942,23943],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23970,23971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24048,24063],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[24139,24140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24167,24168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24313,24319],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[24569,24601],"content":"IEnumerable<CustomAttributeData>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;CustomAttributeData&gt;","pos":[0,32],"source":"IEnumerable<CustomAttributeData>"}]},{"pos":[24910,24921],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[25006,25007],"content":"<","needQuote":true,"nodes":[]},{"pos":[25081,25100],"content":"CustomAttributeData","needQuote":true,"nodes":[{"content":"CustomAttributeData","pos":[0,19]}]},{"pos":[25256,25267],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[25353,25356]},{"pos":[25437,25456],"content":"CustomAttributeData","needQuote":true,"nodes":[{"content":"CustomAttributeData","pos":[0,19]}]},{"pos":[25519,25520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25810,25824],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[26043,26054],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[26118,26119],"content":"<","needQuote":true,"nodes":[]},{"pos":[26146,26147],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26267,26278],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[26343,26346]},{"pos":[26380,26381],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26408,26409],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26612,26638],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[26827,26831],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[26969,26974],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27138,27144],"content":"Module","needQuote":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[27311,27317],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27490,27504],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[27623,27629],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27696,27697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27747,27753],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27813,27814],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27897,27903],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[27970,27971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28021,28027],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28087,28088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28261,28268],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28434,28447],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[28548,28559],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28631,28632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28659,28660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28733,28744],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[28816,28817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28844,28845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29033,29044],"content":"MemberTypes","needQuote":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"pos":[29326,29354],"content":"GetCustomAttributes(Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[29559,29578],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[29666,29667],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29718,29725],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29786,29787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29913,29932],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[30020,30021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30072,30079],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30140,30141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30353,30361],"content":"Object[]","needQuote":true,"nodes":[{"content":"Object[]","pos":[0,8]}]},{"pos":[30489,30495],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"[]","pos":[30556,30558]},{"pos":[30623,30629],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30689,30691],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[30940,30974],"content":"GetCustomAttributes(Type, Boolean)","needQuote":true,"nodes":[{"content":"GetCustomAttributes(Type, Boolean)","pos":[0,34]}]},{"pos":[31204,31223],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[31311,31312],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31360,31364],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[31423,31424]},{"pos":[31480,31487],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31548,31549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31687,31706],"content":"GetCustomAttributes","needQuote":true,"nodes":[{"content":"GetCustomAttributes","pos":[0,19]}]},{"pos":[31794,31795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31843,31847],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[31906,31907]},{"pos":[31963,31970],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32031,32032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32399,32423],"content":"IsDefined(Type, Boolean)","needQuote":true,"nodes":[{"content":"IsDefined(Type, Boolean)","pos":[0,24]}]},{"pos":[32633,32642],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[32720,32721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32769,32773],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[32832,32833]},{"pos":[32889,32896],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32957,32958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33086,33095],"content":"IsDefined","needQuote":true,"nodes":[{"content":"IsDefined","pos":[0,9]}]},{"pos":[33173,33174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33222,33226],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[33285,33286]},{"pos":[33342,33349],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33410,33411],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33675,33700],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[33902,33925],"content":"NotImplementedException","needQuote":true,"nodes":[{"content":"NotImplementedException","pos":[0,23]}]}],"content":"items:\n- uid: System.Reflection.MemberInfo\n  commentId: T:System.Reflection.MemberInfo\n  id: MemberInfo\n  parent: System.Reflection\n  children:\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.Equals(System.Object)\n  - System.Reflection.MemberInfo.GetHashCode\n  - System.Reflection.MemberInfo.MemberType\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  langs:\n  - csharp\n  - vb\n  name: MemberInfo\n  fullName: System.Reflection.MemberInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MemberInfo\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 15\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Obtains information about the attributes of a member and provides access to member metadata.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ClassInterface(ClassInterfaceType.None)]\n\n      [ComDefaultInterface(typeof (_MemberInfo))]\n\n      [PermissionSet(SecurityAction.InheritanceDemand, Name = \"FullTrust\")]\n\n      [ComVisible(true)]\n\n      public abstract class MemberInfo : ICustomAttributeProvider, _MemberInfo\n    content.vb: >-\n      <Serializable>\n\n      <ClassInterface(ClassInterfaceType.None)>\n\n      <ComDefaultInterface(GetType(_MemberInfo))>\n\n      <PermissionSet(SecurityAction.InheritanceDemand, Name:=\"FullTrust\")>\n\n      <ComVisible(True)>\n\n      Public MustInherit Class MemberInfo\n          Implements ICustomAttributeProvider, _MemberInfo\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  inheritance:\n  - System.Object\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: MemberInfo\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  commentId: P:System.Reflection.MemberInfo.CustomAttributes\n  id: CustomAttributes\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: CustomAttributes\n  fullName: System.Reflection.MemberInfo.CustomAttributes\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CustomAttributes\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 41\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets a collection that contains this member's custom attributes.</p>\\n\"\n  syntax:\n    content: public virtual IEnumerable<CustomAttributeData> CustomAttributes { get; }\n    content.vb: Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n      description: \"\\n<p>A collection that contains this member's custom attributes.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.DeclaringType\n  commentId: P:System.Reflection.MemberInfo.DeclaringType\n  id: DeclaringType\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: DeclaringType\n  fullName: System.Reflection.MemberInfo.DeclaringType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DeclaringType\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 37\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the class that declares this member.</p>\\n\"\n  syntax:\n    content: public abstract Type DeclaringType { get; }\n    content.vb: Public MustOverride ReadOnly Property DeclaringType As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <strong>Type</strong> object for the class that declares this member.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MemberInfo.DeclaringType\n- uid: System.Reflection.MemberInfo.MetadataToken\n  commentId: P:System.Reflection.MemberInfo.MetadataToken\n  id: MetadataToken\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: MetadataToken\n  fullName: System.Reflection.MemberInfo.MetadataToken\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MetadataToken\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 59\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets a value that identifies a metadata element.</p>\\n\"\n  syntax:\n    content: public virtual int MetadataToken { get; }\n    content.vb: Public Overridable ReadOnly Property MetadataToken As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>A value which, in combination with <xref href=\\\"System.Reflection.MemberInfo.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, uniquely identifies a metadata element.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The current <xref href=\\\"System.Reflection.MemberInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents an array method, such as <strong>Address</strong>, on an array type whose element type is a dynamic type that has not been completed. To get a metadata token in this case, pass the <xref href=\\\"System.Reflection.MemberInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to the <xref href=\\\"System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method; or use the <xref href=\\\"System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  method to get the token directly, instead of using the <xref href=\\\"System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method to get a <xref href=\\\"System.Reflection.MethodInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> first.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  commentId: P:System.Reflection.MemberInfo.Module\n  id: Module\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: Module\n  fullName: System.Reflection.MemberInfo.Module\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Module\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 61\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the module in which the type that declares the member represented by the current <xref href=\\\"System.Reflection.MemberInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is defined.</p>\\n\"\n  syntax:\n    content: public virtual Module Module { get; }\n    content.vb: 'Public Overridable ReadOnly Property Module As '\n    parameters: []\n    return:\n      type: System.Reflection.Module\n      description: \"\\n<p>The <xref href=\\\"System.Reflection.Module\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> in which the type that declares the member represented by the current <xref href=\\\"System.Reflection.MemberInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is defined.</p>\\n\"\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: \"\\n<p>This method is not implemented.</p>\\n\"\n  seealso:\n  - type: System.Reflection.Module\n    commentId: T:System.Reflection.Module\n  modifiers.csharp:\n  - public\n  - virtual\n  - get\n  modifiers.vb:\n  - Public\n  - Overridable\n  - ReadOnly\n  nameWithType: MemberInfo.Module\n- uid: System.Reflection.MemberInfo.Name\n  commentId: P:System.Reflection.MemberInfo.Name\n  id: Name\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: Name\n  fullName: System.Reflection.MemberInfo.Name\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Name\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 35\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Gets the name of the current member.</p>\\n\"\n  syntax:\n    content: public abstract string Name { get; }\n    content.vb: Public MustOverride ReadOnly Property Name As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the name of this member.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MemberInfo.Name\n- uid: System.Reflection.MemberInfo.Equals(System.Object)\n  commentId: M:System.Reflection.MemberInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Reflection.MemberInfo.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Equals\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 111\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns a value that indicates whether this instance is equal to a specified object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>An object to compare with this instance, or <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if <em>obj</em> equals the type and value of this instance; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MemberInfo.Equals(Object)\n- uid: System.Reflection.MemberInfo.GetHashCode\n  commentId: M:System.Reflection.MemberInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Reflection.MemberInfo.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetHashCode\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 116\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: MemberInfo.GetHashCode()\n- uid: System.Reflection.MemberInfo.MemberType\n  commentId: P:System.Reflection.MemberInfo.MemberType\n  id: MemberType\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: MemberType\n  fullName: System.Reflection.MemberInfo.MemberType\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MemberType\n    path: src/mscorlib/src/System/Reflection/MemberInfo.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  summary: \"\\n<p>When overridden in a derived class, gets a <xref href=\\\"System.Reflection.MemberTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the type of the member — method, constructor, event, and so on.</p>\\n\"\n  syntax:\n    content: public abstract MemberTypes MemberType { get; }\n    content.vb: Public MustOverride ReadOnly Property MemberType As MemberTypes\n    parameters: []\n    return:\n      type: System.Reflection.MemberTypes\n      description: \"\\n<p>A <xref href=\\\"System.Reflection.MemberTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value indicating the type of member.</p>\\n\"\n  seealso:\n  - type: System.Reflection.MemberTypes\n    commentId: T:System.Reflection.MemberTypes\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MemberInfo.MemberType\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  isEii: true\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection/ref/System.Reflection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n    path: src/System.Reflection/ref/System.Reflection.cs\n    startLine: 235\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: object[] ICustomAttributeProvider.GetCustomAttributes(bool inherit)\n    content.vb: Function System.Reflection.ICustomAttributeProvider.GetCustomAttributes(inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes\n    parameters:\n    - id: inherit\n      type: System.Boolean\n    return:\n      type: System.Object[]\n  implements:\n  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  isEii: true\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection/ref/System.Reflection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n    path: src/System.Reflection/ref/System.Reflection.cs\n    startLine: 236\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: object[] ICustomAttributeProvider.GetCustomAttributes(Type attributeType, bool inherit)\n    content.vb: Function System.Reflection.ICustomAttributeProvider.GetCustomAttributes(attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes\n    parameters:\n    - id: attributeType\n      type: System.Type\n    - id: inherit\n      type: System.Boolean\n    return:\n      type: System.Object[]\n  implements:\n  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  isEii: true\n  parent: System.Reflection.MemberInfo\n  langs:\n  - csharp\n  - vb\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: System.Reflection.MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined(System.Type, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Reflection/ref/System.Reflection.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Reflection.ICustomAttributeProvider.IsDefined\n    path: src/System.Reflection/ref/System.Reflection.cs\n    startLine: 237\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: bool ICustomAttributeProvider.IsDefined(Type attributeType, bool inherit)\n    content.vb: Function System.Reflection.ICustomAttributeProvider.IsDefined(attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined\n    parameters:\n    - id: attributeType\n      type: System.Type\n    - id: inherit\n      type: System.Boolean\n    return:\n      type: System.Boolean\n  implements:\n  - System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)\n  name.vb: System.Reflection.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType.vb: MemberInfo.System.Reflection.ICustomAttributeProvider.IsDefined(Type, Boolean)\nreferences:\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  commentId: T:System.Reflection.ICustomAttributeProvider\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<CustomAttributeData>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData)\n  name.vb: IEnumerable(Of CustomAttributeData)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<CustomAttributeData>\n  nameWithType.vb: IEnumerable(Of CustomAttributeData)\n  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  fullName: System.Reflection.Module\n  nameWithType: Module\n  commentId: T:System.Reflection.Module\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  fullName: System.Reflection.MemberTypes\n  nameWithType: MemberTypes\n  commentId: T:System.Reflection.MemberTypes\n- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.ICustomAttributeProvider\n  isExternal: true\n  name: GetCustomAttributes(Boolean)\n  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  commentId: M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)\n- uid: System.Object[]\n  name: Object[]\n  fullName: System.Object[]\n  fullname.vb: System.Object()\n  name.vb: Object()\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Object[]\n  nameWithType.vb: Object()\n- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.ICustomAttributeProvider\n  isExternal: true\n  name: GetCustomAttributes(Type, Boolean)\n  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)\n    name: GetCustomAttributes\n    fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  commentId: M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)\n- uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.ICustomAttributeProvider\n  isExternal: true\n  name: IsDefined(Type, Boolean)\n  fullName: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type, System.Boolean)\n  spec.csharp:\n  - uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.ICustomAttributeProvider.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)\n    name: IsDefined\n    fullName: System.Reflection.ICustomAttributeProvider.IsDefined\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  commentId: M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.NotImplementedException\n  isExternal: false\n  name: NotImplementedException\n  fullName: System.NotImplementedException\n  nameWithType: NotImplementedException\n  commentId: T:System.NotImplementedException\n"}