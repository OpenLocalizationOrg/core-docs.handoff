{"nodes":[{"pos":[436,451],"content":"TraceEventCache","needQuote":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"pos":[1722,1739],"content":"TraceEventCache()","needQuote":true,"nodes":[{"content":"TraceEventCache()","pos":[0,17]}]},{"pos":[2752,2760],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[4000,4009],"content":"ProcessId","needQuote":true,"nodes":[{"content":"ProcessId","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The system-generated unique identifier of the current process.&lt;/p&gt;\\n","pos":[4735,4808],"source":"\\n<p>The system-generated unique identifier of the current process.</p>\\n"},{"pos":[5264,5272],"content":"ThreadId","needQuote":true,"nodes":[{"content":"ThreadId","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A string that represents a unique integer identifier for this managed thread.&lt;/p&gt;\\n","pos":[6005,6093],"source":"\\n<p>A string that represents a unique integer identifier for this managed thread.</p>\\n"},{"pos":[6423,6432],"content":"Timestamp","needQuote":true,"nodes":[{"content":"Timestamp","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The tick counter value of the underlying timer mechanism.&lt;/p&gt;\\n","pos":[7162,7230],"source":"\\n<p>The tick counter value of the underlying timer mechanism.</p>\\n"},{"pos":[7419,7437],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[7604,7610],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7770,7780],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7875,7883],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7952,7953],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7980,7981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8051,8059],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8128,8129],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8156,8157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8340,8354],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8473,8479],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8546,8547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8597,8603],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8663,8664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8747,8753],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8820,8821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8871,8877],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8937,8938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9152,9174],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9322,9328],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9395,9396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9446,9452],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9513,9514]},{"pos":[9569,9575],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9635,9636],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9733,9739],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9806,9807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9857,9863],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9924,9925]},{"pos":[9980,9986],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10046,10047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10292,10323],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10489,10504],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10580,10581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10631,10637],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10698,10699]},{"pos":[10754,10760],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10820,10821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10927,10942],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11018,11019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11069,11075],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11136,11137]},{"pos":[11192,11198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11258,11259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11489,11502],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11603,11614],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11686,11687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11714,11715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11788,11799],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11871,11872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11899,11900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12075,12084],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12177,12184],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12252,12253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12280,12281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12350,12357],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12425,12426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12453,12454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12629,12646],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12755,12770],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12846,12847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12874,12875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12952,12967],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[13043,13044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13071,13072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13217,13223],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13356,13364],"content":"DateTime","needQuote":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[13514,13519],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13661,13667],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13811,13816],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]}],"content":"items:\n- uid: System.Diagnostics.TraceEventCache\n  commentId: T:System.Diagnostics.TraceEventCache\n  id: TraceEventCache\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.TraceEventCache.#ctor\n  - System.Diagnostics.TraceEventCache.DateTime\n  - System.Diagnostics.TraceEventCache.ProcessId\n  - System.Diagnostics.TraceEventCache.ThreadId\n  - System.Diagnostics.TraceEventCache.Timestamp\n  langs:\n  - csharp\n  - vb\n  name: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n  type: Class\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TraceEventCache\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n    startLine: 12\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides trace event data specific to a thread and a process.</p>\\n\"\n  syntax:\n    content: public class TraceEventCache\n    content.vb: Public Class TraceEventCache\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: TraceEventCache\n- uid: System.Diagnostics.TraceEventCache.#ctor\n  commentId: M:System.Diagnostics.TraceEventCache.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.TraceEventCache\n  langs:\n  - csharp\n  - vb\n  name: TraceEventCache()\n  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs\n    startLine: 141\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Diagnostics.TraceEventCache\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class. </p>\\n\"\n  syntax:\n    content: public TraceEventCache()\n    content.vb: Public Sub New\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TraceEventCache.TraceEventCache()\n- uid: System.Diagnostics.TraceEventCache.DateTime\n  commentId: P:System.Diagnostics.TraceEventCache.DateTime\n  id: DateTime\n  parent: System.Diagnostics.TraceEventCache\n  langs:\n  - csharp\n  - vb\n  name: DateTime\n  fullName: System.Diagnostics.TraceEventCache.DateTime\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DateTime\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n    startLine: 17\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the date and time at which the event trace occurred.</p>\\n\"\n  syntax:\n    content: public DateTime DateTime { get; }\n    content.vb: Public ReadOnly Property DateTime As Date\n    parameters: []\n    return:\n      type: System.DateTime\n      description: \"\\n<p>A <xref href=\\\"System.DateTime\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceEventCache.DateTime\n- uid: System.Diagnostics.TraceEventCache.ProcessId\n  commentId: P:System.Diagnostics.TraceEventCache.ProcessId\n  id: ProcessId\n  parent: System.Diagnostics.TraceEventCache\n  langs:\n  - csharp\n  - vb\n  name: ProcessId\n  fullName: System.Diagnostics.TraceEventCache.ProcessId\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ProcessId\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n    startLine: 27\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the unique identifier of the current process.</p>\\n\"\n  syntax:\n    content: public int ProcessId { get; }\n    content.vb: Public ReadOnly Property ProcessId As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The system-generated unique identifier of the current process.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.SecurityPermission\n    commentId: T:System.Security.Permissions.SecurityPermission\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceEventCache.ProcessId\n- uid: System.Diagnostics.TraceEventCache.ThreadId\n  commentId: P:System.Diagnostics.TraceEventCache.ThreadId\n  id: ThreadId\n  parent: System.Diagnostics.TraceEventCache\n  langs:\n  - csharp\n  - vb\n  name: ThreadId\n  fullName: System.Diagnostics.TraceEventCache.ThreadId\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ThreadId\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n    startLine: 35\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets a unique identifier for the current managed thread.  </p>\\n\"\n  syntax:\n    content: public string ThreadId { get; }\n    content.vb: Public ReadOnly Property ThreadId As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>A string that represents a unique integer identifier for this managed thread.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceEventCache.ThreadId\n- uid: System.Diagnostics.TraceEventCache.Timestamp\n  commentId: P:System.Diagnostics.TraceEventCache.Timestamp\n  id: Timestamp\n  parent: System.Diagnostics.TraceEventCache\n  langs:\n  - csharp\n  - vb\n  name: Timestamp\n  fullName: System.Diagnostics.TraceEventCache.Timestamp\n  type: Property\n  source:\n    remote:\n      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Timestamp\n    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs\n    startLine: 43\n  assemblies:\n  - System.Diagnostics.TraceSource\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the current number of ticks in the timer mechanism.</p>\\n\"\n  syntax:\n    content: public long Timestamp { get; }\n    content.vb: Public ReadOnly Property Timestamp As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>The tick counter value of the underlying timer mechanism.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TraceEventCache.Timestamp\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  fullName: System.DateTime\n  nameWithType: DateTime\n  commentId: T:System.DateTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n"}