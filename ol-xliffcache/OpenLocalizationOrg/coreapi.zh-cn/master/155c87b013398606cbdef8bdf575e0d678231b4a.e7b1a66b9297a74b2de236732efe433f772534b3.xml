{"nodes":[{"pos":[516,526],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[2774,2788],"content":"OFFSET_UNKNOWN","needQuote":true,"nodes":[{"content":"OFFSET_UNKNOWN","pos":[0,14]}]},{"pos":[4084,4105],"content":"GetFileColumnNumber()","needQuote":true,"nodes":[{"content":"GetFileColumnNumber()","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The file column number, or 0 (zero) if the file column number cannot be determined.&lt;/p&gt;\\n","pos":[4911,5005],"source":"\\n<p>The file column number, or 0 (zero) if the file column number cannot be determined.</p>\\n"},{"pos":[5331,5350],"content":"GetFileLineNumber()","needQuote":true,"nodes":[{"content":"GetFileLineNumber()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The file line number, or 0 (zero) if the file line number cannot be determined.&lt;/p&gt;\\n","pos":[6146,6236],"source":"\\n<p>The file line number, or 0 (zero) if the file line number cannot be determined.</p>\\n"},{"pos":[6542,6555],"content":"GetFileName()","needQuote":true,"nodes":[{"content":"GetFileName()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The file name, or &lt;strong&gt;null&lt;/strong&gt; if the file name cannot be determined.&lt;/p&gt;\\n","pos":[7386,7475],"source":"\\n<p>The file name, or <strong>null</strong> if the file name cannot be determined.</p>\\n"},{"pos":[7899,7912],"content":"GetILOffset()","needQuote":true,"nodes":[{"content":"GetILOffset()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The offset from the start of the MSIL code for the method that is executing.&lt;/p&gt;\\n","pos":[8932,9019],"source":"\\n<p>The offset from the start of the MSIL code for the method that is executing.</p>\\n"},{"pos":[9429,9440],"content":"GetMethod()","needQuote":true,"nodes":[{"content":"GetMethod()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The method in which the frame is executing.&lt;/p&gt;\\n","pos":[10117,10171],"source":"\\n<p>The method in which the frame is executing.</p>\\n"},{"pos":[10460,10470],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"content":"\\n&lt;p&gt;A readable representation of the stack trace.&lt;/p&gt;\\n","pos":[11201,11257],"source":"\\n<p>A readable representation of the stack trace.</p>\\n"},{"pos":[11609,11627],"content":"System.Diagnostics","needQuote":true,"nodes":[{"content":"System.Diagnostics","pos":[0,18]}]},{"pos":[11794,11800],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11973,11987],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12106,12112],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12179,12180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12230,12236],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12296,12297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12380,12386],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12453,12454],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12504,12510],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12570,12571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12785,12807],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12955,12961],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13028,13029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13079,13085],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13146,13147]},{"pos":[13202,13208],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13268,13269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13366,13372],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13439,13440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13490,13496],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13557,13558]},{"pos":[13613,13619],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13679,13680],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13925,13956],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[14122,14137],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14213,14214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14264,14270],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14331,14332]},{"pos":[14387,14393],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14453,14454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14560,14575],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[14651,14652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14702,14708],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14769,14770]},{"pos":[14825,14831],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14891,14892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15122,15135],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15236,15247],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15319,15320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15347,15348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15421,15432],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15504,15505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15532,15533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15708,15717],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15810,15817],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15885,15886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15913,15914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15983,15990],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[16058,16059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16086,16087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16262,16279],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[16388,16403],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16479,16480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16507,16508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16585,16600],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[16676,16677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16704,16705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17066,17086],"content":"GetNativeImageBase()","needQuote":true,"nodes":[{"content":"GetNativeImageBase()","pos":[0,20]}]},{"pos":[17253,17271],"content":"GetNativeImageBase","needQuote":true,"nodes":[{"content":"GetNativeImageBase","pos":[0,18]}]},{"pos":[17355,17356],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17383,17384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17490,17508],"content":"GetNativeImageBase","needQuote":true,"nodes":[{"content":"GetNativeImageBase","pos":[0,18]}]},{"pos":[17592,17593],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17620,17621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18045,18058],"content":"GetNativeIP()","needQuote":true,"nodes":[{"content":"GetNativeIP()","pos":[0,13]}]},{"pos":[18211,18222],"content":"GetNativeIP","needQuote":true,"nodes":[{"content":"GetNativeIP","pos":[0,11]}]},{"pos":[18299,18300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18327,18328],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18427,18438],"content":"GetNativeIP","needQuote":true,"nodes":[{"content":"GetNativeIP","pos":[0,11]}]},{"pos":[18515,18516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18543,18544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18954,18967],"content":"HasILOffset()","needQuote":true,"nodes":[{"content":"HasILOffset()","pos":[0,13]}]},{"pos":[19120,19131],"content":"HasILOffset","needQuote":true,"nodes":[{"content":"HasILOffset","pos":[0,11]}]},{"pos":[19208,19209],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19236,19237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19336,19347],"content":"HasILOffset","needQuote":true,"nodes":[{"content":"HasILOffset","pos":[0,11]}]},{"pos":[19424,19425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19452,19453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19859,19870],"content":"HasMethod()","needQuote":true,"nodes":[{"content":"HasMethod()","pos":[0,11]}]},{"pos":[20019,20028],"content":"HasMethod","needQuote":true,"nodes":[{"content":"HasMethod","pos":[0,9]}]},{"pos":[20103,20104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20131,20132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20229,20238],"content":"HasMethod","needQuote":true,"nodes":[{"content":"HasMethod","pos":[0,9]}]},{"pos":[20313,20314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20341,20342],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20754,20770],"content":"HasNativeImage()","needQuote":true,"nodes":[{"content":"HasNativeImage()","pos":[0,16]}]},{"pos":[20929,20943],"content":"HasNativeImage","needQuote":true,"nodes":[{"content":"HasNativeImage","pos":[0,14]}]},{"pos":[21023,21024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21051,21052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21154,21168],"content":"HasNativeImage","needQuote":true,"nodes":[{"content":"HasNativeImage","pos":[0,14]}]},{"pos":[21248,21249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21276,21277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21689,21700],"content":"HasSource()","needQuote":true,"nodes":[{"content":"HasSource()","pos":[0,11]}]},{"pos":[21849,21858],"content":"HasSource","needQuote":true,"nodes":[{"content":"HasSource","pos":[0,9]}]},{"pos":[21933,21934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21961,21962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22059,22068],"content":"HasSource","needQuote":true,"nodes":[{"content":"HasSource","pos":[0,9]}]},{"pos":[22143,22144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22171,22172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22376,22382],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22572,22602],"content":"GetNativeImageBase(StackFrame)","needQuote":true,"nodes":[{"content":"GetNativeImageBase(StackFrame)","pos":[0,30]}]},{"pos":[22829,22847],"content":"GetNativeImageBase","needQuote":true,"nodes":[{"content":"GetNativeImageBase","pos":[0,18]}]},{"pos":[22931,22932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22998,23008],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[23063,23064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23201,23219],"content":"GetNativeImageBase","needQuote":true,"nodes":[{"content":"GetNativeImageBase","pos":[0,18]}]},{"pos":[23303,23304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23370,23380],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[23435,23436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23730,23750],"content":"StackFrameExtensions","needQuote":true,"nodes":[{"content":"StackFrameExtensions","pos":[0,20]}]},{"pos":[24013,24036],"content":"GetNativeIP(StackFrame)","needQuote":true,"nodes":[{"content":"GetNativeIP(StackFrame)","pos":[0,23]}]},{"pos":[24249,24260],"content":"GetNativeIP","needQuote":true,"nodes":[{"content":"GetNativeIP","pos":[0,11]}]},{"pos":[24337,24338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24404,24414],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[24469,24470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24600,24611],"content":"GetNativeIP","needQuote":true,"nodes":[{"content":"GetNativeIP","pos":[0,11]}]},{"pos":[24688,24689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24755,24765],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[24820,24821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25115,25138],"content":"HasILOffset(StackFrame)","needQuote":true,"nodes":[{"content":"HasILOffset(StackFrame)","pos":[0,23]}]},{"pos":[25351,25362],"content":"HasILOffset","needQuote":true,"nodes":[{"content":"HasILOffset","pos":[0,11]}]},{"pos":[25439,25440],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25506,25516],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[25571,25572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25702,25713],"content":"HasILOffset","needQuote":true,"nodes":[{"content":"HasILOffset","pos":[0,11]}]},{"pos":[25790,25791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25857,25867],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[25922,25923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26215,26236],"content":"HasMethod(StackFrame)","needQuote":true,"nodes":[{"content":"HasMethod(StackFrame)","pos":[0,21]}]},{"pos":[26445,26454],"content":"HasMethod","needQuote":true,"nodes":[{"content":"HasMethod","pos":[0,9]}]},{"pos":[26529,26530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26596,26606],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[26661,26662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26790,26799],"content":"HasMethod","needQuote":true,"nodes":[{"content":"HasMethod","pos":[0,9]}]},{"pos":[26874,26875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26941,26951],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[27006,27007],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27300,27326],"content":"HasNativeImage(StackFrame)","needQuote":true,"nodes":[{"content":"HasNativeImage(StackFrame)","pos":[0,26]}]},{"pos":[27545,27559],"content":"HasNativeImage","needQuote":true,"nodes":[{"content":"HasNativeImage","pos":[0,14]}]},{"pos":[27639,27640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27706,27716],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[27771,27772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27905,27919],"content":"HasNativeImage","needQuote":true,"nodes":[{"content":"HasNativeImage","pos":[0,14]}]},{"pos":[27999,28000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28066,28076],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[28131,28132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28430,28451],"content":"HasSource(StackFrame)","needQuote":true,"nodes":[{"content":"HasSource(StackFrame)","pos":[0,21]}]},{"pos":[28660,28669],"content":"HasSource","needQuote":true,"nodes":[{"content":"HasSource","pos":[0,9]}]},{"pos":[28744,28745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28811,28821],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[28876,28877],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29005,29014],"content":"HasSource","needQuote":true,"nodes":[{"content":"HasSource","pos":[0,9]}]},{"pos":[29089,29090],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29156,29166],"content":"StackFrame","needQuote":true,"nodes":[{"content":"StackFrame","pos":[0,10]}]},{"pos":[29221,29222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29459,29464],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29606,29612],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29783,29793],"content":"MethodBase","needQuote":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[29959,29976],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[30155,30165],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[30260,30268],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30337,30338],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30365,30366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30436,30444],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[30513,30514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30541,30542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Diagnostics.StackFrame\n  commentId: T:System.Diagnostics.StackFrame\n  id: StackFrame\n  parent: System.Diagnostics\n  children:\n  - System.Diagnostics.StackFrame.GetFileColumnNumber\n  - System.Diagnostics.StackFrame.GetFileLineNumber\n  - System.Diagnostics.StackFrame.GetFileName\n  - System.Diagnostics.StackFrame.GetILOffset\n  - System.Diagnostics.StackFrame.GetMethod\n  - System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  - System.Diagnostics.StackFrame.ToString\n  langs:\n  - csharp\n  - vb\n  name: StackFrame\n  fullName: System.Diagnostics.StackFrame\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StackFrame\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 20\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Provides information about a <xref href=\\\"System.Diagnostics.StackFrame\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, which represents a function call on the call stack for the current thread.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public class StackFrame\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Class StackFrame\n  seealso:\n  - type: System.Diagnostics.StackTrace\n    commentId: T:System.Diagnostics.StackTrace\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: StackFrame\n  extensionMethods:\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.GetNativeIP\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasILOffset\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasMethod\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasNativeImage\n  - System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasSource\n- uid: System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  commentId: F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  id: OFFSET_UNKNOWN\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: OFFSET_UNKNOWN\n  fullName: System.Diagnostics.StackFrame.OFFSET_UNKNOWN\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OFFSET_UNKNOWN\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 126\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Defines the value that is returned from the <xref href=\\\"System.Diagnostics.StackFrame.GetNativeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or <xref href=\\\"System.Diagnostics.StackFrame.GetILOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.</p>\\n\"\n  syntax:\n    content: public const int OFFSET_UNKNOWN = -1\n    content.vb: Public Const OFFSET_UNKNOWN As Integer = -1\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackFrame.OFFSET_UNKNOWN\n- uid: System.Diagnostics.StackFrame.GetFileColumnNumber\n  commentId: M:System.Diagnostics.StackFrame.GetFileColumnNumber\n  id: GetFileColumnNumber\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: GetFileColumnNumber()\n  fullName: System.Diagnostics.StackFrame.GetFileColumnNumber()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileColumnNumber\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 236\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\\n\"\n  syntax:\n    content: public virtual int GetFileColumnNumber()\n    content.vb: Public Overridable Function GetFileColumnNumber As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The file column number, or 0 (zero) if the file column number cannot be determined.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StackFrame.GetFileColumnNumber()\n- uid: System.Diagnostics.StackFrame.GetFileLineNumber\n  commentId: M:System.Diagnostics.StackFrame.GetFileLineNumber\n  id: GetFileLineNumber\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: GetFileLineNumber()\n  fullName: System.Diagnostics.StackFrame.GetFileLineNumber()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileLineNumber\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 227\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\\n\"\n  syntax:\n    content: public virtual int GetFileLineNumber()\n    content.vb: Public Overridable Function GetFileLineNumber As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The file line number, or 0 (zero) if the file line number cannot be determined.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StackFrame.GetFileLineNumber()\n- uid: System.Diagnostics.StackFrame.GetFileName\n  commentId: M:System.Diagnostics.StackFrame.GetFileName\n  id: GetFileName\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: GetFileName()\n  fullName: System.Diagnostics.StackFrame.GetFileName()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFileName\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 203\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public virtual string GetFileName()\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Overridable Function GetFileName As String\n    return:\n      type: System.String\n      description: \"\\n<p>The file name, or <strong>null</strong> if the file name cannot be determined.</p>\\n\"\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StackFrame.GetFileName()\n- uid: System.Diagnostics.StackFrame.GetILOffset\n  commentId: M:System.Diagnostics.StackFrame.GetILOffset\n  id: GetILOffset\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: GetILOffset()\n  fullName: System.Diagnostics.StackFrame.GetILOffset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetILOffset\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 193\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the <xref href=\\\"System.Diagnostics.DebuggableAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public virtual int GetILOffset()\n    content.vb: Public Overridable Function GetILOffset As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>The offset from the start of the MSIL code for the method that is executing.</p>\\n\"\n  seealso:\n  - type: System.Diagnostics.DebuggableAttribute\n    commentId: T:System.Diagnostics.DebuggableAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StackFrame.GetILOffset()\n- uid: System.Diagnostics.StackFrame.GetMethod\n  commentId: M:System.Diagnostics.StackFrame.GetMethod\n  id: GetMethod\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: GetMethod()\n  fullName: System.Diagnostics.StackFrame.GetMethod()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetMethod\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 173\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Gets the method in which the frame is executing.</p>\\n\"\n  syntax:\n    content: public virtual MethodBase GetMethod()\n    content.vb: Public Overridable Function GetMethod As MethodBase\n    return:\n      type: System.Reflection.MethodBase\n      description: \"\\n<p>The method in which the frame is executing.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StackFrame.GetMethod()\n- uid: System.Diagnostics.StackFrame.ToString\n  commentId: M:System.Diagnostics.StackFrame.ToString\n  id: ToString\n  parent: System.Diagnostics.StackFrame\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Diagnostics.StackFrame.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ToString\n    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs\n    startLine: 244\n  assemblies:\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics\n  summary: \"\\n<p>Builds a readable representation of the stack trace.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public override string ToString()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A readable representation of the stack trace.</p>\\n\"\n  overridden: System.Object.ToString\n  see:\n  - type: System.Security.Permissions.FileIOPermission\n    commentId: T:System.Security.Permissions.FileIOPermission\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: StackFrame.ToString()\nreferences:\n- uid: System.Diagnostics\n  isExternal: false\n  name: System.Diagnostics\n  fullName: System.Diagnostics\n  nameWithType: System.Diagnostics\n  commentId: N:System.Diagnostics\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n  name: GetNativeImageBase()\n  fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n    name: GetNativeImageBase\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n    name: GetNativeImageBase\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.GetNativeImageBase()\n  commentId: M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.GetNativeIP\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n  name: GetNativeIP()\n  fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeIP\n    name: GetNativeIP\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeIP\n    name: GetNativeIP\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.GetNativeIP()\n  commentId: M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasILOffset\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n  name: HasILOffset()\n  fullName: System.Diagnostics.StackFrameExtensions.HasILOffset()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasILOffset\n    name: HasILOffset\n    fullName: System.Diagnostics.StackFrameExtensions.HasILOffset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasILOffset\n    name: HasILOffset\n    fullName: System.Diagnostics.StackFrameExtensions.HasILOffset\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasILOffset()\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasMethod\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n  name: HasMethod()\n  fullName: System.Diagnostics.StackFrameExtensions.HasMethod()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasMethod\n    name: HasMethod\n    fullName: System.Diagnostics.StackFrameExtensions.HasMethod\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasMethod\n    name: HasMethod\n    fullName: System.Diagnostics.StackFrameExtensions.HasMethod\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasMethod()\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasNativeImage\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n  name: HasNativeImage()\n  fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasNativeImage\n    name: HasNativeImage\n    fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasNativeImage\n    name: HasNativeImage\n    fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasNativeImage()\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrame.System.Diagnostics.StackFrameExtensions.HasSource\n  parent: System.Diagnostics.StackFrameExtensions\n  definition: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n  name: HasSource()\n  fullName: System.Diagnostics.StackFrameExtensions.HasSource()\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasSource\n    name: HasSource\n    fullName: System.Diagnostics.StackFrameExtensions.HasSource\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasSource\n    name: HasSource\n    fullName: System.Diagnostics.StackFrameExtensions.HasSource\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasSource()\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: GetNativeImageBase(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n    name: GetNativeImageBase\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n    name: GetNativeImageBase\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeImageBase\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.GetNativeImageBase(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions\n  parent: System.Diagnostics\n  isExternal: false\n  name: StackFrameExtensions\n  fullName: System.Diagnostics.StackFrameExtensions\n  nameWithType: StackFrameExtensions\n  commentId: T:System.Diagnostics.StackFrameExtensions\n- uid: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: GetNativeIP(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n    name: GetNativeIP\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n    name: GetNativeIP\n    fullName: System.Diagnostics.StackFrameExtensions.GetNativeIP\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.GetNativeIP(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: HasILOffset(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n    name: HasILOffset\n    fullName: System.Diagnostics.StackFrameExtensions.HasILOffset\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n    name: HasILOffset\n    fullName: System.Diagnostics.StackFrameExtensions.HasILOffset\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasILOffset(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: HasMethod(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n    name: HasMethod\n    fullName: System.Diagnostics.StackFrameExtensions.HasMethod\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n    name: HasMethod\n    fullName: System.Diagnostics.StackFrameExtensions.HasMethod\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasMethod(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: HasNativeImage(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n    name: HasNativeImage\n    fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n    name: HasNativeImage\n    fullName: System.Diagnostics.StackFrameExtensions.HasNativeImage\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasNativeImage(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)\n- uid: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n  isExternal: false\n  name: HasSource(StackFrame)\n  fullName: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n  spec.csharp:\n  - uid: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n    name: HasSource\n    fullName: System.Diagnostics.StackFrameExtensions.HasSource\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n    name: HasSource\n    fullName: System.Diagnostics.StackFrameExtensions.HasSource\n  - name: (\n    fullName: (\n  - uid: System.Diagnostics.StackFrame\n    name: StackFrame\n    fullName: System.Diagnostics.StackFrame\n  - name: )\n    fullName: )\n  nameWithType: StackFrameExtensions.HasSource(StackFrame)\n  commentId: M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  fullName: System.Reflection.MethodBase\n  nameWithType: MethodBase\n  commentId: T:System.Reflection.MethodBase\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  nameWithType: System.Reflection\n  commentId: N:System.Reflection\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n"}