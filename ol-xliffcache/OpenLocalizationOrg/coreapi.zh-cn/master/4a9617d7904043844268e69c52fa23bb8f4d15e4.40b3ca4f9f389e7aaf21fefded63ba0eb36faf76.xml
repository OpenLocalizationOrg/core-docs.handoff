{"nodes":[{"pos":[919,929],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[2197,2215],"content":"HttpMethod(String)","needQuote":true,"nodes":[{"content":"HttpMethod(String)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The HTTP method.&lt;/p&gt;\\n","pos":[2961,2988],"source":"\\n<p>The HTTP method.</p>\\n"},{"pos":[3269,3275],"content":"Delete","needQuote":true,"nodes":[{"content":"Delete","pos":[0,6]}]},{"pos":[4335,4338],"content":"Get","needQuote":true,"nodes":[{"content":"Get","pos":[0,3]}]},{"pos":[5383,5387],"content":"Head","needQuote":true,"nodes":[{"content":"Head","pos":[0,4]}]},{"pos":[6573,6579],"content":"Method","needQuote":true,"nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[7670,7677],"content":"Options","needQuote":true,"nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[8746,8750],"content":"Post","needQuote":true,"nodes":[{"content":"Post","pos":[0,4]}]},{"pos":[9856,9859],"content":"Put","needQuote":true,"nodes":[{"content":"Put","pos":[0,3]}]},{"pos":[10961,10966],"content":"Trace","needQuote":true,"nodes":[{"content":"Trace","pos":[0,5]}]},{"pos":[12113,12131],"content":"Equals(HttpMethod)","needQuote":true,"nodes":[{"content":"Equals(HttpMethod)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The HTTP method to compare with the current object.&lt;/p&gt;\\n","pos":[12983,13045],"source":"\\n<p>The HTTP method to compare with the current object.</p>\\n"},{"pos":[13748,13762],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[14580,14637],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[15284,15297],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16638,16670],"content":"Equality(HttpMethod, HttpMethod)","needQuote":true,"nodes":[{"content":"Equality(HttpMethod, HttpMethod)","pos":[0,32]}]},{"pos":[18664,18698],"content":"Inequality(HttpMethod, HttpMethod)","needQuote":true,"nodes":[{"content":"Inequality(HttpMethod, HttpMethod)","pos":[0,34]}]},{"pos":[20527,20537],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21523,21538],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[21696,21702],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21893,21915],"content":"IEquatable<HttpMethod>","needQuote":true,"nodes":[{"content":"IEquatable&lt;HttpMethod&gt;","pos":[0,22],"source":"IEquatable<HttpMethod>"}]},{"pos":[22129,22139],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[22203,22204],"content":"<","needQuote":true,"nodes":[]},{"pos":[22267,22277],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[22401,22411],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[22476,22479]},{"pos":[22549,22559],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[22611,22612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22882,22904],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[23052,23058],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23125,23126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23176,23182],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23243,23244]},{"pos":[23299,23305],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23365,23366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23463,23469],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23536,23537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23587,23593],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23654,23655]},{"pos":[23710,23716],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23776,23777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24022,24053],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[24219,24234],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24310,24311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24361,24367],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24428,24429]},{"pos":[24484,24490],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24550,24551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24657,24672],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24748,24749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24799,24805],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24866,24867]},{"pos":[24922,24928],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24988,24989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25215,25224],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25317,25324],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25392,25393],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25420,25421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25490,25497],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25565,25566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25593,25594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25769,25786],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[25895,25910],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[25986,25987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26014,26015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26092,26107],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26183,26184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26211,26212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26357,26363],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26483,26496],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[26651,26661],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[26704,26705],"content":"<","needQuote":true,"nodes":[]},{"pos":[26732,26733],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26832,26842],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[26886,26889]},{"pos":[26923,26924],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26951,26952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27136,27142],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27309,27319],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[27625,27643],"content":"Equals(HttpMethod)","needQuote":true,"nodes":[{"content":"Equals(HttpMethod)","pos":[0,18]}]},{"pos":[27901,27907],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28006,28007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28070,28080],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[28132,28133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28211,28217],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[28319,28320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28383,28393],"content":"HttpMethod","needQuote":true,"nodes":[{"content":"HttpMethod","pos":[0,10]}]},{"pos":[28445,28446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28748,28755],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28903,28912],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[29070,29076],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29129,29130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29157,29158],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29185,29186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29264,29270],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29326,29327],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29354,29355],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29382,29383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29626,29640],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[29759,29765],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[29832,29833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29883,29889],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29949,29950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30033,30039],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[30106,30107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30157,30163],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30223,30224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30414,30427],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30528,30539],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30611,30612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30639,30640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30713,30724],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[30796,30797],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30824,30825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30985,30990],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31147,31157],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31252,31260],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31329,31330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31357,31358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31428,31436],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[31505,31506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31533,31534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Net.Http.HttpMethod\n  commentId: T:System.Net.Http.HttpMethod\n  id: HttpMethod\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.HttpMethod.#ctor(System.String)\n  - System.Net.Http.HttpMethod.Delete\n  - System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)\n  - System.Net.Http.HttpMethod.Equals(System.Object)\n  - System.Net.Http.HttpMethod.Get\n  - System.Net.Http.HttpMethod.GetHashCode\n  - System.Net.Http.HttpMethod.Head\n  - System.Net.Http.HttpMethod.Method\n  - System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  - System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  - System.Net.Http.HttpMethod.Options\n  - System.Net.Http.HttpMethod.Post\n  - System.Net.Http.HttpMethod.Put\n  - System.Net.Http.HttpMethod.ToString\n  - System.Net.Http.HttpMethod.Trace\n  langs:\n  - csharp\n  - vb\n  name: HttpMethod\n  fullName: System.Net.Http.HttpMethod\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HttpMethod\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 143\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.</p>\\n\"\n  syntax:\n    content: 'public class HttpMethod : IEquatable<HttpMethod>'\n    content.vb: >-\n      Public Class HttpMethod\n          Implements IEquatable(Of HttpMethod)\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Net.Http.HttpMethod}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: HttpMethod\n- uid: System.Net.Http.HttpMethod.#ctor(System.String)\n  commentId: M:System.Net.Http.HttpMethod.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: HttpMethod(String)\n  fullName: System.Net.Http.HttpMethod.HttpMethod(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 145\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with a specific HTTP method.</p>\\n\"\n  syntax:\n    content: public HttpMethod(string method)\n    content.vb: Public Sub New(method As String)\n    parameters:\n    - id: method\n      type: System.String\n      description: \"\\n<p>The HTTP method.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMethod.HttpMethod(String)\n- uid: System.Net.Http.HttpMethod.Delete\n  commentId: P:System.Net.Http.HttpMethod.Delete\n  id: Delete\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Delete\n  fullName: System.Net.Http.HttpMethod.Delete\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Delete\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 146\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP DELETE protocol method.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Delete { get; }\n    content.vb: Public Shared ReadOnly Property Delete As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Delete\n- uid: System.Net.Http.HttpMethod.Get\n  commentId: P:System.Net.Http.HttpMethod.Get\n  id: Get\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Get\n  fullName: System.Net.Http.HttpMethod.Get\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Get\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 147\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP GET protocol method.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Get { get; }\n    content.vb: Public Shared ReadOnly Property Get As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Get\n- uid: System.Net.Http.HttpMethod.Head\n  commentId: P:System.Net.Http.HttpMethod.Head\n  id: Head\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Head\n  fullName: System.Net.Http.HttpMethod.Head\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Head\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 148\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Head { get; }\n    content.vb: Public Shared ReadOnly Property Head As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Head\n- uid: System.Net.Http.HttpMethod.Method\n  commentId: P:System.Net.Http.HttpMethod.Method\n  id: Method\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Method\n  fullName: System.Net.Http.HttpMethod.Method\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Method\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 149\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>An HTTP method. </p>\\n\"\n  syntax:\n    content: public string Method { get; }\n    content.vb: Public ReadOnly Property Method As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An HTTP method represented as a <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: HttpMethod.Method\n- uid: System.Net.Http.HttpMethod.Options\n  commentId: P:System.Net.Http.HttpMethod.Options\n  id: Options\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Options\n  fullName: System.Net.Http.HttpMethod.Options\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Options\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 150\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP OPTIONS protocol method.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Options { get; }\n    content.vb: Public Shared ReadOnly Property Options As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Options\n- uid: System.Net.Http.HttpMethod.Post\n  commentId: P:System.Net.Http.HttpMethod.Post\n  id: Post\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Post\n  fullName: System.Net.Http.HttpMethod.Post\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Post\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 151\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Post { get; }\n    content.vb: Public Shared ReadOnly Property Post As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Post\n- uid: System.Net.Http.HttpMethod.Put\n  commentId: P:System.Net.Http.HttpMethod.Put\n  id: Put\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Put\n  fullName: System.Net.Http.HttpMethod.Put\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Put\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 152\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Put { get; }\n    content.vb: Public Shared ReadOnly Property Put As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Put\n- uid: System.Net.Http.HttpMethod.Trace\n  commentId: P:System.Net.Http.HttpMethod.Trace\n  id: Trace\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Trace\n  fullName: System.Net.Http.HttpMethod.Trace\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Trace\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 153\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Represents an HTTP TRACE protocol method.</p>\\n\"\n  syntax:\n    content: public static HttpMethod Trace { get; }\n    content.vb: Public Shared ReadOnly Property Trace As HttpMethod\n    parameters: []\n    return:\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: HttpMethod.Trace\n- uid: System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)\n  commentId: M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)\n  id: Equals(System.Net.Http.HttpMethod)\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Equals(HttpMethod)\n  fullName: System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 154\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public bool Equals(HttpMethod other)\n    content.vb: Public Function Equals(other As HttpMethod) As Boolean\n    parameters:\n    - id: other\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The HTTP method to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.IEquatable{System.Net.Http.HttpMethod}.Equals(System.Net.Http.HttpMethod)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: HttpMethod.Equals(HttpMethod)\n- uid: System.Net.Http.HttpMethod.Equals(System.Object)\n  commentId: M:System.Net.Http.HttpMethod.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.HttpMethod.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 155\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified object is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: HttpMethod.Equals(Object)\n- uid: System.Net.Http.HttpMethod.GetHashCode\n  commentId: M:System.Net.Http.HttpMethod.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.HttpMethod.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 156\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Serves as a hash function for this type.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: HttpMethod.GetHashCode()\n- uid: System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  commentId: M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  id: op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Equality(HttpMethod, HttpMethod)\n  fullName: System.Net.Http.HttpMethod.Equality(System.Net.Http.HttpMethod, System.Net.Http.HttpMethod)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 157\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>The equality operator for comparing two <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public static bool operator ==(HttpMethod left, HttpMethod right)\n    content.vb: Public Shared Operator =(left As HttpMethod, right As HttpMethod) As Boolean\n    parameters:\n    - id: left\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The left <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an equality operator.</p>\\n\"\n    - id: right\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The right  <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an equality operator.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <em>left</em> and <em>right</em> parameters are equal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: HttpMethod.Equality(HttpMethod, HttpMethod)\n- uid: System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  commentId: M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  id: op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: Inequality(HttpMethod, HttpMethod)\n  fullName: System.Net.Http.HttpMethod.Inequality(System.Net.Http.HttpMethod, System.Net.Http.HttpMethod)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 158\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>The inequality operator for comparing two <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> objects.</p>\\n\"\n  syntax:\n    content: public static bool operator !=(HttpMethod left, HttpMethod right)\n    content.vb: Public Shared Operator <>(left As HttpMethod, right As HttpMethod) As Boolean\n    parameters:\n    - id: left\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The left <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an inequality operator.</p>\\n\"\n    - id: right\n      type: System.Net.Http.HttpMethod\n      description: \"\\n<p>The right  <xref href=\\\"System.Net.Http.HttpMethod\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to an inequality operator.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <em>left</em> and <em>right</em> parameters are inequal; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: HttpMethod.Inequality(HttpMethod, HttpMethod)\n- uid: System.Net.Http.HttpMethod.ToString\n  commentId: M:System.Net.Http.HttpMethod.ToString\n  id: ToString\n  parent: System.Net.Http.HttpMethod\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.HttpMethod.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 159\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Returns a string that represents the current object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string representing the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: HttpMethod.ToString()\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IEquatable{System.Net.Http.HttpMethod}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<HttpMethod>\n  fullName: System.IEquatable<System.Net.Http.HttpMethod>\n  fullname.vb: System.IEquatable(Of System.Net.Http.HttpMethod)\n  name.vb: IEquatable(Of HttpMethod)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Net.Http.HttpMethod\n    name: HttpMethod\n    fullName: System.Net.Http.HttpMethod\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Net.Http.HttpMethod\n    name: HttpMethod\n    fullName: System.Net.Http.HttpMethod\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable{System.Net.Http.HttpMethod}\n  nameWithType: IEquatable<HttpMethod>\n  nameWithType.vb: IEquatable(Of HttpMethod)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  fullName: System.IEquatable<T>\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.IEquatable`1\n  nameWithType: IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Net.Http.HttpMethod\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMethod\n  fullName: System.Net.Http.HttpMethod\n  commentId: T:System.Net.Http.HttpMethod\n  nameWithType: HttpMethod\n- uid: System.IEquatable{System.Net.Http.HttpMethod}.Equals(System.Net.Http.HttpMethod)\n  parent: System.IEquatable{System.Net.Http.HttpMethod}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(HttpMethod)\n  fullName: System.IEquatable<System.Net.Http.HttpMethod>.Equals(System.Net.Http.HttpMethod)\n  fullname.vb: System.IEquatable(Of System.Net.Http.HttpMethod).Equals(System.Net.Http.HttpMethod)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<System.Net.Http.HttpMethod>.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpMethod\n    name: HttpMethod\n    fullName: System.Net.Http.HttpMethod\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of System.Net.Http.HttpMethod).Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Net.Http.HttpMethod\n    name: HttpMethod\n    fullName: System.Net.Http.HttpMethod\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable{System.Net.Http.HttpMethod}.Equals(System.Net.Http.HttpMethod)\n  nameWithType: IEquatable<HttpMethod>.Equals(HttpMethod)\n  nameWithType.vb: IEquatable(Of HttpMethod).Equals(HttpMethod)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: M:System.IEquatable`1.Equals(`0)\n  nameWithType: IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n"}