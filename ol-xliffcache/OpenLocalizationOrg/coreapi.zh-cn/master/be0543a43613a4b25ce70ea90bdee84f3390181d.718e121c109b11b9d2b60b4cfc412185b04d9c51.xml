{"nodes":[{"pos":[428,457],"content":"AsyncLocalValueChangedArgs<T>","needQuote":true,"nodes":[{"content":"AsyncLocalValueChangedArgs&lt;T&gt;","pos":[0,29],"source":"AsyncLocalValueChangedArgs<T>"}]},{"content":"\\n&lt;p&gt;The type of the data.","pos":[1262,1288],"source":"\\n<p>The type of the data."},{"content":"&lt;/p&gt;\\n","pos":[1289,1295],"source":" </p>\\n"},{"pos":[2379,2391],"content":"CurrentValue","needQuote":true,"nodes":[{"content":"CurrentValue","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The data's current value.","pos":[3034,3064],"source":"\\n<p>The data's current value."},{"content":"&lt;/p&gt;\\n","pos":[3065,3071],"source":" </p>\\n"},{"pos":[3607,3620],"content":"PreviousValue","needQuote":true,"nodes":[{"content":"PreviousValue","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The data's previous value.","pos":[4267,4298],"source":"\\n<p>The data's previous value."},{"content":"&lt;/p&gt;\\n","pos":[4299,4305],"source":" </p>\\n"},{"pos":[4865,4885],"content":"ThreadContextChanged","needQuote":true,"nodes":[{"content":"ThreadContextChanged","pos":[0,20]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the value changed because of a change of execution context; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[5647,5773],"source":"\\n<p>\\n<strong>true</strong> if the value changed because of a change of execution context; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5774,5780],"source":" </p>\\n"},{"pos":[6151,6167],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[6362,6376],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6501,6507],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6556,6557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6607,6613],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6673,6674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6760,6766],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6815,6816],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6866,6872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6932,6933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7136,7149],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7256,7267],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7321,7322],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7349,7350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7426,7437],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7491,7492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7519,7520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7709,7719],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7820,7828],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7879,7880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7907,7908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7981,7989],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[8040,8041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8068,8069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8272,8294],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8442,8448],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8515,8516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8566,8572],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8633,8634]},{"pos":[8689,8695],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8755,8756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8853,8859],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8926,8927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8977,8983],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9044,9045]},{"pos":[9100,9106],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9166,9167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9412,9443],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9609,9624],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9700,9701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9751,9757],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9818,9819]},{"pos":[9874,9880],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9940,9941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10047,10062],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10138,10139],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10189,10195],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10256,10257]},{"pos":[10312,10318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10378,10379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10605,10614],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10707,10714],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10782,10783],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10810,10811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10880,10887],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10955,10956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10983,10984],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11140,11149],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[11303,11309],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11430,11436],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11538,11539],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[11628,11629],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[11729,11736],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"items:\n- uid: System.Threading.AsyncLocalValueChangedArgs`1\n  commentId: T:System.Threading.AsyncLocalValueChangedArgs`1\n  id: AsyncLocalValueChangedArgs`1\n  parent: System.Threading\n  children:\n  - System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue\n  - System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue\n  - System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged\n  langs:\n  - csharp\n  - vb\n  name: AsyncLocalValueChangedArgs<T>\n  fullName: System.Threading.AsyncLocalValueChangedArgs<T>\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AsyncLocalValueChangedArgs\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 96\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>The class that provides data change information to <xref href=\\\"System.Threading.AsyncLocal`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instances that register for change notifications. </p>\\n\"\n  syntax:\n    content: public struct AsyncLocalValueChangedArgs<T>\n    content.vb: Public Structure AsyncLocalValueChangedArgs(Of T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of the data. </p>\\n\"\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T)\n  name.vb: AsyncLocalValueChangedArgs(Of T)\n  nameWithType: AsyncLocalValueChangedArgs<T>\n  nameWithType.vb: AsyncLocalValueChangedArgs(Of T)\n- uid: System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue\n  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue\n  id: CurrentValue\n  parent: System.Threading.AsyncLocalValueChangedArgs`1\n  langs:\n  - csharp\n  - vb\n  name: CurrentValue\n  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.CurrentValue\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrentValue\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 99\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets the data's current value. </p>\\n\"\n  syntax:\n    content: public T CurrentValue { get; }\n    content.vb: Public ReadOnly Property CurrentValue As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>The data's current value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).CurrentValue\n  nameWithType: AsyncLocalValueChangedArgs<T>.CurrentValue\n  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).CurrentValue\n- uid: System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue\n  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue\n  id: PreviousValue\n  parent: System.Threading.AsyncLocalValueChangedArgs`1\n  langs:\n  - csharp\n  - vb\n  name: PreviousValue\n  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.PreviousValue\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PreviousValue\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 98\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets the data's previous value.</p>\\n\"\n  syntax:\n    content: public T PreviousValue { get; }\n    content.vb: Public ReadOnly Property PreviousValue As T\n    parameters: []\n    return:\n      type: '{T}'\n      description: \"\\n<p>The data's previous value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).PreviousValue\n  nameWithType: AsyncLocalValueChangedArgs<T>.PreviousValue\n  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).PreviousValue\n- uid: System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged\n  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged\n  id: ThreadContextChanged\n  parent: System.Threading.AsyncLocalValueChangedArgs`1\n  langs:\n  - csharp\n  - vb\n  name: ThreadContextChanged\n  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.ThreadContextChanged\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ThreadContextChanged\n    path: src/mscorlib/src/System/Threading/AsyncLocal.cs\n    startLine: 105\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Returns a value that indicates whether the value changes because of a change of execution context. </p>\\n\"\n  syntax:\n    content: public bool ThreadContextChanged { get; }\n    content.vb: Public ReadOnly Property ThreadContextChanged As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the value changed because of a change of execution context; otherwise, <strong>false</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).ThreadContextChanged\n  nameWithType: AsyncLocalValueChangedArgs<T>.ThreadContextChanged\n  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).ThreadContextChanged\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n"}