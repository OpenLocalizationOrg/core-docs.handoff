{"nodes":[{"pos":[939,954],"content":"IndexExpression","needQuote":true,"nodes":[{"content":"IndexExpression","pos":[0,15]}]},{"pos":[42361,42370],"content":"Arguments","needQuote":true,"nodes":[{"content":"Arguments","pos":[0,9]}]},{"content":"\\n&lt;p&gt;The read-only collection containing the arguments that will be used to index the property or array.&lt;/p&gt;\\n","pos":[43208,43318],"source":"\\n<p>The read-only collection containing the arguments that will be used to index the property or array.</p>\\n"},{"pos":[43658,43665],"content":"Indexer","needQuote":true,"nodes":[{"content":"Indexer","pos":[0,7]}]},{"pos":[45052,45060],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[46507,46513],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47834,47865],"content":"IArgumentProvider.ArgumentCount","needQuote":true,"nodes":[{"content":"IArgumentProvider.ArgumentCount","pos":[0,31]}]},{"pos":[49561,49565],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[51124,51149],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[52601,52637],"content":"IArgumentProvider.GetArgument(Int32)","needQuote":true,"nodes":[{"content":"IArgumentProvider.GetArgument(Int32)","pos":[0,36]}]},{"content":"\\n&lt;p&gt;The index of the argument.&lt;/p&gt;\\n","pos":[53698,53735],"source":"\\n<p>The index of the argument.</p>\\n"},{"pos":[54802,54845],"content":"Update(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Update(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Update(Expression, IEnumerable<Expression>)"}]},{"content":"\\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\\n","pos":[56387,56484],"source":"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n"},{"pos":[57008,57031],"content":"System.Linq.Expressions","needQuote":true,"nodes":[{"content":"System.Linq.Expressions","pos":[0,23]}]},{"pos":[57213,57219],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57402,57412],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[57648,57665],"content":"IArgumentProvider","needQuote":true,"nodes":[{"content":"IArgumentProvider","pos":[0,17]}]},{"pos":[57936,57945],"content":"CanReduce","needQuote":true,"nodes":[{"content":"CanReduce","pos":[0,9]}]},{"pos":[58290,58317],"content":"Add(Expression, Expression)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression)","pos":[0,27]}]},{"pos":[58585,58588],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[58652,58653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58724,58734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[58795,58796]},{"pos":[58872,58882],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[58942,58943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59100,59103],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[59167,59168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59239,59249],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[59310,59311]},{"pos":[59387,59397],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[59457,59458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59873,59912],"content":"Add(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Add(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[60239,60242],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[60306,60307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60378,60388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60449,60450]},{"pos":[60526,60536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[60597,60598]},{"pos":[60668,60678],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[60753,60754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60940,60943],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[61007,61008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61079,61089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61150,61151]},{"pos":[61227,61237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[61298,61299]},{"pos":[61369,61379],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[61454,61455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61889,61922],"content":"AddAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[62202,62211],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[62281,62282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62353,62363],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62424,62425]},{"pos":[62501,62511],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[62571,62572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62735,62744],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[62814,62815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62886,62896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[62957,62958]},{"pos":[63034,63044],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[63104,63105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63538,63583],"content":"AddAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[63922,63931],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[64001,64002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64073,64083],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64144,64145]},{"pos":[64221,64231],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64292,64293]},{"pos":[64363,64373],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[64448,64449],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64641,64650],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[64720,64721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64792,64802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[64863,64864]},{"pos":[64940,64950],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[65011,65012]},{"pos":[65082,65092],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[65167,65168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65683,65746],"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[66168,66177],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[66247,66248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66319,66329],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66390,66391]},{"pos":[66467,66477],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[66538,66539]},{"pos":[66609,66619],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[66695,66696]},{"pos":[66778,66794],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[66860,66861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67094,67103],"content":"AddAssign","needQuote":true,"nodes":[{"content":"AddAssign","pos":[0,9]}]},{"pos":[67173,67174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67245,67255],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67316,67317]},{"pos":[67393,67403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[67464,67465]},{"pos":[67535,67545],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[67621,67622]},{"pos":[67704,67720],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[67786,67787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68299,68339],"content":"AddAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression)","pos":[0,40]}]},{"pos":[68633,68649],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[68726,68727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68798,68808],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[68869,68870]},{"pos":[68946,68956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[69016,69017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69187,69203],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[69280,69281],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69352,69362],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[69423,69424]},{"pos":[69500,69510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[69570,69571],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70025,70077],"content":"AddAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[70430,70446],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[70523,70524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70595,70605],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70666,70667]},{"pos":[70743,70753],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[70814,70815]},{"pos":[70885,70895],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[70970,70971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71170,71186],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[71263,71264],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71335,71345],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71406,71407]},{"pos":[71483,71493],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[71554,71555]},{"pos":[71625,71635],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[71710,71711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72247,72317],"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[72753,72769],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[72846,72847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72918,72928],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[72989,72990]},{"pos":[73066,73076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73137,73138]},{"pos":[73208,73218],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[73294,73295]},{"pos":[73377,73393],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[73459,73460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73700,73716],"content":"AddAssignChecked","needQuote":true,"nodes":[{"content":"AddAssignChecked","pos":[0,16]}]},{"pos":[73793,73794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73865,73875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[73936,73937]},{"pos":[74013,74023],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[74084,74085]},{"pos":[74155,74165],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[74241,74242]},{"pos":[74324,74340],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[74406,74407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74927,74961],"content":"AddChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression)","pos":[0,34]}]},{"pos":[75243,75253],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[75324,75325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75396,75406],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[75467,75468]},{"pos":[75544,75554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[75614,75615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[75779,75789],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[75860,75861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75932,75942],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[76003,76004]},{"pos":[76080,76090],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[76150,76151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76587,76633],"content":"AddChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AddChecked(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[76974,76984],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[77055,77056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77127,77137],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77198,77199]},{"pos":[77275,77285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77346,77347]},{"pos":[77417,77427],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[77502,77503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77696,77706],"content":"AddChecked","needQuote":true,"nodes":[{"content":"AddChecked","pos":[0,10]}]},{"pos":[77777,77778],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77849,77859],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[77920,77921]},{"pos":[77997,78007],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[78068,78069]},{"pos":[78139,78149],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[78224,78225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78667,78694],"content":"And(Expression, Expression)","needQuote":true,"nodes":[{"content":"And(Expression, Expression)","pos":[0,27]}]},{"pos":[78962,78965],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[79029,79030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79101,79111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79172,79173]},{"pos":[79249,79259],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[79319,79320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79477,79480],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[79544,79545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79616,79626],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[79687,79688]},{"pos":[79764,79774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[79834,79835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80250,80289],"content":"And(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"And(Expression, Expression, MethodInfo)","pos":[0,39]}]},{"pos":[80616,80619],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[80683,80684],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80755,80765],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80826,80827]},{"pos":[80903,80913],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[80974,80975]},{"pos":[81045,81055],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[81130,81131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81317,81320],"content":"And","needQuote":true,"nodes":[{"content":"And","pos":[0,3]}]},{"pos":[81384,81385],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81456,81466],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81527,81528]},{"pos":[81604,81614],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[81675,81676]},{"pos":[81746,81756],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[81831,81832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82264,82295],"content":"AndAlso(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression)","pos":[0,31]}]},{"pos":[82571,82578],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[82646,82647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82718,82728],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[82789,82790]},{"pos":[82866,82876],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[82936,82937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83098,83105],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[83173,83174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[83245,83255],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[83316,83317]},{"pos":[83393,83403],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[83463,83464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83891,83934],"content":"AndAlso(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAlso(Expression, Expression, MethodInfo)","pos":[0,43]}]},{"pos":[84269,84276],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[84344,84345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[84416,84426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[84487,84488]},{"pos":[84564,84574],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[84635,84636]},{"pos":[84706,84716],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[84791,84792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84982,84989],"content":"AndAlso","needQuote":true,"nodes":[{"content":"AndAlso","pos":[0,7]}]},{"pos":[85057,85058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85129,85139],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85200,85201]},{"pos":[85277,85287],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[85348,85349]},{"pos":[85419,85429],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[85504,85505],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85947,85980],"content":"AndAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression)","pos":[0,33]}]},{"pos":[86260,86269],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[86339,86340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86411,86421],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[86482,86483]},{"pos":[86559,86569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[86629,86630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86793,86802],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[86872,86873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86944,86954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[87015,87016]},{"pos":[87092,87102],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[87162,87163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87596,87641],"content":"AndAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[87980,87989],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[88059,88060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88131,88141],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88202,88203]},{"pos":[88279,88289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88350,88351]},{"pos":[88421,88431],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[88506,88507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88699,88708],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[88778,88779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88850,88860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[88921,88922]},{"pos":[88998,89008],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[89069,89070]},{"pos":[89140,89150],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[89225,89226],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89741,89804],"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"AndAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,63]}]},{"pos":[90226,90235],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[90305,90306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90377,90387],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90448,90449]},{"pos":[90525,90535],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[90596,90597]},{"pos":[90667,90677],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[90753,90754]},{"pos":[90836,90852],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[90918,90919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91152,91161],"content":"AndAssign","needQuote":true,"nodes":[{"content":"AndAssign","pos":[0,9]}]},{"pos":[91231,91232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91303,91313],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[91374,91375]},{"pos":[91451,91461],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[91522,91523]},{"pos":[91593,91603],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[91679,91680]},{"pos":[91762,91778],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[91844,91845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92391,92439],"content":"ArrayAccess(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ArrayAccess(Expression, IEnumerable<Expression>)"}]},{"pos":[93043,93054],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[93126,93127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93198,93208],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[93269,93270]},{"pos":[93352,93363],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[93448,93449],"content":"<","needQuote":true,"nodes":[]},{"pos":[93520,93530],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[93622,93623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93828,93839],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[93911,93912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93983,93993],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[94054,94055]},{"pos":[94137,94148],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[94234,94237]},{"pos":[94315,94325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[94385,94386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94413,94414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94962,94999],"content":"ArrayAccess(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayAccess(Expression, Expression[])","pos":[0,37]}]},{"pos":[95472,95483],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[95555,95556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95627,95637],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[95698,95699]},{"pos":[95775,95785],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[95846,95848]},{"pos":[95879,95880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96047,96058],"content":"ArrayAccess","needQuote":true,"nodes":[{"content":"ArrayAccess","pos":[0,11]}]},{"pos":[96130,96131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96202,96212],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[96273,96274]},{"pos":[96350,96360],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[96420,96422],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[96450,96451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96972,97019],"content":"ArrayIndex(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"ArrayIndex(Expression, IEnumerable<Expression>)"}]},{"pos":[97619,97629],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[97700,97701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97772,97782],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[97843,97844]},{"pos":[97926,97937],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[98022,98023],"content":"<","needQuote":true,"nodes":[]},{"pos":[98094,98104],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98196,98197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98401,98411],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[98482,98483],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98554,98564],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[98625,98626]},{"pos":[98708,98719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[98805,98808]},{"pos":[98886,98896],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[98956,98957],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98984,98985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99527,99561],"content":"ArrayIndex(Expression, Expression)","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression)","pos":[0,34]}]},{"pos":[99843,99853],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[99924,99925],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99996,100006],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[100067,100068]},{"pos":[100144,100154],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100214,100215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100379,100389],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[100460,100461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100532,100542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[100603,100604]},{"pos":[100680,100690],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[100750,100751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101161,101197],"content":"ArrayIndex(Expression, Expression[])","needQuote":true,"nodes":[{"content":"ArrayIndex(Expression, Expression[])","pos":[0,36]}]},{"pos":[101666,101676],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[101747,101748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101819,101829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[101890,101891]},{"pos":[101967,101977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[102038,102040]},{"pos":[102071,102072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102238,102248],"content":"ArrayIndex","needQuote":true,"nodes":[{"content":"ArrayIndex","pos":[0,10]}]},{"pos":[102319,102320],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102391,102401],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[102462,102463]},{"pos":[102539,102549],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[102609,102611],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[102639,102640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103085,103108],"content":"ArrayLength(Expression)","needQuote":true,"nodes":[{"content":"ArrayLength(Expression)","pos":[0,23]}]},{"pos":[103321,103332],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[103404,103405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103476,103486],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[103546,103547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103677,103688],"content":"ArrayLength","needQuote":true,"nodes":[{"content":"ArrayLength","pos":[0,11]}]},{"pos":[103760,103761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103832,103842],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[103902,103903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[104262,104292],"content":"Assign(Expression, Expression)","needQuote":true,"nodes":[{"content":"Assign(Expression, Expression)","pos":[0,30]}]},{"pos":[104566,104572],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[104639,104640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[104711,104721],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[104782,104783]},{"pos":[104859,104869],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[104929,104930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105090,105096],"content":"Assign","needQuote":true,"nodes":[{"content":"Assign","pos":[0,6]}]},{"pos":[105163,105164],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[105235,105245],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[105306,105307]},{"pos":[105383,105393],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[105453,105454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[105841,105869],"content":"Bind(MemberInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MemberInfo, Expression)","pos":[0,28]}]},{"pos":[106127,106131],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[106196,106197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106262,106272],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[106348,106349]},{"pos":[106425,106435],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[106495,106496],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[106648,106652],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[106717,106718],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[106783,106793],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[106869,106870]},{"pos":[106946,106956],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[107016,107017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[107394,107422],"content":"Bind(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Bind(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[107680,107684],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[107749,107750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[107815,107825],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[107901,107902]},{"pos":[107978,107988],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[108048,108049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108201,108205],"content":"Bind","needQuote":true,"nodes":[{"content":"Bind","pos":[0,4]}]},{"pos":[108270,108271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[108336,108346],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[108422,108423]},{"pos":[108499,108509],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[108569,108570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[108959,108989],"content":"Block(IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;Expression&gt;)","pos":[0,30],"source":"Block(IEnumerable<Expression>)"}]},{"pos":[109450,109455],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[109521,109522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[109599,109610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[109695,109696],"content":"<","needQuote":true,"nodes":[]},{"pos":[109767,109777],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[109869,109870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110034,110039],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[110105,110106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[110183,110194],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[110280,110283]},{"pos":[110361,110371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[110431,110432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[110459,110460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[111011,111075],"content":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,64],"source":"Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[111830,111835],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[111901,111902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[111979,111990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[112075,112076],"content":"<","needQuote":true,"nodes":[]},{"pos":[112156,112175],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[112277,112278]},{"pos":[112360,112371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[112456,112457],"content":"<","needQuote":true,"nodes":[]},{"pos":[112528,112538],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[112630,112631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112879,112884],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[112950,112951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[113028,113039],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[113125,113128]},{"pos":[113215,113234],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[113303,113304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[113332,113333]},{"pos":[113415,113426],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[113512,113515]},{"pos":[113593,113603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[113663,113664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113691,113692],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[114360,114413],"content":"Block(IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,53],"source":"Block(IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[115037,115042],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[115108,115109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[115186,115197],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[115282,115283],"content":"<","needQuote":true,"nodes":[]},{"pos":[115363,115382],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[115484,115485]},{"pos":[115561,115571],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[115632,115634]},{"pos":[115665,115666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115876,115881],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[115947,115948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[116025,116036],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[116122,116125]},{"pos":[116212,116231],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[116300,116301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[116329,116330]},{"pos":[116406,116416],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[116476,116478],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[116506,116507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117062,117091],"content":"Block(Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression)","pos":[0,29]}]},{"pos":[117363,117368],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[117434,117435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[117506,117516],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[117577,117578]},{"pos":[117654,117664],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[117724,117725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117884,117889],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[117955,117956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[118027,118037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[118098,118099]},{"pos":[118175,118185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[118245,118246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118674,118715],"content":"Block(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression)","pos":[0,41]}]},{"pos":[119058,119063],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119129,119130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119201,119211],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119272,119273]},{"pos":[119349,119359],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119420,119421]},{"pos":[119497,119507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[119567,119568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119762,119767],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[119833,119834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119905,119915],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[119976,119977]},{"pos":[120053,120063],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[120124,120125]},{"pos":[120201,120211],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[120271,120272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120782,120835],"content":"Block(Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression)","pos":[0,53]}]},{"pos":[121249,121254],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[121320,121321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121392,121402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[121463,121464]},{"pos":[121540,121550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[121611,121612]},{"pos":[121688,121698],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[121759,121760]},{"pos":[121836,121846],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[121906,121907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122136,122141],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[122207,122208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122279,122289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[122350,122351]},{"pos":[122427,122437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[122498,122499]},{"pos":[122575,122585],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[122646,122647]},{"pos":[122723,122733],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[122793,122794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123386,123451],"content":"Block(Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Block(Expression, Expression, Expression, Expression, Expression)","pos":[0,65]}]},{"pos":[123936,123941],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[124007,124008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124079,124089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[124150,124151]},{"pos":[124227,124237],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[124298,124299]},{"pos":[124375,124385],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[124446,124447]},{"pos":[124523,124533],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[124594,124595]},{"pos":[124671,124681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[124741,124742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125006,125011],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[125077,125078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125149,125159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[125220,125221]},{"pos":[125297,125307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[125368,125369]},{"pos":[125445,125455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[125516,125517]},{"pos":[125593,125603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[125664,125665]},{"pos":[125741,125751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[125811,125812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126313,126332],"content":"Block(Expression[])","needQuote":true,"nodes":[{"content":"Block(Expression[])","pos":[0,19]}]},{"pos":[126662,126667],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[126733,126734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126805,126815],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[126876,126878]},{"pos":[126909,126910],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127036,127041],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[127107,127108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127179,127189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[127249,127251],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[127279,127280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127696,127732],"content":"Block(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;Expression&gt;)","pos":[0,36],"source":"Block(Type, IEnumerable<Expression>)"}]},{"pos":[128237,128242],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[128308,128309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128357,128361],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[128420,128421]},{"pos":[128503,128514],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[128599,128600],"content":"<","needQuote":true,"nodes":[]},{"pos":[128671,128681],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[128773,128774],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128950,128955],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[129021,129022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[129070,129074],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[129133,129134]},{"pos":[129216,129227],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[129313,129316]},{"pos":[129394,129404],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[129464,129465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129492,129493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[130080,130150],"content":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, IEnumerable&lt;Expression&gt;)","pos":[0,70],"source":"Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)"}]},{"pos":[130949,130954],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[131020,131021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[131069,131073],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[131132,131133]},{"pos":[131215,131226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[131311,131312],"content":"<","needQuote":true,"nodes":[]},{"pos":[131392,131411],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[131513,131514]},{"pos":[131596,131607],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[131692,131693],"content":"<","needQuote":true,"nodes":[]},{"pos":[131764,131774],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[131866,131867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132127,132132],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[132198,132199],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132247,132251],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[132310,132311]},{"pos":[132393,132404],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[132490,132493]},{"pos":[132580,132599],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[132668,132669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[132697,132698]},{"pos":[132780,132791],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[132877,132880]},{"pos":[132958,132968],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[133028,133029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133056,133057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133761,133820],"content":"Block(Type, IEnumerable<ParameterExpression>, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, IEnumerable&lt;ParameterExpression&gt;, Expression[])","pos":[0,59],"source":"Block(Type, IEnumerable<ParameterExpression>, Expression[])"}]},{"pos":[134488,134493],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[134559,134560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[134608,134612],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[134671,134672]},{"pos":[134754,134765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[134850,134851],"content":"<","needQuote":true,"nodes":[]},{"pos":[134931,134950],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[135052,135053]},{"pos":[135129,135139],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[135200,135202]},{"pos":[135233,135234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[135456,135461],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[135527,135528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135576,135580],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[135639,135640]},{"pos":[135722,135733],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[135819,135822]},{"pos":[135909,135928],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[135997,135998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[136026,136027]},{"pos":[136103,136113],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[136173,136175],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[136203,136204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136761,136786],"content":"Block(Type, Expression[])","needQuote":true,"nodes":[{"content":"Block(Type, Expression[])","pos":[0,25]}]},{"pos":[137160,137165],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[137231,137232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137280,137284],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[137343,137344]},{"pos":[137420,137430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[137491,137493]},{"pos":[137524,137525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137663,137668],"content":"Block","needQuote":true,"nodes":[{"content":"Block","pos":[0,5]}]},{"pos":[137734,137735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[137783,137787],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[137846,137847]},{"pos":[137923,137933],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[137993,137995],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[138023,138024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138414,138432],"content":"Break(LabelTarget)","needQuote":true,"nodes":[{"content":"Break(LabelTarget)","pos":[0,18]}]},{"pos":[138635,138640],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[138706,138707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[138779,138790],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[138851,138852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138977,138982],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[139048,139049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139121,139132],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[139193,139194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[139543,139573],"content":"Break(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[139847,139852],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[139918,139919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139991,140002],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[140064,140065]},{"pos":[140141,140151],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[140211,140212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140372,140377],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[140443,140444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140516,140527],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[140589,140590]},{"pos":[140666,140676],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[140736,140737],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141144,141180],"content":"Break(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Expression, Type)","pos":[0,36]}]},{"pos":[141479,141484],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[141550,141551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[141623,141634],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[141696,141697]},{"pos":[141773,141783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[141844,141845]},{"pos":[141898,141902],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[141960,141961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142133,142138],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[142204,142205],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[142277,142288],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[142350,142351]},{"pos":[142427,142437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[142498,142499]},{"pos":[142552,142556],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[142614,142615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143005,143029],"content":"Break(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Break(LabelTarget, Type)","pos":[0,24]}]},{"pos":[143257,143262],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[143328,143329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143401,143412],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[143474,143475]},{"pos":[143528,143532],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[143590,143591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[143728,143733],"content":"Break","needQuote":true,"nodes":[{"content":"Break","pos":[0,5]}]},{"pos":[143799,143800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143872,143883],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[143945,143946]},{"pos":[143999,144003],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[144061,144062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144420,144448],"content":"Call(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo)","pos":[0,28]}]},{"pos":[144706,144710],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[144775,144776],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144847,144857],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[144918,144919]},{"pos":[144989,144999],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[145074,145075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145227,145231],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[145296,145297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[145368,145378],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[145439,145440]},{"pos":[145510,145520],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[145595,145596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146048,146101],"content":"Call(Expression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,53],"source":"Call(Expression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[146778,146782],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[146847,146848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146919,146929],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[146990,146991]},{"pos":[147061,147071],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[147147,147148]},{"pos":[147230,147241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[147326,147327],"content":"<","needQuote":true,"nodes":[]},{"pos":[147398,147408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[147500,147501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[147728,147732],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[147797,147798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147869,147879],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[147940,147941]},{"pos":[148011,148021],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[148097,148098]},{"pos":[148180,148191],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[148277,148280]},{"pos":[148358,148368],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[148428,148429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148456,148457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149091,149143],"content":"Call(Expression, MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression)","pos":[0,52]}]},{"pos":[149543,149547],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[149612,149613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[149684,149694],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[149755,149756]},{"pos":[149826,149836],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[149912,149913]},{"pos":[149989,149999],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150060,150061]},{"pos":[150137,150147],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[150207,150208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150430,150434],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[150499,150500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150571,150581],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150642,150643]},{"pos":[150713,150723],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[150799,150800]},{"pos":[150876,150886],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[150947,150948]},{"pos":[151024,151034],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[151094,151095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151671,151735],"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[152206,152210],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[152275,152276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152347,152357],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152418,152419]},{"pos":[152489,152499],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[152575,152576]},{"pos":[152652,152662],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152723,152724]},{"pos":[152800,152810],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[152871,152872]},{"pos":[152948,152958],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[153018,153019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153276,153280],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[153345,153346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153417,153427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[153488,153489]},{"pos":[153559,153569],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[153645,153646]},{"pos":[153722,153732],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[153793,153794]},{"pos":[153870,153880],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[153941,153942]},{"pos":[154018,154028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[154088,154089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154644,154686],"content":"Call(Expression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, MethodInfo, Expression[])","pos":[0,42]}]},{"pos":[155232,155236],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[155301,155302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155373,155383],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[155444,155445]},{"pos":[155515,155525],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[155601,155602]},{"pos":[155678,155688],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[155749,155751]},{"pos":[155782,155783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155972,155976],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[156041,156042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156113,156123],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[156184,156185]},{"pos":[156255,156265],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[156341,156342]},{"pos":[156418,156428],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[156488,156490],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[156518,156519],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157056,157102],"content":"Call(Expression, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Expression, String, Type[], Expression[])","pos":[0,46]}]},{"pos":[157651,157655],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[157720,157721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[157792,157802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[157863,157864]},{"pos":[157919,157925],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[157986,157987]},{"pos":[158040,158044],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[158103,158105]},{"content":",","pos":[158137,158138]},{"pos":[158214,158224],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[158285,158287]},{"pos":[158318,158319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158507,158511],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[158576,158577],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158648,158658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[158719,158720]},{"pos":[158775,158781],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[158842,158843]},{"pos":[158896,158900],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[158958,158960],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[158989,158990]},{"pos":[159066,159076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[159136,159138],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[159166,159167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159715,159756],"content":"Call(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,41],"source":"Call(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[160314,160318],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[160383,160384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160449,160459],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[160535,160536]},{"pos":[160618,160629],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[160714,160715],"content":"<","needQuote":true,"nodes":[]},{"pos":[160786,160796],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[160888,160889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161081,161085],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[161150,161151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161216,161226],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[161302,161303]},{"pos":[161385,161396],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[161482,161485]},{"pos":[161563,161573],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[161633,161634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161661,161662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162167,162195],"content":"Call(MethodInfo, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression)","pos":[0,28]}]},{"pos":[162453,162457],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[162522,162523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162588,162598],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[162674,162675]},{"pos":[162751,162761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[162821,162822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162974,162978],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[163043,163044],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163109,163119],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[163195,163196]},{"pos":[163272,163282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[163342,163343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163755,163795],"content":"Call(MethodInfo, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression)","pos":[0,40]}]},{"pos":[164124,164128],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[164193,164194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164259,164269],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[164345,164346]},{"pos":[164422,164432],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[164493,164494]},{"pos":[164570,164580],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[164640,164641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[164828,164832],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[164897,164898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164963,164973],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[165049,165050]},{"pos":[165126,165136],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[165197,165198]},{"pos":[165274,165284],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[165344,165345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165839,165891],"content":"Call(MethodInfo, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression)","pos":[0,52]}]},{"pos":[166291,166295],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[166360,166361],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166426,166436],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[166512,166513]},{"pos":[166589,166599],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166660,166661]},{"pos":[166737,166747],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[166808,166809]},{"pos":[166885,166895],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[166955,166956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167178,167182],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[167247,167248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167313,167323],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[167399,167400]},{"pos":[167476,167486],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167547,167548]},{"pos":[167624,167634],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[167695,167696]},{"pos":[167772,167782],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[167842,167843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168419,168483],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression)","pos":[0,64]}]},{"pos":[168954,168958],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[169023,169024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169089,169099],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[169175,169176]},{"pos":[169252,169262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[169323,169324]},{"pos":[169400,169410],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[169471,169472]},{"pos":[169548,169558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[169619,169620]},{"pos":[169696,169706],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[169766,169767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170024,170028],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[170093,170094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170159,170169],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[170245,170246]},{"pos":[170322,170332],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[170393,170394]},{"pos":[170470,170480],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[170541,170542]},{"pos":[170618,170628],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[170689,170690]},{"pos":[170766,170776],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[170836,170837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[171495,171571],"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)","pos":[0,76]}]},{"pos":[172113,172117],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[172182,172183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172248,172258],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[172334,172335]},{"pos":[172411,172421],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[172482,172483]},{"pos":[172559,172569],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[172630,172631]},{"pos":[172707,172717],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[172778,172779]},{"pos":[172855,172865],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[172926,172927]},{"pos":[173003,173013],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[173073,173074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173366,173370],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[173435,173436],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[173501,173511],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[173587,173588]},{"pos":[173664,173674],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[173735,173736]},{"pos":[173812,173822],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[173883,173884]},{"pos":[173960,173970],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[174031,174032]},{"pos":[174108,174118],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[174179,174180]},{"pos":[174256,174266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[174326,174327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174894,174924],"content":"Call(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"Call(MethodInfo, Expression[])","pos":[0,30]}]},{"pos":[175351,175355],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[175420,175421],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175486,175496],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[175572,175573]},{"pos":[175649,175659],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[175720,175722]},{"pos":[175753,175754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175908,175912],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[175977,175978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176043,176053],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[176129,176130]},{"pos":[176206,176216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[176276,176278],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[176306,176307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176762,176802],"content":"Call(Type, String, Type[], Expression[])","needQuote":true,"nodes":[{"content":"Call(Type, String, Type[], Expression[])","pos":[0,40]}]},{"pos":[177276,177280],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[177345,177346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[177394,177398],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[177457,177458]},{"pos":[177513,177519],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[177580,177581]},{"pos":[177634,177638],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[177697,177699]},{"content":",","pos":[177731,177732]},{"pos":[177808,177818],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[177879,177881]},{"pos":[177912,177913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[178078,178082],"content":"Call","needQuote":true,"nodes":[{"content":"Call","pos":[0,4]}]},{"pos":[178147,178148],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178196,178200],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[178259,178260]},{"pos":[178315,178321],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[178382,178383]},{"pos":[178436,178440],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[178498,178500],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[178529,178530]},{"pos":[178606,178616],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[178676,178678],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[178706,178707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179197,179235],"content":"Catch(ParameterExpression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression)","pos":[0,38]}]},{"pos":[179525,179530],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[179596,179597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179677,179696],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[179766,179767]},{"pos":[179843,179853],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[179913,179914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180082,180087],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[180153,180154],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[180234,180253],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[180323,180324]},{"pos":[180400,180410],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[180470,180471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180926,180976],"content":"Catch(ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(ParameterExpression, Expression, Expression)","pos":[0,50]}]},{"pos":[181337,181342],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[181408,181409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[181489,181508],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[181578,181579]},{"pos":[181655,181665],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[181726,181727]},{"pos":[181803,181813],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[181873,181874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182077,182082],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[182148,182149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182229,182248],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[182318,182319]},{"pos":[182395,182405],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[182466,182467]},{"pos":[182543,182553],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[182613,182614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183048,183071],"content":"Catch(Type, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression)","pos":[0,23]}]},{"pos":[183297,183302],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[183368,183369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183417,183421],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[183480,183481]},{"pos":[183557,183567],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[183627,183628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183764,183769],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[183835,183836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[183884,183888],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[183947,183948]},{"pos":[184024,184034],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[184094,184095],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184470,184505],"content":"Catch(Type, Expression, Expression)","needQuote":true,"nodes":[{"content":"Catch(Type, Expression, Expression)","pos":[0,35]}]},{"pos":[184802,184807],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[184873,184874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184922,184926],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[184985,184986]},{"pos":[185062,185072],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185133,185134]},{"pos":[185210,185220],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[185280,185281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185452,185457],"content":"Catch","needQuote":true,"nodes":[{"content":"Catch","pos":[0,5]}]},{"pos":[185523,185524],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[185572,185576],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[185635,185636]},{"pos":[185712,185722],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[185783,185784]},{"pos":[185860,185870],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[185930,185931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186324,186358],"content":"ClearDebugInfo(SymbolDocumentInfo)","needQuote":true,"nodes":[{"content":"ClearDebugInfo(SymbolDocumentInfo)","pos":[0,34]}]},{"pos":[186593,186607],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[186682,186683],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186762,186780],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[186848,186849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186990,187004],"content":"ClearDebugInfo","needQuote":true,"nodes":[{"content":"ClearDebugInfo","pos":[0,14]}]},{"pos":[187079,187080],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[187159,187177],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"pos":[187245,187246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187629,187661],"content":"Coalesce(Expression, Expression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression)","pos":[0,32]}]},{"pos":[187939,187947],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[188016,188017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188088,188098],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188159,188160]},{"pos":[188236,188246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[188306,188307],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188469,188477],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[188546,188547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188618,188628],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[188689,188690]},{"pos":[188766,188776],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[188836,188837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189280,189330],"content":"Coalesce(Expression, Expression, LambdaExpression)","needQuote":true,"nodes":[{"content":"Coalesce(Expression, Expression, LambdaExpression)","pos":[0,50]}]},{"pos":[189691,189699],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[189768,189769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189840,189850],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[189911,189912]},{"pos":[189988,189998],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[190059,190060]},{"pos":[190142,190158],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[190224,190225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190428,190436],"content":"Coalesce","needQuote":true,"nodes":[{"content":"Coalesce","pos":[0,8]}]},{"pos":[190505,190506],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[190577,190587],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[190648,190649]},{"pos":[190725,190735],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[190796,190797]},{"pos":[190879,190895],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[190961,190962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191459,191504],"content":"Condition(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression)","pos":[0,45]}]},{"pos":[191855,191864],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[191934,191935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192006,192016],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[192077,192078]},{"pos":[192154,192164],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[192225,192226]},{"pos":[192302,192312],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[192372,192373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192571,192580],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[192650,192651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[192722,192732],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[192793,192794]},{"pos":[192870,192880],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[192941,192942]},{"pos":[193018,193028],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[193088,193089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193587,193638],"content":"Condition(Expression, Expression, Expression, Type)","needQuote":true,"nodes":[{"content":"Condition(Expression, Expression, Expression, Type)","pos":[0,51]}]},{"pos":[194014,194023],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[194093,194094],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[194165,194175],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194236,194237]},{"pos":[194313,194323],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194384,194385]},{"pos":[194461,194471],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[194532,194533]},{"pos":[194586,194590],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[194648,194649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194859,194868],"content":"Condition","needQuote":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[194938,194939],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[195010,195020],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195081,195082]},{"pos":[195158,195168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195229,195230]},{"pos":[195306,195316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[195377,195378]},{"pos":[195431,195435],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[195493,195494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195906,195922],"content":"Constant(Object)","needQuote":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[196087,196095],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[196164,196165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196215,196221],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[196281,196282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196388,196396],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[196465,196466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196516,196522],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[196582,196583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[196868,196890],"content":"Constant(Object, Type)","needQuote":true,"nodes":[{"content":"Constant(Object, Type)","pos":[0,22]}]},{"pos":[197080,197088],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[197157,197158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197208,197214],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[197275,197276]},{"pos":[197329,197333],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197391,197392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197510,197518],"content":"Constant","needQuote":true,"nodes":[{"content":"Constant","pos":[0,8]}]},{"pos":[197587,197588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197638,197644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[197705,197706]},{"pos":[197759,197763],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[197821,197822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198136,198157],"content":"Continue(LabelTarget)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget)","pos":[0,21]}]},{"pos":[198366,198374],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[198443,198444],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198516,198527],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[198588,198589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198717,198725],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[198794,198795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[198867,198878],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[198939,198940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199274,199301],"content":"Continue(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Continue(LabelTarget, Type)","pos":[0,27]}]},{"pos":[199535,199543],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[199612,199613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199685,199696],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[199758,199759]},{"pos":[199812,199816],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[199874,199875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200015,200023],"content":"Continue","needQuote":true,"nodes":[{"content":"Continue","pos":[0,8]}]},{"pos":[200092,200093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[200165,200176],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[200238,200239]},{"pos":[200292,200296],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[200354,200355],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200705,200730],"content":"Convert(Expression, Type)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type)","pos":[0,25]}]},{"pos":[200960,200967],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[201035,201036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201107,201117],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[201178,201179]},{"pos":[201232,201236],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[201294,201295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201433,201440],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[201508,201509],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201580,201590],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[201651,201652]},{"pos":[201705,201709],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[201767,201768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202143,202180],"content":"Convert(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"Convert(Expression, Type, MethodInfo)","pos":[0,37]}]},{"pos":[202469,202476],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[202544,202545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202616,202626],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[202687,202688]},{"pos":[202741,202745],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[202804,202805]},{"pos":[202875,202885],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[202960,202961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203128,203135],"content":"Convert","needQuote":true,"nodes":[{"content":"Convert","pos":[0,7]}]},{"pos":[203203,203204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203275,203285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[203346,203347]},{"pos":[203400,203404],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[203463,203464]},{"pos":[203534,203544],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[203619,203620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204014,204046],"content":"ConvertChecked(Expression, Type)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type)","pos":[0,32]}]},{"pos":[204290,204304],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[204379,204380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204451,204461],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[204522,204523]},{"pos":[204576,204580],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[204638,204639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204784,204798],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[204873,204874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204945,204955],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[205016,205017]},{"pos":[205070,205074],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[205132,205133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205529,205573],"content":"ConvertChecked(Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"ConvertChecked(Expression, Type, MethodInfo)","pos":[0,44]}]},{"pos":[205876,205890],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[205965,205966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206037,206047],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206108,206109]},{"pos":[206162,206166],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[206225,206226]},{"pos":[206296,206306],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[206381,206382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206556,206570],"content":"ConvertChecked","needQuote":true,"nodes":[{"content":"ConvertChecked","pos":[0,14]}]},{"pos":[206645,206646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206717,206727],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[206788,206789]},{"pos":[206842,206846],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[206905,206906]},{"pos":[206976,206986],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[207061,207062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207513,207570],"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)","pos":[0,57]}]},{"pos":[207903,207912],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[207982,207983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208062,208080],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[208149,208150]},{"pos":[208204,208209],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[208269,208270]},{"pos":[208324,208329],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[208389,208390]},{"pos":[208444,208449],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[208509,208510]},{"pos":[208564,208569],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[208628,208629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208817,208826],"content":"DebugInfo","needQuote":true,"nodes":[{"content":"DebugInfo","pos":[0,9]}]},{"pos":[208896,208897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[208976,208994],"content":"SymbolDocumentInfo","needQuote":true,"nodes":[{"content":"SymbolDocumentInfo","pos":[0,18]}]},{"content":",","pos":[209063,209064]},{"pos":[209118,209123],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[209183,209184]},{"pos":[209238,209243],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[209303,209304]},{"pos":[209358,209363],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[209423,209424]},{"pos":[209478,209483],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[209542,209543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[209962,209983],"content":"Decrement(Expression)","needQuote":true,"nodes":[{"content":"Decrement(Expression)","pos":[0,21]}]},{"pos":[210192,210201],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[210271,210272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210343,210353],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[210413,210414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210542,210551],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[210621,210622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210693,210703],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[210763,210764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211115,211148],"content":"Decrement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Decrement(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[211416,211425],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[211495,211496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[211567,211577],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[211638,211639]},{"pos":[211709,211719],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[211794,211795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211952,211961],"content":"Decrement","needQuote":true,"nodes":[{"content":"Decrement","pos":[0,9]}]},{"pos":[212031,212032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212103,212113],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[212174,212175]},{"pos":[212245,212255],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[212330,212331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212669,212682],"content":"Default(Type)","needQuote":true,"nodes":[{"content":"Default(Type)","pos":[0,13]}]},{"pos":[212841,212848],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[212916,212917],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212965,212969],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[213027,213028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213131,213138],"content":"Default","needQuote":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[213206,213207],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213255,213259],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[213317,213318],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213640,213670],"content":"Divide(Expression, Expression)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression)","pos":[0,30]}]},{"pos":[213944,213950],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[214017,214018],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214089,214099],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214160,214161]},{"pos":[214237,214247],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[214307,214308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214468,214474],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[214541,214542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214613,214623],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[214684,214685]},{"pos":[214761,214771],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[214831,214832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215256,215298],"content":"Divide(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Divide(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[215631,215637],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[215704,215705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[215776,215786],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215847,215848]},{"pos":[215924,215934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[215995,215996]},{"pos":[216066,216076],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[216151,216152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216341,216347],"content":"Divide","needQuote":true,"nodes":[{"content":"Divide","pos":[0,6]}]},{"pos":[216414,216415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216486,216496],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216557,216558]},{"pos":[216634,216644],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[216705,216706]},{"pos":[216776,216786],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[216861,216862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217305,217341],"content":"DivideAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[217627,217639],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[217712,217713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[217784,217794],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[217855,217856]},{"pos":[217932,217942],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[218002,218003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218169,218181],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[218254,218255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[218326,218336],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[218397,218398]},{"pos":[218474,218484],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[218544,218545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218987,219035],"content":"DivideAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[219380,219392],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[219465,219466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219537,219547],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[219608,219609]},{"pos":[219685,219695],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[219756,219757]},{"pos":[219827,219837],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[219912,219913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220108,220120],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[220193,220194],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[220265,220275],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[220336,220337]},{"pos":[220413,220423],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[220484,220485]},{"pos":[220555,220565],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[220640,220641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221165,221231],"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[221659,221671],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[221744,221745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221816,221826],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[221887,221888]},{"pos":[221964,221974],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222035,222036]},{"pos":[222106,222116],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[222192,222193]},{"pos":[222275,222291],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[222357,222358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222594,222606],"content":"DivideAssign","needQuote":true,"nodes":[{"content":"DivideAssign","pos":[0,12]}]},{"pos":[222679,222680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[222751,222761],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222822,222823]},{"pos":[222899,222909],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[222970,222971]},{"pos":[223041,223051],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[223127,223128]},{"pos":[223210,223226],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[223292,223293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223839,223887],"content":"ElementInit(MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ElementInit(MethodInfo, IEnumerable<Expression>)"}]},{"pos":[224473,224484],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[224556,224557],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[224622,224632],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[224708,224709]},{"pos":[224791,224802],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[224887,224888],"content":"<","needQuote":true,"nodes":[]},{"pos":[224959,224969],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[225061,225062],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225261,225272],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[225344,225345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225410,225420],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[225496,225497]},{"pos":[225579,225590],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[225676,225679]},{"pos":[225757,225767],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[225827,225828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225855,225856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226391,226428],"content":"ElementInit(MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ElementInit(MethodInfo, Expression[])","pos":[0,37]}]},{"pos":[226883,226894],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[226966,226967],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227032,227042],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[227118,227119]},{"pos":[227195,227205],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[227266,227268]},{"pos":[227299,227300],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227461,227472],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[227544,227545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227610,227620],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[227696,227697]},{"pos":[227773,227783],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[227843,227845],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[227873,227874],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228274,228281],"content":"Empty()","needQuote":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[228412,228417],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[228483,228484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228511,228512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228600,228605],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[228671,228672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228699,228700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229000,229029],"content":"Equal(Expression, Expression)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression)","pos":[0,29]}]},{"pos":[229301,229306],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[229372,229373],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229444,229454],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[229515,229516]},{"pos":[229592,229602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[229662,229663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[229822,229827],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[229893,229894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229965,229975],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[230036,230037]},{"pos":[230113,230123],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[230183,230184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230620,230670],"content":"Equal(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"Equal(Expression, Expression, Boolean, MethodInfo)","pos":[0,50]}]},{"pos":[231032,231037],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[231103,231104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[231175,231185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231246,231247]},{"pos":[231323,231333],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[231394,231395]},{"pos":[231451,231458],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[231520,231521]},{"pos":[231591,231601],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[231676,231677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231880,231885],"content":"Equal","needQuote":true,"nodes":[{"content":"Equal","pos":[0,5]}]},{"pos":[231951,231952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232023,232033],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232094,232095]},{"pos":[232171,232181],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[232242,232243]},{"pos":[232299,232306],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[232368,232369]},{"pos":[232439,232449],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[232524,232525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[232989,233024],"content":"ExclusiveOr(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression)","pos":[0,35]}]},{"pos":[233308,233319],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[233391,233392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233463,233473],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[233534,233535]},{"pos":[233611,233621],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[233681,233682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233847,233858],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[233930,233931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[234002,234012],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[234073,234074]},{"pos":[234150,234160],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[234220,234221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234660,234707],"content":"ExclusiveOr(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOr(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[235050,235061],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[235133,235134],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235205,235215],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235276,235277]},{"pos":[235353,235363],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[235424,235425]},{"pos":[235495,235505],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[235580,235581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[235775,235786],"content":"ExclusiveOr","needQuote":true,"nodes":[{"content":"ExclusiveOr","pos":[0,11]}]},{"pos":[235858,235859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235930,235940],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236001,236002]},{"pos":[236078,236088],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[236149,236150]},{"pos":[236220,236230],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[236305,236306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236764,236805],"content":"ExclusiveOrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression)","pos":[0,41]}]},{"pos":[237101,237118],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[237196,237197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237268,237278],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237339,237340]},{"pos":[237416,237426],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[237486,237487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237658,237675],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[237753,237754],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237825,237835],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[237896,237897]},{"pos":[237973,237983],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[238043,238044],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238501,238554],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo)","pos":[0,53]}]},{"pos":[238909,238926],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[239004,239005],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239076,239086],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239147,239148]},{"pos":[239224,239234],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239295,239296]},{"pos":[239366,239376],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[239451,239452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[239652,239669],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[239747,239748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[239819,239829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[239890,239891]},{"pos":[239967,239977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[240038,240039]},{"pos":[240109,240119],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[240194,240195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[240734,240805],"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,71]}]},{"pos":[241243,241260],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[241338,241339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241410,241420],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[241481,241482]},{"pos":[241558,241568],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[241629,241630]},{"pos":[241700,241710],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[241786,241787]},{"pos":[241869,241885],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[241951,241952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242193,242210],"content":"ExclusiveOrAssign","needQuote":true,"nodes":[{"content":"ExclusiveOrAssign","pos":[0,17]}]},{"pos":[242288,242289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[242360,242370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[242431,242432]},{"pos":[242508,242518],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[242579,242580]},{"pos":[242650,242660],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[242736,242737]},{"pos":[242819,242835],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[242901,242902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243411,243439],"content":"Field(Expression, FieldInfo)","needQuote":true,"nodes":[{"content":"Field(Expression, FieldInfo)","pos":[0,28]}]},{"pos":[243697,243702],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[243768,243769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[243840,243850],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[243911,243912]},{"pos":[243981,243990],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[244064,244065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244217,244222],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[244288,244289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[244360,244370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[244431,244432]},{"pos":[244501,244510],"content":"FieldInfo","needQuote":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[244584,244585],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[244948,244973],"content":"Field(Expression, String)","needQuote":true,"nodes":[{"content":"Field(Expression, String)","pos":[0,25]}]},{"pos":[245203,245208],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[245274,245275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245346,245356],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[245417,245418]},{"pos":[245473,245479],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[245539,245540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[245678,245683],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[245749,245750],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245821,245831],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[245892,245893]},{"pos":[245948,245954],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[246014,246015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246373,246404],"content":"Field(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Field(Expression, Type, String)","pos":[0,31]}]},{"pos":[246659,246664],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[246730,246731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246802,246812],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[246873,246874]},{"pos":[246927,246931],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[246990,246991]},{"pos":[247046,247052],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[247112,247113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[247263,247268],"content":"Field","needQuote":true,"nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[247334,247335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[247406,247416],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[247477,247478]},{"pos":[247531,247535],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[247594,247595]},{"pos":[247650,247656],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[247716,247717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248054,248075],"content":"GetActionType(Type[])","needQuote":true,"nodes":[{"content":"GetActionType(Type[])","pos":[0,21]}]},{"pos":[248362,248375],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[248449,248450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248498,248502],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[248561,248563]},{"pos":[248594,248595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248706,248719],"content":"GetActionType","needQuote":true,"nodes":[{"content":"GetActionType","pos":[0,13]}]},{"pos":[248793,248794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[248842,248846],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[248904,248906],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[248934,248935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249277,249300],"content":"GetDelegateType(Type[])","needQuote":true,"nodes":[{"content":"GetDelegateType(Type[])","pos":[0,23]}]},{"pos":[249595,249610],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[249686,249687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[249735,249739],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[249798,249800]},{"pos":[249831,249832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249945,249960],"content":"GetDelegateType","needQuote":true,"nodes":[{"content":"GetDelegateType","pos":[0,15]}]},{"pos":[250036,250037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250085,250089],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[250147,250149],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[250177,250178],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[250522,250541],"content":"GetFuncType(Type[])","needQuote":true,"nodes":[{"content":"GetFuncType(Type[])","pos":[0,19]}]},{"pos":[250820,250831],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[250903,250904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250952,250956],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[251015,251017]},{"pos":[251048,251049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251158,251169],"content":"GetFuncType","needQuote":true,"nodes":[{"content":"GetFuncType","pos":[0,11]}]},{"pos":[251241,251242],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[251290,251294],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[251352,251354],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[251382,251383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[251731,251748],"content":"Goto(LabelTarget)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget)","pos":[0,17]}]},{"pos":[251949,251953],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[252018,252019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252091,252102],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[252163,252164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252288,252292],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[252357,252358],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252430,252441],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[252502,252503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252849,252878],"content":"Goto(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression)","pos":[0,29]}]},{"pos":[253150,253154],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[253219,253220],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253292,253303],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[253365,253366]},{"pos":[253442,253452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[253512,253513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253672,253676],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[253741,253742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[253814,253825],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[253887,253888]},{"pos":[253964,253974],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[254034,254035],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[254439,254474],"content":"Goto(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Expression, Type)","pos":[0,35]}]},{"pos":[254771,254775],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[254840,254841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[254913,254924],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[254986,254987]},{"pos":[255063,255073],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255134,255135]},{"pos":[255188,255192],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[255250,255251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255422,255426],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[255491,255492],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[255564,255575],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[255637,255638]},{"pos":[255714,255724],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[255785,255786]},{"pos":[255839,255843],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[255901,255902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[256289,256312],"content":"Goto(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Goto(LabelTarget, Type)","pos":[0,23]}]},{"pos":[256538,256542],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[256607,256608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256680,256691],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[256753,256754]},{"pos":[256807,256811],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[256869,256870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257006,257010],"content":"Goto","needQuote":true,"nodes":[{"content":"Goto","pos":[0,4]}]},{"pos":[257075,257076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[257148,257159],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[257221,257222]},{"pos":[257275,257279],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[257337,257338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[257708,257743],"content":"GreaterThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression)","pos":[0,35]}]},{"pos":[258027,258038],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[258110,258111],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258182,258192],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258253,258254]},{"pos":[258330,258340],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[258400,258401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258566,258577],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[258649,258650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258721,258731],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[258792,258793]},{"pos":[258869,258879],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[258939,258940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[259394,259450],"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,56]}]},{"pos":[259824,259835],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[259907,259908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[259979,259989],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260050,260051]},{"pos":[260127,260137],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260198,260199]},{"pos":[260255,260262],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[260324,260325]},{"pos":[260395,260405],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[260480,260481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260690,260701],"content":"GreaterThan","needQuote":true,"nodes":[{"content":"GreaterThan","pos":[0,11]}]},{"pos":[260773,260774],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[260845,260855],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[260916,260917]},{"pos":[260993,261003],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[261064,261065]},{"pos":[261121,261128],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[261190,261191]},{"pos":[261261,261271],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[261346,261347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261830,261872],"content":"GreaterThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression)","pos":[0,42]}]},{"pos":[262170,262188],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[262267,262268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262339,262349],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[262410,262411]},{"pos":[262487,262497],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[262557,262558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[262730,262748],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[262827,262828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[262899,262909],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[262970,262971]},{"pos":[263047,263057],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[263117,263118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[263593,263656],"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,63]}]},{"pos":[264044,264062],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[264141,264142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[264213,264223],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[264284,264285]},{"pos":[264361,264371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[264432,264433]},{"pos":[264489,264496],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[264558,264559]},{"pos":[264629,264639],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[264714,264715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[264931,264949],"content":"GreaterThanOrEqual","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual","pos":[0,18]}]},{"pos":[265028,265029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265100,265110],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[265171,265172]},{"pos":[265248,265258],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[265319,265320]},{"pos":[265376,265383],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[265445,265446]},{"pos":[265516,265526],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[265601,265602],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266087,266117],"content":"IfThen(Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThen(Expression, Expression)","pos":[0,30]}]},{"pos":[266391,266397],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[266464,266465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[266536,266546],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[266607,266608]},{"pos":[266684,266694],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[266754,266755],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[266915,266921],"content":"IfThen","needQuote":true,"nodes":[{"content":"IfThen","pos":[0,6]}]},{"pos":[266988,266989],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[267060,267070],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[267131,267132]},{"pos":[267208,267218],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[267278,267279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267714,267760],"content":"IfThenElse(Expression, Expression, Expression)","needQuote":true,"nodes":[{"content":"IfThenElse(Expression, Expression, Expression)","pos":[0,46]}]},{"pos":[268113,268123],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[268194,268195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268266,268276],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268337,268338]},{"pos":[268414,268424],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[268485,268486]},{"pos":[268562,268572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[268632,268633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268832,268842],"content":"IfThenElse","needQuote":true,"nodes":[{"content":"IfThenElse","pos":[0,10]}]},{"pos":[268913,268914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[268985,268995],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[269056,269057]},{"pos":[269133,269143],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[269204,269205]},{"pos":[269281,269291],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[269351,269352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[269771,269792],"content":"Increment(Expression)","needQuote":true,"nodes":[{"content":"Increment(Expression)","pos":[0,21]}]},{"pos":[270001,270010],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[270080,270081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270152,270162],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[270222,270223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270351,270360],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[270430,270431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270502,270512],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[270572,270573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[270924,270957],"content":"Increment(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Increment(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[271225,271234],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[271304,271305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271376,271386],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[271447,271448]},{"pos":[271518,271528],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[271603,271604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[271761,271770],"content":"Increment","needQuote":true,"nodes":[{"content":"Increment","pos":[0,9]}]},{"pos":[271840,271841],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[271912,271922],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[271983,271984]},{"pos":[272054,272064],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[272139,272140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272575,272618],"content":"Invoke(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Invoke(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"Invoke(Expression, IEnumerable<Expression>)"}]},{"pos":[273202,273208],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[273275,273276],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[273347,273357],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[273418,273419]},{"pos":[273501,273512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[273597,273598],"content":"<","needQuote":true,"nodes":[]},{"pos":[273669,273679],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[273771,273772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[273972,273978],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[274045,274046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[274117,274127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[274188,274189]},{"pos":[274271,274282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[274368,274371]},{"pos":[274449,274459],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[274519,274520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274547,274548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[275076,275108],"content":"Invoke(Expression, Expression[])","needQuote":true,"nodes":[{"content":"Invoke(Expression, Expression[])","pos":[0,32]}]},{"pos":[275561,275567],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[275634,275635],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[275706,275716],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[275777,275778]},{"pos":[275854,275864],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[275925,275927]},{"pos":[275958,275959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276121,276127],"content":"Invoke","needQuote":true,"nodes":[{"content":"Invoke","pos":[0,6]}]},{"pos":[276194,276195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[276266,276276],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[276337,276338]},{"pos":[276414,276424],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[276484,276486],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[276514,276515],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276944,276963],"content":"IsFalse(Expression)","needQuote":true,"nodes":[{"content":"IsFalse(Expression)","pos":[0,19]}]},{"pos":[277168,277175],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[277243,277244],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277315,277325],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[277385,277386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[277512,277519],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[277587,277588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[277659,277669],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[277729,277730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278075,278106],"content":"IsFalse(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsFalse(Expression, MethodInfo)","pos":[0,31]}]},{"pos":[278370,278377],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[278445,278446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278517,278527],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[278588,278589]},{"pos":[278659,278669],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[278744,278745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[278900,278907],"content":"IsFalse","needQuote":true,"nodes":[{"content":"IsFalse","pos":[0,7]}]},{"pos":[278975,278976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279047,279057],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[279118,279119]},{"pos":[279189,279199],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[279274,279275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[279632,279650],"content":"IsTrue(Expression)","needQuote":true,"nodes":[{"content":"IsTrue(Expression)","pos":[0,18]}]},{"pos":[279853,279859],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[279926,279927],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[279998,280008],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[280068,280069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280194,280200],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[280267,280268],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280339,280349],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[280409,280410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280752,280782],"content":"IsTrue(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"IsTrue(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[281044,281050],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[281117,281118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281189,281199],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[281260,281261]},{"pos":[281331,281341],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[281416,281417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[281571,281577],"content":"IsTrue","needQuote":true,"nodes":[{"content":"IsTrue","pos":[0,6]}]},{"pos":[281644,281645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[281716,281726],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[281787,281788]},{"pos":[281858,281868],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[281943,281944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282262,282269],"content":"Label()","needQuote":true,"nodes":[{"content":"Label()","pos":[0,7]}]},{"pos":[282400,282405],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[282471,282472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282499,282500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282588,282593],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[282659,282660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[282687,282688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282954,282972],"content":"Label(LabelTarget)","needQuote":true,"nodes":[{"content":"Label(LabelTarget)","pos":[0,18]}]},{"pos":[283175,283180],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[283246,283247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283319,283330],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[283391,283392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283517,283522],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[283588,283589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[283661,283672],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[283733,283734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284083,284113],"content":"Label(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Label(LabelTarget, Expression)","pos":[0,30]}]},{"pos":[284387,284392],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[284458,284459],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[284531,284542],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[284604,284605]},{"pos":[284681,284691],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[284751,284752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[284912,284917],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[284983,284984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285056,285067],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[285129,285130]},{"pos":[285206,285216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[285276,285277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[285615,285628],"content":"Label(String)","needQuote":true,"nodes":[{"content":"Label(String)","pos":[0,13]}]},{"pos":[285787,285792],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[285858,285859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285909,285915],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[285975,285976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286079,286084],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[286150,286151],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286201,286207],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[286267,286268],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286530,286541],"content":"Label(Type)","needQuote":true,"nodes":[{"content":"Label(Type)","pos":[0,11]}]},{"pos":[286696,286701],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[286767,286768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[286816,286820],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[286878,286879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[286980,286985],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[287051,287052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287100,287104],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[287162,287163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[287435,287454],"content":"Label(Type, String)","needQuote":true,"nodes":[{"content":"Label(Type, String)","pos":[0,19]}]},{"pos":[287638,287643],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[287709,287710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[287758,287762],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[287821,287822]},{"pos":[287877,287883],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[287943,287944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288059,288064],"content":"Label","needQuote":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[288130,288131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288179,288183],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[288242,288243]},{"pos":[288298,288304],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[288364,288365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288768,288829],"content":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,61],"source":"Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[289505,289511],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[289578,289579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[289650,289660],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[289721,289722]},{"pos":[289778,289785],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[289847,289848]},{"pos":[289930,289941],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[290026,290027],"content":"<","needQuote":true,"nodes":[]},{"pos":[290107,290126],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[290227,290228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290452,290458],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[290525,290526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[290597,290607],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[290668,290669]},{"pos":[290725,290732],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[290794,290795]},{"pos":[290877,290888],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[290974,290977]},{"pos":[291064,291083],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[291152,291153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291180,291181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[291792,291842],"content":"Lambda(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, Boolean, ParameterExpression[])","pos":[0,50]}]},{"pos":[292387,292393],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[292460,292461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[292532,292542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[292603,292604]},{"pos":[292660,292667],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[292729,292730]},{"pos":[292815,292834],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[292904,292906]},{"pos":[292937,292938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293124,293130],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[293197,293198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293269,293279],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[293340,293341]},{"pos":[293397,293404],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[293466,293467]},{"pos":[293552,293571],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[293640,293642],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[293670,293671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294242,294294],"content":"Lambda(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,52],"source":"Lambda(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[294914,294920],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[294987,294988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295059,295069],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295130,295131]},{"pos":[295213,295224],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[295309,295310],"content":"<","needQuote":true,"nodes":[]},{"pos":[295390,295409],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[295510,295511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295720,295726],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[295793,295794],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[295865,295875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[295936,295937]},{"pos":[296019,296030],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[296116,296119]},{"pos":[296206,296225],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[296294,296295],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296322,296323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[296887,296928],"content":"Lambda(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Expression, ParameterExpression[])","pos":[0,41]}]},{"pos":[297417,297423],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[297490,297491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[297562,297572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[297633,297634]},{"pos":[297719,297738],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[297808,297810]},{"pos":[297841,297842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298013,298019],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[298086,298087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298158,298168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[298229,298230]},{"pos":[298315,298334],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[298403,298405],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[298433,298434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299001,299070],"content":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,69],"source":"Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[299798,299804],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[299871,299872],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[299943,299953],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[300014,300015]},{"pos":[300070,300076],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[300137,300138]},{"pos":[300194,300201],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[300263,300264]},{"pos":[300346,300357],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[300442,300443],"content":"<","needQuote":true,"nodes":[]},{"pos":[300523,300542],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[300643,300644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300882,300888],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[300955,300956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301027,301037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[301098,301099]},{"pos":[301154,301160],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[301221,301222]},{"pos":[301278,301285],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[301347,301348]},{"pos":[301430,301441],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[301527,301530]},{"pos":[301617,301636],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[301705,301706],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[301733,301734],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[302412,302472],"content":"Lambda(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,60],"source":"Lambda(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[303144,303150],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[303217,303218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[303289,303299],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[303360,303361]},{"pos":[303416,303422],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[303483,303484]},{"pos":[303566,303577],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[303662,303663],"content":"<","needQuote":true,"nodes":[]},{"pos":[303743,303762],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[303863,303864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304087,304093],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[304160,304161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304232,304242],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[304303,304304]},{"pos":[304359,304365],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[304426,304427]},{"pos":[304509,304520],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[304606,304609]},{"pos":[304696,304715],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[304784,304785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[304812,304813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305471,305538],"content":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,67],"source":"Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[306258,306264],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[306331,306332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[306380,306384],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[306443,306444]},{"pos":[306520,306530],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[306591,306592]},{"pos":[306648,306655],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[306717,306718]},{"pos":[306800,306811],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[306896,306897],"content":"<","needQuote":true,"nodes":[]},{"pos":[306977,306996],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[307097,307098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307334,307340],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[307407,307408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[307456,307460],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[307519,307520]},{"pos":[307596,307606],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[307667,307668]},{"pos":[307724,307731],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[307793,307794]},{"pos":[307876,307887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[307973,307976]},{"pos":[308063,308082],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[308151,308152],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308179,308180],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[308827,308883],"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, Boolean, ParameterExpression[])","pos":[0,56]}]},{"pos":[309472,309478],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[309545,309546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[309594,309598],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[309657,309658]},{"pos":[309734,309744],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[309805,309806]},{"pos":[309862,309869],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[309931,309932]},{"pos":[310017,310036],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[310106,310108]},{"pos":[310139,310140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[310338,310344],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[310411,310412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[310460,310464],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[310523,310524]},{"pos":[310600,310610],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[310671,310672]},{"pos":[310728,310735],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[310797,310798]},{"pos":[310883,310902],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[310971,310973],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[311001,311002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311609,311667],"content":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,58],"source":"Lambda(Type, Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[312331,312337],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[312404,312405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[312453,312457],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[312516,312517]},{"pos":[312593,312603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[312664,312665]},{"pos":[312747,312758],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[312843,312844],"content":"<","needQuote":true,"nodes":[]},{"pos":[312924,312943],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[313044,313045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313266,313272],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[313339,313340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[313388,313392],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[313451,313452]},{"pos":[313528,313538],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[313599,313600]},{"pos":[313682,313693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[313779,313782]},{"pos":[313869,313888],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[313957,313958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313985,313986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314585,314632],"content":"Lambda(Type, Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, ParameterExpression[])","pos":[0,47]}]},{"pos":[315165,315171],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[315238,315239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315287,315291],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[315350,315351]},{"pos":[315427,315437],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[315498,315499]},{"pos":[315584,315603],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[315673,315675]},{"pos":[315706,315707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315890,315896],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[315963,315964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316012,316016],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[316075,316076]},{"pos":[316152,316162],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[316223,316224]},{"pos":[316309,316328],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[316397,316399],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[316427,316428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317031,317106],"content":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,75],"source":"Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[317878,317884],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[317951,317952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[318000,318004],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[318063,318064]},{"pos":[318140,318150],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[318211,318212]},{"pos":[318267,318273],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[318334,318335]},{"pos":[318391,318398],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[318460,318461]},{"pos":[318543,318554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[318639,318640],"content":"<","needQuote":true,"nodes":[]},{"pos":[318720,318739],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[318840,318841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319091,319097],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[319164,319165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319213,319217],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[319276,319277]},{"pos":[319353,319363],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[319424,319425]},{"pos":[319480,319486],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[319547,319548]},{"pos":[319604,319611],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[319673,319674]},{"pos":[319756,319767],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[319853,319856]},{"pos":[319943,319962],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[320031,320032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320059,320060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320774,320840],"content":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda(Type, Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,66],"source":"Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[321556,321562],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[321629,321630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321678,321682],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[321741,321742]},{"pos":[321818,321828],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[321889,321890]},{"pos":[321945,321951],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[322012,322013]},{"pos":[322095,322106],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[322191,322192],"content":"<","needQuote":true,"nodes":[]},{"pos":[322272,322291],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[322392,322393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322628,322634],"content":"Lambda","needQuote":true,"nodes":[{"content":"Lambda","pos":[0,6]}]},{"pos":[322701,322702],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322750,322754],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[322813,322814]},{"pos":[322890,322900],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[322961,322962]},{"pos":[323017,323023],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[323084,323085]},{"pos":[323167,323178],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[323264,323267]},{"pos":[323354,323373],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[323442,323443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323470,323471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324144,324216],"content":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,72],"source":"Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[324934,324951],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[325029,325030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325101,325111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[325172,325173]},{"pos":[325229,325236],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[325298,325299]},{"pos":[325381,325392],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[325477,325478],"content":"<","needQuote":true,"nodes":[]},{"pos":[325558,325577],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[325678,325679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[325906,325926],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[326007,326008],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326079,326089],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[326150,326151]},{"pos":[326207,326214],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[326276,326277]},{"pos":[326359,326370],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[326456,326459]},{"pos":[326546,326565],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[326634,326635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326662,326663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327305,327366],"content":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, Boolean, ParameterExpression[])","pos":[0,61],"source":"Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])"}]},{"pos":[327953,327970],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[328048,328049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328120,328130],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328191,328192]},{"pos":[328248,328255],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[328317,328318]},{"pos":[328403,328422],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[328492,328494]},{"pos":[328525,328526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328715,328735],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[328816,328817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328888,328898],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[328959,328960]},{"pos":[329016,329023],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[329085,329086]},{"pos":[329171,329190],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[329259,329261],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[329289,329290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329892,329955],"content":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,63],"source":"Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)"}]},{"pos":[330617,330634],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[330712,330713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330784,330794],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[330855,330856]},{"pos":[330938,330949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[331034,331035],"content":"<","needQuote":true,"nodes":[]},{"pos":[331115,331134],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[331235,331236],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331448,331468],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[331549,331550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[331621,331631],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[331692,331693]},{"pos":[331775,331786],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[331872,331875]},{"pos":[331962,331981],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[332050,332051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332078,332079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332674,332726],"content":"Lambda<TDelegate>(Expression, ParameterExpression[])","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, ParameterExpression[])","pos":[0,52],"source":"Lambda<TDelegate>(Expression, ParameterExpression[])"}]},{"pos":[333257,333274],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[333352,333353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333424,333434],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[333495,333496]},{"pos":[333581,333600],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[333670,333672]},{"pos":[333703,333704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333878,333898],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[333979,333980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[334051,334061],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[334122,334123]},{"pos":[334208,334227],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[334296,334298],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[334326,334327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334925,335005],"content":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, Boolean, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,80],"source":"Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)"}]},{"pos":[335775,335792],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[335870,335871],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[335942,335952],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[336013,336014]},{"pos":[336069,336075],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[336136,336137]},{"pos":[336193,336200],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[336262,336263]},{"pos":[336345,336356],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[336441,336442],"content":"<","needQuote":true,"nodes":[]},{"pos":[336522,336541],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[336642,336643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336884,336904],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[336985,336986],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[337057,337067],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[337128,337129]},{"pos":[337184,337190],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[337251,337252]},{"pos":[337308,337315],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[337377,337378]},{"pos":[337460,337471],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[337557,337560]},{"pos":[337647,337666],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[337735,337736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337763,337764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338473,338544],"content":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;(Expression, String, IEnumerable&lt;ParameterExpression&gt;)","pos":[0,71],"source":"Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)"}]},{"pos":[339258,339275],"content":"Lambda<TDelegate>","needQuote":true,"nodes":[{"content":"Lambda&lt;TDelegate&gt;","pos":[0,17],"source":"Lambda<TDelegate>"}]},{"pos":[339353,339354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339425,339435],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[339496,339497]},{"pos":[339552,339558],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[339619,339620]},{"pos":[339702,339713],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[339798,339799],"content":"<","needQuote":true,"nodes":[]},{"pos":[339879,339898],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[339999,340000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340226,340246],"content":"Lambda(Of TDelegate)","needQuote":true,"nodes":[{"content":"Lambda(Of TDelegate)","pos":[0,20]}]},{"pos":[340327,340328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[340399,340409],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[340470,340471]},{"pos":[340526,340532],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[340593,340594]},{"pos":[340676,340687],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[340773,340776]},{"pos":[340863,340882],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[340951,340952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340979,340980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341594,341627],"content":"LeftShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression)","pos":[0,33]}]},{"pos":[341907,341916],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[341986,341987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342058,342068],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342129,342130]},{"pos":[342206,342216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[342276,342277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342440,342449],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[342519,342520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342591,342601],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[342662,342663]},{"pos":[342739,342749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[342809,342810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343243,343288],"content":"LeftShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShift(Expression, Expression, MethodInfo)","pos":[0,45]}]},{"pos":[343627,343636],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[343706,343707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343778,343788],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343849,343850]},{"pos":[343926,343936],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[343997,343998]},{"pos":[344068,344078],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[344153,344154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344346,344355],"content":"LeftShift","needQuote":true,"nodes":[{"content":"LeftShift","pos":[0,9]}]},{"pos":[344425,344426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[344497,344507],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344568,344569]},{"pos":[344645,344655],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[344716,344717]},{"pos":[344787,344797],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[344872,344873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[345325,345364],"content":"LeftShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression)","pos":[0,39]}]},{"pos":[345656,345671],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[345747,345748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345819,345829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[345890,345891]},{"pos":[345967,345977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[346037,346038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346207,346222],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[346298,346299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346370,346380],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[346441,346442]},{"pos":[346518,346528],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[346588,346589],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347040,347091],"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[347442,347457],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[347533,347534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[347605,347615],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347676,347677]},{"pos":[347753,347763],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[347824,347825]},{"pos":[347895,347905],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[347980,347981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348179,348194],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[348270,348271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[348342,348352],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348413,348414]},{"pos":[348490,348500],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[348561,348562]},{"pos":[348632,348642],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[348717,348718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349251,349320],"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,69]}]},{"pos":[349754,349769],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[349845,349846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349917,349927],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[349988,349989]},{"pos":[350065,350075],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350136,350137]},{"pos":[350207,350217],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[350293,350294]},{"pos":[350376,350392],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[350458,350459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350698,350713],"content":"LeftShiftAssign","needQuote":true,"nodes":[{"content":"LeftShiftAssign","pos":[0,15]}]},{"pos":[350789,350790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350861,350871],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[350932,350933]},{"pos":[351009,351019],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[351080,351081]},{"pos":[351151,351161],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[351237,351238]},{"pos":[351320,351336],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[351402,351403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351919,351951],"content":"LessThan(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression)","pos":[0,32]}]},{"pos":[352229,352237],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[352306,352307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352378,352388],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[352449,352450]},{"pos":[352526,352536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[352596,352597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[352759,352767],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[352836,352837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352908,352918],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[352979,352980]},{"pos":[353056,353066],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[353126,353127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353572,353625],"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThan(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[353993,354001],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[354070,354071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354142,354152],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[354213,354214]},{"pos":[354290,354300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[354361,354362]},{"pos":[354418,354425],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[354487,354488]},{"pos":[354558,354568],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[354643,354644],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354850,354858],"content":"LessThan","needQuote":true,"nodes":[{"content":"LessThan","pos":[0,8]}]},{"pos":[354927,354928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[354999,355009],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[355070,355071]},{"pos":[355147,355157],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[355218,355219]},{"pos":[355275,355282],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[355344,355345]},{"pos":[355415,355425],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[355500,355501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355975,356014],"content":"LessThanOrEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression)","pos":[0,39]}]},{"pos":[356306,356321],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[356397,356398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356469,356479],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[356540,356541]},{"pos":[356617,356627],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[356687,356688],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356857,356872],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[356948,356949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357020,357030],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[357091,357092]},{"pos":[357168,357178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[357238,357239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357705,357765],"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,60]}]},{"pos":[358147,358162],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[358238,358239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[358310,358320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[358381,358382]},{"pos":[358458,358468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[358529,358530]},{"pos":[358586,358593],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[358655,358656]},{"pos":[358726,358736],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[358811,358812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[359025,359040],"content":"LessThanOrEqual","needQuote":true,"nodes":[{"content":"LessThanOrEqual","pos":[0,15]}]},{"pos":[359116,359117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359188,359198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[359259,359260]},{"pos":[359336,359346],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[359407,359408]},{"pos":[359464,359471],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[359533,359534]},{"pos":[359604,359614],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[359689,359690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360205,360251],"content":"ListBind(MemberInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MemberInfo, IEnumerable<ElementInit>)"}]},{"pos":[360829,360837],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[360906,360907],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360972,360982],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[361058,361059]},{"pos":[361141,361152],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[361237,361238],"content":"<","needQuote":true,"nodes":[]},{"pos":[361310,361321],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[361414,361415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361612,361620],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[361689,361690],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[361755,361765],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[361841,361842]},{"pos":[361924,361935],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[362021,362024]},{"pos":[362103,362114],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[362175,362176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362203,362204],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[362731,362766],"content":"ListBind(MemberInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MemberInfo, ElementInit[])","pos":[0,35]}]},{"pos":[363213,363221],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[363290,363291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363356,363366],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[363442,363443]},{"pos":[363520,363531],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[363593,363595]},{"pos":[363626,363627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363786,363794],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[363863,363864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363929,363939],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[364015,364016]},{"pos":[364093,364104],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[364165,364167],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[364195,364196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364698,364744],"content":"ListBind(MethodInfo, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, IEnumerable&lt;ElementInit&gt;)","pos":[0,46],"source":"ListBind(MethodInfo, IEnumerable<ElementInit>)"}]},{"pos":[365322,365330],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[365399,365400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365465,365475],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[365551,365552]},{"pos":[365634,365645],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[365730,365731],"content":"<","needQuote":true,"nodes":[]},{"pos":[365803,365814],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[365907,365908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366105,366113],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[366182,366183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366248,366258],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[366334,366335]},{"pos":[366417,366428],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[366514,366517]},{"pos":[366596,366607],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[366668,366669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[366696,366697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367224,367259],"content":"ListBind(MethodInfo, ElementInit[])","needQuote":true,"nodes":[{"content":"ListBind(MethodInfo, ElementInit[])","pos":[0,35]}]},{"pos":[367706,367714],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[367783,367784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367849,367859],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[367935,367936]},{"pos":[368013,368024],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[368086,368088]},{"pos":[368119,368120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368279,368287],"content":"ListBind","needQuote":true,"nodes":[{"content":"ListBind","pos":[0,8]}]},{"pos":[368356,368357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[368422,368432],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[368508,368509]},{"pos":[368586,368597],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[368658,368660],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[368688,368689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[369200,369249],"content":"ListInit(NewExpression, IEnumerable<ElementInit>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;ElementInit&gt;)","pos":[0,49],"source":"ListInit(NewExpression, IEnumerable<ElementInit>)"}]},{"pos":[369857,369865],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[369934,369935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370009,370022],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[370086,370087]},{"pos":[370169,370180],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[370265,370266],"content":"<","needQuote":true,"nodes":[]},{"pos":[370338,370349],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[370442,370443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370649,370657],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[370726,370727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370801,370814],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[370878,370879]},{"pos":[370961,370972],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[371058,371061]},{"pos":[371140,371151],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[371212,371213],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371240,371241],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371829,371877],"content":"ListInit(NewExpression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, IEnumerable&lt;Expression&gt;)","pos":[0,48],"source":"ListInit(NewExpression, IEnumerable<Expression>)"}]},{"pos":[372481,372489],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[372558,372559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372633,372646],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[372710,372711]},{"pos":[372793,372804],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[372889,372890],"content":"<","needQuote":true,"nodes":[]},{"pos":[372961,372971],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[373063,373064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373269,373277],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[373346,373347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373421,373434],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[373498,373499]},{"pos":[373581,373592],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[373678,373681]},{"pos":[373759,373769],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[373829,373830],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373857,373858],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374407,374445],"content":"ListInit(NewExpression, ElementInit[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, ElementInit[])","pos":[0,38]}]},{"pos":[374922,374930],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[374999,375000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375074,375087],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[375151,375152]},{"pos":[375229,375240],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"content":"[]","pos":[375302,375304]},{"pos":[375335,375336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[375504,375512],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[375581,375582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375656,375669],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[375733,375734]},{"pos":[375811,375822],"content":"ElementInit","needQuote":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[375883,375885],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[375913,375914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376402,376439],"content":"ListInit(NewExpression, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, Expression[])","pos":[0,37]}]},{"pos":[376912,376920],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[376989,376990],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377064,377077],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[377141,377142]},{"pos":[377218,377228],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[377289,377291]},{"pos":[377322,377323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377490,377498],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[377567,377568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[377642,377655],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[377719,377720]},{"pos":[377796,377806],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[377866,377868],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[377896,377897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[378448,378508],"content":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)"}]},{"pos":[379213,379221],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[379290,379291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379365,379378],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[379442,379443]},{"pos":[379513,379523],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[379599,379600]},{"pos":[379682,379693],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[379778,379779],"content":"<","needQuote":true,"nodes":[]},{"pos":[379850,379860],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[379952,379953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380187,380195],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[380264,380265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[380339,380352],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[380416,380417]},{"pos":[380487,380497],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[380573,380574]},{"pos":[380656,380667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[380753,380756]},{"pos":[380834,380844],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[380904,380905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380932,380933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381562,381611],"content":"ListInit(NewExpression, MethodInfo, Expression[])","needQuote":true,"nodes":[{"content":"ListInit(NewExpression, MethodInfo, Expression[])","pos":[0,49]}]},{"pos":[382185,382193],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[382262,382263],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382337,382350],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[382414,382415]},{"pos":[382485,382495],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[382571,382572]},{"pos":[382648,382658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[382719,382721]},{"pos":[382752,382753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382949,382957],"content":"ListInit","needQuote":true,"nodes":[{"content":"ListInit","pos":[0,8]}]},{"pos":[383026,383027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383101,383114],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[383178,383179]},{"pos":[383249,383259],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[383335,383336]},{"pos":[383412,383422],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[383482,383484],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[383512,383513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384007,384023],"content":"Loop(Expression)","needQuote":true,"nodes":[{"content":"Loop(Expression)","pos":[0,16]}]},{"pos":[384222,384226],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[384291,384292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384363,384373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[384433,384434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384557,384561],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[384626,384627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[384698,384708],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[384768,384769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385113,385142],"content":"Loop(Expression, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget)","pos":[0,29]}]},{"pos":[385414,385418],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[385483,385484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385555,385565],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[385626,385627]},{"pos":[385704,385715],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[385776,385777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[385936,385940],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[386005,386006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386077,386087],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[386148,386149]},{"pos":[386226,386237],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[386298,386299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386728,386770],"content":"Loop(Expression, LabelTarget, LabelTarget)","needQuote":true,"nodes":[{"content":"Loop(Expression, LabelTarget, LabelTarget)","pos":[0,42]}]},{"pos":[387115,387119],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[387184,387185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387256,387266],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[387327,387328]},{"pos":[387405,387416],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[387478,387479]},{"pos":[387556,387567],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[387628,387629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387824,387828],"content":"Loop","needQuote":true,"nodes":[{"content":"Loop","pos":[0,4]}]},{"pos":[387893,387894],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[387965,387975],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[388036,388037]},{"pos":[388114,388125],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[388187,388188]},{"pos":[388265,388276],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[388337,388338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388824,388874],"content":"MakeBinary(ExpressionType, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression)","pos":[0,50]}]},{"pos":[389235,389245],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[389316,389317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389392,389406],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[389471,389472]},{"pos":[389548,389558],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[389619,389620]},{"pos":[389696,389706],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[389766,389767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389970,389980],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[390051,390052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390127,390141],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[390206,390207]},{"pos":[390283,390293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[390354,390355]},{"pos":[390431,390441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[390501,390502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391047,391118],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)","pos":[0,71]}]},{"pos":[391569,391579],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[391650,391651],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[391726,391740],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[391805,391806]},{"pos":[391882,391892],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[391953,391954]},{"pos":[392030,392040],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[392101,392102]},{"pos":[392158,392165],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[392227,392228]},{"pos":[392298,392308],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[392383,392384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[392631,392641],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[392712,392713],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392788,392802],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[392867,392868]},{"pos":[392944,392954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393015,393016]},{"pos":[393092,393102],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[393163,393164]},{"pos":[393220,393227],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[393289,393290]},{"pos":[393360,393370],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[393445,393446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394097,394186],"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)","pos":[0,89]}]},{"pos":[394720,394730],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[394801,394802],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[394877,394891],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[394956,394957]},{"pos":[395033,395043],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[395104,395105]},{"pos":[395181,395191],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[395252,395253]},{"pos":[395309,395316],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[395378,395379]},{"pos":[395449,395459],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[395535,395536]},{"pos":[395618,395634],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[395700,395701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395989,395999],"content":"MakeBinary","needQuote":true,"nodes":[{"content":"MakeBinary","pos":[0,10]}]},{"pos":[396070,396071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396146,396160],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[396225,396226]},{"pos":[396302,396312],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396373,396374]},{"pos":[396450,396460],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[396521,396522]},{"pos":[396578,396585],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[396647,396648]},{"pos":[396718,396728],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[396804,396805]},{"pos":[396887,396903],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[396969,396970],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397616,397681],"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","needQuote":true,"nodes":[{"content":"MakeCatchBlock(Type, ParameterExpression, Expression, Expression)","pos":[0,65]}]},{"pos":[398085,398099],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[398174,398175],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398223,398227],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[398286,398287]},{"pos":[398372,398391],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[398461,398462]},{"pos":[398538,398548],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[398609,398610]},{"pos":[398686,398696],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[398756,398757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398981,398995],"content":"MakeCatchBlock","needQuote":true,"nodes":[{"content":"MakeCatchBlock","pos":[0,14]}]},{"pos":[399070,399071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399119,399123],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[399182,399183]},{"pos":[399268,399287],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":",","pos":[399357,399358]},{"pos":[399434,399444],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[399505,399506]},{"pos":[399582,399592],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[399652,399653],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400205,400264],"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)","pos":[0,59]}]},{"pos":[400656,400664],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[400733,400734],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[400813,400831],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[400900,400901]},{"pos":[400978,400989],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[401051,401052]},{"pos":[401128,401138],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[401199,401200]},{"pos":[401253,401257],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[401315,401316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401534,401542],"content":"MakeGoto","needQuote":true,"nodes":[{"content":"MakeGoto","pos":[0,8]}]},{"pos":[401611,401612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401691,401709],"content":"GotoExpressionKind","needQuote":true,"nodes":[{"content":"GotoExpressionKind","pos":[0,18]}]},{"content":",","pos":[401778,401779]},{"pos":[401856,401867],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[401929,401930]},{"pos":[402006,402016],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[402077,402078]},{"pos":[402131,402135],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[402193,402194],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[402750,402810],"content":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"MakeIndex(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,60],"source":"MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[403515,403524],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[403594,403595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403666,403676],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[403737,403738]},{"pos":[403810,403822],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[403900,403901]},{"pos":[403983,403994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[404079,404080],"content":"<","needQuote":true,"nodes":[]},{"pos":[404151,404161],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[404253,404254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404488,404497],"content":"MakeIndex","needQuote":true,"nodes":[{"content":"MakeIndex","pos":[0,9]}]},{"pos":[404567,404568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[404639,404649],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[404710,404711]},{"pos":[404783,404795],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[404873,404874]},{"pos":[404956,404967],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[405053,405056]},{"pos":[405134,405144],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[405204,405205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405232,405233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[405830,405870],"content":"MakeMemberAccess(Expression, MemberInfo)","needQuote":true,"nodes":[{"content":"MakeMemberAccess(Expression, MemberInfo)","pos":[0,40]}]},{"pos":[406152,406168],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[406245,406246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406317,406327],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406388,406389]},{"pos":[406459,406469],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[406544,406545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406709,406725],"content":"MakeMemberAccess","needQuote":true,"nodes":[{"content":"MakeMemberAccess","pos":[0,16]}]},{"pos":[406802,406803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[406874,406884],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[406945,406946]},{"pos":[407016,407026],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[407101,407102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407634,407708],"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)","needQuote":true,"nodes":[{"content":"MakeTry(Type, Expression, Expression, Expression, IEnumerable&lt;CatchBlock&gt;)","pos":[0,74],"source":"MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)"}]},{"pos":[408578,408585],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[408653,408654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[408702,408706],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[408765,408766]},{"pos":[408842,408852],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[408913,408914]},{"pos":[408990,409000],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[409061,409062]},{"pos":[409138,409148],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[409209,409210]},{"pos":[409292,409303],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[409388,409389],"content":"<","needQuote":true,"nodes":[]},{"pos":[409460,409470],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[409562,409563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[409846,409853],"content":"MakeTry","needQuote":true,"nodes":[{"content":"MakeTry","pos":[0,7]}]},{"pos":[409921,409922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409970,409974],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[410033,410034]},{"pos":[410110,410120],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[410181,410182]},{"pos":[410258,410268],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[410329,410330]},{"pos":[410406,410416],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[410477,410478]},{"pos":[410560,410571],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[410657,410660]},{"pos":[410738,410748],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[410808,410809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410836,410837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411526,411569],"content":"MakeUnary(ExpressionType, Expression, Type)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type)","pos":[0,43]}]},{"pos":[411882,411891],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[411961,411962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412037,412051],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[412116,412117]},{"pos":[412193,412203],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[412264,412265]},{"pos":[412318,412322],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[412380,412381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[412560,412569],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[412639,412640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412715,412729],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[412794,412795]},{"pos":[412871,412881],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[412942,412943]},{"pos":[412996,413000],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[413058,413059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413534,413589],"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","needQuote":true,"nodes":[{"content":"MakeUnary(ExpressionType, Expression, Type, MethodInfo)","pos":[0,55]}]},{"pos":[413961,413970],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[414040,414041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414116,414130],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[414195,414196]},{"pos":[414272,414282],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[414343,414344]},{"pos":[414397,414401],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[414460,414461]},{"pos":[414531,414541],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[414616,414617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414825,414834],"content":"MakeUnary","needQuote":true,"nodes":[{"content":"MakeUnary","pos":[0,9]}]},{"pos":[414904,414905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414980,414994],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"content":",","pos":[415059,415060]},{"pos":[415136,415146],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[415207,415208]},{"pos":[415261,415265],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[415324,415325]},{"pos":[415395,415405],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[415480,415481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415990,416040],"content":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MemberInfo, IEnumerable<MemberBinding>)"}]},{"pos":[416634,416644],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[416715,416716],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416781,416791],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[416867,416868]},{"pos":[416950,416961],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[417046,417047],"content":"<","needQuote":true,"nodes":[]},{"pos":[417121,417134],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[417229,417230],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417431,417441],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[417512,417513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417578,417588],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[417664,417665]},{"pos":[417747,417758],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[417844,417847]},{"pos":[417928,417941],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[418004,418005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418032,418033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418576,418615],"content":"MemberBind(MemberInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MemberInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[419078,419088],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[419159,419160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419225,419235],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[419311,419312]},{"pos":[419391,419404],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[419468,419470]},{"pos":[419501,419502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419665,419675],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[419746,419747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[419812,419822],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":",","pos":[419898,419899]},{"pos":[419978,419991],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[420054,420056],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[420084,420085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420603,420653],"content":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, IEnumerable&lt;MemberBinding&gt;)","pos":[0,50],"source":"MemberBind(MethodInfo, IEnumerable<MemberBinding>)"}]},{"pos":[421247,421257],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[421328,421329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421394,421404],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[421480,421481]},{"pos":[421563,421574],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[421659,421660],"content":"<","needQuote":true,"nodes":[]},{"pos":[421734,421747],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[421842,421843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422044,422054],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[422125,422126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422191,422201],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[422277,422278]},{"pos":[422360,422371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[422457,422460]},{"pos":[422541,422554],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[422617,422618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422645,422646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423189,423228],"content":"MemberBind(MethodInfo, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberBind(MethodInfo, MemberBinding[])","pos":[0,39]}]},{"pos":[423691,423701],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[423772,423773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[423838,423848],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[423924,423925]},{"pos":[424004,424017],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[424081,424083]},{"pos":[424114,424115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[424278,424288],"content":"MemberBind","needQuote":true,"nodes":[{"content":"MemberBind","pos":[0,10]}]},{"pos":[424359,424360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424425,424435],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[424511,424512]},{"pos":[424591,424604],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[424667,424669],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[424697,424698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425225,425278],"content":"MemberInit(NewExpression, IEnumerable<MemberBinding>)","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, IEnumerable&lt;MemberBinding&gt;)","pos":[0,53],"source":"MemberInit(NewExpression, IEnumerable<MemberBinding>)"}]},{"pos":[425902,425912],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[425983,425984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426058,426071],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[426135,426136]},{"pos":[426218,426229],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[426314,426315],"content":"<","needQuote":true,"nodes":[]},{"pos":[426389,426402],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[426497,426498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426708,426718],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[426789,426790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[426864,426877],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[426941,426942]},{"pos":[427024,427035],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[427121,427124]},{"pos":[427205,427218],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[427281,427282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427309,427310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427878,427920],"content":"MemberInit(NewExpression, MemberBinding[])","needQuote":true,"nodes":[{"content":"MemberInit(NewExpression, MemberBinding[])","pos":[0,42]}]},{"pos":[428413,428423],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[428494,428495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428569,428582],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[428646,428647]},{"pos":[428726,428739],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"content":"[]","pos":[428803,428805]},{"pos":[428836,428837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429009,429019],"content":"MemberInit","needQuote":true,"nodes":[{"content":"MemberInit","pos":[0,10]}]},{"pos":[429090,429091],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429165,429178],"content":"NewExpression","needQuote":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"content":",","pos":[429242,429243]},{"pos":[429322,429335],"content":"MemberBinding","needQuote":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[429398,429400],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[429428,429429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429922,429952],"content":"Modulo(Expression, Expression)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression)","pos":[0,30]}]},{"pos":[430226,430232],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[430299,430300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430371,430381],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430442,430443]},{"pos":[430519,430529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[430589,430590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430750,430756],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[430823,430824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[430895,430905],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[430966,430967]},{"pos":[431043,431053],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[431113,431114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431538,431580],"content":"Modulo(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Modulo(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[431913,431919],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[431986,431987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432058,432068],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432129,432130]},{"pos":[432206,432216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432277,432278]},{"pos":[432348,432358],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[432433,432434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[432623,432629],"content":"Modulo","needQuote":true,"nodes":[{"content":"Modulo","pos":[0,6]}]},{"pos":[432696,432697],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[432768,432778],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432839,432840]},{"pos":[432916,432926],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[432987,432988]},{"pos":[433058,433068],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[433143,433144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[433587,433623],"content":"ModuloAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression)","pos":[0,36]}]},{"pos":[433909,433921],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[433994,433995],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434066,434076],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434137,434138]},{"pos":[434214,434224],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[434284,434285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434451,434463],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[434536,434537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434608,434618],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[434679,434680]},{"pos":[434756,434766],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[434826,434827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435269,435317],"content":"ModuloAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo)","pos":[0,48]}]},{"pos":[435662,435674],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[435747,435748],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[435819,435829],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[435890,435891]},{"pos":[435967,435977],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436038,436039]},{"pos":[436109,436119],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[436194,436195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436390,436402],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[436475,436476],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[436547,436557],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436618,436619]},{"pos":[436695,436705],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[436766,436767]},{"pos":[436837,436847],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[436922,436923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437447,437513],"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,66]}]},{"pos":[437941,437953],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[438026,438027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[438098,438108],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438169,438170]},{"pos":[438246,438256],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[438317,438318]},{"pos":[438388,438398],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[438474,438475]},{"pos":[438557,438573],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[438639,438640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[438876,438888],"content":"ModuloAssign","needQuote":true,"nodes":[{"content":"ModuloAssign","pos":[0,12]}]},{"pos":[438961,438962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439033,439043],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439104,439105]},{"pos":[439181,439191],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[439252,439253]},{"pos":[439323,439333],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[439409,439410]},{"pos":[439492,439508],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[439574,439575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440085,440117],"content":"Multiply(Expression, Expression)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression)","pos":[0,32]}]},{"pos":[440395,440403],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[440472,440473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[440544,440554],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[440615,440616]},{"pos":[440692,440702],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[440762,440763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440925,440933],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[441002,441003],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441074,441084],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[441145,441146]},{"pos":[441222,441232],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[441292,441293],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441723,441767],"content":"Multiply(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Multiply(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[442104,442112],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[442181,442182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442253,442263],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[442324,442325]},{"pos":[442401,442411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[442472,442473]},{"pos":[442543,442553],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[442628,442629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442820,442828],"content":"Multiply","needQuote":true,"nodes":[{"content":"Multiply","pos":[0,8]}]},{"pos":[442897,442898],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[442969,442979],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443040,443041]},{"pos":[443117,443127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[443188,443189]},{"pos":[443259,443269],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[443344,443345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443794,443832],"content":"MultiplyAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[444122,444136],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[444211,444212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444283,444293],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444354,444355]},{"pos":[444431,444441],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[444501,444502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[444670,444684],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[444759,444760],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444831,444841],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[444902,444903]},{"pos":[444979,444989],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[445049,445050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445498,445548],"content":"MultiplyAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[445897,445911],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[445986,445987],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446058,446068],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446129,446130]},{"pos":[446206,446216],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446277,446278]},{"pos":[446348,446358],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[446433,446434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446631,446645],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[446720,446721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[446792,446802],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[446863,446864]},{"pos":[446940,446950],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[447011,447012]},{"pos":[447082,447092],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[447167,447168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[447698,447766],"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[448198,448212],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[448287,448288],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448359,448369],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448430,448431]},{"pos":[448507,448517],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[448578,448579]},{"pos":[448649,448659],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[448735,448736]},{"pos":[448818,448834],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[448900,448901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449139,449153],"content":"MultiplyAssign","needQuote":true,"nodes":[{"content":"MultiplyAssign","pos":[0,14]}]},{"pos":[449228,449229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449300,449310],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449371,449372]},{"pos":[449448,449458],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[449519,449520]},{"pos":[449590,449600],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[449676,449677]},{"pos":[449759,449775],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[449841,449842],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450369,450414],"content":"MultiplyAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[450718,450739],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[450821,450822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[450893,450903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[450964,450965]},{"pos":[451041,451051],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[451111,451112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451287,451308],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[451390,451391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[451462,451472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[451533,451534]},{"pos":[451610,451620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[451680,451681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452150,452207],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[452570,452591],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[452673,452674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452745,452755],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452816,452817]},{"pos":[452893,452903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[452964,452965]},{"pos":[453035,453045],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[453120,453121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[453325,453346],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[453428,453429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453500,453510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[453571,453572]},{"pos":[453648,453658],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[453719,453720]},{"pos":[453790,453800],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[453875,453876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454427,454502],"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[454948,454969],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[455051,455052],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[455123,455133],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[455194,455195]},{"pos":[455271,455281],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[455342,455343]},{"pos":[455413,455423],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[455499,455500]},{"pos":[455582,455598],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[455664,455665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455910,455931],"content":"MultiplyAssignChecked","needQuote":true,"nodes":[{"content":"MultiplyAssignChecked","pos":[0,21]}]},{"pos":[456013,456014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456085,456095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[456156,456157]},{"pos":[456233,456243],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[456304,456305]},{"pos":[456375,456385],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[456461,456462]},{"pos":[456544,456560],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[456626,456627],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457162,457201],"content":"MultiplyChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[457493,457508],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[457584,457585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[457656,457666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[457727,457728]},{"pos":[457804,457814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[457874,457875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458044,458059],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[458135,458136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458207,458217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[458278,458279]},{"pos":[458355,458365],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[458425,458426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[458877,458928],"content":"MultiplyChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"MultiplyChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[459279,459294],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[459370,459371],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459442,459452],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[459513,459514]},{"pos":[459590,459600],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[459661,459662]},{"pos":[459732,459742],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[459817,459818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460016,460031],"content":"MultiplyChecked","needQuote":true,"nodes":[{"content":"MultiplyChecked","pos":[0,15]}]},{"pos":[460107,460108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[460179,460189],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[460250,460251]},{"pos":[460327,460337],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[460398,460399]},{"pos":[460469,460479],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[460554,460555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460975,460993],"content":"Negate(Expression)","needQuote":true,"nodes":[{"content":"Negate(Expression)","pos":[0,18]}]},{"pos":[461196,461202],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[461269,461270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461341,461351],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[461411,461412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461537,461543],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[461610,461611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461682,461692],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[461752,461753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462095,462125],"content":"Negate(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Negate(Expression, MethodInfo)","pos":[0,30]}]},{"pos":[462387,462393],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[462460,462461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[462532,462542],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[462603,462604]},{"pos":[462674,462684],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[462759,462760],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462914,462920],"content":"Negate","needQuote":true,"nodes":[{"content":"Negate","pos":[0,6]}]},{"pos":[462987,462988],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463059,463069],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[463130,463131]},{"pos":[463201,463211],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[463286,463287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463649,463674],"content":"NegateChecked(Expression)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression)","pos":[0,25]}]},{"pos":[463891,463904],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[463978,463979],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464050,464060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[464120,464121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464253,464266],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[464340,464341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[464412,464422],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[464482,464483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464846,464883],"content":"NegateChecked(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"NegateChecked(Expression, MethodInfo)","pos":[0,37]}]},{"pos":[465159,465172],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[465246,465247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465318,465328],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[465389,465390]},{"pos":[465460,465470],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[465545,465546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465707,465720],"content":"NegateChecked","needQuote":true,"nodes":[{"content":"NegateChecked","pos":[0,13]}]},{"pos":[465794,465795],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[465866,465876],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[465937,465938]},{"pos":[466008,466018],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[466093,466094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[466458,466478],"content":"New(ConstructorInfo)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo)","pos":[0,20]}]},{"pos":[466673,466676],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[466740,466741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466811,466826],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[466906,466907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467028,467031],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[467095,467096],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467166,467181],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[467261,467262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467644,467689],"content":"New(ConstructorInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"New(ConstructorInfo, IEnumerable<Expression>)"}]},{"pos":[468263,468266],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[468330,468331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[468401,468416],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[468497,468498]},{"pos":[468580,468591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[468676,468677],"content":"<","needQuote":true,"nodes":[]},{"pos":[468748,468758],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[468850,468851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469047,469050],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[469114,469115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469185,469200],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[469281,469282]},{"pos":[469364,469375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[469461,469464]},{"pos":[469542,469552],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[469612,469613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[469640,469641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470271,470341],"content":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, IEnumerable&lt;MemberInfo&gt;)","pos":[0,70],"source":"New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)"}]},{"pos":[471155,471158],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[471222,471223],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[471293,471308],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[471389,471390]},{"pos":[471472,471483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[471568,471569],"content":"<","needQuote":true,"nodes":[]},{"pos":[471640,471650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[471743,471744]},{"pos":[471826,471837],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[471922,471923],"content":"<","needQuote":true,"nodes":[]},{"pos":[471988,471998],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[472105,472106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[472371,472374],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[472438,472439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472509,472524],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[472605,472606]},{"pos":[472688,472699],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[472785,472788]},{"pos":[472866,472876],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[472936,472937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[472965,472966]},{"pos":[473048,473059],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[473145,473148]},{"pos":[473220,473230],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[473305,473306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473333,473334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474048,474107],"content":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, IEnumerable&lt;Expression&gt;, MemberInfo[])","pos":[0,59],"source":"New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])"}]},{"pos":[474790,474793],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[474857,474858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[474928,474943],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[475024,475025]},{"pos":[475107,475118],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[475203,475204],"content":"<","needQuote":true,"nodes":[]},{"pos":[475275,475285],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[475378,475379]},{"pos":[475449,475459],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"content":"[]","pos":[475535,475537]},{"pos":[475568,475569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[475796,475799],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[475863,475864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475934,475949],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[476030,476031]},{"pos":[476113,476124],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[476210,476213]},{"pos":[476291,476301],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[476361,476362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[476390,476391]},{"pos":[476461,476471],"content":"MemberInfo","needQuote":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[476546,476548],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[476576,476577],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477159,477193],"content":"New(ConstructorInfo, Expression[])","needQuote":true,"nodes":[{"content":"New(ConstructorInfo, Expression[])","pos":[0,34]}]},{"pos":[477636,477639],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[477703,477704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[477774,477789],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[477870,477871]},{"pos":[477947,477957],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[478018,478020]},{"pos":[478051,478052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[478210,478213],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[478277,478278],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478348,478363],"content":"ConstructorInfo","needQuote":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"content":",","pos":[478444,478445]},{"pos":[478521,478531],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[478591,478593],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[478621,478622],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479023,479032],"content":"New(Type)","needQuote":true,"nodes":[{"content":"New(Type)","pos":[0,9]}]},{"pos":[479183,479186],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[479250,479251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479299,479303],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[479361,479362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479461,479464],"content":"New","needQuote":true,"nodes":[{"content":"New","pos":[0,3]}]},{"pos":[479528,479529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479577,479581],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[479639,479640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479978,480023],"content":"NewArrayBounds(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, IEnumerable&lt;Expression&gt;)","pos":[0,45],"source":"NewArrayBounds(Type, IEnumerable<Expression>)"}]},{"pos":[480564,480578],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[480653,480654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[480702,480706],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[480765,480766]},{"pos":[480848,480859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[480944,480945],"content":"<","needQuote":true,"nodes":[]},{"pos":[481016,481026],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[481118,481119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481304,481318],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[481393,481394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481442,481446],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[481505,481506]},{"pos":[481588,481599],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[481685,481688]},{"pos":[481766,481776],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[481836,481837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[481864,481865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482366,482400],"content":"NewArrayBounds(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayBounds(Type, Expression[])","pos":[0,34]}]},{"pos":[482810,482824],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[482899,482900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482948,482952],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[483011,483012]},{"pos":[483088,483098],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[483159,483161]},{"pos":[483192,483193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483340,483354],"content":"NewArrayBounds","needQuote":true,"nodes":[{"content":"NewArrayBounds","pos":[0,14]}]},{"pos":[483429,483430],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[483478,483482],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[483541,483542]},{"pos":[483618,483628],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[483688,483690],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[483718,483719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484193,484236],"content":"NewArrayInit(Type, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, IEnumerable&lt;Expression&gt;)","pos":[0,43],"source":"NewArrayInit(Type, IEnumerable<Expression>)"}]},{"pos":[484769,484781],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[484854,484855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[484903,484907],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[484966,484967]},{"pos":[485049,485060],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[485145,485146],"content":"<","needQuote":true,"nodes":[]},{"pos":[485217,485227],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[485319,485320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[485503,485515],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[485588,485589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485637,485641],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[485700,485701]},{"pos":[485783,485794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[485880,485883]},{"pos":[485961,485971],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[486031,486032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486059,486060],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486553,486585],"content":"NewArrayInit(Type, Expression[])","needQuote":true,"nodes":[{"content":"NewArrayInit(Type, Expression[])","pos":[0,32]}]},{"pos":[486987,486999],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[487072,487073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487121,487125],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[487184,487185]},{"pos":[487261,487271],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[487332,487334]},{"pos":[487365,487366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487511,487523],"content":"NewArrayInit","needQuote":true,"nodes":[{"content":"NewArrayInit","pos":[0,12]}]},{"pos":[487596,487597],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[487645,487649],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[487708,487709]},{"pos":[487785,487795],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[487855,487857],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[487885,487886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488294,488309],"content":"Not(Expression)","needQuote":true,"nodes":[{"content":"Not(Expression)","pos":[0,15]}]},{"pos":[488506,488509],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[488573,488574],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488645,488655],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[488715,488716],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[488838,488841],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[488905,488906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488977,488987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[489047,489048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489381,489408],"content":"Not(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Not(Expression, MethodInfo)","pos":[0,27]}]},{"pos":[489664,489667],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[489731,489732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489803,489813],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[489874,489875]},{"pos":[489945,489955],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[490030,490031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490182,490185],"content":"Not","needQuote":true,"nodes":[{"content":"Not","pos":[0,3]}]},{"pos":[490249,490250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[490321,490331],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[490392,490393]},{"pos":[490463,490473],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[490548,490549],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490935,490967],"content":"NotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression)","pos":[0,32]}]},{"pos":[491245,491253],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[491322,491323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491394,491404],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491465,491466]},{"pos":[491542,491552],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[491612,491613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491775,491783],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[491852,491853],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[491924,491934],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[491995,491996]},{"pos":[492072,492082],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[492142,492143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492588,492641],"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","needQuote":true,"nodes":[{"content":"NotEqual(Expression, Expression, Boolean, MethodInfo)","pos":[0,53]}]},{"pos":[493009,493017],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[493086,493087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493158,493168],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493229,493230]},{"pos":[493306,493316],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[493377,493378]},{"pos":[493434,493441],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[493503,493504]},{"pos":[493574,493584],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[493659,493660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493866,493874],"content":"NotEqual","needQuote":true,"nodes":[{"content":"NotEqual","pos":[0,8]}]},{"pos":[493943,493944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[494015,494025],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494086,494087]},{"pos":[494163,494173],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[494234,494235]},{"pos":[494291,494298],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"content":",","pos":[494360,494361]},{"pos":[494431,494441],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[494516,494517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494955,494981],"content":"OnesComplement(Expression)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression)","pos":[0,26]}]},{"pos":[495200,495214],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[495289,495290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495361,495371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[495431,495432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[495565,495579],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[495654,495655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495726,495736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[495796,495797],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496163,496201],"content":"OnesComplement(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OnesComplement(Expression, MethodInfo)","pos":[0,38]}]},{"pos":[496479,496493],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[496568,496569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496640,496650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[496711,496712]},{"pos":[496782,496792],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[496867,496868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497030,497044],"content":"OnesComplement","needQuote":true,"nodes":[{"content":"OnesComplement","pos":[0,14]}]},{"pos":[497119,497120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[497191,497201],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[497262,497263]},{"pos":[497333,497343],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[497418,497419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497821,497847],"content":"Or(Expression, Expression)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression)","pos":[0,26]}]},{"pos":[498113,498115],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[498178,498179],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498250,498260],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498321,498322]},{"pos":[498398,498408],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[498468,498469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498625,498627],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[498690,498691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498762,498772],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[498833,498834]},{"pos":[498910,498920],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[498980,498981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499393,499431],"content":"Or(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Or(Expression, Expression, MethodInfo)","pos":[0,38]}]},{"pos":[499756,499758],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[499821,499822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499893,499903],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[499964,499965]},{"pos":[500041,500051],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500112,500113]},{"pos":[500183,500193],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[500268,500269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500454,500456],"content":"Or","needQuote":true,"nodes":[{"content":"Or","pos":[0,2]}]},{"pos":[500519,500520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[500591,500601],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500662,500663]},{"pos":[500739,500749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[500810,500811]},{"pos":[500881,500891],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[500966,500967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501398,501430],"content":"OrAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression)","pos":[0,32]}]},{"pos":[501708,501716],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[501785,501786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501857,501867],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[501928,501929]},{"pos":[502005,502015],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[502075,502076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502238,502246],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[502315,502316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[502387,502397],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[502458,502459]},{"pos":[502535,502545],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[502605,502606],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[503036,503080],"content":"OrAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[503417,503425],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[503494,503495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503566,503576],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503637,503638]},{"pos":[503714,503724],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[503785,503786]},{"pos":[503856,503866],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[503941,503942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504133,504141],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[504210,504211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504282,504292],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504353,504354]},{"pos":[504430,504440],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[504501,504502]},{"pos":[504572,504582],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[504657,504658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505170,505232],"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"OrAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,62]}]},{"pos":[505652,505660],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[505729,505730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[505801,505811],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[505872,505873]},{"pos":[505949,505959],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[506020,506021]},{"pos":[506091,506101],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[506177,506178]},{"pos":[506260,506276],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[506342,506343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[506575,506583],"content":"OrAssign","needQuote":true,"nodes":[{"content":"OrAssign","pos":[0,8]}]},{"pos":[506652,506653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506724,506734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[506795,506796]},{"pos":[506872,506882],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[506943,506944]},{"pos":[507014,507024],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[507100,507101]},{"pos":[507183,507199],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[507265,507266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507766,507796],"content":"OrElse(Expression, Expression)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression)","pos":[0,30]}]},{"pos":[508070,508076],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[508143,508144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508215,508225],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[508286,508287]},{"pos":[508363,508373],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508433,508434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508594,508600],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[508667,508668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[508739,508749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[508810,508811]},{"pos":[508887,508897],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[508957,508958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509382,509424],"content":"OrElse(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"OrElse(Expression, Expression, MethodInfo)","pos":[0,42]}]},{"pos":[509757,509763],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[509830,509831],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509902,509912],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[509973,509974]},{"pos":[510050,510060],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510121,510122]},{"pos":[510192,510202],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510277,510278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510467,510473],"content":"OrElse","needQuote":true,"nodes":[{"content":"OrElse","pos":[0,6]}]},{"pos":[510540,510541],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[510612,510622],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510683,510684]},{"pos":[510760,510770],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[510831,510832]},{"pos":[510902,510912],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[510987,510988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511369,511384],"content":"Parameter(Type)","needQuote":true,"nodes":[{"content":"Parameter(Type)","pos":[0,15]}]},{"pos":[511547,511556],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[511626,511627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511675,511679],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[511737,511738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[511843,511852],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[511922,511923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511971,511975],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[512033,512034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512318,512341],"content":"Parameter(Type, String)","needQuote":true,"nodes":[{"content":"Parameter(Type, String)","pos":[0,23]}]},{"pos":[512533,512542],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[512612,512613],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512661,512665],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[512724,512725]},{"pos":[512780,512786],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[512846,512847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512966,512975],"content":"Parameter","needQuote":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[513045,513046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[513094,513098],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[513157,513158]},{"pos":[513213,513219],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[513279,513280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513606,513637],"content":"PostDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression)","pos":[0,31]}]},{"pos":[513866,513885],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[513965,513966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514037,514047],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[514107,514108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514246,514265],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[514345,514346],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514417,514427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[514487,514488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[514869,514912],"content":"PostDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostDecrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[515200,515219],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[515299,515300],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515371,515381],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[515442,515443]},{"pos":[515513,515523],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[515598,515599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515766,515785],"content":"PostDecrementAssign","needQuote":true,"nodes":[{"content":"PostDecrementAssign","pos":[0,19]}]},{"pos":[515865,515866],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515937,515947],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[516008,516009]},{"pos":[516079,516089],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[516164,516165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516559,516590],"content":"PostIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression)","pos":[0,31]}]},{"pos":[516819,516838],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[516918,516919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[516990,517000],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[517060,517061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517199,517218],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[517298,517299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[517370,517380],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[517440,517441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517822,517865],"content":"PostIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PostIncrementAssign(Expression, MethodInfo)","pos":[0,43]}]},{"pos":[518153,518172],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[518252,518253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518324,518334],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518395,518396]},{"pos":[518466,518476],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[518551,518552],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[518719,518738],"content":"PostIncrementAssign","needQuote":true,"nodes":[{"content":"PostIncrementAssign","pos":[0,19]}]},{"pos":[518818,518819],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518890,518900],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[518961,518962]},{"pos":[519032,519042],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[519117,519118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[519533,519562],"content":"Power(Expression, Expression)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression)","pos":[0,29]}]},{"pos":[519834,519839],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[519905,519906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[519977,519987],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520048,520049]},{"pos":[520125,520135],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[520195,520196],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520355,520360],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[520426,520427],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520498,520508],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[520569,520570]},{"pos":[520646,520656],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[520716,520717],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521138,521179],"content":"Power(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Power(Expression, Expression, MethodInfo)","pos":[0,41]}]},{"pos":[521510,521515],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[521581,521582],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[521653,521663],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521724,521725]},{"pos":[521801,521811],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[521872,521873]},{"pos":[521943,521953],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[522028,522029],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522217,522222],"content":"Power","needQuote":true,"nodes":[{"content":"Power","pos":[0,5]}]},{"pos":[522288,522289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[522360,522370],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522431,522432]},{"pos":[522508,522518],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[522579,522580]},{"pos":[522650,522660],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[522735,522736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[523176,523211],"content":"PowerAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression)","pos":[0,35]}]},{"pos":[523495,523506],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[523578,523579],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[523650,523660],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[523721,523722]},{"pos":[523798,523808],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[523868,523869],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524034,524045],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[524117,524118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524189,524199],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[524260,524261]},{"pos":[524337,524347],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[524407,524408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[524847,524894],"content":"PowerAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo)","pos":[0,47]}]},{"pos":[525237,525248],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[525320,525321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525392,525402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[525463,525464]},{"pos":[525540,525550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[525611,525612]},{"pos":[525682,525692],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[525767,525768],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525962,525973],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[526045,526046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[526117,526127],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526188,526189]},{"pos":[526265,526275],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[526336,526337]},{"pos":[526407,526417],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[526492,526493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527014,527079],"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,65]}]},{"pos":[527505,527516],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[527588,527589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[527660,527670],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[527731,527732]},{"pos":[527808,527818],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[527879,527880]},{"pos":[527950,527960],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[528036,528037]},{"pos":[528119,528135],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[528201,528202],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528437,528448],"content":"PowerAssign","needQuote":true,"nodes":[{"content":"PowerAssign","pos":[0,11]}]},{"pos":[528520,528521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528592,528602],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528663,528664]},{"pos":[528740,528750],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[528811,528812]},{"pos":[528882,528892],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[528968,528969]},{"pos":[529051,529067],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[529133,529134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529617,529647],"content":"PreDecrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression)","pos":[0,30]}]},{"pos":[529874,529892],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[529971,529972],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530043,530053],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[530113,530114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530251,530269],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[530348,530349],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530420,530430],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[530490,530491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[530869,530911],"content":"PreDecrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreDecrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[531197,531215],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[531294,531295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531366,531376],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[531437,531438]},{"pos":[531508,531518],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[531593,531594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531760,531778],"content":"PreDecrementAssign","needQuote":true,"nodes":[{"content":"PreDecrementAssign","pos":[0,18]}]},{"pos":[531857,531858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531929,531939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[532000,532001]},{"pos":[532071,532081],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[532156,532157],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532548,532578],"content":"PreIncrementAssign(Expression)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression)","pos":[0,30]}]},{"pos":[532805,532823],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[532902,532903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[532974,532984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[533044,533045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533182,533200],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[533279,533280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533351,533361],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[533421,533422],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[533800,533842],"content":"PreIncrementAssign(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"PreIncrementAssign(Expression, MethodInfo)","pos":[0,42]}]},{"pos":[534128,534146],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[534225,534226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534297,534307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[534368,534369]},{"pos":[534439,534449],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[534524,534525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534691,534709],"content":"PreIncrementAssign","needQuote":true,"nodes":[{"content":"PreIncrementAssign","pos":[0,18]}]},{"pos":[534788,534789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534860,534870],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[534931,534932]},{"pos":[535002,535012],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[535087,535088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535497,535529],"content":"Property(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, MethodInfo)","pos":[0,32]}]},{"pos":[535795,535803],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[535872,535873],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[535944,535954],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[536015,536016]},{"pos":[536086,536096],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[536171,536172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536328,536336],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[536405,536406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[536477,536487],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[536548,536549]},{"pos":[536619,536629],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[536704,536705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537096,537130],"content":"Property(Expression, PropertyInfo)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo)","pos":[0,34]}]},{"pos":[537400,537408],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[537477,537478],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537549,537559],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[537620,537621]},{"pos":[537693,537705],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[537782,537783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[537941,537949],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[538018,538019],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[538090,538100],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[538161,538162]},{"pos":[538234,538246],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[538323,538324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538794,538853],"content":"Property(Expression, PropertyInfo, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, IEnumerable&lt;Expression&gt;)","pos":[0,59],"source":"Property(Expression, PropertyInfo, IEnumerable<Expression>)"}]},{"pos":[539554,539562],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[539631,539632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539703,539713],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[539774,539775]},{"pos":[539847,539859],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[539937,539938]},{"pos":[540020,540031],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[540116,540117],"content":"<","needQuote":true,"nodes":[]},{"pos":[540188,540198],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[540290,540291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540524,540532],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[540601,540602],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[540673,540683],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[540744,540745]},{"pos":[540817,540829],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[540907,540908]},{"pos":[540990,541001],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[541087,541090]},{"pos":[541168,541178],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[541238,541239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541266,541267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541892,541940],"content":"Property(Expression, PropertyInfo, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, PropertyInfo, Expression[])","pos":[0,48]}]},{"pos":[542510,542518],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[542587,542588],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542659,542669],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[542730,542731]},{"pos":[542803,542815],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[542893,542894]},{"pos":[542970,542980],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[543041,543043]},{"pos":[543074,543075],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[543270,543278],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[543347,543348],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[543419,543429],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[543490,543491]},{"pos":[543563,543575],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"content":",","pos":[543653,543654]},{"pos":[543730,543740],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[543800,543802],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[543830,543831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544339,544367],"content":"Property(Expression, String)","needQuote":true,"nodes":[{"content":"Property(Expression, String)","pos":[0,28]}]},{"pos":[544603,544611],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[544680,544681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544752,544762],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[544823,544824]},{"pos":[544879,544885],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[544945,544946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545087,545095],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[545164,545165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[545236,545246],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[545307,545308]},{"pos":[545363,545369],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[545429,545430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[545822,545864],"content":"Property(Expression, String, Expression[])","needQuote":true,"nodes":[{"content":"Property(Expression, String, Expression[])","pos":[0,42]}]},{"pos":[546377,546385],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[546454,546455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[546526,546536],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[546597,546598]},{"pos":[546653,546659],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[546720,546721]},{"pos":[546797,546807],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[546868,546870]},{"pos":[546901,546902],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547080,547088],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[547157,547158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547229,547239],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[547300,547301]},{"pos":[547356,547362],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[547423,547424]},{"pos":[547500,547510],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[547570,547572],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[547600,547601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548092,548126],"content":"Property(Expression, Type, String)","needQuote":true,"nodes":[{"content":"Property(Expression, Type, String)","pos":[0,34]}]},{"pos":[548387,548395],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[548464,548465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548536,548546],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[548607,548608]},{"pos":[548661,548665],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[548724,548725]},{"pos":[548780,548786],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[548846,548847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549000,549008],"content":"Property","needQuote":true,"nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[549077,549078],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[549149,549159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[549220,549221]},{"pos":[549274,549278],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[549337,549338]},{"pos":[549393,549399],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[549459,549460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549840,549875],"content":"PropertyOrField(Expression, String)","needQuote":true,"nodes":[{"content":"PropertyOrField(Expression, String)","pos":[0,35]}]},{"pos":[550125,550140],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[550216,550217],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550288,550298],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[550359,550360]},{"pos":[550415,550421],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[550481,550482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550630,550645],"content":"PropertyOrField","needQuote":true,"nodes":[{"content":"PropertyOrField","pos":[0,15]}]},{"pos":[550721,550722],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[550793,550803],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[550864,550865]},{"pos":[550920,550926],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[550986,550987],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551340,551357],"content":"Quote(Expression)","needQuote":true,"nodes":[{"content":"Quote(Expression)","pos":[0,17]}]},{"pos":[551558,551563],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[551629,551630],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551701,551711],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[551771,551772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[551896,551901],"content":"Quote","needQuote":true,"nodes":[{"content":"Quote","pos":[0,5]}]},{"pos":[551967,551968],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552039,552049],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[552109,552110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552386,552394],"content":"Reduce()","needQuote":true,"nodes":[{"content":"Reduce()","pos":[0,8]}]},{"pos":[552527,552533],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[552600,552601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552628,552629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552718,552724],"content":"Reduce","needQuote":true,"nodes":[{"content":"Reduce","pos":[0,6]}]},{"pos":[552791,552792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552819,552820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553060,553076],"content":"ReduceAndCheck()","needQuote":true,"nodes":[{"content":"ReduceAndCheck()","pos":[0,16]}]},{"pos":[553225,553239],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[553314,553315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553342,553343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553440,553454],"content":"ReduceAndCheck","needQuote":true,"nodes":[{"content":"ReduceAndCheck","pos":[0,14]}]},{"pos":[553529,553530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[553557,553558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553816,553834],"content":"ReduceExtensions()","needQuote":true,"nodes":[{"content":"ReduceExtensions()","pos":[0,18]}]},{"pos":[553987,554003],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[554080,554081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554108,554109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554208,554224],"content":"ReduceExtensions","needQuote":true,"nodes":[{"content":"ReduceExtensions","pos":[0,16]}]},{"pos":[554301,554302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[554329,554330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554661,554699],"content":"ReferenceEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceEqual(Expression, Expression)","pos":[0,38]}]},{"pos":[554989,555003],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[555078,555079],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555150,555160],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[555221,555222]},{"pos":[555298,555308],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[555368,555369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[555537,555551],"content":"ReferenceEqual","needQuote":true,"nodes":[{"content":"ReferenceEqual","pos":[0,14]}]},{"pos":[555626,555627],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555698,555708],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[555769,555770]},{"pos":[555846,555856],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[555916,555917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556340,556381],"content":"ReferenceNotEqual(Expression, Expression)","needQuote":true,"nodes":[{"content":"ReferenceNotEqual(Expression, Expression)","pos":[0,41]}]},{"pos":[556677,556694],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[556772,556773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556844,556854],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[556915,556916]},{"pos":[556992,557002],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[557062,557063],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557234,557251],"content":"ReferenceNotEqual","needQuote":true,"nodes":[{"content":"ReferenceNotEqual","pos":[0,17]}]},{"pos":[557329,557330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[557401,557411],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[557472,557473]},{"pos":[557549,557559],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[557619,557620],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557968,557977],"content":"Rethrow()","needQuote":true,"nodes":[{"content":"Rethrow()","pos":[0,9]}]},{"pos":[558112,558119],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[558187,558188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558215,558216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558306,558313],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[558381,558382],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558409,558410],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[558657,558670],"content":"Rethrow(Type)","needQuote":true,"nodes":[{"content":"Rethrow(Type)","pos":[0,13]}]},{"pos":[558829,558836],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[558904,558905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558953,558957],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559015,559016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559119,559126],"content":"Rethrow","needQuote":true,"nodes":[{"content":"Rethrow","pos":[0,7]}]},{"pos":[559194,559195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559243,559247],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[559305,559306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559594,559613],"content":"Return(LabelTarget)","needQuote":true,"nodes":[{"content":"Return(LabelTarget)","pos":[0,19]}]},{"pos":[559818,559824],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[559891,559892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559964,559975],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[560036,560037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560163,560169],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[560236,560237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[560309,560320],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[560381,560382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560734,560765],"content":"Return(LabelTarget, Expression)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression)","pos":[0,31]}]},{"pos":[561041,561047],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[561114,561115],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561187,561198],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[561260,561261]},{"pos":[561337,561347],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561407,561408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561569,561575],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[561642,561643],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[561715,561726],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[561788,561789]},{"pos":[561865,561875],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[561935,561936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[562346,562383],"content":"Return(LabelTarget, Expression, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Expression, Type)","pos":[0,37]}]},{"pos":[562684,562690],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[562757,562758],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562830,562841],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[562903,562904]},{"pos":[562980,562990],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563051,563052]},{"pos":[563105,563109],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[563167,563168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563341,563347],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[563414,563415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563487,563498],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[563560,563561]},{"pos":[563637,563647],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[563708,563709]},{"pos":[563762,563766],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[563824,563825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564218,564243],"content":"Return(LabelTarget, Type)","needQuote":true,"nodes":[{"content":"Return(LabelTarget, Type)","pos":[0,25]}]},{"pos":[564473,564479],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[564546,564547],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[564619,564630],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[564692,564693]},{"pos":[564746,564750],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[564808,564809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564947,564953],"content":"Return","needQuote":true,"nodes":[{"content":"Return","pos":[0,6]}]},{"pos":[565020,565021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[565093,565104],"content":"LabelTarget","needQuote":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"content":",","pos":[565166,565167]},{"pos":[565220,565224],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[565282,565283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565656,565690],"content":"RightShift(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression)","pos":[0,34]}]},{"pos":[565972,565982],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[566053,566054],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566125,566135],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566196,566197]},{"pos":[566273,566283],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[566343,566344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566508,566518],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[566589,566590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[566661,566671],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[566732,566733]},{"pos":[566809,566819],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[566879,566880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567316,567362],"content":"RightShift(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShift(Expression, Expression, MethodInfo)","pos":[0,46]}]},{"pos":[567703,567713],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[567784,567785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[567856,567866],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[567927,567928]},{"pos":[568004,568014],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568075,568076]},{"pos":[568146,568156],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[568231,568232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568425,568435],"content":"RightShift","needQuote":true,"nodes":[{"content":"RightShift","pos":[0,10]}]},{"pos":[568506,568507],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[568578,568588],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568649,568650]},{"pos":[568726,568736],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[568797,568798]},{"pos":[568868,568878],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[568953,568954],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569409,569449],"content":"RightShiftAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression)","pos":[0,40]}]},{"pos":[569743,569759],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[569836,569837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[569908,569918],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[569979,569980]},{"pos":[570056,570066],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[570126,570127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570297,570313],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[570390,570391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570462,570472],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[570533,570534]},{"pos":[570610,570620],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[570680,570681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571135,571187],"content":"RightShiftAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo)","pos":[0,52]}]},{"pos":[571540,571556],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[571633,571634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571705,571715],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[571776,571777]},{"pos":[571853,571863],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[571924,571925]},{"pos":[571995,572005],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[572080,572081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572280,572296],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[572373,572374],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572445,572455],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[572516,572517]},{"pos":[572593,572603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[572664,572665]},{"pos":[572735,572745],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[572820,572821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573357,573427],"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,70]}]},{"pos":[573863,573879],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[573956,573957],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574028,574038],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574099,574100]},{"pos":[574176,574186],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[574247,574248]},{"pos":[574318,574328],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[574404,574405]},{"pos":[574487,574503],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[574569,574570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574810,574826],"content":"RightShiftAssign","needQuote":true,"nodes":[{"content":"RightShiftAssign","pos":[0,16]}]},{"pos":[574903,574904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574975,574985],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575046,575047]},{"pos":[575123,575133],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[575194,575195]},{"pos":[575265,575275],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[575351,575352]},{"pos":[575434,575450],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[575516,575517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576056,576106],"content":"RuntimeVariables(IEnumerable<ParameterExpression>)","needQuote":true,"nodes":[{"content":"RuntimeVariables(IEnumerable&lt;ParameterExpression&gt;)","pos":[0,50],"source":"RuntimeVariables(IEnumerable<ParameterExpression>)"}]},{"pos":[576647,576663],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[576740,576741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[576818,576829],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[576914,576915],"content":"<","needQuote":true,"nodes":[]},{"pos":[576995,577014],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[577115,577116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577300,577316],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[577393,577394],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577471,577482],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[577568,577571]},{"pos":[577658,577677],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[577746,577747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577774,577775],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578285,578324],"content":"RuntimeVariables(ParameterExpression[])","needQuote":true,"nodes":[{"content":"RuntimeVariables(ParameterExpression[])","pos":[0,39]}]},{"pos":[578734,578750],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[578827,578828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578908,578927],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"content":"[]","pos":[578997,578999]},{"pos":[579030,579031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579177,579193],"content":"RuntimeVariables","needQuote":true,"nodes":[{"content":"RuntimeVariables","pos":[0,16]}]},{"pos":[579270,579271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[579351,579370],"content":"ParameterExpression","needQuote":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[579439,579441],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[579469,579470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579933,579965],"content":"Subtract(Expression, Expression)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression)","pos":[0,32]}]},{"pos":[580243,580251],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[580320,580321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580392,580402],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580463,580464]},{"pos":[580540,580550],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[580610,580611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[580773,580781],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[580850,580851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580922,580932],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[580993,580994]},{"pos":[581070,581080],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[581140,581141],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581571,581615],"content":"Subtract(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"Subtract(Expression, Expression, MethodInfo)","pos":[0,44]}]},{"pos":[581952,581960],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[582029,582030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582101,582111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582172,582173]},{"pos":[582249,582259],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582320,582321]},{"pos":[582391,582401],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[582476,582477],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582668,582676],"content":"Subtract","needQuote":true,"nodes":[{"content":"Subtract","pos":[0,8]}]},{"pos":[582745,582746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[582817,582827],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[582888,582889]},{"pos":[582965,582975],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[583036,583037]},{"pos":[583107,583117],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[583192,583193],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[583642,583680],"content":"SubtractAssign(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression)","pos":[0,38]}]},{"pos":[583970,583984],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[584059,584060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584131,584141],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584202,584203]},{"pos":[584279,584289],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[584349,584350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584518,584532],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[584607,584608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[584679,584689],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[584750,584751]},{"pos":[584827,584837],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[584897,584898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[585346,585396],"content":"SubtractAssign(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo)","pos":[0,50]}]},{"pos":[585745,585759],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[585834,585835],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585906,585916],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[585977,585978]},{"pos":[586054,586064],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586125,586126]},{"pos":[586196,586206],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[586281,586282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586479,586493],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[586568,586569],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[586640,586650],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586711,586712]},{"pos":[586788,586798],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[586859,586860]},{"pos":[586930,586940],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[587015,587016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[587546,587614],"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,68]}]},{"pos":[588046,588060],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[588135,588136],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588207,588217],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588278,588279]},{"pos":[588355,588365],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[588426,588427]},{"pos":[588497,588507],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[588583,588584]},{"pos":[588666,588682],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[588748,588749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588987,589001],"content":"SubtractAssign","needQuote":true,"nodes":[{"content":"SubtractAssign","pos":[0,14]}]},{"pos":[589076,589077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589148,589158],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589219,589220]},{"pos":[589296,589306],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[589367,589368]},{"pos":[589438,589448],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[589524,589525]},{"pos":[589607,589623],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[589689,589690],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590217,590262],"content":"SubtractAssignChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression)","pos":[0,45]}]},{"pos":[590566,590587],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[590669,590670],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590741,590751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[590812,590813]},{"pos":[590889,590899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[590959,590960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591135,591156],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[591238,591239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591310,591320],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[591381,591382]},{"pos":[591458,591468],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[591528,591529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[591998,592055],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo)","pos":[0,57]}]},{"pos":[592418,592439],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[592521,592522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592593,592603],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592664,592665]},{"pos":[592741,592751],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[592812,592813]},{"pos":[592883,592893],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[592968,592969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593173,593194],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[593276,593277],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[593348,593358],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593419,593420]},{"pos":[593496,593506],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[593567,593568]},{"pos":[593638,593648],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[593723,593724],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594275,594350],"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","needQuote":true,"nodes":[{"content":"SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)","pos":[0,75]}]},{"pos":[594796,594817],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[594899,594900],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594971,594981],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[595042,595043]},{"pos":[595119,595129],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[595190,595191]},{"pos":[595261,595271],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[595347,595348]},{"pos":[595430,595446],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[595512,595513],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595758,595779],"content":"SubtractAssignChecked","needQuote":true,"nodes":[{"content":"SubtractAssignChecked","pos":[0,21]}]},{"pos":[595861,595862],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595933,595943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596004,596005]},{"pos":[596081,596091],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[596152,596153]},{"pos":[596223,596233],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[596309,596310]},{"pos":[596392,596408],"content":"LambdaExpression","needQuote":true,"nodes":[{"content":"LambdaExpression","pos":[0,16]}]},{"pos":[596474,596475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597010,597049],"content":"SubtractChecked(Expression, Expression)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression)","pos":[0,39]}]},{"pos":[597341,597356],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[597432,597433],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[597504,597514],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[597575,597576]},{"pos":[597652,597662],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[597722,597723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597892,597907],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[597983,597984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598055,598065],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[598126,598127]},{"pos":[598203,598213],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[598273,598274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[598725,598776],"content":"SubtractChecked(Expression, Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"SubtractChecked(Expression, Expression, MethodInfo)","pos":[0,51]}]},{"pos":[599127,599142],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[599218,599219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599290,599300],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599361,599362]},{"pos":[599438,599448],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[599509,599510]},{"pos":[599580,599590],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[599665,599666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599864,599879],"content":"SubtractChecked","needQuote":true,"nodes":[{"content":"SubtractChecked","pos":[0,15]}]},{"pos":[599955,599956],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[600027,600037],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600098,600099]},{"pos":[600175,600185],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[600246,600247]},{"pos":[600317,600327],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[600402,600403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600895,600939],"content":"Switch(Expression, Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, SwitchCase[])","pos":[0,44]}]},{"pos":[601511,601517],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[601584,601585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601656,601666],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[601727,601728]},{"pos":[601804,601814],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[601875,601876]},{"pos":[601952,601962],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[602023,602025]},{"pos":[602056,602057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602254,602260],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[602327,602328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602399,602409],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602470,602471]},{"pos":[602547,602557],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[602618,602619]},{"pos":[602695,602705],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[602765,602767],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[602795,602796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603421,603488],"content":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,67],"source":"Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[604292,604298],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[604365,604366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604437,604447],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[604508,604509]},{"pos":[604585,604595],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[604656,604657]},{"pos":[604727,604737],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[604813,604814]},{"pos":[604896,604907],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[604992,604993],"content":"<","needQuote":true,"nodes":[]},{"pos":[605064,605074],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[605166,605167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605431,605437],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[605504,605505],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[605576,605586],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605647,605648]},{"pos":[605724,605734],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[605795,605796]},{"pos":[605866,605876],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[605952,605953]},{"pos":[606035,606046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[606132,606135]},{"pos":[606213,606223],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[606283,606284],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[606311,606312],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607015,607071],"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,56]}]},{"pos":[607744,607750],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[607817,607818],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607889,607899],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[607960,607961]},{"pos":[608037,608047],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608108,608109]},{"pos":[608179,608189],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[608265,608266]},{"pos":[608342,608352],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[608413,608415]},{"pos":[608446,608447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608673,608679],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[608746,608747],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[608818,608828],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[608889,608890]},{"pos":[608966,608976],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[609037,609038]},{"pos":[609108,609118],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[609194,609195]},{"pos":[609271,609281],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[609341,609343],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[609371,609372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[609949,609981],"content":"Switch(Expression, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Expression, SwitchCase[])","pos":[0,32]}]},{"pos":[610434,610440],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[610507,610508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610579,610589],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[610650,610651]},{"pos":[610727,610737],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[610798,610800]},{"pos":[610831,610832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610994,611000],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[611067,611068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[611139,611149],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[611210,611211]},{"pos":[611287,611297],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[611357,611359],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[611387,611388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611966,612039],"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable&lt;SwitchCase&gt;)","pos":[0,73],"source":"Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)"}]},{"pos":[612887,612893],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[612960,612961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613009,613013],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[613072,613073]},{"pos":[613149,613159],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[613220,613221]},{"pos":[613297,613307],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[613368,613369]},{"pos":[613439,613449],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[613525,613526]},{"pos":[613608,613619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[613704,613705],"content":"<","needQuote":true,"nodes":[]},{"pos":[613776,613786],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[613878,613879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614155,614161],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[614228,614229],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[614277,614281],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[614340,614341]},{"pos":[614417,614427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614488,614489]},{"pos":[614565,614575],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[614636,614637]},{"pos":[614707,614717],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[614793,614794]},{"pos":[614876,614887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[614973,614976]},{"pos":[615054,615064],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[615124,615125],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615152,615153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[615892,615954],"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","needQuote":true,"nodes":[{"content":"Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])","pos":[0,62]}]},{"pos":[616671,616677],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[616744,616745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616793,616797],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[616856,616857]},{"pos":[616933,616943],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[617004,617005]},{"pos":[617081,617091],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[617152,617153]},{"pos":[617223,617233],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[617309,617310]},{"pos":[617386,617396],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"content":"[]","pos":[617457,617459]},{"pos":[617490,617491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617729,617735],"content":"Switch","needQuote":true,"nodes":[{"content":"Switch","pos":[0,6]}]},{"pos":[617802,617803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[617851,617855],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[617914,617915]},{"pos":[617991,618001],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[618062,618063]},{"pos":[618139,618149],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[618210,618211]},{"pos":[618281,618291],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"content":",","pos":[618367,618368]},{"pos":[618444,618454],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[618514,618516],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[618544,618545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619187,619234],"content":"SwitchCase(Expression, IEnumerable<Expression>)","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, IEnumerable&lt;Expression&gt;)","pos":[0,47],"source":"SwitchCase(Expression, IEnumerable<Expression>)"}]},{"pos":[619834,619844],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[619915,619916],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619987,619997],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[620058,620059]},{"pos":[620141,620152],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[620237,620238],"content":"<","needQuote":true,"nodes":[]},{"pos":[620309,620319],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[620411,620412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620616,620626],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[620697,620698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[620769,620779],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[620840,620841]},{"pos":[620923,620934],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[621020,621023]},{"pos":[621101,621111],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[621171,621172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621199,621200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621744,621780],"content":"SwitchCase(Expression, Expression[])","needQuote":true,"nodes":[{"content":"SwitchCase(Expression, Expression[])","pos":[0,36]}]},{"pos":[622249,622259],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[622330,622331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622402,622412],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[622473,622474]},{"pos":[622550,622560],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":"[]","pos":[622621,622623]},{"pos":[622654,622655],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622821,622831],"content":"SwitchCase","needQuote":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[622902,622903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622974,622984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[623045,623046]},{"pos":[623122,623132],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[623192,623194],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[623222,623223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623649,623671],"content":"SymbolDocument(String)","needQuote":true,"nodes":[{"content":"SymbolDocument(String)","pos":[0,22]}]},{"pos":[623848,623862],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[623937,623938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[623988,623994],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[624054,624055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624167,624181],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[624256,624257],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624307,624313],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[624373,624374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624677,624705],"content":"SymbolDocument(String, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid)","pos":[0,28]}]},{"pos":[624907,624921],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[624996,624997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625047,625053],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[625114,625115]},{"pos":[625168,625172],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[625230,625231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[625355,625369],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[625444,625445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625495,625501],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[625562,625563]},{"pos":[625616,625620],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[625678,625679],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626012,626046],"content":"SymbolDocument(String, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid)","pos":[0,34]}]},{"pos":[626273,626287],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[626362,626363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626413,626419],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[626480,626481]},{"pos":[626534,626538],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[626597,626598]},{"pos":[626651,626655],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[626713,626714],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626850,626864],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[626939,626940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626990,626996],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[627057,627058]},{"pos":[627111,627115],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[627174,627175]},{"pos":[627228,627232],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[627290,627291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627654,627694],"content":"SymbolDocument(String, Guid, Guid, Guid)","needQuote":true,"nodes":[{"content":"SymbolDocument(String, Guid, Guid, Guid)","pos":[0,40]}]},{"pos":[627946,627960],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[628035,628036],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628086,628092],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[628153,628154]},{"pos":[628207,628211],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[628270,628271]},{"pos":[628324,628328],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[628387,628388]},{"pos":[628441,628445],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[628503,628504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628652,628666],"content":"SymbolDocument","needQuote":true,"nodes":[{"content":"SymbolDocument","pos":[0,14]}]},{"pos":[628741,628742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628792,628798],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[628859,628860]},{"pos":[628913,628917],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[628976,628977]},{"pos":[629030,629034],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"content":",","pos":[629093,629094]},{"pos":[629147,629151],"content":"Guid","needQuote":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[629209,629210],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629568,629585],"content":"Throw(Expression)","needQuote":true,"nodes":[{"content":"Throw(Expression)","pos":[0,17]}]},{"pos":[629786,629791],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[629857,629858],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629929,629939],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[629999,630000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630124,630129],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[630195,630196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630267,630277],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[630337,630338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630660,630683],"content":"Throw(Expression, Type)","needQuote":true,"nodes":[{"content":"Throw(Expression, Type)","pos":[0,23]}]},{"pos":[630909,630914],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[630980,630981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631052,631062],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631123,631124]},{"pos":[631177,631181],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[631239,631240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631376,631381],"content":"Throw","needQuote":true,"nodes":[{"content":"Throw","pos":[0,5]}]},{"pos":[631447,631448],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631519,631529],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[631590,631591]},{"pos":[631644,631648],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[631706,631707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632003,632013],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[632150,632158],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[632227,632228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632255,632256],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632347,632355],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[632424,632425],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632452,632453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632764,632798],"content":"TryCatch(Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatch(Expression, CatchBlock[])","pos":[0,34]}]},{"pos":[633259,633267],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[633336,633337],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633408,633418],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[633479,633480]},{"pos":[633556,633566],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[633627,633629]},{"pos":[633660,633661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633825,633833],"content":"TryCatch","needQuote":true,"nodes":[{"content":"TryCatch","pos":[0,8]}]},{"pos":[633902,633903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633974,633984],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[634045,634046]},{"pos":[634122,634132],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[634192,634194],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[634222,634223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634738,634791],"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","needQuote":true,"nodes":[{"content":"TryCatchFinally(Expression, Expression, CatchBlock[])","pos":[0,53]}]},{"pos":[635399,635414],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[635490,635491],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[635562,635572],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[635633,635634]},{"pos":[635710,635720],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[635781,635782]},{"pos":[635858,635868],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"content":"[]","pos":[635929,635931]},{"pos":[635962,635963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636169,636184],"content":"TryCatchFinally","needQuote":true,"nodes":[{"content":"TryCatchFinally","pos":[0,15]}]},{"pos":[636260,636261],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636332,636342],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[636403,636404]},{"pos":[636480,636490],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[636551,636552]},{"pos":[636628,636638],"content":"CatchBlock","needQuote":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[636698,636700],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[636728,636729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637280,637312],"content":"TryFault(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFault(Expression, Expression)","pos":[0,32]}]},{"pos":[637590,637598],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[637667,637668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637739,637749],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[637810,637811]},{"pos":[637887,637897],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[637957,637958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638120,638128],"content":"TryFault","needQuote":true,"nodes":[{"content":"TryFault","pos":[0,8]}]},{"pos":[638197,638198],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638269,638279],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[638340,638341]},{"pos":[638417,638427],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[638487,638488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[638892,638926],"content":"TryFinally(Expression, Expression)","needQuote":true,"nodes":[{"content":"TryFinally(Expression, Expression)","pos":[0,34]}]},{"pos":[639208,639218],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[639289,639290],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639361,639371],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639432,639433]},{"pos":[639509,639519],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[639579,639580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639744,639754],"content":"TryFinally","needQuote":true,"nodes":[{"content":"TryFinally","pos":[0,10]}]},{"pos":[639825,639826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639897,639907],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[639968,639969]},{"pos":[640045,640055],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[640115,640116],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640486,640516],"content":"TryGetActionType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetActionType(Type[], Type)","pos":[0,30]}]},{"pos":[640860,640876],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[640953,640954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641002,641006],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[641065,641067]},{"content":",","pos":[641099,641100]},{"pos":[641153,641157],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641215,641216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641343,641359],"content":"TryGetActionType","needQuote":true,"nodes":[{"content":"TryGetActionType","pos":[0,16]}]},{"pos":[641436,641437],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641485,641489],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641547,641549],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[641578,641579]},{"pos":[641632,641636],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[641694,641695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642083,642111],"content":"TryGetFuncType(Type[], Type)","needQuote":true,"nodes":[{"content":"TryGetFuncType(Type[], Type)","pos":[0,28]}]},{"pos":[642447,642461],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[642536,642537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642585,642589],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":"[]","pos":[642648,642650]},{"content":",","pos":[642682,642683]},{"pos":[642736,642740],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[642798,642799],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642924,642938],"content":"TryGetFuncType","needQuote":true,"nodes":[{"content":"TryGetFuncType","pos":[0,14]}]},{"pos":[643013,643014],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643062,643066],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[643124,643126],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[643155,643156]},{"pos":[643209,643213],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[643271,643272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643666,643690],"content":"TypeAs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeAs(Expression, Type)","pos":[0,24]}]},{"pos":[643918,643924],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[643991,643992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644063,644073],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[644134,644135]},{"pos":[644188,644192],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[644250,644251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644388,644394],"content":"TypeAs","needQuote":true,"nodes":[{"content":"TypeAs","pos":[0,6]}]},{"pos":[644461,644462],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644533,644543],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[644604,644605]},{"pos":[644658,644662],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[644720,644721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645067,645094],"content":"TypeEqual(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeEqual(Expression, Type)","pos":[0,27]}]},{"pos":[645328,645337],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[645407,645408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645479,645489],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[645550,645551]},{"pos":[645604,645608],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[645666,645667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645807,645816],"content":"TypeEqual","needQuote":true,"nodes":[{"content":"TypeEqual","pos":[0,9]}]},{"pos":[645886,645887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[645958,645968],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[646029,646030]},{"pos":[646083,646087],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[646145,646146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[646495,646519],"content":"TypeIs(Expression, Type)","needQuote":true,"nodes":[{"content":"TypeIs(Expression, Type)","pos":[0,24]}]},{"pos":[646747,646753],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[646820,646821],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646892,646902],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[646963,646964]},{"pos":[647017,647021],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[647079,647080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647217,647223],"content":"TypeIs","needQuote":true,"nodes":[{"content":"TypeIs","pos":[0,6]}]},{"pos":[647290,647291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647362,647372],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[647433,647434]},{"pos":[647487,647491],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[647549,647550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647885,647906],"content":"UnaryPlus(Expression)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression)","pos":[0,21]}]},{"pos":[648115,648124],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[648194,648195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648266,648276],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[648336,648337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648465,648474],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[648544,648545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648616,648626],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[648686,648687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649038,649071],"content":"UnaryPlus(Expression, MethodInfo)","needQuote":true,"nodes":[{"content":"UnaryPlus(Expression, MethodInfo)","pos":[0,33]}]},{"pos":[649339,649348],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[649418,649419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649490,649500],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[649561,649562]},{"pos":[649632,649642],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[649717,649718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649875,649884],"content":"UnaryPlus","needQuote":true,"nodes":[{"content":"UnaryPlus","pos":[0,9]}]},{"pos":[649954,649955],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650026,650036],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[650097,650098]},{"pos":[650168,650178],"content":"MethodInfo","needQuote":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[650253,650254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650625,650648],"content":"Unbox(Expression, Type)","needQuote":true,"nodes":[{"content":"Unbox(Expression, Type)","pos":[0,23]}]},{"pos":[650874,650879],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[650945,650946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651017,651027],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[651088,651089]},{"pos":[651142,651146],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[651204,651205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651341,651346],"content":"Unbox","needQuote":true,"nodes":[{"content":"Unbox","pos":[0,5]}]},{"pos":[651412,651413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651484,651494],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"content":",","pos":[651555,651556]},{"pos":[651609,651613],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[651671,651672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651980,651994],"content":"Variable(Type)","needQuote":true,"nodes":[{"content":"Variable(Type)","pos":[0,14]}]},{"pos":[652155,652163],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[652232,652233],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652281,652285],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[652343,652344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652448,652456],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[652525,652526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[652574,652578],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[652636,652637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652918,652940],"content":"Variable(Type, String)","needQuote":true,"nodes":[{"content":"Variable(Type, String)","pos":[0,22]}]},{"pos":[653130,653138],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[653207,653208],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653256,653260],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[653319,653320]},{"pos":[653375,653381],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[653441,653442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653560,653568],"content":"Variable","needQuote":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[653637,653638],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653686,653690],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"content":",","pos":[653749,653750]},{"pos":[653805,653811],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[653871,653872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654197,654229],"content":"VisitChildren(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"VisitChildren(ExpressionVisitor)","pos":[0,32]}]},{"pos":[654460,654473],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[654547,654548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[654626,654643],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[654710,654711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654850,654863],"content":"VisitChildren","needQuote":true,"nodes":[{"content":"VisitChildren","pos":[0,13]}]},{"pos":[654937,654938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655016,655033],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[655100,655101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655379,655393],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[655512,655518],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[655585,655586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655636,655642],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[655702,655703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[655786,655792],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[655859,655860],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655910,655916],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[655976,655977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656191,656213],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[656361,656367],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[656434,656435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656485,656491],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[656552,656553]},{"pos":[656608,656614],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[656674,656675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656772,656778],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[656845,656846],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[656896,656902],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[656963,656964]},{"pos":[657019,657025],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[657085,657086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657331,657362],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[657528,657543],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[657619,657620],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657670,657676],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[657737,657738]},{"pos":[657793,657799],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[657859,657860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657966,657981],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[658057,658058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658108,658114],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[658175,658176]},{"pos":[658231,658237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[658297,658298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658528,658541],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[658642,658653],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[658725,658726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658753,658754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658827,658838],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[658910,658911],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[658938,658939],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659114,659123],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[659216,659223],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[659291,659292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659319,659320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659389,659396],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[659464,659465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659492,659493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659668,659685],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[659794,659809],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[659885,659886],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659913,659914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659991,660006],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[660082,660083],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660110,660111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660256,660262],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[660535,660565],"content":"ReadOnlyCollection<Expression>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;Expression&gt;","pos":[0,30],"source":"ReadOnlyCollection<Expression>"}]},{"pos":[660899,660917],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[661013,661014],"content":"<","needQuote":true,"nodes":[]},{"pos":[661085,661095],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[661259,661277],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[661374,661377]},{"pos":[661455,661465],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[661525,661526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661831,661852],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[662111,662129],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[662204,662205],"content":"<","needQuote":true,"nodes":[]},{"pos":[662232,662233],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[662364,662382],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[662458,662461]},{"pos":[662495,662496],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[662523,662524],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662756,662786],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[663017,663029],"content":"PropertyInfo","needQuote":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[663201,663218],"content":"System.Reflection","needQuote":true,"nodes":[{"content":"System.Reflection","pos":[0,17]}]},{"pos":[663440,663448],"content":"NodeType","needQuote":true,"nodes":[{"content":"NodeType","pos":[0,8]}]},{"pos":[663708,663722],"content":"ExpressionType","needQuote":true,"nodes":[{"content":"ExpressionType","pos":[0,14]}]},{"pos":[664002,664015],"content":"ArgumentCount","needQuote":true,"nodes":[{"content":"ArgumentCount","pos":[0,13]}]},{"pos":[664268,664273],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[664469,664473],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[664677,664681],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[664919,664944],"content":"Accept(ExpressionVisitor)","needQuote":true,"nodes":[{"content":"Accept(ExpressionVisitor)","pos":[0,25]}]},{"pos":[665161,665167],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[665234,665235],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665313,665330],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[665397,665398],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665530,665536],"content":"Accept","needQuote":true,"nodes":[{"content":"Accept","pos":[0,6]}]},{"pos":[665603,665604],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665682,665699],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[665766,665767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666048,666065],"content":"ExpressionVisitor","needQuote":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[666365,666383],"content":"GetArgument(Int32)","needQuote":true,"nodes":[{"content":"GetArgument(Int32)","pos":[0,18]}]},{"pos":[666566,666577],"content":"GetArgument","needQuote":true,"nodes":[{"content":"GetArgument","pos":[0,11]}]},{"pos":[666656,666657],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666706,666711],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[666770,666771],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666886,666897],"content":"GetArgument","needQuote":true,"nodes":[{"content":"GetArgument","pos":[0,11]}]},{"pos":[666976,666977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667026,667031],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[667090,667091],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667426,667449],"content":"IEnumerable<Expression>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Expression&gt;","pos":[0,23],"source":"IEnumerable<Expression>"}]},{"pos":[667743,667754],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[667839,667840],"content":"<","needQuote":true,"nodes":[]},{"pos":[667911,667921],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[668074,668085],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668171,668174]},{"pos":[668252,668262],"content":"Expression","needQuote":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[668322,668323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668625,668640],"content":"IndexExpression","needQuote":true,"nodes":[{"content":"IndexExpression","pos":[0,15]}]},{"pos":[668856,668870],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[669089,669100],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[669164,669165],"content":"<","needQuote":true,"nodes":[]},{"pos":[669192,669193],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[669313,669324],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[669389,669392]},{"pos":[669426,669427],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[669454,669455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669658,669684],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]}],"content":"items:\n- uid: System.Linq.Expressions.IndexExpression\n  commentId: T:System.Linq.Expressions.IndexExpression\n  id: IndexExpression\n  parent: System.Linq.Expressions\n  children:\n  - System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  - System.Linq.Expressions.IndexExpression.Arguments\n  - System.Linq.Expressions.IndexExpression.Indexer\n  - System.Linq.Expressions.IndexExpression.NodeType\n  - System.Linq.Expressions.IndexExpression.Object\n  - System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  - System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  - System.Linq.Expressions.IndexExpression.Type\n  - System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  langs:\n  - csharp\n  - vb\n  name: IndexExpression\n  fullName: System.Linq.Expressions.IndexExpression\n  type: Class\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IndexExpression\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 596\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Represents indexing a property or array.</p>\\n\"\n  syntax:\n    content: 'public sealed class IndexExpression : Expression, IArgumentProvider'\n    content.vb: >-\n      Public NotInheritable Class IndexExpression\n          Inherits Expression\n          Implements IArgumentProvider\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.Expression\n  implements:\n  - System.Linq.Expressions.IArgumentProvider\n  inheritedMembers:\n  - System.Linq.Expressions.Expression.CanReduce\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Constant(System.Object)\n  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Default(System.Type)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Empty\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Label\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Label(System.String)\n  - System.Linq.Expressions.Expression.Label(System.Type)\n  - System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.New(System.Type)\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Parameter(System.Type)\n  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Reduce\n  - System.Linq.Expressions.Expression.ReduceAndCheck\n  - System.Linq.Expressions.Expression.ReduceExtensions\n  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Rethrow\n  - System.Linq.Expressions.Expression.Rethrow(System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.ToString\n  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type)\n  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: IndexExpression\n- uid: System.Linq.Expressions.IndexExpression.Arguments\n  commentId: P:System.Linq.Expressions.IndexExpression.Arguments\n  id: Arguments\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Arguments\n  fullName: System.Linq.Expressions.IndexExpression.Arguments\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Arguments\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 599\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the arguments that will be used to index the property or array.</p>\\n\"\n  syntax:\n    content: public ReadOnlyCollection<Expression> Arguments { get; }\n    content.vb: Public ReadOnly Property Arguments As ReadOnlyCollection(Of Expression)\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: \"\\n<p>The read-only collection containing the arguments that will be used to index the property or array.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: IndexExpression.Arguments\n- uid: System.Linq.Expressions.IndexExpression.Indexer\n  commentId: P:System.Linq.Expressions.IndexExpression.Indexer\n  id: Indexer\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Indexer\n  fullName: System.Linq.Expressions.IndexExpression.Indexer\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Indexer\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 600\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Reflection.PropertyInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the property if the expression represents an indexed property, returns null otherwise.</p>\\n\"\n  syntax:\n    content: public PropertyInfo Indexer { get; }\n    content.vb: Public ReadOnly Property Indexer As PropertyInfo\n    parameters: []\n    return:\n      type: System.Reflection.PropertyInfo\n      description: \"\\n<p>The <xref href=\\\"System.Reflection.PropertyInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for the property if the expression represents an indexed property, otherwise null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: IndexExpression.Indexer\n- uid: System.Linq.Expressions.IndexExpression.NodeType\n  commentId: P:System.Linq.Expressions.IndexExpression.NodeType\n  id: NodeType\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: NodeType\n  fullName: System.Linq.Expressions.IndexExpression.NodeType\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NodeType\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 601\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the node type of this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override sealed ExpressionType NodeType { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property NodeType As ExpressionType\n    parameters: []\n    return:\n      type: System.Linq.Expressions.ExpressionType\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.ExpressionType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents this expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.NodeType\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: IndexExpression.NodeType\n- uid: System.Linq.Expressions.IndexExpression.Object\n  commentId: P:System.Linq.Expressions.IndexExpression.Object\n  id: Object\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Object\n  fullName: System.Linq.Expressions.IndexExpression.Object\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Object\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 602\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>An object to index.</p>\\n\"\n  syntax:\n    content: public Expression Object { get; }\n    content.vb: Public ReadOnly Property Object As Expression\n    parameters: []\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the object to index.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: IndexExpression.Object\n- uid: System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  commentId: P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  id: System#Linq#Expressions#IArgumentProvider#ArgumentCount\n  isEii: true\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: IArgumentProvider.ArgumentCount\n  fullName: System.Linq.Expressions.IndexExpression.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 603\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the number of arguments to the expression tree node.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.</p>\\n\"\n  syntax:\n    content: int IArgumentProvider.ArgumentCount { get; }\n    content.vb: ReadOnly WriteOnly Property System.Linq.Expressions.IArgumentProvider.ArgumentCount As Integer Implements IArgumentProvider.ArgumentCount\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  name.vb: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  nameWithType: IndexExpression.IArgumentProvider.ArgumentCount\n  nameWithType.vb: IndexExpression.System.Linq.Expressions.IArgumentProvider.ArgumentCount\n- uid: System.Linq.Expressions.IndexExpression.Type\n  commentId: P:System.Linq.Expressions.IndexExpression.Type\n  id: Type\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Linq.Expressions.IndexExpression.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 604\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Gets the static type of the expression that this <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> represents.</p>\\n\"\n  syntax:\n    content: public override sealed Type Type { get; }\n    content.vb: Public NotOverridable Overrides ReadOnly Property Type As Type\n    parameters: []\n    return:\n      type: System.Type\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.IndexExpression.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the static type of the expression.</p>\\n\"\n  overridden: System.Linq.Expressions.Expression.Type\n  modifiers.csharp:\n  - public\n  - override\n  - sealed\n  - get\n  modifiers.vb:\n  - Public\n  - Overrides\n  - NotOverridable\n  - ReadOnly\n  nameWithType: IndexExpression.Type\n- uid: System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  commentId: M:System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  id: Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.IndexExpression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Accept\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 605\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected override Expression Accept(ExpressionVisitor visitor)\n    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression\n    parameters:\n    - id: visitor\n      type: System.Linq.Expressions.ExpressionVisitor\n    return:\n      type: System.Linq.Expressions.Expression\n  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: IndexExpression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  commentId: M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  id: System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)\n  isEii: true\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: IArgumentProvider.GetArgument(Int32)\n  fullName: System.Linq.Expressions.IndexExpression.System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: System.Linq.Expressions.IArgumentProvider.GetArgument\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 606\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Returns the argument at index, throwing if index is out of bounds.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.</p>\\n\"\n  syntax:\n    content: Expression IArgumentProvider.GetArgument(int index)\n    content.vb: Function System.Linq.Expressions.IArgumentProvider.GetArgument(index As Integer) As Expression Implements IArgumentProvider.GetArgument\n    parameters:\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The index of the argument.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>Returns <xref href=\\\"System.Linq.Expressions.Expression\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  implements:\n  - System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n  name.vb: System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n  nameWithType: IndexExpression.IArgumentProvider.GetArgument(Int32)\n  nameWithType.vb: IndexExpression.System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)\n- uid: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  commentId: M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  id: Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.IndexExpression\n  langs:\n  - csharp\n  - vb\n  name: Update(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  type: Method\n  source:\n    remote:\n      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Update\n    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs\n    startLine: 607\n  assemblies:\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: \"\\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\\n\"\n  syntax:\n    content: public IndexExpression Update(Expression object, IEnumerable<Expression> arguments)\n    content.vb: Public Function Update(object As Expression, arguments As IEnumerable(Of Expression)) As IndexExpression\n    parameters:\n    - id: object\n      type: System.Linq.Expressions.Expression\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.IndexExpression.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result.</p>\\n\"\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n      description: \"\\n<p>The <xref href=\\\"System.Linq.Expressions.IndexExpression.Arguments\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the result.</p>\\n\"\n    return:\n      type: System.Linq.Expressions.IndexExpression\n      description: \"\\n<p>This expression if no children are changed or an expression with the updated children.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Update(Expression, IEnumerable(Of Expression))\n  nameWithType: IndexExpression.Update(Expression, IEnumerable<Expression>)\n  nameWithType.vb: IndexExpression.Update(Expression, IEnumerable(Of Expression))\nreferences:\n- uid: System.Linq.Expressions\n  isExternal: false\n  name: System.Linq.Expressions\n  fullName: System.Linq.Expressions\n  commentId: N:System.Linq.Expressions\n  nameWithType: System.Linq.Expressions\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  fullName: System.Linq.Expressions.Expression\n  commentId: T:System.Linq.Expressions.Expression\n  nameWithType: Expression\n- uid: System.Linq.Expressions.IArgumentProvider\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IArgumentProvider\n  fullName: System.Linq.Expressions.IArgumentProvider\n  commentId: T:System.Linq.Expressions.IArgumentProvider\n  nameWithType: IArgumentProvider\n- uid: System.Linq.Expressions.Expression.CanReduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: CanReduce\n  fullName: System.Linq.Expressions.Expression.CanReduce\n  commentId: P:System.Linq.Expressions.Expression.CanReduce\n  nameWithType: Expression.CanReduce\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Add(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Add(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Add(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Add\n    fullName: System.Linq.Expressions.Expression.Add\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Add(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssign\n    fullName: System.Linq.Expressions.Expression.AddAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AddAssignChecked\n    fullName: System.Linq.Expressions.Expression.AddAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AddChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AddChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AddChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AddChecked\n    fullName: System.Linq.Expressions.Expression.AddChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AddChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: And(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.And(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: And(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: And\n    fullName: System.Linq.Expressions.Expression.And\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.And(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAlso(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAlso(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAlso(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAlso\n    fullName: System.Linq.Expressions.Expression.AndAlso\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAlso(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: AndAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.AndAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: AndAssign\n    fullName: System.Linq.Expressions.Expression.AndAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.AndAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayAccess(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayAccess(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayAccess(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayAccess(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayAccess(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayAccess\n    fullName: System.Linq.Expressions.Expression.ArrayAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayAccess(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayAccess(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ArrayIndex(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ArrayIndex(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ArrayIndex(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayIndex(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayIndex(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: ArrayIndex(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: ArrayIndex\n    fullName: System.Linq.Expressions.Expression.ArrayIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ArrayIndex(Expression, Expression[])\n  nameWithType.vb: Expression.ArrayIndex(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ArrayLength(Expression)\n  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n    name: ArrayLength\n    fullName: System.Linq.Expressions.Expression.ArrayLength\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)\n  nameWithType: Expression.ArrayLength(Expression)\n- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Assign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Assign\n    fullName: System.Linq.Expressions.Expression.Assign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Assign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MemberInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MemberInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Bind(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Bind\n    fullName: System.Linq.Expressions.Expression.Bind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Bind(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Block(Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Block(Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())\n  name.vb: Block(Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Expression[])\n  nameWithType.vb: Expression.Block(Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())\n  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, IEnumerable<ParameterExpression>, Expression[])\n  nameWithType.vb: Expression.Block(Type, IEnumerable(Of ParameterExpression), Expression())\n- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Block(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())\n  name.vb: Block(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n    name: Block\n    fullName: System.Linq.Expressions.Expression.Block\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Block(Type, Expression[])\n  nameWithType.vb: Expression.Block(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Break(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Break(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Break(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Break(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Break\n    fullName: System.Linq.Expressions.Expression.Break\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Break(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Call(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(Expression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(Expression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Expression, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Expression, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Expression, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Expression, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Call(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Call(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Call(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: Call(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(MethodInfo, Expression[])\n  nameWithType.vb: Expression.Call(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Call(Type, String, Type[], Expression[])\n  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())\n  name.vb: Call(Type, String, Type(), Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n    name: Call\n    fullName: System.Linq.Expressions.Expression.Call\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Call(Type, String, Type[], Expression[])\n  nameWithType.vb: Expression.Call(Type, String, Type(), Expression())\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Catch(ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression)\n- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Catch(Type, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Catch\n    fullName: System.Linq.Expressions.Expression.Catch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Catch(Type, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ClearDebugInfo(SymbolDocumentInfo)\n  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n    name: ClearDebugInfo\n    fullName: System.Linq.Expressions.Expression.ClearDebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)\n  nameWithType: Expression.ClearDebugInfo(SymbolDocumentInfo)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Coalesce(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Coalesce(Expression, Expression, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n    name: Coalesce\n    fullName: System.Linq.Expressions.Expression.Coalesce\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.Coalesce(Expression, Expression, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Condition(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Condition(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Condition(Expression, Expression, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n    name: Condition\n    fullName: System.Linq.Expressions.Expression.Condition\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Condition(Expression, Expression, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object)\n  nameWithType: Expression.Constant(Object)\n- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Constant(Object, Type)\n  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n    name: Constant\n    fullName: System.Linq.Expressions.Expression.Constant\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)\n  nameWithType: Expression.Constant(Object, Type)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Continue(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Continue(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Continue(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Continue\n    fullName: System.Linq.Expressions.Expression.Continue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Continue(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Convert(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Convert(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: Convert\n    fullName: System.Linq.Expressions.Expression.Convert\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.Convert(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.ConvertChecked(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ConvertChecked(Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: ConvertChecked\n    fullName: System.Linq.Expressions.Expression.ConvertChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.ConvertChecked(Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n    name: DebugInfo\n    fullName: System.Linq.Expressions.Expression.DebugInfo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.SymbolDocumentInfo\n    name: SymbolDocumentInfo\n    fullName: System.Linq.Expressions.SymbolDocumentInfo\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)\n  nameWithType: Expression.DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Decrement(Expression)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Decrement(Expression)\n- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Decrement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Decrement\n    fullName: System.Linq.Expressions.Expression.Decrement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Decrement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Default(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Default(Type)\n  fullName: System.Linq.Expressions.Expression.Default(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Default(System.Type)\n    name: Default\n    fullName: System.Linq.Expressions.Expression.Default\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Default(System.Type)\n  nameWithType: Expression.Default(Type)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Divide(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Divide(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Divide(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Divide\n    fullName: System.Linq.Expressions.Expression.Divide\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Divide(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: DivideAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.DivideAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: DivideAssign\n    fullName: System.Linq.Expressions.Expression.DivideAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ElementInit(MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ElementInit(MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ElementInit(MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ElementInit(MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ElementInit\n    fullName: System.Linq.Expressions.Expression.ElementInit\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ElementInit(MethodInfo, Expression[])\n  nameWithType.vb: Expression.ElementInit(MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Empty\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Empty()\n  fullName: System.Linq.Expressions.Expression.Empty()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Empty\n    name: Empty\n    fullName: System.Linq.Expressions.Expression.Empty\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Empty\n  nameWithType: Expression.Empty()\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Equal(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Equal(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Equal(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: Equal\n    fullName: System.Linq.Expressions.Expression.Equal\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.Equal(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOr(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOr(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOr\n    fullName: System.Linq.Expressions.Expression.ExclusiveOr\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOr(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ExclusiveOrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ExclusiveOrAssign\n    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, FieldInfo)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    fullName: System.Reflection.FieldInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)\n  nameWithType: Expression.Field(Expression, FieldInfo)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Field(Expression, String)\n- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Field(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Field\n    fullName: System.Linq.Expressions.Expression.Field\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Field(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetActionType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())\n  name.vb: GetActionType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])\n    name: GetActionType\n    fullName: System.Linq.Expressions.Expression.GetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetActionType(System.Type[])\n  nameWithType: Expression.GetActionType(Type[])\n  nameWithType.vb: Expression.GetActionType(Type())\n- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetDelegateType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())\n  name.vb: GetDelegateType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n    name: GetDelegateType\n    fullName: System.Linq.Expressions.Expression.GetDelegateType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])\n  nameWithType: Expression.GetDelegateType(Type[])\n  nameWithType.vb: Expression.GetDelegateType(Type())\n- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GetFuncType(Type[])\n  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())\n  name.vb: GetFuncType(Type())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n    name: GetFuncType\n    fullName: System.Linq.Expressions.Expression.GetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])\n  nameWithType: Expression.GetFuncType(Type[])\n  nameWithType.vb: Expression.GetFuncType(Type())\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Goto(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Goto(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Goto(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Goto(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Goto\n    fullName: System.Linq.Expressions.Expression.Goto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Goto(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThan\n    fullName: System.Linq.Expressions.Expression.GreaterThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: GreaterThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: GreaterThanOrEqual\n    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThen(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThen\n    fullName: System.Linq.Expressions.Expression.IfThen\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThen(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IfThenElse(Expression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: IfThenElse\n    fullName: System.Linq.Expressions.Expression.IfThenElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.IfThenElse(Expression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Increment(Expression)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Increment(Expression)\n- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Increment(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Increment\n    fullName: System.Linq.Expressions.Expression.Increment\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Increment(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Invoke(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Invoke(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Invoke(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Invoke(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Invoke(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: Invoke(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: Invoke\n    fullName: System.Linq.Expressions.Expression.Invoke\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Invoke(Expression, Expression[])\n  nameWithType.vb: Expression.Invoke(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsFalse(Expression)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsFalse(Expression)\n- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsFalse(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsFalse\n    fullName: System.Linq.Expressions.Expression.IsFalse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsFalse(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: IsTrue(Expression)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)\n  nameWithType: Expression.IsTrue(Expression)\n- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: IsTrue(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: IsTrue\n    fullName: System.Linq.Expressions.Expression.IsTrue\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.IsTrue(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Label\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label()\n  fullName: System.Linq.Expressions.Expression.Label()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label\n  nameWithType: Expression.Label()\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Label(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Label(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Label(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Label(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(String)\n  fullName: System.Linq.Expressions.Expression.Label(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.String)\n  nameWithType: Expression.Label(String)\n- uid: System.Linq.Expressions.Expression.Label(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type)\n  nameWithType: Expression.Label(Type)\n- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Label(Type, String)\n  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)\n    name: Label\n    fullName: System.Linq.Expressions.Expression.Label\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Label(System.Type,System.String)\n  nameWithType: Expression.Label(Type, String)\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Type, Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda(Type, Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Type, Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda\n    fullName: System.Linq.Expressions.Expression.Lambda\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Lambda<TDelegate>(Expression, ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())\n  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.Lambda<TDelegate>(Expression, ParameterExpression[])\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda<TDelegate>\n    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: Lambda(Of TDelegate)\n    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShift\n    fullName: System.Linq.Expressions.Expression.LeftShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LeftShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: LeftShiftAssign\n    fullName: System.Linq.Expressions.Expression.LeftShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThan(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThan(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThan(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThan\n    fullName: System.Linq.Expressions.Expression.LessThan\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThan(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: LessThanOrEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: LessThanOrEqual\n    fullName: System.Linq.Expressions.Expression.LessThanOrEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MemberInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MemberInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MemberInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MemberInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MemberInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MemberInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListBind(MethodInfo, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListBind(MethodInfo, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListBind(MethodInfo, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())\n  name.vb: ListBind(MethodInfo, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n    name: ListBind\n    fullName: System.Linq.Expressions.Expression.ListBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListBind(MethodInfo, ElementInit[])\n  nameWithType.vb: Expression.ListBind(MethodInfo, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<ElementInit>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))\n  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<ElementInit>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of ElementInit))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, ElementInit[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())\n  name.vb: ListInit(NewExpression, ElementInit())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ElementInit\n    name: ElementInit\n    fullName: System.Linq.Expressions.ElementInit\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])\n  nameWithType: Expression.ListInit(NewExpression, ElementInit[])\n  nameWithType.vb: Expression.ListInit(NewExpression, ElementInit())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ListInit(NewExpression, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, Expression())\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ListInit(NewExpression, MethodInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())\n  name.vb: ListInit(NewExpression, MethodInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n    name: ListInit\n    fullName: System.Linq.Expressions.Expression.ListInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.ListInit(NewExpression, MethodInfo, Expression[])\n  nameWithType.vb: Expression.ListInit(NewExpression, MethodInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Loop(Expression)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget)\n- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Loop(Expression, LabelTarget, LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n    name: Loop\n    fullName: System.Linq.Expressions.Expression.Loop\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Loop(Expression, LabelTarget, LabelTarget)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MakeBinary(ExpressionType, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MakeBinary\n    fullName: System.Linq.Expressions.Expression.MakeBinary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MakeCatchBlock\n    fullName: System.Linq.Expressions.Expression.MakeCatchBlock\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MakeCatchBlock(Type, ParameterExpression, Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: MakeGoto\n    fullName: System.Linq.Expressions.Expression.MakeGoto\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.GotoExpressionKind\n    name: GotoExpressionKind\n    fullName: System.Linq.Expressions.GotoExpressionKind\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: MakeIndex\n    fullName: System.Linq.Expressions.Expression.MakeIndex\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeMemberAccess(Expression, MemberInfo)\n  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n    name: MakeMemberAccess\n    fullName: System.Linq.Expressions.Expression.MakeMemberAccess\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)\n  nameWithType: Expression.MakeMemberAccess(Expression, MemberInfo)\n- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)\n  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))\n  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n    name: MakeTry\n    fullName: System.Linq.Expressions.Expression.MakeTry\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})\n  nameWithType: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)\n  nameWithType.vb: Expression.MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type)\n- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n    name: MakeUnary\n    fullName: System.Linq.Expressions.Expression.MakeUnary\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionType\n    name: ExpressionType\n    fullName: System.Linq.Expressions.ExpressionType\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)\n  nameWithType: Expression.MakeUnary(ExpressionType, Expression, Type, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MemberInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MemberInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MemberInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MemberInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MemberInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MemberInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberBind(MethodInfo, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberBind(MethodInfo, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberBind(MethodInfo, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberBind(MethodInfo, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n    name: MemberBind\n    fullName: System.Linq.Expressions.Expression.MemberBind\n  - name: (\n    fullName: (\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberBind(MethodInfo, MemberBinding[])\n  nameWithType.vb: Expression.MemberBind(MethodInfo, MemberBinding())\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))\n  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})\n  nameWithType: Expression.MemberInit(NewExpression, IEnumerable<MemberBinding>)\n  nameWithType.vb: Expression.MemberInit(NewExpression, IEnumerable(Of MemberBinding))\n- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MemberInit(NewExpression, MemberBinding[])\n  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])\n  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())\n  name.vb: MemberInit(NewExpression, MemberBinding())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n    name: MemberInit\n    fullName: System.Linq.Expressions.Expression.MemberInit\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.NewExpression\n    name: NewExpression\n    fullName: System.Linq.Expressions.NewExpression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.MemberBinding\n    name: MemberBinding\n    fullName: System.Linq.Expressions.MemberBinding\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])\n  nameWithType: Expression.MemberInit(NewExpression, MemberBinding[])\n  nameWithType.vb: Expression.MemberInit(NewExpression, MemberBinding())\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Modulo(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Modulo(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Modulo(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Modulo\n    fullName: System.Linq.Expressions.Expression.Modulo\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Modulo(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ModuloAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: ModuloAssign\n    fullName: System.Linq.Expressions.Expression.ModuloAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Multiply(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Multiply(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Multiply(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Multiply\n    fullName: System.Linq.Expressions.Expression.Multiply\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Multiply(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssign\n    fullName: System.Linq.Expressions.Expression.MultiplyAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: MultiplyAssignChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: MultiplyChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: MultiplyChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: MultiplyChecked\n    fullName: System.Linq.Expressions.Expression.MultiplyChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.MultiplyChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Negate(Expression)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Negate(Expression)\n- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Negate(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Negate\n    fullName: System.Linq.Expressions.Expression.Negate\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Negate(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NegateChecked(Expression)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)\n  nameWithType: Expression.NegateChecked(Expression)\n- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NegateChecked(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: NegateChecked\n    fullName: System.Linq.Expressions.Expression.NegateChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.NegateChecked(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)\n  nameWithType: Expression.New(ConstructorInfo)\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())\n  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    fullName: System.Reflection.MemberInfo\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])\n  nameWithType: Expression.New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])\n  nameWithType.vb: Expression.New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())\n- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(ConstructorInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())\n  name.vb: New(ConstructorInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.New(ConstructorInfo, Expression[])\n  nameWithType.vb: Expression.New(ConstructorInfo, Expression())\n- uid: System.Linq.Expressions.Expression.New(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: New(Type)\n  fullName: System.Linq.Expressions.Expression.New(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.New(System.Type)\n    name: New\n    fullName: System.Linq.Expressions.Expression.New\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.New(System.Type)\n  nameWithType: Expression.New(Type)\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayBounds(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayBounds(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayBounds(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayBounds(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayBounds\n    fullName: System.Linq.Expressions.Expression.NewArrayBounds\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayBounds(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayBounds(Type, Expression())\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.NewArrayInit(Type, IEnumerable<Expression>)\n  nameWithType.vb: Expression.NewArrayInit(Type, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NewArrayInit(Type, Expression[])\n  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())\n  name.vb: NewArrayInit(Type, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n    name: NewArrayInit\n    fullName: System.Linq.Expressions.Expression.NewArrayInit\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.NewArrayInit(Type, Expression[])\n  nameWithType.vb: Expression.NewArrayInit(Type, Expression())\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Not(Expression)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Not(Expression)\n- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Not(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Not\n    fullName: System.Linq.Expressions.Expression.Not\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Not(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.NotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: NotEqual(Expression, Expression, Boolean, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n    name: NotEqual\n    fullName: System.Linq.Expressions.Expression.NotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)\n  nameWithType: Expression.NotEqual(Expression, Expression, Boolean, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OnesComplement(Expression)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)\n  nameWithType: Expression.OnesComplement(Expression)\n- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OnesComplement(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OnesComplement\n    fullName: System.Linq.Expressions.Expression.OnesComplement\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OnesComplement(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Or(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Or(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Or(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Or\n    fullName: System.Linq.Expressions.Expression.Or\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Or(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: OrAssign\n    fullName: System.Linq.Expressions.Expression.OrAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.OrAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: OrElse(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.OrElse(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: OrElse(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: OrElse\n    fullName: System.Linq.Expressions.Expression.OrElse\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.OrElse(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type)\n  nameWithType: Expression.Parameter(Type)\n- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Parameter(Type, String)\n  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n    name: Parameter\n    fullName: System.Linq.Expressions.Expression.Parameter\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)\n  nameWithType: Expression.Parameter(Type, String)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PostDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PostIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PostIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PostIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PostIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PostIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PostIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Power(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Power(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Power(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Power\n    fullName: System.Linq.Expressions.Expression.Power\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Power(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PowerAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.PowerAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: PowerAssign\n    fullName: System.Linq.Expressions.Expression.PowerAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreDecrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreDecrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreDecrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreDecrementAssign\n    fullName: System.Linq.Expressions.Expression.PreDecrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreDecrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: PreIncrementAssign(Expression)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)\n  nameWithType: Expression.PreIncrementAssign(Expression)\n- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PreIncrementAssign(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: PreIncrementAssign\n    fullName: System.Linq.Expressions.Expression.PreIncrementAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.PreIncrementAssign(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Property(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)\n  nameWithType: Expression.Property(Expression, PropertyInfo)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.Property(Expression, PropertyInfo, IEnumerable<Expression>)\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, PropertyInfo, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, PropertyInfo, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, PropertyInfo, Expression[])\n  nameWithType.vb: Expression.Property(Expression, PropertyInfo, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.Property(Expression, String)\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, String, Expression[])\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())\n  name.vb: Property(Expression, String, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.Property(Expression, String, Expression[])\n  nameWithType.vb: Expression.Property(Expression, String, Expression())\n- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Property(Expression, Type, String)\n  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n    name: Property\n    fullName: System.Linq.Expressions.Expression.Property\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)\n  nameWithType: Expression.Property(Expression, Type, String)\n- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: PropertyOrField(Expression, String)\n  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n    name: PropertyOrField\n    fullName: System.Linq.Expressions.Expression.PropertyOrField\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)\n  nameWithType: Expression.PropertyOrField(Expression, String)\n- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Quote(Expression)\n  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n    name: Quote\n    fullName: System.Linq.Expressions.Expression.Quote\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Quote(Expression)\n- uid: System.Linq.Expressions.Expression.Reduce\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Reduce()\n  fullName: System.Linq.Expressions.Expression.Reduce()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Reduce\n    name: Reduce\n    fullName: System.Linq.Expressions.Expression.Reduce\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Reduce\n  nameWithType: Expression.Reduce()\n- uid: System.Linq.Expressions.Expression.ReduceAndCheck\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceAndCheck()\n  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceAndCheck\n    name: ReduceAndCheck\n    fullName: System.Linq.Expressions.Expression.ReduceAndCheck\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceAndCheck\n  nameWithType: Expression.ReduceAndCheck()\n- uid: System.Linq.Expressions.Expression.ReduceExtensions\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReduceExtensions()\n  fullName: System.Linq.Expressions.Expression.ReduceExtensions()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReduceExtensions\n    name: ReduceExtensions\n    fullName: System.Linq.Expressions.Expression.ReduceExtensions\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReduceExtensions\n  nameWithType: Expression.ReduceExtensions()\n- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ReferenceNotEqual(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: ReferenceNotEqual\n    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.ReferenceNotEqual(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Rethrow\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Rethrow()\n  fullName: System.Linq.Expressions.Expression.Rethrow()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow\n  nameWithType: Expression.Rethrow()\n- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Rethrow(Type)\n  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)\n    name: Rethrow\n    fullName: System.Linq.Expressions.Expression.Rethrow\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Rethrow(System.Type)\n  nameWithType: Expression.Rethrow(Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)\n  nameWithType: Expression.Return(LabelTarget)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Return(LabelTarget, Expression)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Return(LabelTarget, Expression)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Expression, Type)\n- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Return(LabelTarget, Type)\n  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n    name: Return\n    fullName: System.Linq.Expressions.Expression.Return\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.LabelTarget\n    name: LabelTarget\n    fullName: System.Linq.Expressions.LabelTarget\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)\n  nameWithType: Expression.Return(LabelTarget, Type)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShift(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShift(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShift(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShift\n    fullName: System.Linq.Expressions.Expression.RightShift\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShift(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RightShiftAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: RightShiftAssign\n    fullName: System.Linq.Expressions.Expression.RightShiftAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: RuntimeVariables(IEnumerable<ParameterExpression>)\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))\n  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})\n  nameWithType: Expression.RuntimeVariables(IEnumerable<ParameterExpression>)\n  nameWithType.vb: Expression.RuntimeVariables(IEnumerable(Of ParameterExpression))\n- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: RuntimeVariables(ParameterExpression[])\n  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())\n  name.vb: RuntimeVariables(ParameterExpression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n    name: RuntimeVariables\n    fullName: System.Linq.Expressions.Expression.RuntimeVariables\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ParameterExpression\n    name: ParameterExpression\n    fullName: System.Linq.Expressions.ParameterExpression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])\n  nameWithType: Expression.RuntimeVariables(ParameterExpression[])\n  nameWithType.vb: Expression.RuntimeVariables(ParameterExpression())\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Subtract(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.Subtract(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Subtract(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: Subtract\n    fullName: System.Linq.Expressions.Expression.Subtract\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.Subtract(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssign(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssign\n    fullName: System.Linq.Expressions.Expression.SubtractAssign\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractAssignChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n    name: SubtractAssignChecked\n    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.LambdaExpression\n    name: LambdaExpression\n    fullName: System.Linq.Expressions.LambdaExpression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)\n  nameWithType: Expression.SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SubtractChecked(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.SubtractChecked(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SubtractChecked(Expression, Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: SubtractChecked\n    fullName: System.Linq.Expressions.Expression.SubtractChecked\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.SubtractChecked(Expression, Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Switch(Expression, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Expression, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Expression, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Expression, SwitchCase())\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))\n- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])\n  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())\n  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n    name: Switch\n    fullName: System.Linq.Expressions.Expression.Switch\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.SwitchCase\n    name: SwitchCase\n    fullName: System.Linq.Expressions.SwitchCase\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])\n  nameWithType: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])\n  nameWithType.vb: Expression.Switch(Type, Expression, Expression, MethodInfo, SwitchCase())\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SwitchCase(Expression, IEnumerable<Expression>)\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))\n  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})\n  nameWithType: Expression.SwitchCase(Expression, IEnumerable<Expression>)\n  nameWithType.vb: Expression.SwitchCase(Expression, IEnumerable(Of Expression))\n- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: SwitchCase(Expression, Expression[])\n  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])\n  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())\n  name.vb: SwitchCase(Expression, Expression())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n    name: SwitchCase\n    fullName: System.Linq.Expressions.Expression.SwitchCase\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])\n  nameWithType: Expression.SwitchCase(Expression, Expression[])\n  nameWithType.vb: Expression.SwitchCase(Expression, Expression())\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String)\n  nameWithType: Expression.SymbolDocument(String)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: SymbolDocument(String, Guid, Guid, Guid)\n  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n    name: SymbolDocument\n    fullName: System.Linq.Expressions.Expression.SymbolDocument\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Guid\n    name: Guid\n    fullName: System.Guid\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)\n  nameWithType: Expression.SymbolDocument(String, Guid, Guid, Guid)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Throw(Expression)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)\n  nameWithType: Expression.Throw(Expression)\n- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Throw(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n    name: Throw\n    fullName: System.Linq.Expressions.Expression.Throw\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Throw(Expression, Type)\n- uid: System.Linq.Expressions.Expression.ToString\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: ToString()\n  fullName: System.Linq.Expressions.Expression.ToString()\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.ToString\n    name: ToString\n    fullName: System.Linq.Expressions.Expression.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.ToString\n  nameWithType: Expression.ToString()\n- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatch(Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatch(Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatch\n    fullName: System.Linq.Expressions.Expression.TryCatch\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatch(Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatch(Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryCatchFinally(Expression, Expression, CatchBlock[])\n  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])\n  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())\n  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n    name: TryCatchFinally\n    fullName: System.Linq.Expressions.Expression.TryCatchFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.CatchBlock\n    name: CatchBlock\n    fullName: System.Linq.Expressions.CatchBlock\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])\n  nameWithType: Expression.TryCatchFinally(Expression, Expression, CatchBlock[])\n  nameWithType.vb: Expression.TryCatchFinally(Expression, Expression, CatchBlock())\n- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFault(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFault\n    fullName: System.Linq.Expressions.Expression.TryFault\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFault(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: TryFinally(Expression, Expression)\n  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n    name: TryFinally\n    fullName: System.Linq.Expressions.Expression.TryFinally\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  nameWithType: Expression.TryFinally(Expression, Expression)\n- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetActionType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)\n  name.vb: TryGetActionType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n    name: TryGetActionType\n    fullName: System.Linq.Expressions.Expression.TryGetActionType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetActionType(Type[], Type)\n  nameWithType.vb: Expression.TryGetActionType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TryGetFuncType(Type[], Type)\n  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)\n  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)\n  name.vb: TryGetFuncType(Type(), Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n    name: TryGetFuncType\n    fullName: System.Linq.Expressions.Expression.TryGetFuncType\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)\n  nameWithType: Expression.TryGetFuncType(Type[], Type)\n  nameWithType.vb: Expression.TryGetFuncType(Type(), Type)\n- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeAs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeAs\n    fullName: System.Linq.Expressions.Expression.TypeAs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeAs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeEqual(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n    name: TypeEqual\n    fullName: System.Linq.Expressions.Expression.TypeEqual\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeEqual(Expression, Type)\n- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: TypeIs(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n    name: TypeIs\n    fullName: System.Linq.Expressions.Expression.TypeIs\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.TypeIs(Expression, Type)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: UnaryPlus(Expression)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)\n  nameWithType: Expression.UnaryPlus(Expression)\n- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: UnaryPlus(Expression, MethodInfo)\n  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n    name: UnaryPlus\n    fullName: System.Linq.Expressions.Expression.UnaryPlus\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    fullName: System.Reflection.MethodInfo\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)\n  nameWithType: Expression.UnaryPlus(Expression, MethodInfo)\n- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Unbox(Expression, Type)\n  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n    name: Unbox\n    fullName: System.Linq.Expressions.Expression.Unbox\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: ', '\n    fullName: ', '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)\n  nameWithType: Expression.Unbox(Expression, Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type)\n  nameWithType: Expression.Variable(Type)\n- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  parent: System.Linq.Expressions.Expression\n  isExternal: true\n  name: Variable(Type, String)\n  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n    name: Variable\n    fullName: System.Linq.Expressions.Expression.Variable\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)\n  nameWithType: Expression.Variable(Type, String)\n- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: VisitChildren(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n    name: VisitChildren\n    fullName: System.Linq.Expressions.Expression.VisitChildren\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.VisitChildren(ExpressionVisitor)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)\n  name.vb: ReadOnlyCollection(Of Expression)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  nameWithType: ReadOnlyCollection<Expression>\n  nameWithType.vb: ReadOnlyCollection(Of Expression)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n  commentId: T:System.Reflection.PropertyInfo\n  nameWithType: PropertyInfo\n- uid: System.Reflection\n  isExternal: false\n  name: System.Reflection\n  fullName: System.Reflection\n  commentId: N:System.Reflection\n  nameWithType: System.Reflection\n- uid: System.Linq.Expressions.Expression.NodeType\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: NodeType\n  fullName: System.Linq.Expressions.Expression.NodeType\n  commentId: P:System.Linq.Expressions.Expression.NodeType\n  nameWithType: Expression.NodeType\n- uid: System.Linq.Expressions.ExpressionType\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionType\n  fullName: System.Linq.Expressions.ExpressionType\n  commentId: T:System.Linq.Expressions.ExpressionType\n  nameWithType: ExpressionType\n- uid: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  parent: System.Linq.Expressions.IArgumentProvider\n  isExternal: false\n  name: ArgumentCount\n  fullName: System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  commentId: P:System.Linq.Expressions.IArgumentProvider.ArgumentCount\n  nameWithType: IArgumentProvider.ArgumentCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Linq.Expressions.Expression.Type\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Type\n  fullName: System.Linq.Expressions.Expression.Type\n  commentId: P:System.Linq.Expressions.Expression.Type\n  nameWithType: Expression.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  parent: System.Linq.Expressions.Expression\n  isExternal: false\n  name: Accept(ExpressionVisitor)\n  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n    name: Accept\n    fullName: System.Linq.Expressions.Expression.Accept\n  - name: (\n    fullName: (\n  - uid: System.Linq.Expressions.ExpressionVisitor\n    name: ExpressionVisitor\n    fullName: System.Linq.Expressions.ExpressionVisitor\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)\n  nameWithType: Expression.Accept(ExpressionVisitor)\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  commentId: T:System.Linq.Expressions.ExpressionVisitor\n  nameWithType: ExpressionVisitor\n- uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n  parent: System.Linq.Expressions.IArgumentProvider\n  isExternal: true\n  name: GetArgument(Int32)\n  fullName: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n  spec.csharp:\n  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n    name: GetArgument\n    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n    name: GetArgument\n    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)\n  nameWithType: IArgumentProvider.GetArgument(Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Expression>\n  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)\n  name.vb: IEnumerable(Of Expression)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}\n  nameWithType: IEnumerable<Expression>\n  nameWithType.vb: IEnumerable(Of Expression)\n- uid: System.Linq.Expressions.IndexExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IndexExpression\n  fullName: System.Linq.Expressions.IndexExpression\n  commentId: T:System.Linq.Expressions.IndexExpression\n  nameWithType: IndexExpression\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n"}