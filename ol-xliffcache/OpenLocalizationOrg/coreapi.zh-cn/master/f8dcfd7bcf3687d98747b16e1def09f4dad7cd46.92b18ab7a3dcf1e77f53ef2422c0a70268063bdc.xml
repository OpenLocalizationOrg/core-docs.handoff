{"nodes":[{"pos":[6523,6533],"content":"SqlDecimal","needQuote":true,"nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[8161,8173],"content":"MaxPrecision","needQuote":true,"nodes":[{"content":"MaxPrecision","pos":[0,12]}]},{"pos":[9299,9307],"content":"MaxScale","needQuote":true,"nodes":[{"content":"MaxScale","pos":[0,8]}]},{"pos":[10400,10408],"content":"MaxValue","needQuote":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[11527,11535],"content":"MinValue","needQuote":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[14058,14117],"content":"SqlDecimal(Byte, Byte, Boolean, Int32, Int32, Int32, Int32)","needQuote":true,"nodes":[{"content":"SqlDecimal(Byte, Byte, Boolean, Int32, Int32, Int32, Int32)","pos":[0,59]}]},{"pos":[17936,17976],"content":"SqlDecimal(Byte, Byte, Boolean, Int32[])","needQuote":true,"nodes":[{"content":"SqlDecimal(Byte, Byte, Boolean, Int32[])","pos":[0,40]}]},{"pos":[20697,20716],"content":"SqlDecimal(Decimal)","needQuote":true,"nodes":[{"content":"SqlDecimal(Decimal)","pos":[0,19]}]},{"pos":[22162,22180],"content":"SqlDecimal(Double)","needQuote":true,"nodes":[{"content":"SqlDecimal(Double)","pos":[0,18]}]},{"pos":[23493,23510],"content":"SqlDecimal(Int32)","needQuote":true,"nodes":[{"content":"SqlDecimal(Int32)","pos":[0,17]}]},{"pos":[24844,24861],"content":"SqlDecimal(Int64)","needQuote":true,"nodes":[{"content":"SqlDecimal(Int64)","pos":[0,17]}]},{"pos":[26165,26172],"content":"BinData","needQuote":true,"nodes":[{"content":"BinData","pos":[0,7]}]},{"pos":[27470,27474],"content":"Data","needQuote":true,"nodes":[{"content":"Data","pos":[0,4]}]},{"pos":[28753,28759],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[30088,30098],"content":"IsPositive","needQuote":true,"nodes":[{"content":"IsPositive","pos":[0,10]}]},{"pos":[31512,31521],"content":"Precision","needQuote":true,"nodes":[{"content":"Precision","pos":[0,9]}]},{"pos":[32824,32829],"content":"Scale","needQuote":true,"nodes":[{"content":"Scale","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of decimal places to which the &lt;strong&gt;Value&lt;/strong&gt; property is resolved.&lt;/p&gt;\\n","pos":[33606,33703],"source":"\\n<p>The number of decimal places to which the <strong>Value</strong> property is resolved.</p>\\n"},{"pos":[34004,34009],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.&lt;/p&gt;\\n","pos":[34794,34922],"source":"\\n<p>A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.</p>\\n"},{"pos":[35316,35331],"content":"Abs(SqlDecimal)","needQuote":true,"nodes":[{"content":"Abs(SqlDecimal)","pos":[0,15]}]},{"pos":[37276,37303],"content":"Add(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Add(SqlDecimal, SqlDecimal)","pos":[0,27]}]},{"pos":[39365,39404],"content":"AdjustScale(SqlDecimal, Int32, Boolean)","needQuote":true,"nodes":[{"content":"AdjustScale(SqlDecimal, Int32, Boolean)","pos":[0,39]}]},{"content":"\\n&lt;p&gt;The number of digits in the adjusted structure.","pos":[40753,40805],"source":"\\n<p>The number of digits in the adjusted structure."},{"content":"&lt;/p&gt;\\n","pos":[40806,40812],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;If this parameter is &lt;strong&gt;true&lt;/strong&gt;, the new Value will be rounded, if &lt;strong&gt;false&lt;/strong&gt;, the value will be truncated.","pos":[40878,41013],"source":"\\n<p>If this parameter is <strong>true</strong>, the new Value will be rounded, if <strong>false</strong>, the value will be truncated."},{"content":"&lt;/p&gt;\\n","pos":[41014,41020],"source":" </p>\\n"},{"pos":[41800,41819],"content":"Ceiling(SqlDecimal)","needQuote":true,"nodes":[{"content":"Ceiling(SqlDecimal)","pos":[0,19]}]},{"pos":[43670,43691],"content":"CompareTo(SqlDecimal)","needQuote":true,"nodes":[{"content":"CompareTo(SqlDecimal)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;A signed number that indicates the relative values of the instance and the object.&lt;/p&gt;\\n&lt;p&gt;Return value &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than the object.","pos":[44870,45104],"source":"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is the same as the object.","pos":[45105,45199],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than the object &lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The object is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) &lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[45200,45439],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\\n</td></tr></tbody></table>\\n"},{"pos":[45792,45809],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;A signed number that indicates the relative values of the instance and the object.&lt;/p&gt;\\n&lt;p&gt;Return Value &lt;/p&gt;\\n&lt;p&gt;Condition &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is less than the object.","pos":[46901,47135],"source":"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is the same as the object.","pos":[47136,47230],"source":" </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance is greater than the object &lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The object is a null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic) &lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[47231,47470],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\\n</td></tr></tbody></table>\\n"},{"pos":[48040,48084],"content":"ConvertToPrecScale(SqlDecimal, Int32, Int32)","needQuote":true,"nodes":[{"content":"ConvertToPrecScale(SqlDecimal, Int32, Int32)","pos":[0,44]}]},{"pos":[50479,50509],"content":"Divide(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Divide(SqlDecimal, SqlDecimal)","pos":[0,30]}]},{"pos":[52652,52682],"content":"Equals(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Equals(SqlDecimal, SqlDecimal)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the two values are equal.","pos":[54028,54085],"source":"\\n<p>\\n<strong>true</strong> if the two values are equal."},{"content":"Otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[54086,54120],"source":" Otherwise, <strong>false</strong>."},{"content":"If either instance is null, the value of the &lt;strong&gt;SqlDecimal&lt;/strong&gt; will be null.&lt;/p&gt;\\n","pos":[54121,54213],"source":" If either instance is null, the value of the <strong>SqlDecimal</strong> will be null.</p>\\n"},{"pos":[54588,54602],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[56455,56472],"content":"Floor(SqlDecimal)","needQuote":true,"nodes":[{"content":"Floor(SqlDecimal)","pos":[0,17]}]},{"pos":[58168,58181],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\\n","pos":[58857,58902],"source":"\\n<p>A 32-bit signed integer hash code.</p>\\n"},{"pos":[59473,59508],"content":"GreaterThan(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlDecimal, SqlDecimal)","pos":[0,35]}]},{"pos":[62265,62307],"content":"GreaterThanOrEqual(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlDecimal, SqlDecimal)","pos":[0,42]}]},{"pos":[65100,65132],"content":"LessThan(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"LessThan(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[67862,67901],"content":"LessThanOrEqual(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlDecimal, SqlDecimal)","pos":[0,39]}]},{"pos":[70673,70705],"content":"Multiply(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Multiply(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[72855,72888],"content":"NotEquals(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"NotEquals(SqlDecimal, SqlDecimal)","pos":[0,33]}]},{"pos":[75602,75634],"content":"Addition(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Addition(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[77733,77765],"content":"Division(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Division(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[79933,79965],"content":"Equality(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Equality(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[82669,82703],"content":"Explicit(SqlBoolean to SqlDecimal)","needQuote":true,"nodes":[{"content":"Explicit(SqlBoolean to SqlDecimal)","pos":[0,34]}]},{"pos":[85095,85126],"content":"Explicit(SqlDecimal to Decimal)","needQuote":true,"nodes":[{"content":"Explicit(SqlDecimal to Decimal)","pos":[0,31]}]},{"pos":[87307,87340],"content":"Explicit(SqlDouble to SqlDecimal)","needQuote":true,"nodes":[{"content":"Explicit(SqlDouble to SqlDecimal)","pos":[0,33]}]},{"pos":[89759,89792],"content":"Explicit(SqlSingle to SqlDecimal)","needQuote":true,"nodes":[{"content":"Explicit(SqlSingle to SqlDecimal)","pos":[0,33]}]},{"pos":[92220,92253],"content":"Explicit(SqlString to SqlDecimal)","needQuote":true,"nodes":[{"content":"Explicit(SqlString to SqlDecimal)","pos":[0,33]}]},{"pos":[94539,94569],"content":"Explicit(Double to SqlDecimal)","needQuote":true,"nodes":[{"content":"Explicit(Double to SqlDecimal)","pos":[0,30]}]},{"pos":[96690,96725],"content":"GreaterThan(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"GreaterThan(SqlDecimal, SqlDecimal)","pos":[0,35]}]},{"pos":[99483,99525],"content":"GreaterThanOrEqual(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"GreaterThanOrEqual(SqlDecimal, SqlDecimal)","pos":[0,42]}]},{"pos":[102300,102331],"content":"Implicit(SqlByte to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(SqlByte to SqlDecimal)","pos":[0,31]}]},{"pos":[104737,104769],"content":"Implicit(SqlInt16 to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(SqlInt16 to SqlDecimal)","pos":[0,32]}]},{"pos":[107186,107218],"content":"Implicit(SqlInt32 to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(SqlInt32 to SqlDecimal)","pos":[0,32]}]},{"pos":[109643,109675],"content":"Implicit(SqlInt64 to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(SqlInt64 to SqlDecimal)","pos":[0,32]}]},{"pos":[111994,112026],"content":"Implicit(SqlMoney to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(SqlMoney to SqlDecimal)","pos":[0,32]}]},{"pos":[114370,114401],"content":"Implicit(Decimal to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(Decimal to SqlDecimal)","pos":[0,31]}]},{"pos":[116507,116536],"content":"Implicit(Int64 to SqlDecimal)","needQuote":true,"nodes":[{"content":"Implicit(Int64 to SqlDecimal)","pos":[0,29]}]},{"pos":[118747,118781],"content":"Inequality(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Inequality(SqlDecimal, SqlDecimal)","pos":[0,34]}]},{"pos":[121498,121530],"content":"LessThan(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"LessThan(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[124269,124308],"content":"LessThanOrEqual(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"LessThanOrEqual(SqlDecimal, SqlDecimal)","pos":[0,39]}]},{"pos":[127077,127109],"content":"Multiply(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Multiply(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[129274,129309],"content":"Subtraction(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Subtraction(SqlDecimal, SqlDecimal)","pos":[0,35]}]},{"pos":[131299,131324],"content":"UnaryNegation(SqlDecimal)","needQuote":true,"nodes":[{"content":"UnaryNegation(SqlDecimal)","pos":[0,25]}]},{"pos":[132942,132955],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The &lt;strong&gt;String&lt;/strong&gt; to be parsed.","pos":[133847,133893],"source":"\\n<p>The <strong>String</strong> to be parsed."},{"content":"&lt;/p&gt;\\n","pos":[133894,133900],"source":" </p>\\n"},{"pos":[134667,134692],"content":"Power(SqlDecimal, Double)","needQuote":true,"nodes":[{"content":"Power(SqlDecimal, Double)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;A double value that indicates the power to which the number should be raised.","pos":[135821,135903],"source":"\\n<p>A double value that indicates the power to which the number should be raised."},{"content":"&lt;/p&gt;\\n","pos":[135904,135910],"source":" </p>\\n"},{"pos":[136589,136613],"content":"Round(SqlDecimal, Int32)","needQuote":true,"nodes":[{"content":"Round(SqlDecimal, Int32)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The number of significant fractional digits (precision) in the return value.","pos":[137749,137830],"source":"\\n<p>The number of significant fractional digits (precision) in the return value."},{"content":"&lt;/p&gt;\\n","pos":[137831,137837],"source":" </p>\\n"},{"pos":[138499,138515],"content":"Sign(SqlDecimal)","needQuote":true,"nodes":[{"content":"Sign(SqlDecimal)","pos":[0,16]}]},{"pos":[140366,140398],"content":"Subtract(SqlDecimal, SqlDecimal)","needQuote":true,"nodes":[{"content":"Subtract(SqlDecimal, SqlDecimal)","pos":[0,32]}]},{"pos":[142256,142266],"content":"ToDouble()","needQuote":true,"nodes":[{"content":"ToDouble()","pos":[0,10]}]},{"pos":[143506,143520],"content":"ToSqlBoolean()","needQuote":true,"nodes":[{"content":"ToSqlBoolean()","pos":[0,14]}]},{"pos":[144882,144893],"content":"ToSqlByte()","needQuote":true,"nodes":[{"content":"ToSqlByte()","pos":[0,11]}]},{"pos":[146751,146764],"content":"ToSqlDouble()","needQuote":true,"nodes":[{"content":"ToSqlDouble()","pos":[0,13]}]},{"pos":[148166,148178],"content":"ToSqlInt16()","needQuote":true,"nodes":[{"content":"ToSqlInt16()","pos":[0,12]}]},{"pos":[149570,149582],"content":"ToSqlInt32()","needQuote":true,"nodes":[{"content":"ToSqlInt32()","pos":[0,12]}]},{"pos":[150974,150986],"content":"ToSqlInt64()","needQuote":true,"nodes":[{"content":"ToSqlInt64()","pos":[0,12]}]},{"pos":[152378,152390],"content":"ToSqlMoney()","needQuote":true,"nodes":[{"content":"ToSqlMoney()","pos":[0,12]}]},{"pos":[153785,153798],"content":"ToSqlSingle()","needQuote":true,"nodes":[{"content":"ToSqlSingle()","pos":[0,13]}]},{"pos":[155203,155216],"content":"ToSqlString()","needQuote":true,"nodes":[{"content":"ToSqlString()","pos":[0,13]}]},{"pos":[156647,156657],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[158331,158358],"content":"Truncate(SqlDecimal, Int32)","needQuote":true,"nodes":[{"content":"Truncate(SqlDecimal, Int32)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The decimal position to which the number will be truncated.","pos":[159495,159559],"source":"\\n<p>The decimal position to which the number will be truncated."},{"content":"&lt;/p&gt;\\n","pos":[159560,159566],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;Supply a negative value for the &lt;em&gt;position&lt;/em&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.&lt;/p&gt;\\n","pos":[159644,159809],"source":"\\n<p>Supply a negative value for the <em>position</em> parameter in order to truncate the value to the corresponding position to the left of the decimal point.</p>\\n"},{"pos":[160014,160034],"content":"System.Data.SqlTypes","needQuote":true,"nodes":[{"content":"System.Data.SqlTypes","pos":[0,20]}]},{"pos":[160238,160247],"content":"INullable","needQuote":true,"nodes":[{"content":"INullable","pos":[0,9]}]},{"pos":[160434,160445],"content":"IComparable","needQuote":true,"nodes":[{"content":"IComparable","pos":[0,11]}]},{"pos":[160647,160669],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[160817,160823],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[160890,160891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[160941,160947],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[161008,161009]},{"pos":[161064,161070],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161130,161131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161228,161234],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[161301,161302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161352,161358],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[161419,161420]},{"pos":[161475,161481],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161541,161542],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[161787,161818],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[161984,161999],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[162075,162076],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162126,162132],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[162193,162194]},{"pos":[162249,162255],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[162315,162316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162422,162437],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[162513,162514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162564,162570],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[162631,162632]},{"pos":[162687,162693],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[162753,162754],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162980,162989],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[163082,163089],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[163157,163158],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163185,163186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163255,163262],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[163330,163331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[163358,163359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163488,163494],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[163625,163631],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[163774,163778],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[163949,163959],"content":"SqlDecimal","needQuote":true,"nodes":[{"content":"SqlDecimal","pos":[0,10]}]},{"pos":[164145,164152],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[164299,164304],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[164410,164417],"content":"Int32[]","needQuote":true,"nodes":[{"content":"Int32[]","pos":[0,7]}]},{"pos":[164541,164546],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":"[]","pos":[164606,164608]},{"pos":[164672,164677],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[164736,164738],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[164874,164881],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[165029,165035],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[165179,165184],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[165289,165295],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[165415,165419],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[165478,165480]},{"pos":[165543,165547],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[165605,165607],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[165788,165794],"content":"IsNull","needQuote":true,"nodes":[{"content":"IsNull","pos":[0,6]}]},{"pos":[166038,166055],"content":"CompareTo(Object)","needQuote":true,"nodes":[{"content":"CompareTo(Object)","pos":[0,17]}]},{"pos":[166190,166199],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[166253,166254],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166304,166310],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[166370,166371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166462,166471],"content":"CompareTo","needQuote":true,"nodes":[{"content":"CompareTo","pos":[0,9]}]},{"pos":[166525,166526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[166576,166582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[166642,166643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166863,166873],"content":"SqlBoolean","needQuote":true,"nodes":[{"content":"SqlBoolean","pos":[0,10]}]},{"pos":[167092,167106],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[167231,167237],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[167286,167287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167337,167343],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[167403,167404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167490,167496],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[167545,167546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[167596,167602],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[167662,167663],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167844,167853],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[168032,168045],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[168152,168163],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[168217,168218],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168245,168246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168322,168333],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[168387,168388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168415,168416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168614,168623],"content":"SqlDouble","needQuote":true,"nodes":[{"content":"SqlDouble","pos":[0,9]}]},{"pos":[168836,168845],"content":"SqlSingle","needQuote":true,"nodes":[{"content":"SqlSingle","pos":[0,9]}]},{"pos":[169058,169067],"content":"SqlString","needQuote":true,"nodes":[{"content":"SqlString","pos":[0,9]}]},{"pos":[169278,169285],"content":"SqlByte","needQuote":true,"nodes":[{"content":"SqlByte","pos":[0,7]}]},{"pos":[169491,169499],"content":"SqlInt16","needQuote":true,"nodes":[{"content":"SqlInt16","pos":[0,8]}]},{"pos":[169708,169716],"content":"SqlInt32","needQuote":true,"nodes":[{"content":"SqlInt32","pos":[0,8]}]},{"pos":[169925,169933],"content":"SqlInt64","needQuote":true,"nodes":[{"content":"SqlInt64","pos":[0,8]}]},{"pos":[170142,170150],"content":"SqlMoney","needQuote":true,"nodes":[{"content":"SqlMoney","pos":[0,8]}]},{"pos":[170329,170335],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[170502,170512],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[170613,170621],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[170672,170673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170700,170701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170774,170782],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[170833,170834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[170861,170862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Data.SqlTypes.SqlDecimal\n  commentId: T:System.Data.SqlTypes.SqlDecimal\n  id: SqlDecimal\n  parent: System.Data.SqlTypes\n  children:\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)\n  - System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)\n  - System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)\n  - System.Data.SqlTypes.SqlDecimal.BinData\n  - System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)\n  - System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)\n  - System.Data.SqlTypes.SqlDecimal.Data\n  - System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Equals(System.Object)\n  - System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.GetHashCode\n  - System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.IsNull\n  - System.Data.SqlTypes.SqlDecimal.IsPositive\n  - System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.MaxPrecision\n  - System.Data.SqlTypes.SqlDecimal.MaxScale\n  - System.Data.SqlTypes.SqlDecimal.MaxValue\n  - System.Data.SqlTypes.SqlDecimal.MinValue\n  - System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Null\n  - System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal\n  - System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Parse(System.String)\n  - System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)\n  - System.Data.SqlTypes.SqlDecimal.Precision\n  - System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  - System.Data.SqlTypes.SqlDecimal.Scale\n  - System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  - System.Data.SqlTypes.SqlDecimal.ToDouble\n  - System.Data.SqlTypes.SqlDecimal.ToSqlBoolean\n  - System.Data.SqlTypes.SqlDecimal.ToSqlByte\n  - System.Data.SqlTypes.SqlDecimal.ToSqlDouble\n  - System.Data.SqlTypes.SqlDecimal.ToSqlInt16\n  - System.Data.SqlTypes.SqlDecimal.ToSqlInt32\n  - System.Data.SqlTypes.SqlDecimal.ToSqlInt64\n  - System.Data.SqlTypes.SqlDecimal.ToSqlMoney\n  - System.Data.SqlTypes.SqlDecimal.ToSqlSingle\n  - System.Data.SqlTypes.SqlDecimal.ToSqlString\n  - System.Data.SqlTypes.SqlDecimal.ToString\n  - System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  - System.Data.SqlTypes.SqlDecimal.Value\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n  type: Struct\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SqlDecimal\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 22\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale. </p>\\n\"\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct SqlDecimal : INullable, IComparable\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure SqlDecimal\n          Implements INullable, IComparable\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.IComparable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: SqlDecimal\n- uid: System.Data.SqlTypes.SqlDecimal.MaxPrecision\n  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxPrecision\n  id: MaxPrecision\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: MaxPrecision\n  fullName: System.Data.SqlTypes.SqlDecimal.MaxPrecision\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxPrecision\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 45\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant representing the largest possible value for the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Precision\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public static readonly byte MaxPrecision\n    content.vb: Public Shared ReadOnly MaxPrecision As Byte\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDecimal.MaxPrecision\n- uid: System.Data.SqlTypes.SqlDecimal.MaxScale\n  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxScale\n  id: MaxScale\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: MaxScale\n  fullName: System.Data.SqlTypes.SqlDecimal.MaxScale\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxScale\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 49\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant representing the maximum value for the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Scale\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public static readonly byte MaxScale\n    content.vb: Public Shared ReadOnly MaxScale As Byte\n    return:\n      type: System.Byte\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDecimal.MaxScale\n- uid: System.Data.SqlTypes.SqlDecimal.MaxValue\n  commentId: F:System.Data.SqlTypes.SqlDecimal.MaxValue\n  id: MaxValue\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: MaxValue\n  fullName: System.Data.SqlTypes.SqlDecimal.MaxValue\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3495\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant representing the maximum value of a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDecimal MaxValue\n    content.vb: Public Shared ReadOnly MaxValue As SqlDecimal\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDecimal.MaxValue\n- uid: System.Data.SqlTypes.SqlDecimal.MinValue\n  commentId: F:System.Data.SqlTypes.SqlDecimal.MinValue\n  id: MinValue\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: MinValue\n  fullName: System.Data.SqlTypes.SqlDecimal.MinValue\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MinValue\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3491\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>A constant representing the minimum value for a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDecimal MinValue\n    content.vb: Public Shared ReadOnly MinValue As SqlDecimal\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDecimal.MinValue\n- uid: System.Data.SqlTypes.SqlDecimal.Null\n  commentId: F:System.Data.SqlTypes.SqlDecimal.Null\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  fullName: System.Data.SqlTypes.SqlDecimal.Null\n  type: Field\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3486\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Represents a <xref href=\\\"System.DBNull\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that can be assigned to this instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>class.</p>\\n\"\n  syntax:\n    content: public static readonly SqlDecimal Null\n    content.vb: Public Shared ReadOnly Null As SqlDecimal\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n  modifiers.csharp:\n  - public\n  - static\n  - readonly\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SqlDecimal.Null\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Byte, Byte, Boolean, Int32, Int32, Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32, System.Int32, System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 638\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(byte bPrecision, byte bScale, bool fPositive, int data1, int data2, int data3, int data4)\n    content.vb: Public Sub New(bPrecision As Byte, bScale As Byte, fPositive As Boolean, data1 As Integer, data2 As Integer, data3 As Integer, data4 As Integer)\n    parameters:\n    - id: bPrecision\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits that can be used to represent the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: bScale\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property will be resolved for the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: fPositive\n      type: System.Boolean\n      description: \"\\n<p>A Boolean value that indicates whether the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure represents a positive or negative number. </p>\\n\"\n    - id: data1\n      type: System.Int32\n      description: \"\\n<p>An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures value. </p>\\n\"\n    - id: data2\n      type: System.Int32\n      description: \"\\n<p>An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures value. </p>\\n\"\n    - id: data3\n      type: System.Int32\n      description: \"\\n<p>An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures value. </p>\\n\"\n    - id: data4\n      type: System.Int32\n      description: \"\\n<p>An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures value. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.SqlDecimal(Byte, Byte, Boolean, Int32, Int32, Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])\n  id: '#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Byte, Byte, Boolean, Int32[])\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 594\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied parameters.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(byte bPrecision, byte bScale, bool fPositive, int[] bits)\n    content.vb: Public Sub New(bPrecision As Byte, bScale As Byte, fPositive As Boolean, bits As Integer())\n    parameters:\n    - id: bPrecision\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits that can be used to represent the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: bScale\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property will be resolved for the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: fPositive\n      type: System.Boolean\n      description: \"\\n<p>A Boolean value that indicates whether the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure represents a positive or negative number. </p>\\n\"\n    - id: bits\n      type: System.Int32[]\n      description: \"\\n<p>The 128-bit unsigned integer that provides the value of the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Byte, System.Byte, System.Boolean, System.Int32())\n  name.vb: SqlDecimal(Byte, Byte, Boolean, Int32())\n  nameWithType: SqlDecimal.SqlDecimal(Byte, Byte, Boolean, Int32[])\n  nameWithType.vb: SqlDecimal.SqlDecimal(Byte, Byte, Boolean, Int32())\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)\n  id: '#ctor(System.Decimal)'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Decimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Decimal)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 486\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(decimal value)\n    content.vb: Public Sub New(value As Decimal)\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: \"\\n<p>The <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to be stored as a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.SqlDecimal(Decimal)\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Double)\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 681\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied double parameter.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(double dVal)\n    content.vb: Public Sub New(dVal As Double)\n    parameters:\n    - id: dVal\n      type: System.Double\n      description: \"\\n<p>A double, representing the value for the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.SqlDecimal(Double)\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Int32)\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 533\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied integer value.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(int value)\n    content.vb: Public Sub New(value As Integer)\n    parameters:\n    - id: value\n      type: System.Int32\n      description: \"\\n<p>The supplied integer value which will the used as the value of the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.SqlDecimal(Int32)\n- uid: System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: SqlDecimal(Int64)\n  fullName: System.Data.SqlTypes.SqlDecimal.SqlDecimal(System.Int64)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 561\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure using the supplied long integer value.</p>\\n\"\n  syntax:\n    content: public SqlDecimal(long value)\n    content.vb: Public Sub New(value As Long)\n    parameters:\n    - id: value\n      type: System.Int64\n      description: \"\\n<p>The supplied long integer value which will the used as the value of the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.SqlDecimal(Int64)\n- uid: System.Data.SqlTypes.SqlDecimal.BinData\n  commentId: P:System.Data.SqlTypes.SqlDecimal.BinData\n  id: BinData\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: BinData\n  fullName: System.Data.SqlTypes.SqlDecimal.BinData\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BinData\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 913\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Get the binary representation of the value of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure as an array of bytes.</p>\\n\"\n  syntax:\n    content: public byte[] BinData { get; }\n    content.vb: Public ReadOnly Property BinData As Byte()\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: \"\\n<p>An array of bytes that contains the binary representation of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.BinData\n- uid: System.Data.SqlTypes.SqlDecimal.Data\n  commentId: P:System.Data.SqlTypes.SqlDecimal.Data\n  id: Data\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Data\n  fullName: System.Data.SqlTypes.SqlDecimal.Data\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Data\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 900\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the binary representation of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure as an array of integers.</p>\\n\"\n  syntax:\n    content: public int[] Data { get; }\n    content.vb: Public ReadOnly Property Data As Integer()\n    parameters: []\n    return:\n      type: System.Int32[]\n      description: \"\\n<p>An array of integers that contains the binary representation of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.Data\n- uid: System.Data.SqlTypes.SqlDecimal.IsNull\n  commentId: P:System.Data.SqlTypes.SqlDecimal.IsNull\n  id: IsNull\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: IsNull\n  fullName: System.Data.SqlTypes.SqlDecimal.IsNull\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsNull\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 833\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Indicates whether this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is null.</p>\\n\"\n  syntax:\n    content: public bool IsNull { get; }\n    content.vb: Public ReadOnly Property IsNull As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is null. Otherwise, <strong>false</strong>. </p>\\n\"\n  implements:\n  - System.Data.SqlTypes.INullable.IsNull\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.IsNull\n- uid: System.Data.SqlTypes.SqlDecimal.IsPositive\n  commentId: P:System.Data.SqlTypes.SqlDecimal.IsPositive\n  id: IsPositive\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: IsPositive\n  fullName: System.Data.SqlTypes.SqlDecimal.IsPositive\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsPositive\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 849\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Indicates whether the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure is greater than zero.</p>\\n\"\n  syntax:\n    content: public bool IsPositive { get; }\n    content.vb: Public ReadOnly Property IsPositive As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is assigned to null. Otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.IsPositive\n- uid: System.Data.SqlTypes.SqlDecimal.Precision\n  commentId: P:System.Data.SqlTypes.SqlDecimal.Precision\n  id: Precision\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Precision\n  fullName: System.Data.SqlTypes.SqlDecimal.Precision\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Precision\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 874\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the maximum number of digits used to represent the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public byte Precision { get; }\n    content.vb: Public ReadOnly Property Precision As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The maximum number of digits used to represent the <strong>Value</strong> of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.Precision\n- uid: System.Data.SqlTypes.SqlDecimal.Scale\n  commentId: P:System.Data.SqlTypes.SqlDecimal.Scale\n  id: Scale\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Scale\n  fullName: System.Data.SqlTypes.SqlDecimal.Scale\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Scale\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 887\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the number of decimal places to which <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is resolved.</p>\\n\"\n  syntax:\n    content: public byte Scale { get; }\n    content.vb: Public ReadOnly Property Scale As Byte\n    parameters: []\n    return:\n      type: System.Byte\n      description: \"\\n<p>The number of decimal places to which the <strong>Value</strong> property is resolved.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.Scale\n- uid: System.Data.SqlTypes.SqlDecimal.Value\n  commentId: P:System.Data.SqlTypes.SqlDecimal.Value\n  id: Value\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Data.SqlTypes.SqlDecimal.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 841\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the value of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. This property is read-only.</p>\\n\"\n  syntax:\n    content: public decimal Value { get; }\n    content.vb: Public ReadOnly Property Value As Decimal\n    parameters: []\n    return:\n      type: System.Decimal\n      description: \"\\n<p>A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SqlDecimal.Value\n- uid: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)\n  id: Abs(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Abs(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Abs\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3174\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The Abs method gets the absolute value of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Abs(SqlDecimal n)\n    content.vb: Public Shared Function Abs(n As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the unsigned number representing the absolute value of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Abs(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Add(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Add\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3005\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Calculates the sum of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operators.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Add(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function Add(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the sum.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Add(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)\n  id: AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: AdjustScale(SqlDecimal, Int32, Boolean)\n  fullName: System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal, System.Int32, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AdjustScale\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2425\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The scale of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal AdjustScale(SqlDecimal n, int digits, bool fRound)\n    content.vb: Public Shared Function AdjustScale(n As SqlDecimal, digits As Integer, fRound As Boolean) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be adjusted. </p>\\n\"\n    - id: digits\n      type: System.Int32\n      description: \"\\n<p>The number of digits in the adjusted structure. </p>\\n\"\n    - id: fRound\n      type: System.Boolean\n      description: \"\\n<p>If this parameter is <strong>true</strong>, the new Value will be rounded, if <strong>false</strong>, the value will be truncated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the adjusted number.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.AdjustScale(SqlDecimal, Int32, Boolean)\n- uid: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)\n  id: Ceiling(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Ceiling(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Ceiling\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3190\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns the smallest whole number greater than or equal to the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Ceiling(SqlDecimal n)\n    content.vb: Public Shared Function Ceiling(n As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure for which the ceiling value is to be calculated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the smallest whole number greater than or equal to the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Ceiling(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)\n  id: CompareTo(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3407\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to the supplied <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(SqlDecimal value)\n    content.vb: Public Function CompareTo(value As SqlDecimal) As Integer\n    parameters:\n    - id: value\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\\n</td></tr></tbody></table>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.CompareTo(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(Object)\n  fullName: System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CompareTo\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3396\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance to the supplied <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns an indication of their relative values.</p>\\n\"\n  syntax:\n    content: public int CompareTo(object value)\n    content.vb: Public Function CompareTo(value As Object) As Integer\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A signed number that indicates the relative values of the instance and the object.</p>\\n<p>Return Value </p>\\n<p>Condition </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance is less than the object. </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance is the same as the object. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance is greater than the object </p>\\n<p>-or- </p>\\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\\n</td></tr></tbody></table>\\n\"\n  implements:\n  - System.IComparable.CompareTo(System.Object)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.CompareTo(Object)\n- uid: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)\n  id: ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ConvertToPrecScale(SqlDecimal, Int32, Int32)\n  fullName: System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal, System.Int32, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ConvertToPrecScale\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2439\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Adjusts the value of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand to the indicated precision and scale.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal ConvertToPrecScale(SqlDecimal n, int precision, int scale)\n    content.vb: Public Shared Function ConvertToPrecScale(n As SqlDecimal, precision As Integer, scale As Integer) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose value is to be adjusted. </p>\\n\"\n    - id: precision\n      type: System.Int32\n      description: \"\\n<p>The precision for the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: scale\n      type: System.Int32\n      description: \"\\n<p>The scale for the new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose Value has been adjusted to the precision and scale indicated in the parameters.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.ConvertToPrecScale(SqlDecimal, Int32, Int32)\n- uid: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Divide(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Divide\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3022\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The division operator calculates the results of dividing the first <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand by the second.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Divide(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function Divide(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the results of the division.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Divide(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Equals(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3028\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operands to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean Equals(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function Equals(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>\\n<strong>true</strong> if the two values are equal. Otherwise, <strong>false</strong>. If either instance is null, the value of the <strong>SqlDecimal</strong> will be null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Equals(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Data.SqlTypes.SqlDecimal.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3425\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Compares the supplied <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object value)\n    content.vb: Public Overrides Function Equals(value As Object) As Boolean\n    parameters:\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to be compared.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if object is an instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and the two are equal. Otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDecimal.Equals(Object)\n- uid: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)\n  id: Floor(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Floor(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Floor\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3221\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Rounds a specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> number to the next lower whole number.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Floor(SqlDecimal n)\n    content.vb: Public Shared Function Floor(n As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure for which the floor value is to be calculated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains the whole number part of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Floor(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.GetHashCode\n  commentId: M:System.Data.SqlTypes.SqlDecimal.GetHashCode\n  id: GetHashCode\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Data.SqlTypes.SqlDecimal.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3444\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns the hash code for this instance.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>A 32-bit signed integer hash code.</p>\\n\"\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDecimal.GetHashCode()\n- uid: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3046\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThan(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function GreaterThan(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.GreaterThan(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3058\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean GreaterThanOrEqual(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3040\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThan(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function LessThan(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.LessThan(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3052\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean LessThanOrEqual(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function LessThanOrEqual(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Multiply(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Multiply\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3016\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The multiplication operator computes the product of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Multiply(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function Multiply(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the product of the multiplication.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Multiply(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: NotEquals(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NotEquals\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3034\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean NotEquals(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function NotEquals(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.NotEquals(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Addition(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Addition(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Addition\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1252\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Calculates the sum of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operators.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal operator +(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator +(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the sum.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Addition(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Division(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Division(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Division\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1694\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The division operator calculates the results of dividing the first <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand by the second.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal operator /(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator /(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the results of the division.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Division(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Equality(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Equality(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2942\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operands to determine whether they are equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator ==(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator =(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Equality(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal\n  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlBoolean to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1782\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDecimal(SqlBoolean x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.ByteValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Narrowing(SqlBoolean to SqlDecimal)\n  nameWithType: SqlDecimal.Explicit(SqlBoolean to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Narrowing(SqlBoolean to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal\n  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlDecimal to Decimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlDecimal to System.Decimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1220\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator decimal (SqlDecimal x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As Decimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Decimal\n      description: \"\\n<p>A new <strong>Decimal</strong> structure whose value equals the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Decimal)\n  name.vb: Narrowing(SqlDecimal to Decimal)\n  nameWithType: SqlDecimal.Explicit(SqlDecimal to Decimal)\n  nameWithType.vb: SqlDecimal.Narrowing(SqlDecimal to Decimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal\n  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlDouble to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1848\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDecimal(SqlDouble x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals the <xref href=\\\"System.Data.SqlTypes.SqlDouble.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Narrowing(SqlDouble to SqlDecimal)\n  nameWithType: SqlDecimal.Explicit(SqlDouble to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Narrowing(SqlDouble to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal\n  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlSingle to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1839\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDecimal(SqlSingle x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property equals the <xref href=\\\"System.Data.SqlTypes.SqlSingle.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Narrowing(SqlSingle to SqlDecimal)\n  nameWithType: SqlDecimal.Explicit(SqlSingle to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Narrowing(SqlSingle to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal\n  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(SqlString to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1858\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDecimal(SqlString x)\n    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals the value represented by the <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Narrowing(SqlString to SqlDecimal)\n  nameWithType: SqlDecimal.Explicit(SqlString to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Narrowing(SqlString to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal\n  id: op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Explicit(Double to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Explicit(System.Double to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Explicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1205\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static explicit operator SqlDecimal(double x)\n    content.vb: Public Shared Narrowing Operator CType(x As Double) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Double\n      description: \"\\n<p>The <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose value equals the value of the <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Narrowing(System.Double to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Narrowing(Double to SqlDecimal)\n  nameWithType: SqlDecimal.Explicit(Double to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Narrowing(Double to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: GreaterThan(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2966\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether the first is greater than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator>(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator>(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.GreaterThan(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: GreaterThanOrEqual(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_GreaterThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2988\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether the first is greater than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator >=(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator >=(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.GreaterThanOrEqual(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(SqlByte to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1791\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(SqlByte x)\n    content.vb: Public Shared Widening Operator CType(x As SqlByte) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property equals the <xref href=\\\"System.Data.SqlTypes.SqlByte.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(SqlByte to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(SqlByte to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(SqlByte to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(SqlInt16 to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1800\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref></p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(SqlInt16 x)\n    content.vb: Public Shared Widening Operator CType(x As SqlInt16) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property equals the <xref href=\\\"System.Data.SqlTypes.SqlInt16.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(SqlInt16 to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(SqlInt16 to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(SqlInt16 to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(SqlInt32 to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1809\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(SqlInt32 x)\n    content.vb: Public Shared Widening Operator CType(x As SqlInt32) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property is equal to the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of the <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(SqlInt32 to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(SqlInt32 to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(SqlInt32 to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(SqlInt64 to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1818\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to SqlDecimal.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(SqlInt64 x)\n    content.vb: Public Shared Widening Operator CType(x As SqlInt64) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals the <xref href=\\\"System.Data.SqlTypes.SqlInt64.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(SqlInt64 to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(SqlInt64 to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(SqlInt64 to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(SqlMoney to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1827\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(SqlMoney x)\n    content.vb: Public Shared Widening Operator CType(x As SqlMoney) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equals the <xref href=\\\"System.Data.SqlTypes.SqlMoney.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(SqlMoney to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(SqlMoney to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(SqlMoney to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(Decimal to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Decimal to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1199\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(decimal x)\n    content.vb: Public Shared Widening Operator CType(x As Decimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Decimal\n      description: \"\\n<p>The <xref href=\\\"System.Decimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value to be converted. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property equals the value of the <strong>Decimal</strong> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Decimal to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(Decimal to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(Decimal to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(Decimal to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal\n  id: op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Implicit(Int64 to SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Implicit(System.Int64 to System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Implicit\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1211\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the supplied <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static implicit operator SqlDecimal(long x)\n    content.vb: Public Shared Widening Operator CType(x As Long) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Int64\n      description: \"\\n<p>The <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be converted.</p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property equals the value of the <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Data.SqlTypes.SqlDecimal.Widening(System.Int64 to System.Data.SqlTypes.SqlDecimal)\n  name.vb: Widening(Int64 to SqlDecimal)\n  nameWithType: SqlDecimal.Implicit(Int64 to SqlDecimal)\n  nameWithType.vb: SqlDecimal.Widening(Int64 to SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Inequality(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Inequality(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2950\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether they are not equal.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator !=(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator <>(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are not equal or <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the two instances are equal. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Inequality(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: LessThan(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThan\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2958\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structures to determine whether the first is less than the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator <(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.LessThan(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: LessThanOrEqual(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_LessThanOrEqual\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 2974\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Performs a logical comparison of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters to determine whether the first is less than or equal to the second.</p>\\n\"\n  syntax:\n    content: public static SqlBoolean operator <=(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator <=(x As SqlDecimal, y As SqlDecimal) As SqlBoolean\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that is <xref href=\\\"System.Data.SqlTypes.SqlBoolean.True\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\\\"System.Data.SqlTypes.SqlBoolean.False\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. If either instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is null, the <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of the <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> will be <xref href=\\\"System.Data.SqlTypes.SqlBoolean.Null\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.LessThanOrEqual(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Multiply(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Multiply\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1453\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The multiplication operator computes the product of the two <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal operator *(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator *(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property contains the product of the multiplication.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Multiply(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Subtraction(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Subtraction(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Subtraction\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1412\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Calculates the results of subtracting the second <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand from the first.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal operator -(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Operator -(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose Value property contains the results of the subtraction.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Subtraction(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)\n  id: op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: UnaryNegation(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.UnaryNegation(System.Data.SqlTypes.SqlDecimal)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_UnaryNegation\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1230\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>The unary minus operator negates the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameter.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal operator -(SqlDecimal x)\n    content.vb: Public Shared Operator -(x As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be negated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose value contains the results of the negation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.UnaryNegation(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Parse(System.String)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Data.SqlTypes.SqlDecimal.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1033\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts the <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representation of a number to its <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Parse(string s)\n    content.vb: Public Shared Function Parse(s As String) As SqlDecimal\n    parameters:\n    - id: s\n      type: System.String\n      description: \"\\n<p>The <strong>String</strong> to be parsed. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> equivalent to the value that is contained in the specified <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Parse(String)\n- uid: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)\n  id: Power(System.Data.SqlTypes.SqlDecimal,System.Double)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Power(SqlDecimal, Double)\n  fullName: System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal, System.Double)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Power\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3366\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Raises the value of the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to the specified exponential power.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Power(SqlDecimal n, double exp)\n    content.vb: Public Shared Function Power(n As SqlDecimal, exp As Double) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be raised to a power. </p>\\n\"\n    - id: exp\n      type: System.Double\n      description: \"\\n<p>A double value that indicates the power to which the number should be raised. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains the results.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Power(SqlDecimal, Double)\n- uid: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  id: Round(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Round(SqlDecimal, Int32)\n  fullName: System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Round\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3346\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets the number nearest the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's value with the specified precision.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Round(SqlDecimal n, int position)\n    content.vb: Public Shared Function Round(n As SqlDecimal, position As Integer) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be rounded. </p>\\n\"\n    - id: position\n      type: System.Int32\n      description: \"\\n<p>The number of significant fractional digits (precision) in the return value. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure that contains the results of the rounding operation.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Round(SqlDecimal, Int32)\n- uid: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)\n  id: Sign(System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Sign(SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Sign\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3252\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Gets a value that indicates the sign of a <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  syntax:\n    content: public static SqlInt32 Sign(SqlDecimal n)\n    content.vb: Public Shared Function Sign(n As SqlDecimal) As SqlInt32\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose sign is to be evaluated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>A number that indicates the sign of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Sign(SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  id: Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Subtract(SqlDecimal, SqlDecimal)\n  fullName: System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal, System.Data.SqlTypes.SqlDecimal)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Subtract\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3010\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Calculates the results of subtracting the second <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operand from the first.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Subtract(SqlDecimal x, SqlDecimal y)\n    content.vb: Public Shared Function Subtract(x As SqlDecimal, y As SqlDecimal) As SqlDecimal\n    parameters:\n    - id: x\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    - id: y\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>A new <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose Value property contains the results of the subtraction.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Subtract(SqlDecimal, SqlDecimal)\n- uid: System.Data.SqlTypes.SqlDecimal.ToDouble\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToDouble\n  id: ToDouble\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToDouble()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToDouble()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToDouble\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 1167\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Returns the a double equal to the contents of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property of this instance.</p>\\n\"\n  syntax:\n    content: public double ToDouble()\n    content.vb: Public Function ToDouble As Double\n    return:\n      type: System.Double\n      description: \"\\n<p>The decimal representation of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToDouble()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean\n  id: ToSqlBoolean\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlBoolean()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlBoolean()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlBoolean\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3065\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlBoolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlBoolean ToSqlBoolean()\n    content.vb: Public Function ToSqlBoolean As SqlBoolean\n    return:\n      type: System.Data.SqlTypes.SqlBoolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is non-zero; <strong>false</strong> if zero; otherwise Null.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlBoolean()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlByte\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlByte\n  id: ToSqlByte\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlByte()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlByte()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlByte\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3070\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlByte ToSqlByte()\n    content.vb: Public Function ToSqlByte As SqlByte\n    return:\n      type: System.Data.SqlTypes.SqlByte\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose <strong>Value</strong> equals the <strong>Value</strong> of this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure. If the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's Value is <strong>true</strong>, the <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's <strong>Value</strong> will be 1. Otherwise, the <xref href=\\\"System.Data.SqlTypes.SqlByte\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's <strong>Value</strong> will be 0.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlByte()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlDouble\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble\n  id: ToSqlDouble\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlDouble()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlDouble()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlDouble\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3075\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlDouble ToSqlDouble()\n    content.vb: Public Function ToSqlDouble As SqlDouble\n    return:\n      type: System.Data.SqlTypes.SqlDouble\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlDouble\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlDouble()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt16\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16\n  id: ToSqlInt16\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlInt16()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt16()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlInt16\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3080\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlInt16 ToSqlInt16()\n    content.vb: Public Function ToSqlInt16 As SqlInt16\n    return:\n      type: System.Data.SqlTypes.SqlInt16\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlInt16\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlInt16()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt32\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32\n  id: ToSqlInt32\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlInt32()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt32()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlInt32\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3085\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlInt32 ToSqlInt32()\n    content.vb: Public Function ToSqlInt32 As SqlInt32\n    return:\n      type: System.Data.SqlTypes.SqlInt32\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlInt32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlInt32()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlInt64\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64\n  id: ToSqlInt64\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlInt64()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlInt64()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlInt64\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3090\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlInt64 ToSqlInt64()\n    content.vb: Public Function ToSqlInt64 As SqlInt64\n    return:\n      type: System.Data.SqlTypes.SqlInt64\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlInt64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlInt64()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlMoney\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney\n  id: ToSqlMoney\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlMoney()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlMoney()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlMoney\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3095\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlMoney ToSqlMoney()\n    content.vb: Public Function ToSqlMoney As SqlMoney\n    return:\n      type: System.Data.SqlTypes.SqlMoney\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlMoney\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlMoney()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlSingle\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle\n  id: ToSqlSingle\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlSingle()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlSingle()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlSingle\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3100\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlSingle ToSqlSingle()\n    content.vb: Public Function ToSqlSingle As SqlSingle\n    return:\n      type: System.Data.SqlTypes.SqlSingle\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlSingle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure with the same value as this instance of <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlSingle()\n- uid: System.Data.SqlTypes.SqlDecimal.ToSqlString\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToSqlString\n  id: ToSqlString\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToSqlString()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToSqlString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToSqlString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3105\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public SqlString ToSqlString()\n    content.vb: Public Function ToSqlString As SqlString\n    return:\n      type: System.Data.SqlTypes.SqlString\n      description: \"\\n<p>A <xref href=\\\"System.Data.SqlTypes.SqlString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure whose value is a string representing the value contained in this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SqlDecimal.ToSqlString()\n- uid: System.Data.SqlTypes.SqlDecimal.ToString\n  commentId: M:System.Data.SqlTypes.SqlDecimal.ToString\n  id: ToString\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Data.SqlTypes.SqlDecimal.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 961\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Converts this <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>A new <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that contains the string representation of the <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's <xref href=\\\"System.Data.SqlTypes.SqlDecimal.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n\"\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: SqlDecimal.ToString()\n- uid: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  commentId: M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  id: Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)\n  parent: System.Data.SqlTypes.SqlDecimal\n  langs:\n  - csharp\n  - vb\n  name: Truncate(SqlDecimal, Int32)\n  fullName: System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Truncate\n    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDecimal.cs\n    startLine: 3356\n  assemblies:\n  - System.Data.SqlClient\n  namespace: System.Data.SqlTypes\n  summary: \"\\n<p>Truncates the specified <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure's value to the that you want position.</p>\\n\"\n  syntax:\n    content: public static SqlDecimal Truncate(SqlDecimal n, int position)\n    content.vb: Public Shared Function Truncate(n As SqlDecimal, position As Integer) As SqlDecimal\n    parameters:\n    - id: n\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>The <xref href=\\\"System.Data.SqlTypes.SqlDecimal\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure to be truncated. </p>\\n\"\n    - id: position\n      type: System.Int32\n      description: \"\\n<p>The decimal position to which the number will be truncated. </p>\\n\"\n    return:\n      type: System.Data.SqlTypes.SqlDecimal\n      description: \"\\n<p>Supply a negative value for the <em>position</em> parameter in order to truncate the value to the corresponding position to the left of the decimal point.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SqlDecimal.Truncate(SqlDecimal, Int32)\nreferences:\n- uid: System.Data.SqlTypes\n  isExternal: false\n  name: System.Data.SqlTypes\n  fullName: System.Data.SqlTypes\n  nameWithType: System.Data.SqlTypes\n  commentId: N:System.Data.SqlTypes\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  fullName: System.Data.SqlTypes.INullable\n  nameWithType: INullable\n  commentId: T:System.Data.SqlTypes.INullable\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  fullName: System.IComparable\n  nameWithType: IComparable\n  commentId: T:System.IComparable\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  fullName: System.Byte\n  nameWithType: Byte\n  commentId: T:System.Byte\n- uid: System.Data.SqlTypes.SqlDecimal\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDecimal\n  fullName: System.Data.SqlTypes.SqlDecimal\n  nameWithType: SqlDecimal\n  commentId: T:System.Data.SqlTypes.SqlDecimal\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Int32[]\n  name: Int32[]\n  fullName: System.Int32[]\n  fullname.vb: System.Int32()\n  name.vb: Int32()\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Int32[]\n  nameWithType.vb: Int32()\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  fullName: System.Decimal\n  nameWithType: Decimal\n  commentId: T:System.Decimal\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  nameWithType: Double\n  commentId: T:System.Double\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Data.SqlTypes.INullable.IsNull\n  parent: System.Data.SqlTypes.INullable\n  isExternal: false\n  name: IsNull\n  fullName: System.Data.SqlTypes.INullable.IsNull\n  nameWithType: INullable.IsNull\n  commentId: P:System.Data.SqlTypes.INullable.IsNull\n- uid: System.IComparable.CompareTo(System.Object)\n  parent: System.IComparable\n  isExternal: true\n  name: CompareTo(Object)\n  fullName: System.IComparable.CompareTo(System.Object)\n  spec.csharp:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IComparable.CompareTo(System.Object)\n    name: CompareTo\n    fullName: System.IComparable.CompareTo\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IComparable.CompareTo(Object)\n  commentId: M:System.IComparable.CompareTo(System.Object)\n- uid: System.Data.SqlTypes.SqlBoolean\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlBoolean\n  fullName: System.Data.SqlTypes.SqlBoolean\n  nameWithType: SqlBoolean\n  commentId: T:System.Data.SqlTypes.SqlBoolean\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.Data.SqlTypes.SqlDouble\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlDouble\n  fullName: System.Data.SqlTypes.SqlDouble\n  nameWithType: SqlDouble\n  commentId: T:System.Data.SqlTypes.SqlDouble\n- uid: System.Data.SqlTypes.SqlSingle\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlSingle\n  fullName: System.Data.SqlTypes.SqlSingle\n  nameWithType: SqlSingle\n  commentId: T:System.Data.SqlTypes.SqlSingle\n- uid: System.Data.SqlTypes.SqlString\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlString\n  fullName: System.Data.SqlTypes.SqlString\n  nameWithType: SqlString\n  commentId: T:System.Data.SqlTypes.SqlString\n- uid: System.Data.SqlTypes.SqlByte\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlByte\n  fullName: System.Data.SqlTypes.SqlByte\n  nameWithType: SqlByte\n  commentId: T:System.Data.SqlTypes.SqlByte\n- uid: System.Data.SqlTypes.SqlInt16\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt16\n  fullName: System.Data.SqlTypes.SqlInt16\n  nameWithType: SqlInt16\n  commentId: T:System.Data.SqlTypes.SqlInt16\n- uid: System.Data.SqlTypes.SqlInt32\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt32\n  fullName: System.Data.SqlTypes.SqlInt32\n  nameWithType: SqlInt32\n  commentId: T:System.Data.SqlTypes.SqlInt32\n- uid: System.Data.SqlTypes.SqlInt64\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlInt64\n  fullName: System.Data.SqlTypes.SqlInt64\n  nameWithType: SqlInt64\n  commentId: T:System.Data.SqlTypes.SqlInt64\n- uid: System.Data.SqlTypes.SqlMoney\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: SqlMoney\n  fullName: System.Data.SqlTypes.SqlMoney\n  nameWithType: SqlMoney\n  commentId: T:System.Data.SqlTypes.SqlMoney\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n"}