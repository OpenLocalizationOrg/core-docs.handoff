{"nodes":[{"pos":[869,891],"content":"AsyncVoidMethodBuilder","needQuote":true,"nodes":[{"content":"AsyncVoidMethodBuilder","pos":[0,22]}]},{"pos":[2739,2813],"content":"AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)","needQuote":true,"nodes":[{"content":"AwaitOnCompleted&lt;TAwaiter, TStateMachine&gt;(ref TAwaiter, ref TStateMachine)","pos":[0,74],"source":"AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The awaiter.&lt;/p&gt;\\n","pos":[3944,3967],"source":"\\n<p>The awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine.&lt;/p&gt;\\n","pos":[4042,4071],"source":"\\n<p>The state machine.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the awaiter.&lt;/p&gt;\\n","pos":[4132,4167],"source":"\\n<p>The type of the awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[4213,4254],"source":"\\n<p>The type of the state machine.</p>\\n"},{"pos":[5146,5226],"content":"AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)","needQuote":true,"nodes":[{"content":"AwaitUnsafeOnCompleted&lt;TAwaiter, TStateMachine&gt;(ref TAwaiter, ref TStateMachine)","pos":[0,80],"source":"AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The awaiter.&lt;/p&gt;\\n","pos":[6528,6551],"source":"\\n<p>The awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine.&lt;/p&gt;\\n","pos":[6626,6655],"source":"\\n<p>The state machine.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the awaiter.&lt;/p&gt;\\n","pos":[6716,6751],"source":"\\n<p>The type of the awaiter.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[6797,6838],"source":"\\n<p>The type of the state machine.</p>\\n"},{"pos":[7664,7672],"content":"Create()","needQuote":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"content":"\\n&lt;p&gt;A new instance of the builder.&lt;/p&gt;\\n","pos":[8553,8594],"source":"\\n<p>A new instance of the builder.</p>\\n"},{"pos":[9055,9078],"content":"SetException(Exception)","needQuote":true,"nodes":[{"content":"SetException(Exception)","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The exception to bind.&lt;/p&gt;\\n","pos":[9859,9892],"source":"\\n<p>The exception to bind.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;exception&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[10011,10068],"source":"\\n<p>\\n<em>exception</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The builder is not initialized.&lt;/p&gt;\\n","pos":[10181,10223],"source":"\\n<p>The builder is not initialized.</p>\\n"},{"pos":[10614,10625],"content":"SetResult()","needQuote":true,"nodes":[{"content":"SetResult()","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The builder is not initialized.&lt;/p&gt;\\n","pos":[11385,11427],"source":"\\n<p>The builder is not initialized.</p>\\n"},{"pos":[11980,12015],"content":"SetStateMachine(IAsyncStateMachine)","needQuote":true,"nodes":[{"content":"SetStateMachine(IAsyncStateMachine)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The state machine instance to associate with the builder.&lt;/p&gt;\\n","pos":[12917,12985],"source":"\\n<p>The state machine instance to associate with the builder.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stateMachine&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[13104,13164],"source":"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The state machine was previously set.&lt;/p&gt;\\n","pos":[13277,13325],"source":"\\n<p>The state machine was previously set.</p>\\n"},{"pos":[13743,13782],"content":"Start<TStateMachine>(ref TStateMachine)","needQuote":true,"nodes":[{"content":"Start&lt;TStateMachine&gt;(ref TStateMachine)","pos":[0,39],"source":"Start<TStateMachine>(ref TStateMachine)"}]},{"content":"\\n&lt;p&gt;The state machine instance, passed by reference.&lt;/p&gt;\\n","pos":[14829,14888],"source":"\\n<p>The state machine instance, passed by reference.</p>\\n"},{"content":"\\n&lt;p&gt;The type of the state machine.&lt;/p&gt;\\n","pos":[14954,14995],"source":"\\n<p>The type of the state machine.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;stateMachine&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15114,15174],"source":"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n"},{"pos":[15650,15681],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[15921,15935],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16060,16066],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16115,16116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16166,16172],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16232,16233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16319,16325],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16374,16375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16425,16431],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16491,16492],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16695,16708],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16815,16826],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[16880,16881],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16908,16909],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16985,16996],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[17050,17051],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17078,17079],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17268,17278],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17379,17387],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17438,17439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17466,17467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17540,17548],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[17599,17600],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17627,17628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17831,17853],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18001,18007],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18074,18075],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18125,18131],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18192,18193]},{"pos":[18248,18254],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18314,18315],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18412,18418],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18485,18486],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18536,18542],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18603,18604]},{"pos":[18659,18665],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18725,18726],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18971,19002],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19168,19183],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19259,19260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19310,19316],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19377,19378]},{"pos":[19433,19439],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19499,19500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19606,19621],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19697,19698],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19748,19754],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19815,19816]},{"pos":[19871,19877],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19937,19938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20164,20173],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20266,20273],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20341,20342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20369,20370],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20439,20446],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20514,20515],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20542,20543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20699,20708],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[20862,20868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20989,20995],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21111,21119],"content":"TAwaiter","needQuote":true,"nodes":[{"content":"TAwaiter","pos":[0,8]}]},{"pos":[21253,21266],"content":"TStateMachine","needQuote":true,"nodes":[{"content":"TStateMachine","pos":[0,13]}]},{"pos":[21398,21406],"content":"TAwaiter","needQuote":true,"nodes":[{"content":"TAwaiter","pos":[0,8]}]},{"pos":[21502,21515],"content":"TStateMachine","needQuote":true,"nodes":[{"content":"TStateMachine","pos":[0,13]}]},{"pos":[21704,21726],"content":"AsyncVoidMethodBuilder","needQuote":true,"nodes":[{"content":"AsyncVoidMethodBuilder","pos":[0,22]}]},{"pos":[21972,21981],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[22197,22215],"content":"IAsyncStateMachine","needQuote":true,"nodes":[{"content":"IAsyncStateMachine","pos":[0,18]}]},{"pos":[22444,22465],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[22674,22699],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  commentId: T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  id: AsyncVoidMethodBuilder\n  parent: System.Runtime.CompilerServices\n  children:\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  - System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)\n  langs:\n  - csharp\n  - vb\n  name: AsyncVoidMethodBuilder\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  type: Struct\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AsyncVoidMethodBuilder\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 34\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Represents a builder for asynchronous methods that do not return a value.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      public struct AsyncVoidMethodBuilder\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      Public Structure AsyncVoidMethodBuilder\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n  nameWithType: AsyncVoidMethodBuilder\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)\n  id: AwaitOnCompleted``2(``0@,``1@)\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AwaitOnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 105\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Schedules the state machine to proceed to the next action when the specified awaiter completes.</p>\\n\"\n  syntax:\n    content: 'public void AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : INotifyCompletion where TStateMachine : IAsyncStateMachine'\n    content.vb: Public Sub AwaitOnCompleted(Of TAwaiter As INotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: awaiter\n      type: '{TAwaiter}'\n      description: \"\\n<p>The awaiter.</p>\\n\"\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine.</p>\\n\"\n    typeParameters:\n    - id: TAwaiter\n      description: \"\\n<p>The type of the awaiter.</p>\\n\"\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  name.vb: AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  nameWithType: AsyncVoidMethodBuilder.AwaitOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  nameWithType.vb: AsyncVoidMethodBuilder.AwaitOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)\n  id: AwaitUnsafeOnCompleted``2(``0@,``1@)\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AwaitUnsafeOnCompleted\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 151\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Schedules the state machine to proceed to the next action when the specified awaiter completes. This method can be called from partially trusted code.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public void AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter awaiter, ref TStateMachine stateMachine)where TAwaiter : ICriticalNotifyCompletion where TStateMachine : IAsyncStateMachine\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub AwaitUnsafeOnCompleted(Of TAwaiter As ICriticalNotifyCompletion, TStateMachine As IAsyncStateMachine)(ByRef awaiter As TAwaiter, ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: awaiter\n      type: '{TAwaiter}'\n      description: \"\\n<p>The awaiter.</p>\\n\"\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine.</p>\\n\"\n    typeParameters:\n    - id: TAwaiter\n      description: \"\\n<p>The type of the awaiter.</p>\\n\"\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  name.vb: AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n  nameWithType: AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted<TAwaiter, TStateMachine>(ref TAwaiter, ref TStateMachine)\n  nameWithType.vb: AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted(Of TAwaiter, TStateMachine)(ByRef TAwaiter, ByRef TStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create\n  id: Create\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Create()\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Create\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 46\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Creates an instance of the <xref href=\\\"System.Runtime.CompilerServices.AsyncVoidMethodBuilder\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public static AsyncVoidMethodBuilder Create()\n    content.vb: Public Shared Function Create As AsyncVoidMethodBuilder\n    return:\n      type: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n      description: \"\\n<p>A new instance of the builder.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: AsyncVoidMethodBuilder.Create()\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)\n  id: SetException(System.Exception)\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetException(Exception)\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetException\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 200\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Binds an exception to the method builder.</p>\\n\"\n  syntax:\n    content: public void SetException(Exception exception)\n    content.vb: Public Sub SetException(exception As Exception)\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: \"\\n<p>The exception to bind.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>exception</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The builder is not initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncVoidMethodBuilder.SetException(Exception)\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult\n  id: SetResult\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetResult()\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetResult\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 185\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Marks the method builder as successfully completed.</p>\\n\"\n  syntax:\n    content: public void SetResult()\n    content.vb: Public Sub SetResult\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The builder is not initialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncVoidMethodBuilder.SetResult()\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  id: SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: SetStateMachine(IAsyncStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetStateMachine\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 93\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Associates the builder with the specified state machine.</p>\\n\"\n  syntax:\n    content: public void SetStateMachine(IAsyncStateMachine stateMachine)\n    content.vb: Public Sub SetStateMachine(stateMachine As IAsyncStateMachine)\n    parameters:\n    - id: stateMachine\n      type: System.Runtime.CompilerServices.IAsyncStateMachine\n      description: \"\\n<p>The state machine instance to associate with the builder.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The state machine was previously set.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: AsyncVoidMethodBuilder.SetStateMachine(IAsyncStateMachine)\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)\n  commentId: M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)\n  id: Start``1(``0@)\n  parent: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  langs:\n  - csharp\n  - vb\n  name: Start<TStateMachine>(ref TStateMachine)\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start<TStateMachine>(ref TStateMachine)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Start\n    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs\n    startLine: 61\n  assemblies:\n  - System.Threading.Tasks\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Begins running the builder with the associated state machine.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      [DebuggerStepThrough]\n\n      public void Start<TStateMachine>(ref TStateMachine stateMachine)where TStateMachine : IAsyncStateMachine\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      <DebuggerStepThrough>\n\n      Public Sub Start(Of TStateMachine As IAsyncStateMachine)(ByRef stateMachine As TStateMachine)\n    parameters:\n    - id: stateMachine\n      type: '{TStateMachine}'\n      description: \"\\n<p>The state machine instance, passed by reference.</p>\\n\"\n    typeParameters:\n    - id: TStateMachine\n      description: \"\\n<p>The type of the state machine.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>stateMachine</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)\n  name.vb: Start(Of TStateMachine)(ByRef TStateMachine)\n  nameWithType: AsyncVoidMethodBuilder.Start<TStateMachine>(ref TStateMachine)\n  nameWithType.vb: AsyncVoidMethodBuilder.Start(Of TStateMachine)(ByRef TStateMachine)\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ValueType.Equals(Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n- uid: System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.GetHashCode()\n  commentId: M:System.ValueType.GetHashCode\n- uid: System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ValueType.ToString()\n  commentId: M:System.ValueType.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  fullName: System.ValueType\n  nameWithType: ValueType\n  commentId: T:System.ValueType\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: '{TAwaiter}'\n  definition: TAwaiter\n  name: TAwaiter\n  fullName: TAwaiter\n  nameWithType: TAwaiter\n  commentId: '!:TAwaiter'\n- uid: '{TStateMachine}'\n  definition: TStateMachine\n  name: TStateMachine\n  fullName: TStateMachine\n  nameWithType: TStateMachine\n  commentId: '!:TStateMachine'\n- uid: TAwaiter\n  isExternal: false\n  name: TAwaiter\n  fullName: TAwaiter\n  nameWithType: TAwaiter\n- uid: TStateMachine\n  isExternal: false\n  name: TStateMachine\n  fullName: TStateMachine\n  nameWithType: TStateMachine\n- uid: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: AsyncVoidMethodBuilder\n  fullName: System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n  nameWithType: AsyncVoidMethodBuilder\n  commentId: T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Runtime.CompilerServices.IAsyncStateMachine\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: IAsyncStateMachine\n  fullName: System.Runtime.CompilerServices.IAsyncStateMachine\n  nameWithType: IAsyncStateMachine\n  commentId: T:System.Runtime.CompilerServices.IAsyncStateMachine\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}