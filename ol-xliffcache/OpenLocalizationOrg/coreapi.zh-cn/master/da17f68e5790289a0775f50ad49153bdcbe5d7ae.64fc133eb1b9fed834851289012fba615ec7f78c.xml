{"nodes":[{"pos":[466,490],"content":"TargetFrameworkAttribute","needQuote":true,"nodes":[{"content":"TargetFrameworkAttribute","pos":[0,24]}]},{"pos":[2187,2200],"content":"AllowMultiple","needQuote":true,"nodes":[{"content":"AllowMultiple","pos":[0,13]}]},{"pos":[2259,2268],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2755,2787],"content":"TargetFrameworkAttribute(String)","needQuote":true,"nodes":[{"content":"TargetFrameworkAttribute(String)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The version of the .NET Framework against which the assembly was built.&lt;/p&gt;\\n","pos":[3741,3823],"source":"\\n<p>The version of the .NET Framework against which the assembly was built.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;frameworkName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[3942,4003],"source":"\\n<p>\\n<em>frameworkName</em> is <strong>null</strong>.</p>\\n"},{"pos":[4426,4446],"content":"FrameworkDisplayName","needQuote":true,"nodes":[{"content":"FrameworkDisplayName","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The display name of the .NET Framework version.&lt;/p&gt;\\n","pos":[5249,5307],"source":"\\n<p>The display name of the .NET Framework version.</p>\\n"},{"pos":[5881,5894],"content":"FrameworkName","needQuote":true,"nodes":[{"content":"FrameworkName","pos":[0,13]}]},{"content":"\\n&lt;p&gt;The name of the .NET Framework version with which the assembly was compiled.&lt;/p&gt;\\n","pos":[6678,6765],"source":"\\n<p>The name of the .NET Framework version with which the assembly was compiled.</p>\\n"},{"pos":[7156,7181],"content":"System.Runtime.Versioning","needQuote":true,"nodes":[{"content":"System.Runtime.Versioning","pos":[0,25]}]},{"pos":[7369,7375],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7523,7532],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[7720,7734],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7859,7865],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7914,7915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7965,7971],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8031,8032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8118,8124],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8173,8174],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8224,8230],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8290,8291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8494,8507],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8614,8625],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8679,8680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8707,8708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8784,8795],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8849,8850],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8877,8878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9060,9070],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9165,9173],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9242,9243],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9270,9271],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9341,9349],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[9418,9419],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9446,9447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9644,9666],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9814,9820],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9887,9888],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9938,9944],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10005,10006]},{"pos":[10061,10067],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10127,10128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10225,10231],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[10298,10299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10349,10355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10416,10417]},{"pos":[10472,10478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10538,10539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10784,10815],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10981,10996],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11072,11073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11123,11129],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11190,11191]},{"pos":[11246,11252],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11312,11313],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11419,11434],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[11510,11511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11561,11567],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11628,11629]},{"pos":[11684,11690],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11750,11751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11977,11986],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[12079,12086],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12154,12155],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12182,12183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12252,12259],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12327,12328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12355,12356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12531,12548],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12657,12672],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12748,12749],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12776,12777],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12854,12869],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12945,12946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12973,12974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13119,13125],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13256,13262],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13405,13426],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]}],"content":"items:\n- uid: System.Runtime.Versioning.TargetFrameworkAttribute\n  commentId: T:System.Runtime.Versioning.TargetFrameworkAttribute\n  id: TargetFrameworkAttribute\n  parent: System.Runtime.Versioning\n  children:\n  - System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)\n  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n  langs:\n  - csharp\n  - vb\n  name: TargetFrameworkAttribute\n  fullName: System.Runtime.Versioning.TargetFrameworkAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TargetFrameworkAttribute\n    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.Versioning\n  summary: \"\\n<p>Identifies the version of the .NET Framework that a particular assembly was compiled against.</p>\\n\"\n  syntax:\n    content: >-\n      [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false, Inherited = false)]\n\n      public sealed class TargetFrameworkAttribute : Attribute, _Attribute\n    content.vb: >-\n      <AttributeUsage(AttributeTargets.Assembly, AllowMultiple:=False, Inherited:=False)>\n\n      Public NotInheritable Class TargetFrameworkAttribute\n          Inherits Attribute\n          Implements _Attribute\n  seealso:\n  - type: System.Runtime.Versioning.FrameworkName\n    commentId: T:System.Runtime.Versioning.FrameworkName\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 1\n    namedArguments:\n    - name: AllowMultiple\n      type: System.Boolean\n      value: false\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: TargetFrameworkAttribute\n- uid: System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)\n  commentId: M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Versioning.TargetFrameworkAttribute\n  langs:\n  - csharp\n  - vb\n  name: TargetFrameworkAttribute(String)\n  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.TargetFrameworkAttribute(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.Versioning\n  summary: \"\\n<p>Initializes an instance of the <xref href=\\\"System.Runtime.Versioning.TargetFrameworkAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class by specifying the .NET Framework version against which an assembly was built.</p>\\n\"\n  syntax:\n    content: public TargetFrameworkAttribute(string frameworkName)\n    content.vb: Public Sub New(frameworkName As String)\n    parameters:\n    - id: frameworkName\n      type: System.String\n      description: \"\\n<p>The version of the .NET Framework against which the assembly was built.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>frameworkName</em> is <strong>null</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TargetFrameworkAttribute.TargetFrameworkAttribute(String)\n- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n  id: FrameworkDisplayName\n  parent: System.Runtime.Versioning.TargetFrameworkAttribute\n  langs:\n  - csharp\n  - vb\n  name: FrameworkDisplayName\n  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FrameworkDisplayName\n    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.Versioning\n  summary: \"\\n<p>Gets the display name of the .NET Framework version against which an assembly was built.</p>\\n\"\n  syntax:\n    content: public string FrameworkDisplayName { get; set; }\n    content.vb: Public Property FrameworkDisplayName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The display name of the .NET Framework version.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: TargetFrameworkAttribute.FrameworkDisplayName\n- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n  id: FrameworkName\n  parent: System.Runtime.Versioning.TargetFrameworkAttribute\n  langs:\n  - csharp\n  - vb\n  name: FrameworkName\n  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FrameworkName\n    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.Versioning\n  summary: \"\\n<p>Gets the name of the .NET Framework version against which a particular assembly was compiled.</p>\\n\"\n  syntax:\n    content: public string FrameworkName { get; }\n    content.vb: Public ReadOnly Property FrameworkName As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The name of the .NET Framework version with which the assembly was compiled.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: TargetFrameworkAttribute.FrameworkName\nreferences:\n- uid: System.Runtime.Versioning\n  isExternal: false\n  name: System.Runtime.Versioning\n  fullName: System.Runtime.Versioning\n  nameWithType: System.Runtime.Versioning\n  commentId: N:System.Runtime.Versioning\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n"}