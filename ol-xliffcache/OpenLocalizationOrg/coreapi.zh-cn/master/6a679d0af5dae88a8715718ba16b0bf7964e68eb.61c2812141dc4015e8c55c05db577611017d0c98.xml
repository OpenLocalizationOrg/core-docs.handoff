{"nodes":[{"pos":[1038,1063],"content":"RangeConditionHeaderValue","needQuote":true,"nodes":[{"content":"RangeConditionHeaderValue","pos":[0,25]}]},{"pos":[2359,2400],"content":"RangeConditionHeaderValue(DateTimeOffset)","needQuote":true,"nodes":[{"content":"RangeConditionHeaderValue(DateTimeOffset)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;A date value used to initialize the new instance.&lt;/p&gt;\\n","pos":[3228,3288],"source":"\\n<p>A date value used to initialize the new instance.</p>\\n"},{"pos":[3813,3860],"content":"RangeConditionHeaderValue(EntityTagHeaderValue)","needQuote":true,"nodes":[{"content":"RangeConditionHeaderValue(EntityTagHeaderValue)","pos":[0,47]}]},{"pos":[5361,5394],"content":"RangeConditionHeaderValue(String)","needQuote":true,"nodes":[{"content":"RangeConditionHeaderValue(String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;An entity tag represented as a string used to initialize the new instance.&lt;/p&gt;\\n","pos":[6205,6290],"source":"\\n<p>An entity tag represented as a string used to initialize the new instance.</p>\\n"},{"pos":[6664,6668],"content":"Date","needQuote":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"pos":[8074,8083],"content":"EntityTag","needQuote":true,"nodes":[{"content":"EntityTag","pos":[0,9]}]},{"pos":[9601,9615],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The object to compare with the current object.&lt;/p&gt;\\n","pos":[10507,10564],"source":"\\n<p>The object to compare with the current object.</p>\\n"},{"pos":[11362,11375],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12736,12749],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents range condition header value information.&lt;/p&gt;\\n","pos":[13572,13649],"source":"\\n<p>A string that represents range condition header value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[14124,14189],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid range Condition header value information.&lt;/p&gt;\\n","pos":[14282,14364],"source":"\\n<p>\\n<em>input</em> is not valid range Condition header value information.</p>\\n"},{"pos":[14752,14762],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16292,16339],"content":"TryParse(String, out RangeConditionHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out RangeConditionHeaderValue)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[17297,17331],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[18501,18524],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[18706,18712],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18899,18921],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[19069,19075],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19142,19143],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19193,19199],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19260,19261]},{"pos":[19316,19322],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19382,19383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19480,19486],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[19553,19554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19604,19610],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19671,19672]},{"pos":[19727,19733],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19793,19794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20039,20070],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[20236,20251],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20327,20328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20378,20384],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20445,20446]},{"pos":[20501,20507],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20567,20568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20674,20689],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[20765,20766],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20816,20822],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20883,20884]},{"pos":[20939,20945],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21005,21006],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21232,21241],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[21334,21341],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21409,21410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21437,21438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21507,21514],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[21582,21583],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21610,21611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21786,21803],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21912,21927],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22003,22004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22031,22032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22109,22124],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[22200,22201],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22228,22229],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22374,22380],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[22519,22533],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[22750,22770],"content":"EntityTagHeaderValue","needQuote":true,"nodes":[{"content":"EntityTagHeaderValue","pos":[0,20]}]},{"pos":[22991,22997],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23179,23203],"content":"Nullable<DateTimeOffset>","needQuote":true,"nodes":[{"content":"Nullable&lt;DateTimeOffset&gt;","pos":[0,24],"source":"Nullable<DateTimeOffset>"}]},{"pos":[23403,23411],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[23473,23474],"content":"<","needQuote":true,"nodes":[]},{"pos":[23532,23546],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[23684,23692],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[23755,23758]},{"pos":[23823,23837],"content":"DateTimeOffset","needQuote":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[23905,23906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24135,24146],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[24293,24301],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[24342,24343],"content":"<","needQuote":true,"nodes":[]},{"pos":[24370,24371],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24468,24476],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[24518,24521]},{"pos":[24555,24556],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[24583,24584],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24790,24804],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24923,24929],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24996,24997],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25047,25053],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25113,25114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25197,25203],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25270,25271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25321,25327],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25387,25388],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25561,25568],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25734,25747],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25848,25859],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25931,25932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25959,25960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26033,26044],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26116,26117],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26144,26145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26305,26310],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26505,26530],"content":"RangeConditionHeaderValue","needQuote":true,"nodes":[{"content":"RangeConditionHeaderValue","pos":[0,25]}]},{"pos":[26781,26791],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26886,26894],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[26963,26964],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26991,26992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27062,27070],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27139,27140],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27167,27168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27321,27342],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[27541,27556],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue\n  commentId: T:System.Net.Http.Headers.RangeConditionHeaderValue\n  id: RangeConditionHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)\n  - System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)\n  - System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.RangeConditionHeaderValue.Date\n  - System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag\n  - System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode\n  - System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.RangeConditionHeaderValue.ToString\n  - System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: RangeConditionHeaderValue\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RangeConditionHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 507\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents an If-Range header value which can either be a date/time or an entity-tag value.</p>\\n\"\n  syntax:\n    content: public class RangeConditionHeaderValue\n    content.vb: Public Class RangeConditionHeaderValue\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: RangeConditionHeaderValue\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)\n  id: '#ctor(System.DateTimeOffset)'\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RangeConditionHeaderValue(DateTimeOffset)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.RangeConditionHeaderValue(System.DateTimeOffset)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 509\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RangeConditionHeaderValue(DateTimeOffset date)\n    content.vb: Public Sub New(date As DateTimeOffset)\n    parameters:\n    - id: date\n      type: System.DateTimeOffset\n      description: \"\\n<p>A date value used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RangeConditionHeaderValue.RangeConditionHeaderValue(DateTimeOffset)\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)\n  id: '#ctor(System.Net.Http.Headers.EntityTagHeaderValue)'\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RangeConditionHeaderValue(EntityTagHeaderValue)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.RangeConditionHeaderValue(System.Net.Http.Headers.EntityTagHeaderValue)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 510\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RangeConditionHeaderValue(EntityTagHeaderValue entityTag)\n    content.vb: Public Sub New(entityTag As EntityTagHeaderValue)\n    parameters:\n    - id: entityTag\n      type: System.Net.Http.Headers.EntityTagHeaderValue\n      description: \"\\n<p>An <xref href=\\\"System.Net.Http.Headers.EntityTagHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RangeConditionHeaderValue.RangeConditionHeaderValue(EntityTagHeaderValue)\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: RangeConditionHeaderValue(String)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.RangeConditionHeaderValue(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 511\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RangeConditionHeaderValue(string entityTag)\n    content.vb: Public Sub New(entityTag As String)\n    parameters:\n    - id: entityTag\n      type: System.String\n      description: \"\\n<p>An entity tag represented as a string used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RangeConditionHeaderValue.RangeConditionHeaderValue(String)\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.Date\n  commentId: P:System.Net.Http.Headers.RangeConditionHeaderValue.Date\n  id: Date\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Date\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.Date\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Date\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 512\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the date from the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public DateTimeOffset? Date { get; }\n    content.vb: Public ReadOnly Property Date As DateTimeOffset?\n    parameters: []\n    return:\n      type: System.Nullable{System.DateTimeOffset}\n      description: \"\\n<p>Returns <xref href=\\\"System.DateTimeOffset\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The date from the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RangeConditionHeaderValue.Date\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag\n  commentId: P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag\n  id: EntityTag\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: EntityTag\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EntityTag\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 513\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the entity tag from the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public EntityTagHeaderValue EntityTag { get; }\n    content.vb: Public ReadOnly Property EntityTag As EntityTagHeaderValue\n    parameters: []\n    return:\n      type: System.Net.Http.Headers.EntityTagHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.EntityTagHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The entity tag from the <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RangeConditionHeaderValue.EntityTag\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 514\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n      description: \"\\n<p>The object to compare with the current object.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if the specified <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Object.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeConditionHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode\n  id: GetHashCode\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 515\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Serves as a hash function for an <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n      description: \"\\n<p>Returns <xref href=\\\"System.Int32\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A hash code for the current object.</p>\\n\"\n  overridden: System.Object.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeConditionHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 516\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static RangeConditionHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As RangeConditionHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents range condition header value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.RangeConditionHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid range Condition header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: RangeConditionHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.ToString\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString\n  id: ToString\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 517\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Returns a string that represents the current <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n      description: \"\\n<p>Returns <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>A string that represents the current object.</p>\\n\"\n  overridden: System.Object.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: RangeConditionHeaderValue.ToString()\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)\n  commentId: M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)\n  parent: System.Net.Http.Headers.RangeConditionHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out RangeConditionHeaderValue)\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String, out System.Net.Http.Headers.RangeConditionHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 518\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out RangeConditionHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As RangeConditionHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.RangeConditionHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.RangeConditionHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.RangeConditionHeaderValue)\n  name.vb: TryParse(String, ByRef RangeConditionHeaderValue)\n  nameWithType: RangeConditionHeaderValue.TryParse(String, out RangeConditionHeaderValue)\n  nameWithType.vb: RangeConditionHeaderValue.TryParse(String, ByRef RangeConditionHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  fullName: System.DateTimeOffset\n  commentId: T:System.DateTimeOffset\n  nameWithType: DateTimeOffset\n- uid: System.Net.Http.Headers.EntityTagHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: EntityTagHeaderValue\n  fullName: System.Net.Http.Headers.EntityTagHeaderValue\n  commentId: T:System.Net.Http.Headers.EntityTagHeaderValue\n  nameWithType: EntityTagHeaderValue\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Nullable{System.DateTimeOffset}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<DateTimeOffset>\n  fullName: System.Nullable<System.DateTimeOffset>\n  fullname.vb: System.Nullable(Of System.DateTimeOffset)\n  name.vb: Nullable(Of DateTimeOffset)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.DateTimeOffset\n    name: DateTimeOffset\n    fullName: System.DateTimeOffset\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.DateTimeOffset}\n  nameWithType: Nullable<DateTimeOffset>\n  nameWithType.vb: Nullable(Of DateTimeOffset)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.Headers.RangeConditionHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: RangeConditionHeaderValue\n  fullName: System.Net.Http.Headers.RangeConditionHeaderValue\n  commentId: T:System.Net.Http.Headers.RangeConditionHeaderValue\n  nameWithType: RangeConditionHeaderValue\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}