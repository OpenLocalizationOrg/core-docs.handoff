{"nodes":[{"pos":[1729,1743],"content":"StackBehaviour","needQuote":true,"nodes":[{"content":"StackBehaviour","pos":[0,14]}]},{"pos":[2770,2774],"content":"Pop0","needQuote":true,"nodes":[{"content":"Pop0","pos":[0,4]}]},{"pos":[3659,3663],"content":"Pop1","needQuote":true,"nodes":[{"content":"Pop1","pos":[0,4]}]},{"pos":[4557,4566],"content":"Pop1_pop1","needQuote":true,"nodes":[{"content":"Pop1_pop1","pos":[0,9]}]},{"pos":[5534,5538],"content":"Popi","needQuote":true,"nodes":[{"content":"Popi","pos":[0,4]}]},{"pos":[6439,6448],"content":"Popi_pop1","needQuote":true,"nodes":[{"content":"Popi_pop1","pos":[0,9]}]},{"pos":[7441,7450],"content":"Popi_popi","needQuote":true,"nodes":[{"content":"Popi_popi","pos":[0,9]}]},{"pos":[8467,8481],"content":"Popi_popi_popi","needQuote":true,"nodes":[{"content":"Popi_popi_popi","pos":[0,14]}]},{"pos":[9560,9570],"content":"Popi_popi8","needQuote":true,"nodes":[{"content":"Popi_popi8","pos":[0,10]}]},{"pos":[10579,10589],"content":"Popi_popr4","needQuote":true,"nodes":[{"content":"Popi_popr4","pos":[0,10]}]},{"pos":[11612,11622],"content":"Popi_popr8","needQuote":true,"nodes":[{"content":"Popi_popr8","pos":[0,10]}]},{"pos":[12633,12639],"content":"Popref","needQuote":true,"nodes":[{"content":"Popref","pos":[0,6]}]},{"pos":[13550,13561],"content":"Popref_pop1","needQuote":true,"nodes":[{"content":"Popref_pop1","pos":[0,11]}]},{"pos":[14564,14575],"content":"Popref_popi","needQuote":true,"nodes":[{"content":"Popref_popi","pos":[0,11]}]},{"pos":[15602,15618],"content":"Popref_popi_pop1","needQuote":true,"nodes":[{"content":"Popref_popi_pop1","pos":[0,16]}]},{"pos":[16710,16726],"content":"Popref_popi_popi","needQuote":true,"nodes":[{"content":"Popref_popi_popi","pos":[0,16]}]},{"pos":[17812,17829],"content":"Popref_popi_popi8","needQuote":true,"nodes":[{"content":"Popref_popi_popi8","pos":[0,17]}]},{"pos":[18928,18945],"content":"Popref_popi_popr4","needQuote":true,"nodes":[{"content":"Popref_popi_popr4","pos":[0,17]}]},{"pos":[20044,20061],"content":"Popref_popi_popr8","needQuote":true,"nodes":[{"content":"Popref_popi_popr8","pos":[0,17]}]},{"pos":[21177,21195],"content":"Popref_popi_popref","needQuote":true,"nodes":[{"content":"Popref_popi_popref","pos":[0,18]}]},{"pos":[22257,22262],"content":"Push0","needQuote":true,"nodes":[{"content":"Push0","pos":[0,5]}]},{"pos":[23156,23161],"content":"Push1","needQuote":true,"nodes":[{"content":"Push1","pos":[0,5]}]},{"pos":[24069,24080],"content":"Push1_push1","needQuote":true,"nodes":[{"content":"Push1_push1","pos":[0,11]}]},{"pos":[25065,25070],"content":"Pushi","needQuote":true,"nodes":[{"content":"Pushi","pos":[0,5]}]},{"pos":[25970,25976],"content":"Pushi8","needQuote":true,"nodes":[{"content":"Pushi8","pos":[0,6]}]},{"pos":[26880,26886],"content":"Pushr4","needQuote":true,"nodes":[{"content":"Pushr4","pos":[0,6]}]},{"pos":[27804,27810],"content":"Pushr8","needQuote":true,"nodes":[{"content":"Pushr8","pos":[0,6]}]},{"pos":[28731,28738],"content":"Pushref","needQuote":true,"nodes":[{"content":"Pushref","pos":[0,7]}]},{"pos":[29641,29647],"content":"Varpop","needQuote":true,"nodes":[{"content":"Varpop","pos":[0,6]}]},{"pos":[30545,30552],"content":"Varpush","needQuote":true,"nodes":[{"content":"Varpush","pos":[0,7]}]},{"pos":[31316,31338],"content":"System.Reflection.Emit","needQuote":true,"nodes":[{"content":"System.Reflection.Emit","pos":[0,22]}]},{"pos":[31557,31571],"content":"StackBehaviour","needQuote":true,"nodes":[{"content":"StackBehaviour","pos":[0,14]}]}],"content":"items:\n- uid: System.Reflection.Emit.StackBehaviour\n  commentId: T:System.Reflection.Emit.StackBehaviour\n  id: StackBehaviour\n  parent: System.Reflection.Emit\n  children:\n  - System.Reflection.Emit.StackBehaviour.Pop0\n  - System.Reflection.Emit.StackBehaviour.Pop1\n  - System.Reflection.Emit.StackBehaviour.Pop1_pop1\n  - System.Reflection.Emit.StackBehaviour.Popi\n  - System.Reflection.Emit.StackBehaviour.Popi_pop1\n  - System.Reflection.Emit.StackBehaviour.Popi_popi\n  - System.Reflection.Emit.StackBehaviour.Popi_popi_popi\n  - System.Reflection.Emit.StackBehaviour.Popi_popi8\n  - System.Reflection.Emit.StackBehaviour.Popi_popr4\n  - System.Reflection.Emit.StackBehaviour.Popi_popr8\n  - System.Reflection.Emit.StackBehaviour.Popref\n  - System.Reflection.Emit.StackBehaviour.Popref_pop1\n  - System.Reflection.Emit.StackBehaviour.Popref_popi\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_pop1\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_popi\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_popi8\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_popr4\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_popr8\n  - System.Reflection.Emit.StackBehaviour.Popref_popi_popref\n  - System.Reflection.Emit.StackBehaviour.Push0\n  - System.Reflection.Emit.StackBehaviour.Push1\n  - System.Reflection.Emit.StackBehaviour.Push1_push1\n  - System.Reflection.Emit.StackBehaviour.Pushi\n  - System.Reflection.Emit.StackBehaviour.Pushi8\n  - System.Reflection.Emit.StackBehaviour.Pushr4\n  - System.Reflection.Emit.StackBehaviour.Pushr8\n  - System.Reflection.Emit.StackBehaviour.Pushref\n  - System.Reflection.Emit.StackBehaviour.Varpop\n  - System.Reflection.Emit.StackBehaviour.Varpush\n  langs:\n  - csharp\n  - vb\n  name: StackBehaviour\n  fullName: System.Reflection.Emit.StackBehaviour\n  type: Enum\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StackBehaviour\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 18\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Describes how values are pushed onto a stack or popped off a stack.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public enum StackBehaviour\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public Enum StackBehaviour\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: StackBehaviour\n- uid: System.Reflection.Emit.StackBehaviour.Pop0\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pop0\n  id: Pop0\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pop0\n  fullName: System.Reflection.Emit.StackBehaviour.Pop0\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pop0\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 23\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>No values are popped off the stack.</p>\\n\"\n  syntax:\n    content: Pop0 = 0\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pop0\n- uid: System.Reflection.Emit.StackBehaviour.Pop1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pop1\n  id: Pop1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pop1\n  fullName: System.Reflection.Emit.StackBehaviour.Pop1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pop1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 24\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops one value off the stack.</p>\\n\"\n  syntax:\n    content: Pop1 = 1\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pop1\n- uid: System.Reflection.Emit.StackBehaviour.Pop1_pop1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pop1_pop1\n  id: Pop1_pop1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pop1_pop1\n  fullName: System.Reflection.Emit.StackBehaviour.Pop1_pop1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pop1_pop1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 25\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops 1 value off the stack for the first operand, and 1 value of the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Pop1_pop1 = 2\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pop1_pop1\n- uid: System.Reflection.Emit.StackBehaviour.Popi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi\n  id: Popi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi\n  fullName: System.Reflection.Emit.StackBehaviour.Popi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 26\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack.</p>\\n\"\n  syntax:\n    content: Popi = 3\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi\n- uid: System.Reflection.Emit.StackBehaviour.Popi_pop1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_pop1\n  id: Popi_pop1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_pop1\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_pop1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_pop1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 27\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, and a value off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popi_pop1 = 4\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_pop1\n- uid: System.Reflection.Emit.StackBehaviour.Popi_popi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi\n  id: Popi_popi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_popi\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_popi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 28\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, and a 32-bit integer off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popi_popi = 5\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_popi\n- uid: System.Reflection.Emit.StackBehaviour.Popi_popi_popi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi\n  id: Popi_popi_popi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_popi_popi\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi_popi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_popi_popi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 30\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, a 32-bit integer off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popi_popi_popi = 7\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_popi_popi\n- uid: System.Reflection.Emit.StackBehaviour.Popi_popi8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popi8\n  id: Popi_popi8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_popi8\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_popi8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_popi8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 29\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, and a 64-bit integer off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popi_popi8 = 6\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_popi8\n- uid: System.Reflection.Emit.StackBehaviour.Popi_popr4\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popr4\n  id: Popi_popr4\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_popr4\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_popr4\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_popr4\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 31\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, and a 32-bit floating point number off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popi_popr4 = 8\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_popr4\n- uid: System.Reflection.Emit.StackBehaviour.Popi_popr8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popi_popr8\n  id: Popi_popr8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popi_popr8\n  fullName: System.Reflection.Emit.StackBehaviour.Popi_popr8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popi_popr8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 32\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a 32-bit integer off the stack for the first operand, and a 64-bit floating point number off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popi_popr8 = 9\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popi_popr8\n- uid: System.Reflection.Emit.StackBehaviour.Popref\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref\n  id: Popref\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref\n  fullName: System.Reflection.Emit.StackBehaviour.Popref\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 33\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack.</p>\\n\"\n  syntax:\n    content: Popref = 10\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref\n- uid: System.Reflection.Emit.StackBehaviour.Popref_pop1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_pop1\n  id: Popref_pop1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_pop1\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_pop1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_pop1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 34\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, and a value off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popref_pop1 = 11\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_pop1\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi\n  id: Popref_popi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 35\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, and a 32-bit integer off the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Popref_popi = 12\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_pop1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1\n  id: Popref_popi_pop1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_pop1\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_pop1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_pop1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 51\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_pop1 = 28\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_pop1\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi\n  id: Popref_popi_popi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_popi\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_popi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 36\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a value off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_popi = 13\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_popi\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popi8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8\n  id: Popref_popi_popi8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_popi8\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popi8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_popi8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 37\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit integer off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_popi8 = 14\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_popi8\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popr4\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4\n  id: Popref_popi_popr4\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_popr4\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popr4\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_popr4\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 38\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_popr4 = 15\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_popr4\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popr8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8\n  id: Popref_popi_popr8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_popr8\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popr8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_popr8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 39\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit floating point number off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_popr8 = 16\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_popr8\n- uid: System.Reflection.Emit.StackBehaviour.Popref_popi_popref\n  commentId: F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref\n  id: Popref_popi_popref\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Popref_popi_popref\n  fullName: System.Reflection.Emit.StackBehaviour.Popref_popi_popref\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Popref_popi_popref\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 40\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a reference off the stack for the third operand.</p>\\n\"\n  syntax:\n    content: Popref_popi_popref = 17\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Popref_popi_popref\n- uid: System.Reflection.Emit.StackBehaviour.Push0\n  commentId: F:System.Reflection.Emit.StackBehaviour.Push0\n  id: Push0\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Push0\n  fullName: System.Reflection.Emit.StackBehaviour.Push0\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Push0\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 41\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>No values are pushed onto the stack.</p>\\n\"\n  syntax:\n    content: Push0 = 18\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Push0\n- uid: System.Reflection.Emit.StackBehaviour.Push1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Push1\n  id: Push1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Push1\n  fullName: System.Reflection.Emit.StackBehaviour.Push1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Push1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 42\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes one value onto the stack.</p>\\n\"\n  syntax:\n    content: Push1 = 19\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Push1\n- uid: System.Reflection.Emit.StackBehaviour.Push1_push1\n  commentId: F:System.Reflection.Emit.StackBehaviour.Push1_push1\n  id: Push1_push1\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Push1_push1\n  fullName: System.Reflection.Emit.StackBehaviour.Push1_push1\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Push1_push1\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 43\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes 1 value onto the stack for the first operand, and 1 value onto the stack for the second operand.</p>\\n\"\n  syntax:\n    content: Push1_push1 = 20\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Push1_push1\n- uid: System.Reflection.Emit.StackBehaviour.Pushi\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pushi\n  id: Pushi\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pushi\n  fullName: System.Reflection.Emit.StackBehaviour.Pushi\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pushi\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 44\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a 32-bit integer onto the stack.</p>\\n\"\n  syntax:\n    content: Pushi = 21\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pushi\n- uid: System.Reflection.Emit.StackBehaviour.Pushi8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pushi8\n  id: Pushi8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pushi8\n  fullName: System.Reflection.Emit.StackBehaviour.Pushi8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pushi8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 45\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a 64-bit integer onto the stack.</p>\\n\"\n  syntax:\n    content: Pushi8 = 22\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pushi8\n- uid: System.Reflection.Emit.StackBehaviour.Pushr4\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pushr4\n  id: Pushr4\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pushr4\n  fullName: System.Reflection.Emit.StackBehaviour.Pushr4\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pushr4\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 46\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a 32-bit floating point number onto the stack.</p>\\n\"\n  syntax:\n    content: Pushr4 = 23\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pushr4\n- uid: System.Reflection.Emit.StackBehaviour.Pushr8\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pushr8\n  id: Pushr8\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pushr8\n  fullName: System.Reflection.Emit.StackBehaviour.Pushr8\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pushr8\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 47\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a 64-bit floating point number onto the stack.</p>\\n\"\n  syntax:\n    content: Pushr8 = 24\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pushr8\n- uid: System.Reflection.Emit.StackBehaviour.Pushref\n  commentId: F:System.Reflection.Emit.StackBehaviour.Pushref\n  id: Pushref\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Pushref\n  fullName: System.Reflection.Emit.StackBehaviour.Pushref\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pushref\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 48\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a reference onto the stack.</p>\\n\"\n  syntax:\n    content: Pushref = 25\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Pushref\n- uid: System.Reflection.Emit.StackBehaviour.Varpop\n  commentId: F:System.Reflection.Emit.StackBehaviour.Varpop\n  id: Varpop\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Varpop\n  fullName: System.Reflection.Emit.StackBehaviour.Varpop\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Varpop\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 49\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pops a variable off the stack.</p>\\n\"\n  syntax:\n    content: Varpop = 26\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Varpop\n- uid: System.Reflection.Emit.StackBehaviour.Varpush\n  commentId: F:System.Reflection.Emit.StackBehaviour.Varpush\n  id: Varpush\n  parent: System.Reflection.Emit.StackBehaviour\n  langs:\n  - csharp\n  - vb\n  name: Varpush\n  fullName: System.Reflection.Emit.StackBehaviour.Varpush\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Varpush\n    path: src/mscorlib/src/System/Reflection/Emit/StackBehaviour.cs\n    startLine: 50\n  assemblies:\n  - System.Reflection.Primitives\n  namespace: System.Reflection.Emit\n  summary: \"\\n<p>Pushes a variable onto the stack.</p>\\n\"\n  syntax:\n    content: Varpush = 27\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: StackBehaviour.Varpush\nreferences:\n- uid: System.Reflection.Emit\n  isExternal: false\n  name: System.Reflection.Emit\n  fullName: System.Reflection.Emit\n  nameWithType: System.Reflection.Emit\n  commentId: N:System.Reflection.Emit\n- uid: System.Reflection.Emit.StackBehaviour\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StackBehaviour\n  fullName: System.Reflection.Emit.StackBehaviour\n  nameWithType: StackBehaviour\n  commentId: T:System.Reflection.Emit.StackBehaviour\n"}