{"nodes":[{"pos":[1428,1445],"content":"FileSystemWatcher","needQuote":true,"nodes":[{"content":"FileSystemWatcher","pos":[0,17]}]},{"pos":[2833,2852],"content":"FileSystemWatcher()","needQuote":true,"nodes":[{"content":"FileSystemWatcher()","pos":[0,19]}]},{"pos":[4809,4834],"content":"FileSystemWatcher(String)","needQuote":true,"nodes":[{"content":"FileSystemWatcher(String)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;The directory to monitor, in standard or Universal Naming Convention (UNC) notation.","pos":[5662,5751],"source":"\\n<p>The directory to monitor, in standard or Universal Naming Convention (UNC) notation."},{"content":"&lt;/p&gt;\\n","pos":[5752,5758],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;path&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[5877,5935],"source":"\\n<p>The <em>path</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5936,5942],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is too long.&lt;/p&gt;\\n","pos":[6307,6346],"source":"\\n<p>\\n<em>path</em> is too long.</p>\\n"},{"pos":[7781,7814],"content":"FileSystemWatcher(String, String)","needQuote":true,"nodes":[{"content":"FileSystemWatcher(String, String)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The directory to monitor, in standard or Universal Naming Convention (UNC) notation.","pos":[8708,8797],"source":"\\n<p>The directory to monitor, in standard or Universal Naming Convention (UNC) notation."},{"content":"&lt;/p&gt;\\n","pos":[8798,8804],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;path&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;filter&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[9089,9225],"source":"\\n<p>The <em>path</em> parameter is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>The <em>filter</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[9226,9232],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;path&lt;/em&gt; is too long.&lt;/p&gt;\\n","pos":[9597,9636],"source":"\\n<p>\\n<em>path</em> is too long.</p>\\n"},{"pos":[11032,11051],"content":"EnableRaisingEvents","needQuote":true,"nodes":[{"content":"EnableRaisingEvents","pos":[0,19]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the component is enabled; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[11797,11889],"source":"\\n<p>\\n<strong>true</strong> if the component is enabled; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.","pos":[11890,11928],"source":" The default is <strong>false</strong>."},{"content":"If you are using the component on a designer in Visual Studio 2005, the default is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[11929,12040],"source":" If you are using the component on a designer in Visual Studio 2005, the default is <strong>true</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The current operating system is not Microsoft Windows NT or later.&lt;/p&gt;\\n","pos":[12412,12489],"source":"\\n<p>The current operating system is not Microsoft Windows NT or later.</p>\\n"},{"pos":[13292,13298],"content":"Filter","needQuote":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[14798,14819],"content":"IncludeSubdirectories","needQuote":true,"nodes":[{"content":"IncludeSubdirectories","pos":[0,21]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if you want to monitor subdirectories; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[15609,15711],"source":"\\n<p>\\n<strong>true</strong> if you want to monitor subdirectories; otherwise, <strong>false</strong>."},{"content":"The default is &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[15712,15756],"source":" The default is <strong>false</strong>.</p>\\n"},{"pos":[17105,17123],"content":"InternalBufferSize","needQuote":true,"nodes":[{"content":"InternalBufferSize","pos":[0,18]}]},{"content":"\\n&lt;p&gt;The internal buffer size in bytes.","pos":[17853,17892],"source":"\\n<p>The internal buffer size in bytes."},{"content":"The default is 8192 (8 KB).&lt;/p&gt;\\n","pos":[17893,17926],"source":" The default is 8192 (8 KB).</p>\\n"},{"pos":[18857,18869],"content":"NotifyFilter","needQuote":true,"nodes":[{"content":"NotifyFilter","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The value that is being set is not valid.&lt;/p&gt;\\n","pos":[20259,20311],"source":"\\n<p>The value that is being set is not valid.</p>\\n"},{"pos":[21037,21041],"content":"Path","needQuote":true,"nodes":[{"content":"Path","pos":[0,4]}]},{"content":"\\n&lt;p&gt;The specified path does not exist or could not be found.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The specified path contains wildcard characters.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The specified path contains invalid path characters.&lt;/p&gt;\\n","pos":[21891,22104],"source":"\\n<p>The specified path does not exist or could not be found.</p>\\n<p>-or- </p>\\n<p>The specified path contains wildcard characters.</p>\\n<p>-or- </p>\\n<p>The specified path contains invalid path characters.</p>\\n"},{"pos":[22591,22598],"content":"Changed","needQuote":true,"nodes":[{"content":"Changed","pos":[0,7]}]},{"pos":[24251,24258],"content":"Created","needQuote":true,"nodes":[{"content":"Created","pos":[0,7]}]},{"pos":[26066,26073],"content":"Deleted","needQuote":true,"nodes":[{"content":"Deleted","pos":[0,7]}]},{"pos":[27875,27880],"content":"Error","needQuote":true,"nodes":[{"content":"Error","pos":[0,5]}]},{"pos":[29617,29624],"content":"Renamed","needQuote":true,"nodes":[{"content":"Renamed","pos":[0,7]}]},{"pos":[31333,31363],"content":"OnChanged(FileSystemEventArgs)","needQuote":true,"nodes":[{"content":"OnChanged(FileSystemEventArgs)","pos":[0,30]}]},{"pos":[33126,33156],"content":"OnCreated(FileSystemEventArgs)","needQuote":true,"nodes":[{"content":"OnCreated(FileSystemEventArgs)","pos":[0,30]}]},{"pos":[34909,34939],"content":"OnDeleted(FileSystemEventArgs)","needQuote":true,"nodes":[{"content":"OnDeleted(FileSystemEventArgs)","pos":[0,30]}]},{"pos":[36671,36694],"content":"OnError(ErrorEventArgs)","needQuote":true,"nodes":[{"content":"OnError(ErrorEventArgs)","pos":[0,23]}]},{"pos":[38385,38412],"content":"OnRenamed(RenamedEventArgs)","needQuote":true,"nodes":[{"content":"OnRenamed(RenamedEventArgs)","pos":[0,27]}]},{"pos":[40048,40082],"content":"WaitForChanged(WatcherChangeTypes)","needQuote":true,"nodes":[{"content":"WaitForChanged(WatcherChangeTypes)","pos":[0,34]}]},{"pos":[41948,41989],"content":"WaitForChanged(WatcherChangeTypes, Int32)","needQuote":true,"nodes":[{"content":"WaitForChanged(WatcherChangeTypes, Int32)","pos":[0,41]}]},{"content":"\\n&lt;p&gt;The time (in milliseconds) to wait before timing out.","pos":[43220,43278],"source":"\\n<p>The time (in milliseconds) to wait before timing out."},{"content":"&lt;/p&gt;\\n","pos":[43279,43285],"source":" </p>\\n"},{"pos":[43994,44010],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.&lt;/p&gt;\\n","pos":[44889,45032],"source":"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n"},{"pos":[45358,45367],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[46087,46096],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[46236,46242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46392,46403],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[46578,46588],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[46683,46691],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[46760,46761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46788,46789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46859,46867],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[46936,46937],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46964,46965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47148,47162],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[47281,47287],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[47354,47355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47405,47411],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47471,47472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47555,47561],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[47628,47629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47679,47685],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47745,47746],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47960,47982],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[48130,48136],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[48203,48204],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48254,48260],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48321,48322]},{"pos":[48377,48383],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48443,48444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48541,48547],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[48614,48615],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48665,48671],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[48732,48733]},{"pos":[48788,48794],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48854,48855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49100,49131],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[49297,49312],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[49388,49389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49439,49445],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[49506,49507]},{"pos":[49562,49568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49628,49629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49735,49750],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[49826,49827],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[49877,49883],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[49944,49945]},{"pos":[50000,50006],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50066,50067],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50297,50310],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[50411,50422],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[50494,50495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50522,50523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50596,50607],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[50679,50680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50707,50708],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50883,50892],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[50985,50992],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[51060,51061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51088,51089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51158,51165],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[51233,51234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51261,51262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51437,51454],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[51563,51578],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[51654,51655],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51682,51683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51760,51775],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[51851,51852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[51879,51880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[52025,52031],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[52162,52168],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52314,52321],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[52468,52473],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52628,52641],"content":"NotifyFilters","needQuote":true,"nodes":[{"content":"NotifyFilters","pos":[0,13]}]},{"pos":[52835,52857],"content":"FileSystemEventHandler","needQuote":true,"nodes":[{"content":"FileSystemEventHandler","pos":[0,22]}]},{"pos":[53073,53090],"content":"ErrorEventHandler","needQuote":true,"nodes":[{"content":"ErrorEventHandler","pos":[0,17]}]},{"pos":[53293,53312],"content":"RenamedEventHandler","needQuote":true,"nodes":[{"content":"RenamedEventHandler","pos":[0,19]}]},{"pos":[53521,53540],"content":"FileSystemEventArgs","needQuote":true,"nodes":[{"content":"FileSystemEventArgs","pos":[0,19]}]},{"pos":[53744,53758],"content":"ErrorEventArgs","needQuote":true,"nodes":[{"content":"ErrorEventArgs","pos":[0,14]}]},{"pos":[53949,53965],"content":"RenamedEventArgs","needQuote":true,"nodes":[{"content":"RenamedEventArgs","pos":[0,16]}]},{"pos":[54164,54182],"content":"WatcherChangeTypes","needQuote":true,"nodes":[{"content":"WatcherChangeTypes","pos":[0,18]}]},{"pos":[54389,54409],"content":"WaitForChangedResult","needQuote":true,"nodes":[{"content":"WaitForChangedResult","pos":[0,20]}]},{"pos":[54627,54636],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[54739,54746],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[54798,54799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54826,54827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54901,54908],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[54960,54961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54988,54989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55150,55171],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[55372,55389],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[55567,55587],"content":"PathTooLongException","needQuote":true,"nodes":[{"content":"PathTooLongException","pos":[0,20]}]},{"pos":[55780,55803],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]},{"pos":[56005,56034],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]},{"pos":[56249,56270],"content":"FileNotFoundException","needQuote":true,"nodes":[{"content":"FileNotFoundException","pos":[0,21]}]}],"content":"items:\n- uid: System.IO.FileSystemWatcher\n  commentId: T:System.IO.FileSystemWatcher\n  id: FileSystemWatcher\n  parent: System.IO\n  children:\n  - System.IO.FileSystemWatcher.#ctor\n  - System.IO.FileSystemWatcher.#ctor(System.String)\n  - System.IO.FileSystemWatcher.#ctor(System.String,System.String)\n  - System.IO.FileSystemWatcher.Changed\n  - System.IO.FileSystemWatcher.Created\n  - System.IO.FileSystemWatcher.Deleted\n  - System.IO.FileSystemWatcher.Dispose\n  - System.IO.FileSystemWatcher.Dispose(System.Boolean)\n  - System.IO.FileSystemWatcher.EnableRaisingEvents\n  - System.IO.FileSystemWatcher.Error\n  - System.IO.FileSystemWatcher.Filter\n  - System.IO.FileSystemWatcher.IncludeSubdirectories\n  - System.IO.FileSystemWatcher.InternalBufferSize\n  - System.IO.FileSystemWatcher.NotifyFilter\n  - System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n  - System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  - System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  - System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  - System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n  - System.IO.FileSystemWatcher.Path\n  - System.IO.FileSystemWatcher.Renamed\n  - System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  - System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: FileSystemWatcher\n  fullName: System.IO.FileSystemWatcher\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: FileSystemWatcher\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n    startLine: 10\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</p>\\n\"\n  syntax:\n    content: 'public class FileSystemWatcher : IDisposable'\n    content.vb: >-\n      Public Class FileSystemWatcher\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: FileSystemWatcher\n- uid: System.IO.FileSystemWatcher.#ctor\n  commentId: M:System.IO.FileSystemWatcher.#ctor\n  id: '#ctor'\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: FileSystemWatcher()\n  fullName: System.IO.FileSystemWatcher.FileSystemWatcher()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 26\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public FileSystemWatcher()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.FileSystemWatcher()\n- uid: System.IO.FileSystemWatcher.#ctor(System.String)\n  commentId: M:System.IO.FileSystemWatcher.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: FileSystemWatcher(String)\n  fullName: System.IO.FileSystemWatcher.FileSystemWatcher(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 27\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, given the specified directory to monitor.</p>\\n\"\n  syntax:\n    content: public FileSystemWatcher(string path)\n    content.vb: Public Sub New(path As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The directory to monitor, in standard or Universal Naming Convention (UNC) notation. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>path</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>path</em> parameter is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The path specified through the <em>path</em> parameter does not exist. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> is too long.</p>\\n\"\n  seealso:\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.FileSystemWatcher(String)\n- uid: System.IO.FileSystemWatcher.#ctor(System.String,System.String)\n  commentId: M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: FileSystemWatcher(String, String)\n  fullName: System.IO.FileSystemWatcher.FileSystemWatcher(System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 28\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, given the specified directory and type of files to monitor.</p>\\n\"\n  syntax:\n    content: public FileSystemWatcher(string path, string filter)\n    content.vb: Public Sub New(path As String, filter As String)\n    parameters:\n    - id: path\n      type: System.String\n      description: \"\\n<p>The directory to monitor, in standard or Universal Naming Convention (UNC) notation. </p>\\n\"\n    - id: filter\n      type: System.String\n      description: \"\\n<p>The type of files to watch. For example, \\\"*.txt\\\" watches for changes to all text files. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>path</em> parameter is <strong>null</strong>.</p>\\n<p>-or- </p>\\n<p>The <em>filter</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The <em>path</em> parameter is an empty string (\\\"\\\").</p>\\n<p>-or- </p>\\n<p>The path specified through the <em>path</em> parameter does not exist. </p>\\n\"\n  - type: System.IO.PathTooLongException\n    commentId: T:System.IO.PathTooLongException\n    description: \"\\n<p>\\n<em>path</em> is too long.</p>\\n\"\n  seealso:\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  - type: System.IO.WatcherChangeTypes\n    commentId: T:System.IO.WatcherChangeTypes\n  see:\n  - type: System.Security.Permissions.SecurityAction.LinkDemand\n    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.FileSystemWatcher(String, String)\n- uid: System.IO.FileSystemWatcher.EnableRaisingEvents\n  commentId: P:System.IO.FileSystemWatcher.EnableRaisingEvents\n  id: EnableRaisingEvents\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: EnableRaisingEvents\n  fullName: System.IO.FileSystemWatcher.EnableRaisingEvents\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: EnableRaisingEvents\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 29\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets a value indicating whether the component is enabled.</p>\\n\"\n  syntax:\n    content: public bool EnableRaisingEvents { get; set; }\n    content.vb: Public Property EnableRaisingEvents As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the component is enabled; otherwise, <strong>false</strong>. The default is <strong>false</strong>. If you are using the component on a designer in Visual Studio 2005, the default is <strong>true</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object has been disposed.</p>\\n\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>The current operating system is not Microsoft Windows NT or later.</p>\\n\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"\\n<p>The directory specified in <xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> could not be found.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> has not been set or is invalid.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.EnableRaisingEvents\n- uid: System.IO.FileSystemWatcher.Filter\n  commentId: P:System.IO.FileSystemWatcher.Filter\n  id: Filter\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Filter\n  fullName: System.IO.FileSystemWatcher.Filter\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Filter\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 30\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the filter string used to determine what files are monitored in a directory.</p>\\n\"\n  syntax:\n    content: public string Filter { get; set; }\n    content.vb: Public Property Filter As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The filter string. The default is \\\"*.*\\\" (Watches all files.) </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.FileSystemWatcher.IncludeSubdirectories\n    commentId: P:System.IO.FileSystemWatcher.IncludeSubdirectories\n  - type: System.IO.FileSystemWatcher.InternalBufferSize\n    commentId: P:System.IO.FileSystemWatcher.InternalBufferSize\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Filter\n- uid: System.IO.FileSystemWatcher.IncludeSubdirectories\n  commentId: P:System.IO.FileSystemWatcher.IncludeSubdirectories\n  id: IncludeSubdirectories\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: IncludeSubdirectories\n  fullName: System.IO.FileSystemWatcher.IncludeSubdirectories\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IncludeSubdirectories\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 31\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</p>\\n\"\n  syntax:\n    content: public bool IncludeSubdirectories { get; set; }\n    content.vb: Public Property IncludeSubdirectories As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if you want to monitor subdirectories; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.FileSystemEventArgs.FullPath\n    commentId: P:System.IO.FileSystemEventArgs.FullPath\n  - type: System.IO.RenamedEventArgs.OldFullPath\n    commentId: P:System.IO.RenamedEventArgs.OldFullPath\n  - type: System.IO.FileSystemWatcher.InternalBufferSize\n    commentId: P:System.IO.FileSystemWatcher.InternalBufferSize\n  - type: System.IO.FileSystemEventArgs.Name\n    commentId: P:System.IO.FileSystemEventArgs.Name\n  - type: System.IO.RenamedEventArgs.OldName\n    commentId: P:System.IO.RenamedEventArgs.OldName\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.IncludeSubdirectories\n- uid: System.IO.FileSystemWatcher.InternalBufferSize\n  commentId: P:System.IO.FileSystemWatcher.InternalBufferSize\n  id: InternalBufferSize\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: InternalBufferSize\n  fullName: System.IO.FileSystemWatcher.InternalBufferSize\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: InternalBufferSize\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 32\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the size (in bytes) of the internal buffer.</p>\\n\"\n  syntax:\n    content: public int InternalBufferSize { get; set; }\n    content.vb: Public Property InternalBufferSize As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The internal buffer size in bytes. The default is 8192 (8 KB).</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.FileSystemWatcher.IncludeSubdirectories\n    commentId: P:System.IO.FileSystemWatcher.IncludeSubdirectories\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.InternalBufferSize\n- uid: System.IO.FileSystemWatcher.NotifyFilter\n  commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  id: NotifyFilter\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: NotifyFilter\n  fullName: System.IO.FileSystemWatcher.NotifyFilter\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NotifyFilter\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 33\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the type of changes to watch for.</p>\\n\"\n  syntax:\n    content: public NotifyFilters NotifyFilter { get; set; }\n    content.vb: Public Property NotifyFilter As NotifyFilters\n    parameters: []\n    return:\n      type: System.IO.NotifyFilters\n      description: \"\\n<p>One of the <xref href=\\\"System.IO.NotifyFilters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. The default is the bitwise OR combination of <strong>LastWrite</strong>, <strong>FileName</strong>, and <strong>DirectoryName</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The value is not a valid bitwise OR combination of the <xref href=\\\"System.IO.NotifyFilters\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values. </p>\\n\"\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: \"\\n<p>The value that is being set is not valid.</p>\\n\"\n  seealso:\n  - type: System.IO.NotifyFilters\n    commentId: T:System.IO.NotifyFilters\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.FileSystemWatcher.IncludeSubdirectories\n    commentId: P:System.IO.FileSystemWatcher.IncludeSubdirectories\n  - type: System.IO.FileSystemWatcher.InternalBufferSize\n    commentId: P:System.IO.FileSystemWatcher.InternalBufferSize\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.NotifyFilter\n- uid: System.IO.FileSystemWatcher.Path\n  commentId: P:System.IO.FileSystemWatcher.Path\n  id: Path\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Path\n  fullName: System.IO.FileSystemWatcher.Path\n  type: Property\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Path\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 34\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets or sets the path of the directory to watch.</p>\\n\"\n  syntax:\n    content: public string Path { get; set; }\n    content.vb: Public Property Path As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The path to monitor. The default is an empty string (\\\"\\\").</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The specified path does not exist or could not be found.</p>\\n<p>-or- </p>\\n<p>The specified path contains wildcard characters.</p>\\n<p>-or- </p>\\n<p>The specified path contains invalid path characters.</p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Path\n- uid: System.IO.FileSystemWatcher.Changed\n  commentId: E:System.IO.FileSystemWatcher.Changed\n  id: Changed\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Changed\n  fullName: System.IO.FileSystemWatcher.Changed\n  type: Event\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Changed\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 35\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Occurs when a file or directory in the specified <xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is changed.</p>\\n\"\n  syntax:\n    content: public event FileSystemEventHandler Changed\n    content.vb: Public Event Changed As FileSystemEventHandler\n    return:\n      type: System.IO.FileSystemEventHandler\n  seealso:\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n  - type: System.IO.FileSystemWatcher.SynchronizingObject\n    commentId: P:System.IO.FileSystemWatcher.SynchronizingObject\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Changed\n- uid: System.IO.FileSystemWatcher.Created\n  commentId: E:System.IO.FileSystemWatcher.Created\n  id: Created\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Created\n  fullName: System.IO.FileSystemWatcher.Created\n  type: Event\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Created\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 36\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Occurs when a file or directory in the specified <xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is created.</p>\\n\"\n  syntax:\n    content: public event FileSystemEventHandler Created\n    content.vb: Public Event Created As FileSystemEventHandler\n    return:\n      type: System.IO.FileSystemEventHandler\n  seealso:\n  - type: System.IO.FileSystemWatcher.Deleted\n    commentId: E:System.IO.FileSystemWatcher.Deleted\n  - type: System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  - type: System.IO.FileSystemWatcher.SynchronizingObject\n    commentId: P:System.IO.FileSystemWatcher.SynchronizingObject\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Created\n- uid: System.IO.FileSystemWatcher.Deleted\n  commentId: E:System.IO.FileSystemWatcher.Deleted\n  id: Deleted\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Deleted\n  fullName: System.IO.FileSystemWatcher.Deleted\n  type: Event\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Deleted\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 37\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Occurs when a file or directory in the specified <xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is deleted.</p>\\n\"\n  syntax:\n    content: public event FileSystemEventHandler Deleted\n    content.vb: Public Event Deleted As FileSystemEventHandler\n    return:\n      type: System.IO.FileSystemEventHandler\n  seealso:\n  - type: System.IO.FileSystemWatcher.Created\n    commentId: E:System.IO.FileSystemWatcher.Created\n  - type: System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  - type: System.IO.FileSystemWatcher.SynchronizingObject\n    commentId: P:System.IO.FileSystemWatcher.SynchronizingObject\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  - type: System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Deleted\n- uid: System.IO.FileSystemWatcher.Error\n  commentId: E:System.IO.FileSystemWatcher.Error\n  id: Error\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Error\n  fullName: System.IO.FileSystemWatcher.Error\n  type: Event\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Error\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 38\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Occurs when the instance of <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is unable to continue monitoring changes or when the internal buffer overflows.</p>\\n\"\n  syntax:\n    content: public event ErrorEventHandler Error\n    content.vb: Public Event Error As ErrorEventHandler\n    return:\n      type: System.IO.ErrorEventHandler\n  seealso:\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.ErrorEventArgs\n    commentId: T:System.IO.ErrorEventArgs\n  - type: System.IO.ErrorEventHandler\n    commentId: T:System.IO.ErrorEventHandler\n  - type: System.IO.FileSystemWatcher.Filter\n    commentId: P:System.IO.FileSystemWatcher.Filter\n  - type: System.IO.FileSystemWatcher.IncludeSubdirectories\n    commentId: P:System.IO.FileSystemWatcher.IncludeSubdirectories\n  - type: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Error\n- uid: System.IO.FileSystemWatcher.Renamed\n  commentId: E:System.IO.FileSystemWatcher.Renamed\n  id: Renamed\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Renamed\n  fullName: System.IO.FileSystemWatcher.Renamed\n  type: Event\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Renamed\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 39\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Occurs when a file or directory in the specified <xref href=\\\"System.IO.FileSystemWatcher.Path\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is renamed.</p>\\n\"\n  syntax:\n    content: public event RenamedEventHandler Renamed\n    content.vb: Public Event Renamed As RenamedEventHandler\n    return:\n      type: System.IO.RenamedEventHandler\n  seealso:\n  - type: System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n  - type: System.IO.FileSystemWatcher.SynchronizingObject\n    commentId: P:System.IO.FileSystemWatcher.SynchronizingObject\n  - type: System.IO.FileSystemWatcher.Path\n    commentId: P:System.IO.FileSystemWatcher.Path\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Renamed\n- uid: System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n  commentId: M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n  id: OnChanged(System.IO.FileSystemEventArgs)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: OnChanged(FileSystemEventArgs)\n  fullName: System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnChanged\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 40\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Raises the <xref href=\\\"System.IO.FileSystemWatcher.Changed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnChanged(FileSystemEventArgs e)\n    content.vb: Protected Sub OnChanged(e As FileSystemEventArgs)\n    parameters:\n    - id: e\n      type: System.IO.FileSystemEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileSystemEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.Changed\n    commentId: E:System.IO.FileSystemWatcher.Changed\n  - type: System.IO.FileSystemWatcher.NotifyFilter\n    commentId: P:System.IO.FileSystemWatcher.NotifyFilter\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemWatcher.OnChanged(FileSystemEventArgs)\n- uid: System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  commentId: M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  id: OnCreated(System.IO.FileSystemEventArgs)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: OnCreated(FileSystemEventArgs)\n  fullName: System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnCreated\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 41\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Raises the <xref href=\\\"System.IO.FileSystemWatcher.Created\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnCreated(FileSystemEventArgs e)\n    content.vb: Protected Sub OnCreated(e As FileSystemEventArgs)\n    parameters:\n    - id: e\n      type: System.IO.FileSystemEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileSystemEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.Created\n    commentId: E:System.IO.FileSystemWatcher.Created\n  - type: System.IO.FileSystemWatcher.Deleted\n    commentId: E:System.IO.FileSystemWatcher.Deleted\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemWatcher.OnCreated(FileSystemEventArgs)\n- uid: System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  commentId: M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  id: OnDeleted(System.IO.FileSystemEventArgs)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: OnDeleted(FileSystemEventArgs)\n  fullName: System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnDeleted\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 42\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Raises the <xref href=\\\"System.IO.FileSystemWatcher.Deleted\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnDeleted(FileSystemEventArgs e)\n    content.vb: Protected Sub OnDeleted(e As FileSystemEventArgs)\n    parameters:\n    - id: e\n      type: System.IO.FileSystemEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.IO.FileSystemEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.Created\n    commentId: E:System.IO.FileSystemWatcher.Created\n  - type: System.IO.FileSystemWatcher.Deleted\n    commentId: E:System.IO.FileSystemWatcher.Deleted\n  - type: System.IO.FileSystemEventArgs\n    commentId: T:System.IO.FileSystemEventArgs\n  - type: System.IO.FileSystemEventHandler\n    commentId: T:System.IO.FileSystemEventHandler\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemWatcher.OnDeleted(FileSystemEventArgs)\n- uid: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  commentId: M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  id: OnError(System.IO.ErrorEventArgs)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: OnError(ErrorEventArgs)\n  fullName: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnError\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 43\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Raises the <xref href=\\\"System.IO.FileSystemWatcher.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnError(ErrorEventArgs e)\n    content.vb: Protected Sub OnError(e As ErrorEventArgs)\n    parameters:\n    - id: e\n      type: System.IO.ErrorEventArgs\n      description: \"\\n<p>An <xref href=\\\"System.IO.ErrorEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.Error\n    commentId: E:System.IO.FileSystemWatcher.Error\n  - type: System.IO.ErrorEventArgs\n    commentId: T:System.IO.ErrorEventArgs\n  - type: System.IO.ErrorEventHandler\n    commentId: T:System.IO.ErrorEventHandler\n  - type: System.IO.InternalBufferOverflowException\n    commentId: T:System.IO.InternalBufferOverflowException\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemWatcher.OnError(ErrorEventArgs)\n- uid: System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n  commentId: M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n  id: OnRenamed(System.IO.RenamedEventArgs)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: OnRenamed(RenamedEventArgs)\n  fullName: System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OnRenamed\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 44\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Raises the <xref href=\\\"System.IO.FileSystemWatcher.Renamed\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: protected void OnRenamed(RenamedEventArgs e)\n    content.vb: Protected Sub OnRenamed(e As RenamedEventArgs)\n    parameters:\n    - id: e\n      type: System.IO.RenamedEventArgs\n      description: \"\\n<p>A <xref href=\\\"System.IO.RenamedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the event data. </p>\\n\"\n  seealso:\n  - type: System.IO.FileSystemWatcher.Renamed\n    commentId: E:System.IO.FileSystemWatcher.Renamed\n  - type: System.IO.RenamedEventArgs\n    commentId: T:System.IO.RenamedEventArgs\n  - type: System.IO.RenamedEventHandler\n    commentId: T:System.IO.RenamedEventHandler\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: FileSystemWatcher.OnRenamed(RenamedEventArgs)\n- uid: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  id: WaitForChanged(System.IO.WatcherChangeTypes)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: WaitForChanged(WatcherChangeTypes)\n  fullName: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForChanged\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 45\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</p>\\n\"\n  syntax:\n    content: public WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType)\n    content.vb: Public Function WaitForChanged(changeType As WatcherChangeTypes) As WaitForChangedResult\n    parameters:\n    - id: changeType\n      type: System.IO.WatcherChangeTypes\n      description: \"\\n<p>The <xref href=\\\"System.IO.WatcherChangeTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to watch for. </p>\\n\"\n    return:\n      type: System.IO.WaitForChangedResult\n      description: \"\\n<p>A <xref href=\\\"System.IO.WaitForChangedResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains specific information on the change that occurred.</p>\\n\"\n  seealso:\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.WaitForChanged(WatcherChangeTypes)\n- uid: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)\n  commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)\n  id: WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: WaitForChanged(WatcherChangeTypes, Int32)\n  fullName: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WaitForChanged\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 46\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</p>\\n\"\n  syntax:\n    content: public WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType, int timeout)\n    content.vb: Public Function WaitForChanged(changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult\n    parameters:\n    - id: changeType\n      type: System.IO.WatcherChangeTypes\n      description: \"\\n<p>The <xref href=\\\"System.IO.WatcherChangeTypes\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to watch for. </p>\\n\"\n    - id: timeout\n      type: System.Int32\n      description: \"\\n<p>The time (in milliseconds) to wait before timing out. </p>\\n\"\n    return:\n      type: System.IO.WaitForChangedResult\n      description: \"\\n<p>A <xref href=\\\"System.IO.WaitForChangedResult\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains specific information on the change that occurred.</p>\\n\"\n  seealso:\n  - type: System.IO.WaitForChangedResult\n    commentId: T:System.IO.WaitForChangedResult\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.WaitForChanged(WatcherChangeTypes, Int32)\n- uid: System.IO.FileSystemWatcher.Dispose(System.Boolean)\n  commentId: M:System.IO.FileSystemWatcher.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Dispose(Boolean)\n  fullName: System.IO.FileSystemWatcher.Dispose(System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n    startLine: 12\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Releases the unmanaged resources used by the <xref href=\\\"System.IO.FileSystemWatcher\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and optionally releases the managed resources.</p>\\n\"\n  syntax:\n    content: protected virtual void Dispose(bool disposing)\n    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - virtual\n  modifiers.vb:\n  - Protected\n  - Overridable\n  nameWithType: FileSystemWatcher.Dispose(Boolean)\n- uid: System.IO.FileSystemWatcher.Dispose\n  commentId: M:System.IO.FileSystemWatcher.Dispose\n  id: Dispose\n  parent: System.IO.FileSystemWatcher\n  langs:\n  - csharp\n  - vb\n  name: Dispose()\n  fullName: System.IO.FileSystemWatcher.Dispose()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Dispose\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.manual.cs\n    startLine: 13\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  syntax:\n    content: public void Dispose()\n    content.vb: Public Sub Dispose\n  implements:\n  - System.IDisposable.Dispose\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: FileSystemWatcher.Dispose()\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.IO.NotifyFilters\n  parent: System.IO\n  isExternal: false\n  name: NotifyFilters\n  fullName: System.IO.NotifyFilters\n  commentId: T:System.IO.NotifyFilters\n  nameWithType: NotifyFilters\n- uid: System.IO.FileSystemEventHandler\n  parent: System.IO\n  isExternal: false\n  name: FileSystemEventHandler\n  fullName: System.IO.FileSystemEventHandler\n  commentId: T:System.IO.FileSystemEventHandler\n  nameWithType: FileSystemEventHandler\n- uid: System.IO.ErrorEventHandler\n  parent: System.IO\n  isExternal: false\n  name: ErrorEventHandler\n  fullName: System.IO.ErrorEventHandler\n  commentId: T:System.IO.ErrorEventHandler\n  nameWithType: ErrorEventHandler\n- uid: System.IO.RenamedEventHandler\n  parent: System.IO\n  isExternal: false\n  name: RenamedEventHandler\n  fullName: System.IO.RenamedEventHandler\n  commentId: T:System.IO.RenamedEventHandler\n  nameWithType: RenamedEventHandler\n- uid: System.IO.FileSystemEventArgs\n  parent: System.IO\n  isExternal: false\n  name: FileSystemEventArgs\n  fullName: System.IO.FileSystemEventArgs\n  commentId: T:System.IO.FileSystemEventArgs\n  nameWithType: FileSystemEventArgs\n- uid: System.IO.ErrorEventArgs\n  parent: System.IO\n  isExternal: false\n  name: ErrorEventArgs\n  fullName: System.IO.ErrorEventArgs\n  commentId: T:System.IO.ErrorEventArgs\n  nameWithType: ErrorEventArgs\n- uid: System.IO.RenamedEventArgs\n  parent: System.IO\n  isExternal: false\n  name: RenamedEventArgs\n  fullName: System.IO.RenamedEventArgs\n  commentId: T:System.IO.RenamedEventArgs\n  nameWithType: RenamedEventArgs\n- uid: System.IO.WatcherChangeTypes\n  parent: System.IO\n  isExternal: false\n  name: WatcherChangeTypes\n  fullName: System.IO.WatcherChangeTypes\n  commentId: T:System.IO.WatcherChangeTypes\n  nameWithType: WatcherChangeTypes\n- uid: System.IO.WaitForChangedResult\n  parent: System.IO\n  isExternal: false\n  name: WaitForChangedResult\n  fullName: System.IO.WaitForChangedResult\n  commentId: T:System.IO.WaitForChangedResult\n  nameWithType: WaitForChangedResult\n- uid: System.IDisposable.Dispose\n  parent: System.IDisposable\n  isExternal: false\n  name: Dispose()\n  fullName: System.IDisposable.Dispose()\n  spec.csharp:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IDisposable.Dispose\n    name: Dispose\n    fullName: System.IDisposable.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.IDisposable.Dispose\n  nameWithType: IDisposable.Dispose()\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.IO.PathTooLongException\n  isExternal: false\n  name: PathTooLongException\n  fullName: System.IO.PathTooLongException\n  nameWithType: PathTooLongException\n  commentId: T:System.IO.PathTooLongException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n- uid: System.IO.FileNotFoundException\n  isExternal: false\n  name: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n  nameWithType: FileNotFoundException\n  commentId: T:System.IO.FileNotFoundException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n"}