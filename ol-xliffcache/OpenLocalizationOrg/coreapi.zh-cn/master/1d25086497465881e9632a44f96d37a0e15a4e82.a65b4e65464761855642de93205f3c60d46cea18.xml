{"nodes":[{"pos":[2601,2619],"content":"DateTimeFormatInfo","needQuote":true,"nodes":[{"content":"DateTimeFormatInfo","pos":[0,18]}]},{"pos":[4435,4455],"content":"DateTimeFormatInfo()","needQuote":true,"nodes":[{"content":"DateTimeFormatInfo()","pos":[0,20]}]},{"pos":[5687,5706],"content":"AbbreviatedDayNames","needQuote":true,"nodes":[{"content":"AbbreviatedDayNames","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[7100,7156],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[7157,7163],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an array that is multidimensional or that has a length that is not exactly 7.","pos":[7260,7371],"source":"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 7."},{"content":"&lt;/p&gt;\\n","pos":[7372,7378],"source":" </p>\\n"},{"pos":[8545,8574],"content":"AbbreviatedMonthGenitiveNames","needQuote":true,"nodes":[{"content":"AbbreviatedMonthGenitiveNames","pos":[0,29]}]},{"content":"\\n&lt;p&gt;An array of abbreviated month names.&lt;/p&gt;\\n","pos":[9563,9610],"source":"\\n<p>An array of abbreviated month names.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the array is multidimensional or has a length that is not exactly 13.&lt;/p&gt;\\n","pos":[9721,9821],"source":"\\n<p>In a set operation, the array is multidimensional or has a length that is not exactly 13.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the array or one of the elements of the array is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9926,10028],"source":"\\n<p>In a set operation, the array or one of the elements of the array is <strong>null</strong>.</p>\\n"},{"pos":[11011,11032],"content":"AbbreviatedMonthNames","needQuote":true,"nodes":[{"content":"AbbreviatedMonthNames","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[12412,12468],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[12469,12475],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an array that is multidimensional or that has a length that is not exactly 13.","pos":[12572,12684],"source":"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 13."},{"content":"&lt;/p&gt;\\n","pos":[12685,12691],"source":" </p>\\n"},{"pos":[13972,13984],"content":"AMDesignator","needQuote":true,"nodes":[{"content":"AMDesignator","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[15123,15179],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[15180,15186],"source":" </p>\\n"},{"pos":[15953,15961],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[17090,17146],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[17147,17153],"source":" </p>\\n"},{"pos":[18193,18209],"content":"CalendarWeekRule","needQuote":true,"nodes":[{"content":"CalendarWeekRule","pos":[0,16]}]},{"pos":[20388,20399],"content":"CurrentInfo","needQuote":true,"nodes":[{"content":"CurrentInfo","pos":[0,11]}]},{"pos":[22028,22036],"content":"DayNames","needQuote":true,"nodes":[{"content":"DayNames","pos":[0,8]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[23257,23313],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[23314,23320],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an array that is multidimensional or that has a length that is not exactly 7.","pos":[23417,23528],"source":"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 7."},{"content":"&lt;/p&gt;\\n","pos":[23529,23535],"source":" </p>\\n"},{"pos":[24624,24638],"content":"FirstDayOfWeek","needQuote":true,"nodes":[{"content":"FirstDayOfWeek","pos":[0,14]}]},{"pos":[26651,26670],"content":"FullDateTimePattern","needQuote":true,"nodes":[{"content":"FullDateTimePattern","pos":[0,19]}]},{"content":"\\n&lt;p&gt;The custom format string for a long date and long time value.&lt;/p&gt;\\n","pos":[27424,27496],"source":"\\n<p>The custom format string for a long date and long time value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[27615,27671],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[27672,27678],"source":" </p>\\n"},{"pos":[28323,28336],"content":"InvariantInfo","needQuote":true,"nodes":[{"content":"InvariantInfo","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A read-only object that is culture-independent (invariant).&lt;/p&gt;\\n","pos":[29234,29304],"source":"\\n<p>A read-only object that is culture-independent (invariant).</p>\\n"},{"pos":[29820,29830],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[31418,31433],"content":"LongDatePattern","needQuote":true,"nodes":[{"content":"LongDatePattern","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The custom format string for a long date value.&lt;/p&gt;\\n","pos":[32157,32215],"source":"\\n<p>The custom format string for a long date value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[32334,32390],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[32391,32397],"source":" </p>\\n"},{"pos":[33044,33059],"content":"LongTimePattern","needQuote":true,"nodes":[{"content":"LongTimePattern","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The format pattern for a long time value.&lt;/p&gt;\\n","pos":[33784,33836],"source":"\\n<p>The format pattern for a long time value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[33955,34011],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[34012,34018],"source":" </p>\\n"},{"pos":[34665,34680],"content":"MonthDayPattern","needQuote":true,"nodes":[{"content":"MonthDayPattern","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The custom format string for a month and day value.&lt;/p&gt;\\n","pos":[35409,35471],"source":"\\n<p>The custom format string for a month and day value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[35590,35646],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[35647,35653],"source":" </p>\\n"},{"pos":[36309,36327],"content":"MonthGenitiveNames","needQuote":true,"nodes":[{"content":"MonthGenitiveNames","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A string array of month names.&lt;/p&gt;\\n","pos":[37260,37301],"source":"\\n<p>A string array of month names.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the array is multidimensional or has a length that is not exactly 13.&lt;/p&gt;\\n","pos":[37412,37512],"source":"\\n<p>In a set operation, the array is multidimensional or has a length that is not exactly 13.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the array or one of its elements is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[37617,37706],"source":"\\n<p>In a set operation, the array or one of its elements is <strong>null</strong>.</p>\\n"},{"pos":[38796,38806],"content":"MonthNames","needQuote":true,"nodes":[{"content":"MonthNames","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[40293,40349],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[40350,40356],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to an array that is multidimensional or that has a length that is not exactly 13.","pos":[40453,40565],"source":"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 13."},{"content":"&lt;/p&gt;\\n","pos":[40566,40572],"source":" </p>\\n"},{"pos":[41673,41685],"content":"PMDesignator","needQuote":true,"nodes":[{"content":"PMDesignator","pos":[0,12]}]},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[42841,42897],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[42898,42904],"source":" </p>\\n"},{"pos":[43689,43703],"content":"RFC1123Pattern","needQuote":true,"nodes":[{"content":"RFC1123Pattern","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The custom format string for a time value that is based on the IETF RFC 1123 specification.&lt;/p&gt;\\n","pos":[44521,44623],"source":"\\n<p>The custom format string for a time value that is based on the IETF RFC 1123 specification.</p>\\n"},{"pos":[44998,45014],"content":"ShortDatePattern","needQuote":true,"nodes":[{"content":"ShortDatePattern","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The custom format string for a short date value.&lt;/p&gt;\\n","pos":[45744,45803],"source":"\\n<p>The custom format string for a short date value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[45922,45978],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[45979,45985],"source":" </p>\\n"},{"pos":[46636,46652],"content":"ShortestDayNames","needQuote":true,"nodes":[{"content":"ShortestDayNames","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A string array of day names.&lt;/p&gt;\\n","pos":[47607,47646],"source":"\\n<p>A string array of day names.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the array does not have exactly seven elements.&lt;/p&gt;\\n","pos":[47757,47835],"source":"\\n<p>In a set operation, the array does not have exactly seven elements.</p>\\n"},{"content":"\\n&lt;p&gt;In a set operation, the value array or one of the elements of the value array is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[47940,48054],"source":"\\n<p>In a set operation, the value array or one of the elements of the value array is <strong>null</strong>.</p>\\n"},{"pos":[48702,48718],"content":"ShortTimePattern","needQuote":true,"nodes":[{"content":"ShortTimePattern","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The custom format string for a short time value.&lt;/p&gt;\\n","pos":[49448,49507],"source":"\\n<p>The custom format string for a short time value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[49626,49682],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[49683,49689],"source":" </p>\\n"},{"pos":[50361,50384],"content":"SortableDateTimePattern","needQuote":true,"nodes":[{"content":"SortableDateTimePattern","pos":[0,23]}]},{"content":"\\n&lt;p&gt;The custom format string for a sortable date and time value.&lt;/p&gt;\\n","pos":[51150,51221],"source":"\\n<p>The custom format string for a sortable date and time value.</p>\\n"},{"pos":[51837,51869],"content":"UniversalSortableDateTimePattern","needQuote":true,"nodes":[{"content":"UniversalSortableDateTimePattern","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The custom format string for a universal, sortable date and time string.&lt;/p&gt;\\n","pos":[52683,52766],"source":"\\n<p>The custom format string for a universal, sortable date and time string.</p>\\n"},{"pos":[53325,53341],"content":"YearMonthPattern","needQuote":true,"nodes":[{"content":"YearMonthPattern","pos":[0,16]}]},{"content":"\\n&lt;p&gt;The custom format string for a year and month value.&lt;/p&gt;\\n","pos":[54075,54138],"source":"\\n<p>The custom format string for a year and month value.</p>\\n"},{"content":"\\n&lt;p&gt;The property is being set to &lt;strong&gt;null&lt;/strong&gt;.","pos":[54257,54313],"source":"\\n<p>The property is being set to <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[54314,54320],"source":" </p>\\n"},{"pos":[54938,54945],"content":"Clone()","needQuote":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[56333,56365],"content":"GetAbbreviatedDayName(DayOfWeek)","needQuote":true,"nodes":[{"content":"GetAbbreviatedDayName(DayOfWeek)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The culture-specific abbreviated name of the day of the week represented by &lt;em&gt;dayofweek&lt;/em&gt;.&lt;/p&gt;\\n","pos":[57501,57607],"source":"\\n<p>The culture-specific abbreviated name of the day of the week represented by <em>dayofweek</em>.</p>\\n"},{"pos":[58715,58743],"content":"GetAbbreviatedEraName(Int32)","needQuote":true,"nodes":[{"content":"GetAbbreviatedEraName(Int32)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The integer representing the era.","pos":[59551,59589],"source":"\\n<p>The integer representing the era."},{"content":"&lt;/p&gt;\\n","pos":[59590,59596],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string containing the abbreviated name of the specified era, if an abbreviation exists.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;A string containing the full name of the era, if an abbreviation does not exist.&lt;/p&gt;\\n","pos":[59656,59859],"source":"\\n<p>A string containing the abbreviated name of the specified era, if an abbreviation exists.</p>\\n<p>-or- </p>\\n<p>A string containing the full name of the era, if an abbreviation does not exist.</p>\\n"},{"pos":[60843,60873],"content":"GetAbbreviatedMonthName(Int32)","needQuote":true,"nodes":[{"content":"GetAbbreviatedMonthName(Int32)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 13 representing the name of the month to retrieve.","pos":[61822,61903],"source":"\\n<p>An integer from 1 through 13 representing the name of the month to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[61904,61910],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The culture-specific abbreviated name of the month represented by &lt;em&gt;month&lt;/em&gt;.&lt;/p&gt;\\n","pos":[61970,62062],"source":"\\n<p>The culture-specific abbreviated name of the month represented by <em>month</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;month&lt;/em&gt; is less than 1 or greater than 13.","pos":[62193,62249],"source":"\\n<p>\\n<em>month</em> is less than 1 or greater than 13."},{"content":"&lt;/p&gt;\\n","pos":[62250,62256],"source":" </p>\\n"},{"pos":[63109,63130],"content":"GetDayName(DayOfWeek)","needQuote":true,"nodes":[{"content":"GetDayName(DayOfWeek)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The culture-specific full name of the day of the week represented by &lt;em&gt;dayofweek&lt;/em&gt;.&lt;/p&gt;\\n","pos":[64215,64314],"source":"\\n<p>The culture-specific full name of the day of the week represented by <em>dayofweek</em>.</p>\\n"},{"pos":[65347,65361],"content":"GetEra(String)","needQuote":true,"nodes":[{"content":"GetEra(String)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The string containing the name of the era.","pos":[66075,66122],"source":"\\n<p>The string containing the name of the era."},{"content":"&lt;/p&gt;\\n","pos":[66123,66129],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The integer representing the era, if &lt;em&gt;eraName&lt;/em&gt; is valid; otherwise, -1.&lt;/p&gt;\\n","pos":[66188,66277],"source":"\\n<p>The integer representing the era, if <em>eraName</em> is valid; otherwise, -1.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;eraName&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[66396,66445],"source":"\\n<p>\\n<em>eraName</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66446,66452],"source":" </p>\\n"},{"pos":[67085,67102],"content":"GetEraName(Int32)","needQuote":true,"nodes":[{"content":"GetEraName(Int32)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The integer representing the era.","pos":[67827,67865],"source":"\\n<p>The integer representing the era."},{"content":"&lt;/p&gt;\\n","pos":[67866,67872],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A string containing the name of the era.&lt;/p&gt;\\n","pos":[67932,67983],"source":"\\n<p>A string containing the name of the era.</p>\\n"},{"pos":[68860,68875],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"content":"\\n&lt;p&gt;The type of the required formatting service.","pos":[69643,69692],"source":"\\n<p>The type of the required formatting service."},{"content":"&lt;/p&gt;\\n","pos":[69693,69699],"source":" </p>\\n"},{"pos":[70696,70724],"content":"GetInstance(IFormatProvider)","needQuote":true,"nodes":[{"content":"GetInstance(IFormatProvider)","pos":[0,28]}]},{"pos":[72913,72932],"content":"GetMonthName(Int32)","needQuote":true,"nodes":[{"content":"GetMonthName(Int32)","pos":[0,19]}]},{"content":"\\n&lt;p&gt;An integer from 1 through 13 representing the name of the month to retrieve.","pos":[73830,73911],"source":"\\n<p>An integer from 1 through 13 representing the name of the month to retrieve."},{"content":"&lt;/p&gt;\\n","pos":[73912,73918],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The culture-specific full name of the month represented by &lt;em&gt;month&lt;/em&gt;.&lt;/p&gt;\\n","pos":[73978,74063],"source":"\\n<p>The culture-specific full name of the month represented by <em>month</em>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;month&lt;/em&gt; is less than 1 or greater than 13.","pos":[74194,74250],"source":"\\n<p>\\n<em>month</em> is less than 1 or greater than 13."},{"content":"&lt;/p&gt;\\n","pos":[74251,74257],"source":" </p>\\n"},{"pos":[75140,75168],"content":"ReadOnly(DateTimeFormatInfo)","needQuote":true,"nodes":[{"content":"ReadOnly(DateTimeFormatInfo)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;dtfi&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[76542,76588],"source":"\\n<p>\\n<em>dtfi</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[76589,76595],"source":" </p>\\n"},{"pos":[76999,77019],"content":"System.Globalization","needQuote":true,"nodes":[{"content":"System.Globalization","pos":[0,20]}]},{"pos":[77192,77198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[77352,77367],"content":"IFormatProvider","needQuote":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[77554,77564],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[77659,77667],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[77736,77737],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77764,77765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[77835,77843],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[77912,77913],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[77940,77941],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78124,78138],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[78257,78263],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78330,78331],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78381,78387],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78447,78448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78531,78537],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[78604,78605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78655,78661],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[78721,78722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78936,78958],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[79106,79112],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[79179,79180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79230,79236],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79297,79298]},{"pos":[79353,79359],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79419,79420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79517,79523],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[79590,79591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79641,79647],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[79708,79709]},{"pos":[79764,79770],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[79830,79831],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80076,80107],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[80273,80288],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[80364,80365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80415,80421],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[80482,80483]},{"pos":[80538,80544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[80604,80605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[80711,80726],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[80802,80803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[80853,80859],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[80920,80921]},{"pos":[80976,80982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[81042,81043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81273,81286],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[81387,81398],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[81470,81471],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81498,81499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81572,81583],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[81655,81656],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[81683,81684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81859,81868],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[81961,81968],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[82036,82037],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82064,82065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82134,82141],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[82209,82210],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82237,82238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82413,82430],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[82539,82554],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[82630,82631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82658,82659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[82736,82751],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[82827,82828],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[82855,82856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[83001,83007],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[83103,83111],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[83239,83245],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[83306,83308]},{"pos":[83373,83379],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83439,83441],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[83578,83584],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[83759,83767],"content":"Calendar","needQuote":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[83984,84000],"content":"CalendarWeekRule","needQuote":true,"nodes":[{"content":"CalendarWeekRule","pos":[0,16]}]},{"pos":[84243,84261],"content":"DateTimeFormatInfo","needQuote":true,"nodes":[{"content":"DateTimeFormatInfo","pos":[0,18]}]},{"pos":[84473,84482],"content":"DayOfWeek","needQuote":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[84637,84644],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[84791,84796],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84985,85000],"content":"GetFormat(Type)","needQuote":true,"nodes":[{"content":"GetFormat(Type)","pos":[0,15]}]},{"pos":[85139,85148],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[85227,85228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85276,85280],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85338,85339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85432,85441],"content":"GetFormat","needQuote":true,"nodes":[{"content":"GetFormat","pos":[0,9]}]},{"pos":[85520,85521],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[85569,85573],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85631,85632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85822,85826],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[85963,85984],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[86185,86202],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[86399,86424],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]},{"pos":[86630,86657],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Globalization.DateTimeFormatInfo\n  commentId: T:System.Globalization.DateTimeFormatInfo\n  id: DateTimeFormatInfo\n  parent: System.Globalization\n  children:\n  - System.Globalization.DateTimeFormatInfo.#ctor\n  - System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  - System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  - System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  - System.Globalization.DateTimeFormatInfo.AMDesignator\n  - System.Globalization.DateTimeFormatInfo.Calendar\n  - System.Globalization.DateTimeFormatInfo.CalendarWeekRule\n  - System.Globalization.DateTimeFormatInfo.Clone\n  - System.Globalization.DateTimeFormatInfo.CurrentInfo\n  - System.Globalization.DateTimeFormatInfo.DayNames\n  - System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\n  - System.Globalization.DateTimeFormatInfo.FullDateTimePattern\n  - System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n  - System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)\n  - System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n  - System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n  - System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n  - System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n  - System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n  - System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)\n  - System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n  - System.Globalization.DateTimeFormatInfo.InvariantInfo\n  - System.Globalization.DateTimeFormatInfo.IsReadOnly\n  - System.Globalization.DateTimeFormatInfo.LongDatePattern\n  - System.Globalization.DateTimeFormatInfo.LongTimePattern\n  - System.Globalization.DateTimeFormatInfo.MonthDayPattern\n  - System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  - System.Globalization.DateTimeFormatInfo.MonthNames\n  - System.Globalization.DateTimeFormatInfo.PMDesignator\n  - System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n  - System.Globalization.DateTimeFormatInfo.RFC1123Pattern\n  - System.Globalization.DateTimeFormatInfo.ShortDatePattern\n  - System.Globalization.DateTimeFormatInfo.ShortestDayNames\n  - System.Globalization.DateTimeFormatInfo.ShortTimePattern\n  - System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n  - System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n  - System.Globalization.DateTimeFormatInfo.YearMonthPattern\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormatInfo\n  fullName: System.Globalization.DateTimeFormatInfo\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DateTimeFormatInfo\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 56\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Provides culture-specific information about the format of date and time values.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [ComVisible(true)]\n\n      public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider\n    content.vb: >-\n      <Serializable>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class DateTimeFormatInfo\n          Implements ICloneable, IFormatProvider\n  seealso:\n  - type: System.DateTime\n    commentId: T:System.DateTime\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  inheritance:\n  - System.Object\n  implements:\n  - System.IFormatProvider\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DateTimeFormatInfo\n- uid: System.Globalization.DateTimeFormatInfo.#ctor\n  commentId: M:System.Globalization.DateTimeFormatInfo.#ctor\n  id: '#ctor'\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: DateTimeFormatInfo()\n  fullName: System.Globalization.DateTimeFormatInfo.DateTimeFormatInfo()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 332\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Initializes a new writable instance of the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is culture-independent (invariant).</p>\\n\"\n  syntax:\n    content: public DateTimeFormatInfo()\n    content.vb: Public Sub New\n  seealso:\n  - type: System.Globalization.CultureInfo.DateTimeFormat\n    commentId: P:System.Globalization.CultureInfo.DateTimeFormat\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.DateTimeFormatInfo()\n- uid: System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  id: AbbreviatedDayNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: AbbreviatedDayNames\n  fullName: System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AbbreviatedDayNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1383\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a one-dimensional array of type <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the culture-specific abbreviated names of the days of the week.</p>\\n\"\n  syntax:\n    content: public string[] AbbreviatedDayNames { get; set; }\n    content.vb: Public Property AbbreviatedDayNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A one-dimensional array of type <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the culture-specific abbreviated names of the days of the week. The array for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains \\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", and \\\"Sat\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 7. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.DayNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.DayNames\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  - type: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.AbbreviatedDayNames\n- uid: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  id: AbbreviatedMonthGenitiveNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: AbbreviatedMonthGenitiveNames\n  fullName: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AbbreviatedMonthGenitiveNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 2101\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a string array of abbreviated month names associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public string[] AbbreviatedMonthGenitiveNames { get; set; }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property AbbreviatedMonthGenitiveNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>An array of abbreviated month names.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>In a set operation, the array is multidimensional or has a length that is not exactly 13.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>In a set operation, the array or one of the elements of the array is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>In a set operation, the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n- uid: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  id: AbbreviatedMonthNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: AbbreviatedMonthNames\n  fullName: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AbbreviatedMonthNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1463\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a one-dimensional string array that contains the culture-specific abbreviated names of the months.</p>\\n\"\n  syntax:\n    content: public string[] AbbreviatedMonthNames { get; set; }\n    content.vb: Public Property AbbreviatedMonthNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A one-dimensional string array with 13 elements that contains the culture-specific abbreviated names of the months. For 12-month calendars, the 13th element of the array is an empty string. The array for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains \\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\", and \\\"\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 13. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  - type: System.Globalization.DateTimeFormatInfo.MonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthNames\n  - type: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.AbbreviatedMonthNames\n- uid: System.Globalization.DateTimeFormatInfo.AMDesignator\n  commentId: P:System.Globalization.DateTimeFormatInfo.AMDesignator\n  id: AMDesignator\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: AMDesignator\n  fullName: System.Globalization.DateTimeFormatInfo.AMDesignator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: AMDesignator\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 565\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string designator for hours that are \\\"ante meridiem\\\" (before noon).</p>\\n\"\n  syntax:\n    content: >-\n      public string AMDesignator\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: Public Property AMDesignator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string designator for hours that are ante meridiem. The default for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"AM\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.PMDesignator\n    commentId: P:System.Globalization.DateTimeFormatInfo.PMDesignator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.AMDesignator\n- uid: System.Globalization.DateTimeFormatInfo.Calendar\n  commentId: P:System.Globalization.DateTimeFormatInfo.Calendar\n  id: Calendar\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: Calendar\n  fullName: System.Globalization.DateTimeFormatInfo.Calendar\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Calendar\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 598\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the calendar to use for the current culture.</p>\\n\"\n  syntax:\n    content: public Calendar Calendar { get; set; }\n    content.vb: Public Property Calendar As Calendar\n    parameters: []\n    return:\n      type: System.Globalization.Calendar\n      description: \"\\n<p>The calendar to use for the current culture. The default for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is a <xref href=\\\"System.Globalization.GregorianCalendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a <xref href=\\\"System.Globalization.Calendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is not valid for the current culture. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.Calendar\n- uid: System.Globalization.DateTimeFormatInfo.CalendarWeekRule\n  commentId: P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule\n  id: CalendarWeekRule\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CalendarWeekRule\n  fullName: System.Globalization.DateTimeFormatInfo.CalendarWeekRule\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CalendarWeekRule\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 907\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a value that specifies which rule is used to determine the first calendar week of the year.</p>\\n\"\n  syntax:\n    content: public CalendarWeekRule CalendarWeekRule { get; set; }\n    content.vb: Public Property CalendarWeekRule As CalendarWeekRule\n    parameters: []\n    return:\n      type: System.Globalization.CalendarWeekRule\n      description: \"\\n<p>A value that determines the first calendar week of the year. The default for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.Globalization.CalendarWeekRule.FirstDay\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is not a valid <xref href=\\\"System.Globalization.CalendarWeekRule\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>In a set operation, the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CalendarWeekRule\n    commentId: T:System.Globalization.CalendarWeekRule\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.CalendarWeekRule\n- uid: System.Globalization.DateTimeFormatInfo.CurrentInfo\n  commentId: P:System.Globalization.DateTimeFormatInfo.CurrentInfo\n  id: CurrentInfo\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: CurrentInfo\n  fullName: System.Globalization.DateTimeFormatInfo.CurrentInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CurrentInfo\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 508\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a read-only <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that formats values based on the current culture.</p>\\n\"\n  syntax:\n    content: public static DateTimeFormatInfo CurrentInfo { get; }\n    content.vb: Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>A read-only <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object based on the <xref href=\\\"System.Globalization.CultureInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object for the current thread.</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.CurrentInfo\n- uid: System.Globalization.DateTimeFormatInfo.DayNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.DayNames\n  id: DayNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: DayNames\n  fullName: System.Globalization.DateTimeFormatInfo.DayNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: DayNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1436\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a one-dimensional string array that contains the culture-specific full names of the days of the week.</p>\\n\"\n  syntax:\n    content: public string[] DayNames { get; set; }\n    content.vb: Public Property DayNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A one-dimensional string array that contains the culture-specific full names of the days of the week. The array for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains \\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", and \\\"Saturday\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 7. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  - type: System.Globalization.DateTimeFormatInfo.MonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthNames\n  - type: System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.DayNames\n- uid: System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\n  commentId: P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\n  id: FirstDayOfWeek\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: FirstDayOfWeek\n  fullName: System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FirstDayOfWeek\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 878\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the first day of the week.</p>\\n\"\n  syntax:\n    content: public DayOfWeek FirstDayOfWeek { get; set; }\n    content.vb: Public Property FirstDayOfWeek As DayOfWeek\n    parameters: []\n    return:\n      type: System.DayOfWeek\n      description: \"\\n<p>An enumeration value that represents the first day of the week. The default for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <xref href=\\\"System.DayOfWeek.Sunday\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The property is being set to a value that is not a valid <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.DayOfWeek\n    commentId: T:System.DayOfWeek\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.FirstDayOfWeek\n- uid: System.Globalization.DateTimeFormatInfo.FullDateTimePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern\n  id: FullDateTimePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: FullDateTimePattern\n  fullName: System.Globalization.DateTimeFormatInfo.FullDateTimePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: FullDateTimePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 936\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a long date and long time value.</p>\\n\"\n  syntax:\n    content: public string FullDateTimePattern { get; set; }\n    content.vb: Public Property FullDateTimePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a long date and long time value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.FullDateTimePattern\n- uid: System.Globalization.DateTimeFormatInfo.InvariantInfo\n  commentId: P:System.Globalization.DateTimeFormatInfo.InvariantInfo\n  id: InvariantInfo\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: InvariantInfo\n  fullName: System.Globalization.DateTimeFormatInfo.InvariantInfo\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: InvariantInfo\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 491\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the default read-only <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that is culture-independent (invariant).</p>\\n\"\n  syntax:\n    content: public static DateTimeFormatInfo InvariantInfo { get; }\n    content.vb: Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo\n    parameters: []\n    return:\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>A read-only object that is culture-independent (invariant).</p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo.InvariantCulture\n    commentId: P:System.Globalization.CultureInfo.InvariantCulture\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.InvariantInfo\n- uid: System.Globalization.DateTimeFormatInfo.IsReadOnly\n  commentId: P:System.Globalization.DateTimeFormatInfo.IsReadOnly\n  id: IsReadOnly\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: IsReadOnly\n  fullName: System.Globalization.DateTimeFormatInfo.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsReadOnly\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1999\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets a value indicating whether the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  syntax:\n    content: public bool IsReadOnly { get; }\n    content.vb: Public ReadOnly Property IsReadOnly As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n    commentId: M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.IsReadOnly\n- uid: System.Globalization.DateTimeFormatInfo.LongDatePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.LongDatePattern\n  id: LongDatePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: LongDatePattern\n  fullName: System.Globalization.DateTimeFormatInfo.LongDatePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LongDatePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 965\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a long date value.</p>\\n\"\n  syntax:\n    content: public string LongDatePattern { get; set; }\n    content.vb: Public Property LongDatePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a long date value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.LongDatePattern\n- uid: System.Globalization.DateTimeFormatInfo.LongTimePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.LongTimePattern\n  id: LongTimePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: LongTimePattern\n  fullName: System.Globalization.DateTimeFormatInfo.LongTimePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LongTimePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1004\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a long time value.</p>\\n\"\n  syntax:\n    content: public string LongTimePattern { get; set; }\n    content.vb: Public Property LongTimePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The format pattern for a long time value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.LongTimePattern\n- uid: System.Globalization.DateTimeFormatInfo.MonthDayPattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.MonthDayPattern\n  id: MonthDayPattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: MonthDayPattern\n  fullName: System.Globalization.DateTimeFormatInfo.MonthDayPattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MonthDayPattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1042\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a month and day value.</p>\\n\"\n  syntax:\n    content: public string MonthDayPattern { get; set; }\n    content.vb: Public Property MonthDayPattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a month and day value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.MonthDayPattern\n- uid: System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  id: MonthGenitiveNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: MonthGenitiveNames\n  fullName: System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MonthGenitiveNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 2129\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a string array of month names associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public string[] MonthGenitiveNames { get; set; }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property MonthGenitiveNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A string array of month names.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>In a set operation, the array is multidimensional or has a length that is not exactly 13.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>In a set operation, the array or one of its elements is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>In a set operation, the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames\n  - type: System.Globalization.DateTimeFormatInfo.MonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthNames\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.MonthGenitiveNames\n- uid: System.Globalization.DateTimeFormatInfo.MonthNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.MonthNames\n  id: MonthNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: MonthNames\n  fullName: System.Globalization.DateTimeFormatInfo.MonthNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: MonthNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1487\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a one-dimensional array of type <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the culture-specific full names of the months.</p>\\n\"\n  syntax:\n    content: public string[] MonthNames { get; set; }\n    content.vb: Public Property MonthNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A one-dimensional array of type <xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> containing the culture-specific full names of the months. In a 12-month calendar, the 13th element of the array is an empty string. The array for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains \\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\", and \\\"\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>The property is being set to an array that is multidimensional or that has a length that is not exactly 13. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  - type: System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames\n  - type: System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.MonthNames\n- uid: System.Globalization.DateTimeFormatInfo.PMDesignator\n  commentId: P:System.Globalization.DateTimeFormatInfo.PMDesignator\n  id: PMDesignator\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: PMDesignator\n  fullName: System.Globalization.DateTimeFormatInfo.PMDesignator\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: PMDesignator\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1069\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the string designator for hours that are \\\"post meridiem\\\" (after noon).</p>\\n\"\n  syntax:\n    content: >-\n      public string PMDesignator\n\n      {\n          [SecuritySafeCritical]\n          get;\n          set;\n      }\n    content.vb: Public Property PMDesignator As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The string designator for hours that are \\\"post meridiem\\\" (after noon). The default for <xref href=\\\"System.Globalization.DateTimeFormatInfo.InvariantInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is \\\"PM\\\".</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.AMDesignator\n    commentId: P:System.Globalization.DateTimeFormatInfo.AMDesignator\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.PMDesignator\n- uid: System.Globalization.DateTimeFormatInfo.RFC1123Pattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern\n  id: RFC1123Pattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: RFC1123Pattern\n  fullName: System.Globalization.DateTimeFormatInfo.RFC1123Pattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: RFC1123Pattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1102\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the custom format string for a time value that is based on the Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specification.</p>\\n\"\n  syntax:\n    content: public string RFC1123Pattern { get; }\n    content.vb: Public ReadOnly Property RFC1123Pattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a time value that is based on the IETF RFC 1123 specification.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.RFC1123Pattern\n- uid: System.Globalization.DateTimeFormatInfo.ShortDatePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.ShortDatePattern\n  id: ShortDatePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: ShortDatePattern\n  fullName: System.Globalization.DateTimeFormatInfo.ShortDatePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortDatePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1115\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a short date value.</p>\\n\"\n  syntax:\n    content: public string ShortDatePattern { get; set; }\n    content.vb: Public Property ShortDatePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a short date value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.ShortDatePattern\n- uid: System.Globalization.DateTimeFormatInfo.ShortestDayNames\n  commentId: P:System.Globalization.DateTimeFormatInfo.ShortestDayNames\n  id: ShortestDayNames\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: ShortestDayNames\n  fullName: System.Globalization.DateTimeFormatInfo.ShortestDayNames\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortestDayNames\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1410\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets a string array of the shortest unique abbreviated day names associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: >-\n      [ComVisible(false)]\n\n      public string[] ShortestDayNames { get; set; }\n    content.vb: >-\n      <ComVisible(False)>\n\n      Public Property ShortestDayNames As String()\n    parameters: []\n    return:\n      type: System.String[]\n      description: \"\\n<p>A string array of day names.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>In a set operation, the array does not have exactly seven elements.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>In a set operation, the value array or one of the elements of the value array is <strong>null</strong>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>In a set operation, the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.ShortestDayNames\n- uid: System.Globalization.DateTimeFormatInfo.ShortTimePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.ShortTimePattern\n  id: ShortTimePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: ShortTimePattern\n  fullName: System.Globalization.DateTimeFormatInfo.ShortTimePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ShortTimePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1157\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a short time value.</p>\\n\"\n  syntax:\n    content: public string ShortTimePattern { get; set; }\n    content.vb: Public Property ShortTimePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a short time value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.ShortTimePattern\n- uid: System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n  id: SortableDateTimePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: SortableDateTimePattern\n  fullName: System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SortableDateTimePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1191\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the custom format string for a sortable date and time value.</p>\\n\"\n  syntax:\n    content: public string SortableDateTimePattern { get; }\n    content.vb: Public ReadOnly Property SortableDateTimePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a sortable date and time value.</p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n    commentId: P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.SortableDateTimePattern\n- uid: System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n  id: UniversalSortableDateTimePattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: UniversalSortableDateTimePattern\n  fullName: System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UniversalSortableDateTimePattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1325\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets the custom format string for a universal, sortable date and time string.</p>\\n\"\n  syntax:\n    content: public string UniversalSortableDateTimePattern { get; }\n    content.vb: Public ReadOnly Property UniversalSortableDateTimePattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a universal, sortable date and time string.</p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n    commentId: P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DateTimeFormatInfo.UniversalSortableDateTimePattern\n- uid: System.Globalization.DateTimeFormatInfo.YearMonthPattern\n  commentId: P:System.Globalization.DateTimeFormatInfo.YearMonthPattern\n  id: YearMonthPattern\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: YearMonthPattern\n  fullName: System.Globalization.DateTimeFormatInfo.YearMonthPattern\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: YearMonthPattern\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1338\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Gets or sets the custom format string for a year and month value.</p>\\n\"\n  syntax:\n    content: public string YearMonthPattern { get; set; }\n    content.vb: Public Property YearMonthPattern As String\n    parameters: []\n    return:\n      type: System.String\n      description: \"\\n<p>The custom format string for a year and month value.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The property is being set to <strong>null</strong>. </p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>The property is being set and the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object is read-only. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.YearMonthPattern\n- uid: System.Globalization.DateTimeFormatInfo.Clone\n  commentId: M:System.Globalization.DateTimeFormatInfo.Clone\n  id: Clone\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: Clone()\n  fullName: System.Globalization.DateTimeFormatInfo.Clone()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 554\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Creates a shallow copy of the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public object Clone()\n    content.vb: Public Function Clone As Object\n    return:\n      type: System.Object\n      description: \"\\n<p>A new <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object copied from the original <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.Clone()\n- uid: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n  id: GetAbbreviatedDayName(System.DayOfWeek)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetAbbreviatedDayName(DayOfWeek)\n  fullName: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetAbbreviatedDayName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1615\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the culture-specific abbreviated name of the specified day of the week based on the culture associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string GetAbbreviatedDayName(DayOfWeek dayofweek)\n    content.vb: Public Function GetAbbreviatedDayName(dayofweek As DayOfWeek) As String\n    parameters:\n    - id: dayofweek\n      type: System.DayOfWeek\n      description: \"\\n<p>A <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The culture-specific abbreviated name of the day of the week represented by <em>dayofweek</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>dayofweek</em> is not a valid <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.GregorianCalendar\n    commentId: T:System.Globalization.GregorianCalendar\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames\n  - type: System.DayOfWeek\n    commentId: T:System.DayOfWeek\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetAbbreviatedDayName(DayOfWeek)\n- uid: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)\n  id: GetAbbreviatedEraName(System.Int32)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetAbbreviatedEraName(Int32)\n  fullName: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetAbbreviatedEraName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 817\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the string containing the abbreviated name of the specified era, if an abbreviation exists.</p>\\n\"\n  syntax:\n    content: public string GetAbbreviatedEraName(int era)\n    content.vb: Public Function GetAbbreviatedEraName(era As Integer) As String\n    parameters:\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>The integer representing the era. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the abbreviated name of the specified era, if an abbreviation exists.</p>\\n<p>-or- </p>\\n<p>A string containing the full name of the era, if an abbreviation does not exist.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>era</em> does not represent a valid era in the calendar specified in the <xref href=\\\"System.Globalization.DateTimeFormatInfo.Calendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Globalization.JapaneseCalendar\n    commentId: T:System.Globalization.JapaneseCalendar\n  - type: System.Globalization.TaiwanCalendar\n    commentId: T:System.Globalization.TaiwanCalendar\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetAbbreviatedEraName(Int32)\n- uid: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n  id: GetAbbreviatedMonthName(System.Int32)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetAbbreviatedMonthName(Int32)\n  fullName: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetAbbreviatedMonthName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1767\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the culture-specific abbreviated name of the specified month based on the culture associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string GetAbbreviatedMonthName(int month)\n    content.vb: Public Function GetAbbreviatedMonthName(month As Integer) As String\n    parameters:\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 13 representing the name of the month to retrieve. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The culture-specific abbreviated name of the month represented by <em>month</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>month</em> is less than 1 or greater than 13. </p>\\n\"\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.GregorianCalendar\n    commentId: T:System.Globalization.GregorianCalendar\n  - type: System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetAbbreviatedMonthName(Int32)\n- uid: System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n  id: GetDayName(System.DayOfWeek)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetDayName(DayOfWeek)\n  fullName: System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetDayName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1752\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the culture-specific full name of the specified day of the week based on the culture associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string GetDayName(DayOfWeek dayofweek)\n    content.vb: Public Function GetDayName(dayofweek As DayOfWeek) As String\n    parameters:\n    - id: dayofweek\n      type: System.DayOfWeek\n      description: \"\\n<p>A <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The culture-specific full name of the day of the week represented by <em>dayofweek</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>dayofweek</em> is not a valid <xref href=\\\"System.DayOfWeek\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value. </p>\\n\"\n  seealso:\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.GregorianCalendar\n    commentId: T:System.Globalization.GregorianCalendar\n  - type: System.Globalization.DateTimeFormatInfo.DayNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.DayNames\n  - type: System.DayOfWeek\n    commentId: T:System.DayOfWeek\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetDayName(DayOfWeek)\n- uid: System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n  id: GetEra(System.String)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetEra(String)\n  fullName: System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEra\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 722\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the integer representing the specified era.</p>\\n\"\n  syntax:\n    content: public int GetEra(string eraName)\n    content.vb: Public Function GetEra(eraName As String) As Integer\n    parameters:\n    - id: eraName\n      type: System.String\n      description: \"\\n<p>The string containing the name of the era. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>The integer representing the era, if <em>eraName</em> is valid; otherwise, -1.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>eraName</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetEra(String)\n- uid: System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n  id: GetEraName(System.Int32)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetEraName(Int32)\n  fullName: System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEraName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 790\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the string containing the name of the specified era.</p>\\n\"\n  syntax:\n    content: public string GetEraName(int era)\n    content.vb: Public Function GetEraName(era As Integer) As String\n    parameters:\n    - id: era\n      type: System.Int32\n      description: \"\\n<p>The integer representing the era. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>A string containing the name of the era.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>era</em> does not represent a valid era in the calendar specified in the <xref href=\\\"System.Globalization.DateTimeFormatInfo.Calendar\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetEraName(Int32)\n- uid: System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n  id: GetFormat(System.Type)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetFormat(Type)\n  fullName: System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetFormat\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 548\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns an object of the specified type that provides a date and time  formatting service.</p>\\n\"\n  syntax:\n    content: public object GetFormat(Type formatType)\n    content.vb: Public Function GetFormat(formatType As Type) As Object\n    parameters:\n    - id: formatType\n      type: System.Type\n      description: \"\\n<p>The type of the required formatting service. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The current  object, if <em>formatType</em> is the same as the type of the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>; otherwise, <strong>null</strong>.</p>\\n\"\n  seealso:\n  - type: System.IFormatProvider\n    commentId: T:System.IFormatProvider\n  - type: System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n    commentId: M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)\n  implements:\n  - System.IFormatProvider.GetFormat(System.Type)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetFormat(Type)\n- uid: System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)\n  id: GetInstance(System.IFormatProvider)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetInstance(IFormatProvider)\n  fullName: System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetInstance\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 523\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with the specified <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public static DateTimeFormatInfo GetInstance(IFormatProvider provider)\n    content.vb: Public Shared Function GetInstance(provider As IFormatProvider) As DateTimeFormatInfo\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: \"\\n<p>The <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that gets the <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n<p>-or- </p>\\n<p>\\n<strong>null</strong> to get <xref href=\\\"System.Globalization.DateTimeFormatInfo.CurrentInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n\"\n    return:\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>A <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object associated with <xref href=\\\"System.IFormatProvider\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  seealso:\n  - type: System.IFormatProvider\n    commentId: T:System.IFormatProvider\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: DateTimeFormatInfo.GetInstance(IFormatProvider)\n- uid: System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n  commentId: M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n  id: GetMonthName(System.Int32)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: GetMonthName(Int32)\n  fullName: System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetMonthName\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1780\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns the culture-specific full name of the specified month based on the culture associated with the current <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: public string GetMonthName(int month)\n    content.vb: Public Function GetMonthName(month As Integer) As String\n    parameters:\n    - id: month\n      type: System.Int32\n      description: \"\\n<p>An integer from 1 through 13 representing the name of the month to retrieve. </p>\\n\"\n    return:\n      type: System.String\n      description: \"\\n<p>The culture-specific full name of the month represented by <em>month</em>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>month</em> is less than 1 or greater than 13. </p>\\n\"\n  seealso:\n  - type: System.Globalization.Calendar\n    commentId: T:System.Globalization.Calendar\n  - type: System.Globalization.CultureInfo\n    commentId: T:System.Globalization.CultureInfo\n  - type: System.Globalization.GregorianCalendar\n    commentId: T:System.Globalization.GregorianCalendar\n  - type: System.Globalization.DateTimeFormatInfo.MonthNames\n    commentId: P:System.Globalization.DateTimeFormatInfo.MonthNames\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DateTimeFormatInfo.GetMonthName(Int32)\n- uid: System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n  commentId: M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n  id: ReadOnly(System.Globalization.DateTimeFormatInfo)\n  parent: System.Globalization.DateTimeFormatInfo\n  langs:\n  - csharp\n  - vb\n  name: ReadOnly(DateTimeFormatInfo)\n  fullName: System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadOnly\n    path: src/mscorlib/src/System/Globalization/DateTimeFormatInfo.cs\n    startLine: 1981\n  assemblies:\n  - System.Globalization\n  namespace: System.Globalization\n  summary: \"\\n<p>Returns a read-only <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> wrapper.</p>\\n\"\n  syntax:\n    content: public static DateTimeFormatInfo ReadOnly(DateTimeFormatInfo dtfi)\n    content.vb: Public Shared Function ReadOnly(dtfi As DateTimeFormatInfo) As DateTimeFormatInfo\n    parameters:\n    - id: dtfi\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>The <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to wrap. </p>\\n\"\n    return:\n      type: System.Globalization.DateTimeFormatInfo\n      description: \"\\n<p>A read-only <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> wrapper.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>dtfi</em> is <strong>null</strong>. </p>\\n\"\n  seealso:\n  - type: System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)\n    commentId: M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: DateTimeFormatInfo.ReadOnly(DateTimeFormatInfo)\nreferences:\n- uid: System.Globalization\n  isExternal: false\n  name: System.Globalization\n  fullName: System.Globalization\n  nameWithType: System.Globalization\n  commentId: N:System.Globalization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  fullName: System.IFormatProvider\n  nameWithType: IFormatProvider\n  commentId: T:System.IFormatProvider\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  fullName: System.Globalization.Calendar\n  nameWithType: Calendar\n  commentId: T:System.Globalization.Calendar\n- uid: System.Globalization.CalendarWeekRule\n  parent: System.Globalization\n  isExternal: false\n  name: CalendarWeekRule\n  fullName: System.Globalization.CalendarWeekRule\n  nameWithType: CalendarWeekRule\n  commentId: T:System.Globalization.CalendarWeekRule\n- uid: System.Globalization.DateTimeFormatInfo\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeFormatInfo\n  fullName: System.Globalization.DateTimeFormatInfo\n  nameWithType: DateTimeFormatInfo\n  commentId: T:System.Globalization.DateTimeFormatInfo\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  fullName: System.DayOfWeek\n  nameWithType: DayOfWeek\n  commentId: T:System.DayOfWeek\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.IFormatProvider.GetFormat(System.Type)\n  parent: System.IFormatProvider\n  isExternal: true\n  name: GetFormat(Type)\n  fullName: System.IFormatProvider.GetFormat(System.Type)\n  spec.csharp:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.IFormatProvider.GetFormat(System.Type)\n    name: GetFormat\n    fullName: System.IFormatProvider.GetFormat\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IFormatProvider.GetFormat(Type)\n  commentId: M:System.IFormatProvider.GetFormat(System.Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  nameWithType: Type\n  commentId: T:System.Type\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}