{"nodes":[{"pos":[847,876],"content":"MulticastIPAddressInformation","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation","pos":[0,29]}]},{"pos":[2686,2717],"content":"MulticastIPAddressInformation()","needQuote":true,"nodes":[{"content":"MulticastIPAddressInformation()","pos":[0,31]}]},{"pos":[3976,4000],"content":"AddressPreferredLifetime","needQuote":true,"nodes":[{"content":"AddressPreferredLifetime","pos":[0,24]}]},{"content":"\\n&lt;p&gt;This property is not valid on computers running operating systems earlier than Windows XP.","pos":[5175,5270],"source":"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP."},{"content":"&lt;/p&gt;\\n","pos":[5271,5277],"source":" </p>\\n"},{"pos":[5775,5795],"content":"AddressValidLifetime","needQuote":true,"nodes":[{"content":"AddressValidLifetime","pos":[0,20]}]},{"content":"\\n&lt;p&gt;This property is not valid on computers running operating systems earlier than Windows XP.","pos":[6937,7032],"source":"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP."},{"content":"&lt;/p&gt;\\n","pos":[7033,7039],"source":" </p>\\n"},{"pos":[7524,7541],"content":"DhcpLeaseLifetime","needQuote":true,"nodes":[{"content":"DhcpLeaseLifetime","pos":[0,17]}]},{"pos":[9195,9225],"content":"DuplicateAddressDetectionState","needQuote":true,"nodes":[{"content":"DuplicateAddressDetectionState","pos":[0,30]}]},{"content":"\\n&lt;p&gt;This property is not valid on computers running operating systems earlier than Windows XP.","pos":[10591,10686],"source":"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP."},{"content":"&lt;/p&gt;\\n","pos":[10687,10693],"source":" </p>\\n"},{"pos":[11173,11185],"content":"PrefixOrigin","needQuote":true,"nodes":[{"content":"PrefixOrigin","pos":[0,12]}]},{"content":"\\n&lt;p&gt;This property is not valid on computers running operating systems earlier than Windows XP.","pos":[12379,12474],"source":"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP."},{"content":"&lt;/p&gt;\\n","pos":[12475,12481],"source":" </p>\\n"},{"pos":[12943,12955],"content":"SuffixOrigin","needQuote":true,"nodes":[{"content":"SuffixOrigin","pos":[0,12]}]},{"content":"\\n&lt;p&gt;This property is not valid on computers running operating systems earlier than Windows XP.","pos":[14149,14244],"source":"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP."},{"content":"&lt;/p&gt;\\n","pos":[14245,14251],"source":" </p>\\n"},{"pos":[14498,14527],"content":"System.Net.NetworkInformation","needQuote":true,"nodes":[{"content":"System.Net.NetworkInformation","pos":[0,29]}]},{"pos":[14727,14733],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14938,14958],"content":"IPAddressInformation","needQuote":true,"nodes":[{"content":"IPAddressInformation","pos":[0,20]}]},{"pos":[15280,15287],"content":"Address","needQuote":true,"nodes":[{"content":"Address","pos":[0,7]}]},{"pos":[15639,15652],"content":"IsDnsEligible","needQuote":true,"nodes":[{"content":"IsDnsEligible","pos":[0,13]}]},{"pos":[16020,16031],"content":"IsTransient","needQuote":true,"nodes":[{"content":"IsTransient","pos":[0,11]}]},{"pos":[16315,16325],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16420,16428],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16497,16498],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16525,16526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16596,16604],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[16673,16674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16701,16702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16885,16899],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17018,17024],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17091,17092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17142,17148],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17208,17209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17292,17298],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17365,17366],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17416,17422],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17482,17483],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17697,17719],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17867,17873],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17940,17941],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17991,17997],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18058,18059]},{"pos":[18114,18120],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18180,18181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18278,18284],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18351,18352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18402,18408],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18469,18470]},{"pos":[18525,18531],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18591,18592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18837,18868],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19034,19049],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19125,19126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19176,19182],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19243,19244]},{"pos":[19299,19305],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19365,19366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19472,19487],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19563,19564],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19614,19620],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19681,19682]},{"pos":[19737,19743],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19803,19804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20034,20047],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20148,20159],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20231,20232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20259,20260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20333,20344],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[20416,20417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20444,20445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20620,20629],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20722,20729],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20797,20798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20825,20826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20895,20902],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20970,20971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20998,20999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21174,21191],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21300,21315],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21391,21392],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21419,21420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21497,21512],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21588,21589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21616,21617],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21762,21768],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21898,21903],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[22115,22145],"content":"DuplicateAddressDetectionState","needQuote":true,"nodes":[{"content":"DuplicateAddressDetectionState","pos":[0,30]}]},{"pos":[22460,22472],"content":"PrefixOrigin","needQuote":true,"nodes":[{"content":"PrefixOrigin","pos":[0,12]}]},{"pos":[22733,22745],"content":"SuffixOrigin","needQuote":true,"nodes":[{"content":"SuffixOrigin","pos":[0,12]}]},{"pos":[22960,22989],"content":"PlatformNotSupportedException","needQuote":true,"nodes":[{"content":"PlatformNotSupportedException","pos":[0,29]}]}],"content":"items:\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n  commentId: T:System.Net.NetworkInformation.MulticastIPAddressInformation\n  id: MulticastIPAddressInformation\n  parent: System.Net.NetworkInformation\n  children:\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  langs:\n  - csharp\n  - vb\n  name: MulticastIPAddressInformation\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastIPAddressInformation\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 222\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Provides information about a network interface's multicast address.</p>\\n\"\n  syntax:\n    content: 'public abstract class MulticastIPAddressInformation : IPAddressInformation'\n    content.vb: >-\n      Public MustInherit Class MulticastIPAddressInformation\n          Inherits IPAddressInformation\n  inheritance:\n  - System.Object\n  - System.Net.NetworkInformation.IPAddressInformation\n  inheritedMembers:\n  - System.Net.NetworkInformation.IPAddressInformation.Address\n  - System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  - System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - abstract\n  - class\n  modifiers.vb:\n  - Public\n  - MustInherit\n  - Class\n  nameWithType: MulticastIPAddressInformation\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: MulticastIPAddressInformation()\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.MulticastIPAddressInformation()\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 224\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.NetworkInformation.MulticastIPAddressInformation\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: protected MulticastIPAddressInformation()\n    content.vb: Protected Sub New\n  modifiers.csharp:\n  - protected\n  modifiers.vb:\n  - Protected\n  nameWithType: MulticastIPAddressInformation.MulticastIPAddressInformation()\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  id: AddressPreferredLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: AddressPreferredLifetime\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddressPreferredLifetime\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 225\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of seconds remaining during which this address is the preferred address.</p>\\n\"\n  syntax:\n    content: public abstract long AddressPreferredLifetime { get; }\n    content.vb: Public MustOverride ReadOnly Property AddressPreferredLifetime As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the number of seconds left for this address to remain preferred.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.AddressPreferredLifetime\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  id: AddressValidLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: AddressValidLifetime\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddressValidLifetime\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 226\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets the number of seconds remaining during which this address is valid.</p>\\n\"\n  syntax:\n    content: public abstract long AddressValidLifetime { get; }\n    content.vb: Public MustOverride ReadOnly Property AddressValidLifetime As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies the number of seconds left for this address to remain assigned.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.AddressValidLifetime\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  id: DhcpLeaseLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: DhcpLeaseLifetime\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DhcpLeaseLifetime\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 227\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.</p>\\n\"\n  syntax:\n    content: public abstract long DhcpLeaseLifetime { get; }\n    content.vb: Public MustOverride ReadOnly Property DhcpLeaseLifetime As Long\n    parameters: []\n    return:\n      type: System.Int64\n      description: \"\\n<p>An <xref href=\\\"System.Int64\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that contains the number of seconds remaining before the computer must release the <xref href=\\\"System.Net.IPAddress\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.DhcpLeaseLifetime\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  id: DuplicateAddressDetectionState\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: DuplicateAddressDetectionState\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DuplicateAddressDetectionState\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 228\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that indicates the state of the duplicate address detection algorithm.</p>\\n\"\n  syntax:\n    content: public abstract DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }\n    content.vb: Public MustOverride ReadOnly Property DuplicateAddressDetectionState As DuplicateAddressDetectionState\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.DuplicateAddressDetectionState\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.NetworkInformation.DuplicateAddressDetectionState\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.DuplicateAddressDetectionState\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  id: PrefixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: PrefixOrigin\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PrefixOrigin\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 229\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.</p>\\n\"\n  syntax:\n    content: public abstract PrefixOrigin PrefixOrigin { get; }\n    content.vb: Public MustOverride ReadOnly Property PrefixOrigin As PrefixOrigin\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.PrefixOrigin\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.NetworkInformation.PrefixOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that identifies how the prefix information was obtained.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.PrefixOrigin\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  id: SuffixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  - vb\n  name: SuffixOrigin\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SuffixOrigin\n    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs\n    startLine: 230\n  assemblies:\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: \"\\n<p>Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.</p>\\n\"\n  syntax:\n    content: public abstract SuffixOrigin SuffixOrigin { get; }\n    content.vb: Public MustOverride ReadOnly Property SuffixOrigin As SuffixOrigin\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.SuffixOrigin\n      description: \"\\n<p>One of the <xref href=\\\"System.Net.NetworkInformation.SuffixOrigin\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that identifies how the suffix information was obtained.</p>\\n\"\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: \"\\n<p>This property is not valid on computers running operating systems earlier than Windows XP. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - abstract\n  - get\n  modifiers.vb:\n  - Public\n  - MustOverride\n  - ReadOnly\n  nameWithType: MulticastIPAddressInformation.SuffixOrigin\nreferences:\n- uid: System.Net.NetworkInformation\n  isExternal: false\n  name: System.Net.NetworkInformation\n  fullName: System.Net.NetworkInformation\n  commentId: N:System.Net.NetworkInformation\n  nameWithType: System.Net.NetworkInformation\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.NetworkInformation.IPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPAddressInformation\n  fullName: System.Net.NetworkInformation.IPAddressInformation\n  commentId: T:System.Net.NetworkInformation.IPAddressInformation\n  nameWithType: IPAddressInformation\n- uid: System.Net.NetworkInformation.IPAddressInformation.Address\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: Address\n  fullName: System.Net.NetworkInformation.IPAddressInformation.Address\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.Address\n  nameWithType: IPAddressInformation.Address\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsDnsEligible\n  fullName: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  nameWithType: IPAddressInformation.IsDnsEligible\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsTransient\n  fullName: System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  commentId: P:System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  nameWithType: IPAddressInformation.IsTransient\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Net.NetworkInformation.DuplicateAddressDetectionState\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: DuplicateAddressDetectionState\n  fullName: System.Net.NetworkInformation.DuplicateAddressDetectionState\n  commentId: T:System.Net.NetworkInformation.DuplicateAddressDetectionState\n  nameWithType: DuplicateAddressDetectionState\n- uid: System.Net.NetworkInformation.PrefixOrigin\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: PrefixOrigin\n  fullName: System.Net.NetworkInformation.PrefixOrigin\n  commentId: T:System.Net.NetworkInformation.PrefixOrigin\n  nameWithType: PrefixOrigin\n- uid: System.Net.NetworkInformation.SuffixOrigin\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: SuffixOrigin\n  fullName: System.Net.NetworkInformation.SuffixOrigin\n  commentId: T:System.Net.NetworkInformation.SuffixOrigin\n  nameWithType: SuffixOrigin\n- uid: System.PlatformNotSupportedException\n  isExternal: false\n  name: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  commentId: T:System.PlatformNotSupportedException\n"}