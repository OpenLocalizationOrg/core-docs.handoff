{"nodes":[{"pos":[474,501],"content":"RunWorkerCompletedEventArgs","needQuote":true,"nodes":[{"content":"RunWorkerCompletedEventArgs","pos":[0,27]}]},{"pos":[2556,2611],"content":"RunWorkerCompletedEventArgs(Object, Exception, Boolean)","needQuote":true,"nodes":[{"content":"RunWorkerCompletedEventArgs(Object, Exception, Boolean)","pos":[0,55]}]},{"content":"\\n&lt;p&gt;The result of an asynchronous operation.&lt;/p&gt;\\n","pos":[3649,3700],"source":"\\n<p>The result of an asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;Any error that occurred during the asynchronous operation.&lt;/p&gt;\\n","pos":[3767,3836],"source":"\\n<p>Any error that occurred during the asynchronous operation.</p>\\n"},{"content":"\\n&lt;p&gt;A value indicating whether the asynchronous operation was canceled.&lt;/p&gt;\\n","pos":[3905,3983],"source":"\\n<p>A value indicating whether the asynchronous operation was canceled.</p>\\n"},{"pos":[4503,4509],"content":"Result","needQuote":true,"nodes":[{"content":"Result","pos":[0,6]}]},{"pos":[6757,6766],"content":"UserState","needQuote":true,"nodes":[{"content":"UserState","pos":[0,9]}]},{"pos":[7986,8007],"content":"System.ComponentModel","needQuote":true,"nodes":[{"content":"System.ComponentModel","pos":[0,21]}]},{"pos":[8183,8189],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8337,8346],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[8547,8570],"content":"AsyncCompletedEventArgs","needQuote":true,"nodes":[{"content":"AsyncCompletedEventArgs","pos":[0,23]}]},{"pos":[8877,8886],"content":"Cancelled","needQuote":true,"nodes":[{"content":"Cancelled","pos":[0,9]}]},{"pos":[9219,9224],"content":"Error","needQuote":true,"nodes":[{"content":"Error","pos":[0,5]}]},{"pos":[9565,9592],"content":"RaiseExceptionIfNecessary()","needQuote":true,"nodes":[{"content":"RaiseExceptionIfNecessary()","pos":[0,27]}]},{"pos":[9785,9810],"content":"RaiseExceptionIfNecessary","needQuote":true,"nodes":[{"content":"RaiseExceptionIfNecessary","pos":[0,25]}]},{"pos":[9907,9908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9935,9936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10055,10080],"content":"RaiseExceptionIfNecessary","needQuote":true,"nodes":[{"content":"RaiseExceptionIfNecessary","pos":[0,25]}]},{"pos":[10177,10178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10205,10206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10462,10467],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[10654,10664],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10759,10767],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[10836,10837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10864,10865],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10935,10943],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11012,11013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11040,11041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11224,11238],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11357,11363],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11430,11431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11481,11487],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11547,11548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11631,11637],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11704,11705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11755,11761],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11821,11822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12036,12058],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[12206,12212],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12279,12280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12330,12336],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12397,12398]},{"pos":[12453,12459],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12519,12520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12617,12623],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12690,12691],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12741,12747],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12808,12809]},{"pos":[12864,12870],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12930,12931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13176,13207],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[13373,13388],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13464,13465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13515,13521],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13582,13583]},{"pos":[13638,13644],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13704,13705],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13811,13826],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13902,13903],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13953,13959],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[14020,14021]},{"pos":[14076,14082],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14142,14143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14373,14386],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14487,14498],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14570,14571],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14598,14599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14672,14683],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14755,14756],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14783,14784],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14959,14968],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[15061,15068],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15136,15137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15164,15165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15234,15241],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[15309,15310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15337,15338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15513,15530],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[15639,15654],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15730,15731],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15758,15759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15836,15851],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[15927,15928],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15955,15956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16101,16107],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[16241,16250],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[16405,16412],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16573,16598],"content":"TargetInvocationException","needQuote":true,"nodes":[{"content":"TargetInvocationException","pos":[0,25]}]},{"pos":[16841,16866],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.ComponentModel.RunWorkerCompletedEventArgs\n  commentId: T:System.ComponentModel.RunWorkerCompletedEventArgs\n  id: RunWorkerCompletedEventArgs\n  parent: System.ComponentModel\n  children:\n  - System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)\n  - System.ComponentModel.RunWorkerCompletedEventArgs.Result\n  - System.ComponentModel.RunWorkerCompletedEventArgs.UserState\n  langs:\n  - csharp\n  - vb\n  name: RunWorkerCompletedEventArgs\n  fullName: System.ComponentModel.RunWorkerCompletedEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RunWorkerCompletedEventArgs\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n    startLine: 8\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Provides data for the MethodName<strong>Completed</strong> event.</p>\\n\"\n  syntax:\n    content: 'public class RunWorkerCompletedEventArgs : AsyncCompletedEventArgs'\n    content.vb: >-\n      Public Class RunWorkerCompletedEventArgs\n          Inherits AsyncCompletedEventArgs\n  seealso:\n  - type: System.ComponentModel.BackgroundWorker\n    commentId: T:System.ComponentModel.BackgroundWorker\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.ComponentModel.AsyncCompletedEventArgs\n  inheritedMembers:\n  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  - System.ComponentModel.AsyncCompletedEventArgs.Error\n  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: RunWorkerCompletedEventArgs\n- uid: System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)\n  commentId: M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)\n  id: '#ctor(System.Object,System.Exception,System.Boolean)'\n  parent: System.ComponentModel.RunWorkerCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: RunWorkerCompletedEventArgs(Object, Exception, Boolean)\n  fullName: System.ComponentModel.RunWorkerCompletedEventArgs.RunWorkerCompletedEventArgs(System.Object, System.Exception, System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n    startLine: 12\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.ComponentModel.RunWorkerCompletedEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public RunWorkerCompletedEventArgs(object result, Exception error, bool cancelled)\n    content.vb: Public Sub New(result As Object, error As Exception, cancelled As Boolean)\n    parameters:\n    - id: result\n      type: System.Object\n      description: \"\\n<p>The result of an asynchronous operation.</p>\\n\"\n    - id: error\n      type: System.Exception\n      description: \"\\n<p>Any error that occurred during the asynchronous operation.</p>\\n\"\n    - id: cancelled\n      type: System.Boolean\n      description: \"\\n<p>A value indicating whether the asynchronous operation was canceled.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.BackgroundWorker\n    commentId: T:System.ComponentModel.BackgroundWorker\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: RunWorkerCompletedEventArgs.RunWorkerCompletedEventArgs(Object, Exception, Boolean)\n- uid: System.ComponentModel.RunWorkerCompletedEventArgs.Result\n  commentId: P:System.ComponentModel.RunWorkerCompletedEventArgs.Result\n  id: Result\n  parent: System.ComponentModel.RunWorkerCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: Result\n  fullName: System.ComponentModel.RunWorkerCompletedEventArgs.Result\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Result\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n    startLine: 20\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value that represents the result of an asynchronous operation.</p>\\n\"\n  syntax:\n    content: public object Result { get; }\n    content.vb: Public ReadOnly Property Result As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the result of an asynchronous operation.</p>\\n\"\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: \"\\n<p>\\n<xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is not <strong>null</strong>. The <xref href=\\\"System.Exception.InnerException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property holds a reference to <xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<xref href=\\\"System.ComponentModel.AsyncCompletedEventArgs.Cancelled\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is <strong>true</strong>.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.BackgroundWorker\n    commentId: T:System.ComponentModel.BackgroundWorker\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RunWorkerCompletedEventArgs.Result\n- uid: System.ComponentModel.RunWorkerCompletedEventArgs.UserState\n  commentId: P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState\n  id: UserState\n  parent: System.ComponentModel.RunWorkerCompletedEventArgs\n  langs:\n  - csharp\n  - vb\n  name: UserState\n  fullName: System.ComponentModel.RunWorkerCompletedEventArgs.UserState\n  type: Property\n  source:\n    remote:\n      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UserState\n    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/RunWorkerCompletedEvent.cs\n    startLine: 30\n  assemblies:\n  - System.ComponentModel.EventBasedAsync\n  namespace: System.ComponentModel\n  summary: \"\\n<p>Gets a value that represents the user state.</p>\\n\"\n  syntax:\n    content: public object UserState { get; }\n    content.vb: Public ReadOnly Property UserState As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> representing the user state.</p>\\n\"\n  seealso:\n  - type: System.ComponentModel.BackgroundWorker\n    commentId: T:System.ComponentModel.BackgroundWorker\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: RunWorkerCompletedEventArgs.UserState\nreferences:\n- uid: System.ComponentModel\n  isExternal: false\n  name: System.ComponentModel\n  fullName: System.ComponentModel\n  nameWithType: System.ComponentModel\n  commentId: N:System.ComponentModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  nameWithType: EventArgs\n  commentId: T:System.EventArgs\n- uid: System.ComponentModel.AsyncCompletedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: AsyncCompletedEventArgs\n  fullName: System.ComponentModel.AsyncCompletedEventArgs\n  nameWithType: AsyncCompletedEventArgs\n  commentId: T:System.ComponentModel.AsyncCompletedEventArgs\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Cancelled\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n  nameWithType: AsyncCompletedEventArgs.Cancelled\n  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled\n- uid: System.ComponentModel.AsyncCompletedEventArgs.Error\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: Error\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error\n  nameWithType: AsyncCompletedEventArgs.Error\n  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Error\n- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  parent: System.ComponentModel.AsyncCompletedEventArgs\n  isExternal: false\n  name: RaiseExceptionIfNecessary()\n  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n  spec.csharp:\n  - uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n    name: RaiseExceptionIfNecessary\n    fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n    name: RaiseExceptionIfNecessary\n    fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()\n  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  nameWithType: Exception\n  commentId: T:System.Exception\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Reflection.TargetInvocationException\n  isExternal: false\n  name: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n  nameWithType: TargetInvocationException\n  commentId: T:System.Reflection.TargetInvocationException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}