{"nodes":[{"pos":[4309,4341],"content":"ReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,32],"source":"ReadOnlyDictionary<TKey, TValue>"}]},{"content":"\\n&lt;p&gt;The type of keys in the dictionary.&lt;/p&gt;\\n","pos":[5891,5937],"source":"\\n<p>The type of keys in the dictionary.</p>\\n"},{"content":"\\n&lt;p&gt;The type of values in the dictionary.&lt;/p&gt;\\n","pos":[5976,6024],"source":"\\n<p>The type of values in the dictionary.</p>\\n"},{"pos":[37083,37128],"content":"ReadOnlyDictionary(IDictionary<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary(IDictionary&lt;TKey, TValue&gt;)","pos":[0,45],"source":"ReadOnlyDictionary(IDictionary<TKey, TValue>)"}]},{"content":"\\n&lt;p&gt;The dictionary to wrap.&lt;/p&gt;\\n","pos":[38180,38214],"source":"\\n<p>The dictionary to wrap.</p>\\n"},{"pos":[38938,38943],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"content":"\\n&lt;p&gt;The number of items in the dictionary.&lt;/p&gt;\\n","pos":[39663,39712],"source":"\\n<p>The number of items in the dictionary.</p>\\n"},{"pos":[40536,40546],"content":"Dictionary","needQuote":true,"nodes":[{"content":"Dictionary","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The dictionary that is wrapped by this object.&lt;/p&gt;\\n","pos":[41497,41554],"source":"\\n<p>The dictionary that is wrapped by this object.</p>\\n"},{"pos":[42116,42126],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"content":"\\n&lt;p&gt;The key of the element to get.&lt;/p&gt;\\n","pos":[42870,42911],"source":"\\n<p>The key of the element to get.</p>\\n"},{"content":"\\n&lt;p&gt;The element that has the specified key.&lt;/p&gt;\\n","pos":[42968,43018],"source":"\\n<p>The element that has the specified key.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[43137,43188],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The property is retrieved and &lt;em&gt;key&lt;/em&gt; is not found.&lt;/p&gt;\\n","pos":[43331,43398],"source":"\\n<p>The property is retrieved and <em>key</em> is not found.</p>\\n"},{"pos":[44059,44063],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"content":"\\n&lt;p&gt;A key collection that contains the keys of the dictionary.&lt;/p&gt;\\n","pos":[44936,45005],"source":"\\n<p>A key collection that contains the keys of the dictionary.</p>\\n"},{"pos":[45842,45892],"content":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.IsReadOnly","pos":[0,50],"source":"ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly"}]},{"pos":[48100,48136],"content":"IDictionary<TKey, TValue>.Item[TKey]","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Item[TKey]","pos":[0,36],"source":"IDictionary<TKey, TValue>.Item[TKey]"}]},{"pos":[50016,50046],"content":"IDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,30],"source":"IDictionary<TKey, TValue>.Keys"}]},{"pos":[51913,51945],"content":"IDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Values","pos":[0,32],"source":"IDictionary<TKey, TValue>.Values"}]},{"pos":[53856,53894],"content":"IReadOnlyDictionary<TKey, TValue>.Keys","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Keys","pos":[0,38],"source":"IReadOnlyDictionary<TKey, TValue>.Keys"}]},{"pos":[55866,55906],"content":"IReadOnlyDictionary<TKey, TValue>.Values","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;.Values","pos":[0,40],"source":"IReadOnlyDictionary<TKey, TValue>.Values"}]},{"pos":[57841,57867],"content":"ICollection.IsSynchronized","needQuote":true,"nodes":[{"content":"ICollection.IsSynchronized","pos":[0,26]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if access to the dictionary is synchronized (thread safe); otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[58813,58941],"source":"\\n<p>\\n<strong>true</strong> if access to the dictionary is synchronized (thread safe); otherwise, <strong>false</strong>.</p>\\n"},{"pos":[59789,59809],"content":"ICollection.SyncRoot","needQuote":true,"nodes":[{"content":"ICollection.SyncRoot","pos":[0,20]}]},{"content":"\\n&lt;p&gt;An object that can be used to synchronize access to the dictionary.&lt;/p&gt;\\n","pos":[60706,60784],"source":"\\n<p>An object that can be used to synchronize access to the dictionary.</p>\\n"},{"pos":[61611,61634],"content":"IDictionary.IsFixedSize","needQuote":true,"nodes":[{"content":"IDictionary.IsFixedSize","pos":[0,23]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the dictionary has a fixed size; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[62542,62647],"source":"\\n<p>\\n<strong>true</strong> if the dictionary has a fixed size; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[63486,63508],"content":"IDictionary.IsReadOnly","needQuote":true,"nodes":[{"content":"IDictionary.IsReadOnly","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; in all cases.&lt;/p&gt;\\n","pos":[64407,64455],"source":"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n"},{"pos":[65316,65340],"content":"IDictionary.Item[Object]","needQuote":true,"nodes":[{"content":"IDictionary.Item[Object]","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The key of the element to get or set.","pos":[66237,66279],"source":"\\n<p>The key of the element to get or set."},{"content":"&lt;/p&gt;\\n","pos":[66280,66286],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The element that has the specified key.&lt;/p&gt;\\n","pos":[66346,66396],"source":"\\n<p>The element that has the specified key.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[66515,66560],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[66561,66567],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The property is set.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The property is set, &lt;em&gt;key&lt;/em&gt; does not exist in the collection, and the dictionary has a fixed size.","pos":[66672,66824],"source":"\\n<p>The property is set.</p>\\n<p>-or- </p>\\n<p>The property is set, <em>key</em> does not exist in the collection, and the dictionary has a fixed size."},{"content":"&lt;/p&gt;\\n","pos":[66825,66831],"source":" </p>\\n"},{"pos":[67650,67666],"content":"IDictionary.Keys","needQuote":true,"nodes":[{"content":"IDictionary.Keys","pos":[0,16]}]},{"content":"\\n&lt;p&gt;A collection that contains the keys of the dictionary.&lt;/p&gt;\\n","pos":[68557,68622],"source":"\\n<p>A collection that contains the keys of the dictionary.</p>\\n"},{"pos":[69414,69432],"content":"IDictionary.Values","needQuote":true,"nodes":[{"content":"IDictionary.Values","pos":[0,18]}]},{"content":"\\n&lt;p&gt;A collection that contains the values in the dictionary.&lt;/p&gt;\\n","pos":[70335,70402],"source":"\\n<p>A collection that contains the values in the dictionary.</p>\\n"},{"pos":[71097,71103],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[72744,72761],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"content":"\\n&lt;p&gt;The key to locate in the dictionary.&lt;/p&gt;\\n","pos":[73547,73594],"source":"\\n<p>The key to locate in the dictionary.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the dictionary contains an element that has the specified key; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[73655,73790],"source":"\\n<p>\\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[74543,74558],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"content":"\\n&lt;p&gt;An enumerator that can be used to iterate through the collection.&lt;/p&gt;\\n","pos":[75550,75626],"source":"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n"},{"pos":[76727,76798],"content":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,71],"source":"ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[79322,79369],"content":"ICollection<KeyValuePair<TKey, TValue>>.Clear()","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Clear()","pos":[0,47],"source":"ICollection<KeyValuePair<TKey, TValue>>.Clear()"}]},{"pos":[81645,81721],"content":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,76],"source":"ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[84542,84625],"content":"ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,83],"source":"ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"pos":[87494,87568],"content":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;.Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,74],"source":"ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[90069,90112],"content":"IDictionary<TKey, TValue>.Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Add(TKey, TValue)","pos":[0,43],"source":"IDictionary<TKey, TValue>.Add(TKey, TValue)"}]},{"pos":[91993,92031],"content":"IDictionary<TKey, TValue>.Remove(TKey)","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;.Remove(TKey)","pos":[0,38],"source":"IDictionary<TKey, TValue>.Remove(TKey)"}]},{"pos":[93884,93916],"content":"ICollection.CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"ICollection.CopyTo(Array, Int32)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The one-dimensional array that is the destination of the elements copied from the dictionary.","pos":[94859,94957],"source":"\\n<p>The one-dimensional array that is the destination of the elements copied from the dictionary."},{"content":"The array must have zero-based indexing.","pos":[94958,94998]},{"content":"&lt;/p&gt;\\n","pos":[94999,95005],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.","pos":[95068,95136],"source":"\\n<p>The zero-based index in <em>array</em> at which copying begins."},{"content":"&lt;/p&gt;\\n","pos":[95137,95143],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[95262,95309],"source":"\\n<p>\\n<em>array</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[95310,95316],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;index&lt;/em&gt; is less than zero.","pos":[95433,95473],"source":"\\n<p>\\n<em>index</em> is less than zero."},{"content":"&lt;/p&gt;\\n","pos":[95474,95480],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\\n&lt;p&gt;-or- &lt;/p&gt;\\n&lt;p&gt;The number of elements in the source dictionary is greater than the available space from &lt;em&gt;index&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt; The type of the source dictionary cannot be cast automatically to the type of the destination &lt;em&gt;array&lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;/p&gt;\\n","pos":[95577,95938],"source":"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in the source dictionary is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p> The type of the source dictionary cannot be cast automatically to the type of the destination <em>array</em><em>.</em></p>\\n"},{"pos":[96858,96889],"content":"IDictionary.Add(Object, Object)","needQuote":true,"nodes":[{"content":"IDictionary.Add(Object, Object)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The key of the element to add.","pos":[97850,97885],"source":"\\n<p>The key of the element to add."},{"content":"&lt;/p&gt;\\n","pos":[97886,97892],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The value of the element to add.","pos":[97956,97993],"source":"\\n<p>The value of the element to add."},{"content":"&lt;/p&gt;\\n","pos":[97994,98000],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[98119,98143],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[98977,98996],"content":"IDictionary.Clear()","needQuote":true,"nodes":[{"content":"IDictionary.Clear()","pos":[0,19]}]},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[99924,99948],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[100747,100775],"content":"IDictionary.Contains(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Contains(Object)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The key to locate in the dictionary.&lt;/p&gt;\\n","pos":[101691,101738],"source":"\\n<p>The key to locate in the dictionary.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the dictionary contains an element that has the specified key; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[101799,101934],"source":"\\n<p>\\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;key&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.","pos":[102053,102098],"source":"\\n<p>\\n<em>key</em> is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[102099,102105],"source":" </p>\\n"},{"pos":[102935,102962],"content":"IDictionary.GetEnumerator()","needQuote":true,"nodes":[{"content":"IDictionary.GetEnumerator()","pos":[0,27]}]},{"content":"\\n&lt;p&gt;An enumerator for the dictionary.&lt;/p&gt;\\n","pos":[103865,103909],"source":"\\n<p>An enumerator for the dictionary.</p>\\n"},{"pos":[104742,104768],"content":"IDictionary.Remove(Object)","needQuote":true,"nodes":[{"content":"IDictionary.Remove(Object)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The key of the element to remove.","pos":[105698,105736],"source":"\\n<p>The key of the element to remove."},{"content":"&lt;/p&gt;\\n","pos":[105737,105743],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;In all cases.&lt;/p&gt;\\n","pos":[105862,105886],"source":"\\n<p>In all cases.</p>\\n"},{"pos":[106706,106733],"content":"IEnumerable.GetEnumerator()","needQuote":true,"nodes":[{"content":"IEnumerable.GetEnumerator()","pos":[0,27]}]},{"content":"\\n&lt;p&gt;An enumerator that can be used to iterate through the collection.&lt;/p&gt;\\n","pos":[107622,107698],"source":"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n"},{"pos":[108418,108447],"content":"TryGetValue(TKey, out TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, out TValue)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The key whose value will be retrieved.&lt;/p&gt;\\n","pos":[109267,109316],"source":"\\n<p>The key whose value will be retrieved.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the &lt;em&gt;value&lt;/em&gt; parameter.","pos":[109377,109548],"source":"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[109549,109594],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[110573,110603],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[110806,110812],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[111054,111079],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[111331,111342],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[111427,111428],"content":"<","needQuote":true,"nodes":[]},{"pos":[111455,111459],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[111490,111491]},{"pos":[111523,111529],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[111654,111665],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[111751,111754]},{"pos":[111788,111792],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[111823,111824]},{"pos":[111856,111862],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[111894,111895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[112267,112306],"content":"ICollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"ICollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[112660,112671],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[112735,112736],"content":"<","needQuote":true,"nodes":[]},{"pos":[112814,112826],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[112891,112892],"content":"<","needQuote":true,"nodes":[]},{"pos":[112919,112923],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[112954,112955]},{"pos":[112987,112993],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[113150,113161],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[113226,113229]},{"pos":[113314,113326],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[113392,113395]},{"pos":[113429,113433],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[113464,113465]},{"pos":[113497,113503],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[113535,113536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113563,113564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[113983,114016],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[114300,114319],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[114412,114413],"content":"<","needQuote":true,"nodes":[]},{"pos":[114440,114444],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[114475,114476]},{"pos":[114508,114514],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[114647,114666],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[114760,114763]},{"pos":[114797,114801],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[114832,114833]},{"pos":[114865,114871],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[114903,114904],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[115316,115363],"content":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,47],"source":"IReadOnlyCollection<KeyValuePair<TKey, TValue>>"}]},{"pos":[115749,115768],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[115840,115841],"content":"<","needQuote":true,"nodes":[]},{"pos":[115919,115931],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[115996,115997],"content":"<","needQuote":true,"nodes":[]},{"pos":[116024,116028],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[116059,116060]},{"pos":[116092,116098],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[116263,116282],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[116355,116358]},{"pos":[116443,116455],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[116521,116524]},{"pos":[116558,116562],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[116593,116594]},{"pos":[116626,116632],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[116664,116665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[116692,116693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[117161,117200],"content":"IEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[117554,117565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[117629,117630],"content":"<","needQuote":true,"nodes":[]},{"pos":[117708,117720],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[117785,117786],"content":"<","needQuote":true,"nodes":[]},{"pos":[117813,117817],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[117848,117849]},{"pos":[117881,117887],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[118044,118055],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[118120,118123]},{"pos":[118208,118220],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[118286,118289]},{"pos":[118323,118327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[118358,118359]},{"pos":[118391,118397],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[118429,118430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118457,118458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[118793,118804],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[119017,119028],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[119241,119252],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[119451,119461],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[119556,119564],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[119633,119634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119661,119662],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[119732,119740],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[119809,119810],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[119837,119838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120021,120035],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[120154,120160],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[120227,120228],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120278,120284],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[120344,120345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120428,120434],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[120501,120502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[120552,120558],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[120618,120619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[120833,120855],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[121003,121009],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121076,121077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121127,121133],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[121194,121195]},{"pos":[121250,121256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121316,121317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121414,121420],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[121487,121488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[121538,121544],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[121605,121606]},{"pos":[121661,121667],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121727,121728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[121973,122004],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[122170,122185],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[122261,122262],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122312,122318],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[122379,122380]},{"pos":[122435,122441],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122501,122502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[122608,122623],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[122699,122700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[122750,122756],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[122817,122818]},{"pos":[122873,122879],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122939,122940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123170,123183],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[123284,123295],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[123367,123368],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123395,123396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123469,123480],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[123552,123553],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123580,123581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[123756,123765],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[123858,123865],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[123933,123934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[123961,123962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124031,124038],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[124106,124107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124134,124135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124310,124327],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[124436,124451],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[124527,124528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124555,124556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[124633,124648],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[124724,124725],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[124752,124753],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125048,125061],"content":"AsQueryable()","needQuote":true,"nodes":[{"content":"AsQueryable()","pos":[0,13]}]},{"pos":[125178,125189],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[125248,125249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125276,125277],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125358,125369],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[125428,125429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[125456,125457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[125862,125903],"content":"AsQueryable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,41],"source":"AsQueryable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[126249,126288],"content":"AsQueryable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"AsQueryable<KeyValuePair<TKey, TValue>>"}]},{"pos":[126402,126403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126430,126431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[126515,126560],"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsQueryable(Of KeyValuePair(Of TKey, TValue))","pos":[0,45]}]},{"pos":[126680,126681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[126708,126709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127185,127197],"content":"AsParallel()","needQuote":true,"nodes":[{"content":"AsParallel()","pos":[0,12]}]},{"pos":[127330,127340],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[127407,127408],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127435,127436],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[127525,127535],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[127602,127603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[127630,127631],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128077,128117],"content":"AsParallel<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,40],"source":"AsParallel<KeyValuePair<TKey, TValue>>()"}]},{"pos":[128486,128524],"content":"AsParallel<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsParallel&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,38],"source":"AsParallel<KeyValuePair<TKey, TValue>>"}]},{"pos":[128646,128647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128674,128675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[128767,128811],"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsParallel(Of KeyValuePair(Of TKey, TValue))","pos":[0,44]}]},{"pos":[128939,128940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[128967,128968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[129727,129854],"content":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;, KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,127],"source":"Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)"}]},{"pos":[130685,130722],"content":"Aggregate<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Aggregate<KeyValuePair<TKey, TValue>>"}]},{"pos":[130835,130836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[130886,130890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[130948,130949],"content":"<","needQuote":true,"nodes":[]},{"pos":[131027,131039],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[131125,131126],"content":"<","needQuote":true,"nodes":[]},{"pos":[131153,131157],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[131188,131189]},{"pos":[131221,131227],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[131292,131293]},{"pos":[131376,131388],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[131474,131475],"content":"<","needQuote":true,"nodes":[]},{"pos":[131502,131506],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[131537,131538]},{"pos":[131570,131576],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[131641,131642]},{"pos":[131725,131737],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[131823,131824],"content":"<","needQuote":true,"nodes":[]},{"pos":[131851,131855],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[131886,131887]},{"pos":[131919,131925],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[132021,132022],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[132131,132174],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[132293,132294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[132344,132348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[132407,132410]},{"pos":[132495,132507],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[132594,132597]},{"pos":[132631,132635],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[132666,132667]},{"pos":[132699,132705],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[132737,132738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[132766,132767]},{"pos":[132850,132862],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[132949,132952]},{"pos":[132986,132990],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[133021,133022]},{"pos":[133054,133060],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[133092,133093],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[133121,133122]},{"pos":[133205,133217],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[133304,133307]},{"pos":[133341,133345],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[133376,133377]},{"pos":[133409,133415],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[133447,133448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133475,133476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[133503,133504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[134381,134504],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;)","pos":[0,123],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)"}]},{"pos":[135207,135257],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;","pos":[0,50],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>"}]},{"pos":[135383,135384],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[135411,135422],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[135460,135461]},{"pos":[135516,135520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[135578,135579],"content":"<","needQuote":true,"nodes":[]},{"pos":[135606,135617],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[135655,135656]},{"pos":[135739,135751],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[135837,135838],"content":"<","needQuote":true,"nodes":[]},{"pos":[135865,135869],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[135900,135901]},{"pos":[135933,135939],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[136004,136005]},{"pos":[136037,136048],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[136117,136118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[136231,136287],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)","pos":[0,56]}]},{"pos":[136419,136420],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[136447,136458],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[136496,136497]},{"pos":[136552,136556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[136615,136618]},{"pos":[136652,136663],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[136701,136702]},{"pos":[136785,136797],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[136884,136887]},{"pos":[136921,136925],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[136956,136957]},{"pos":[136989,136995],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[137027,137028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[137056,137057]},{"pos":[137089,137100],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[137137,137138],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[137165,137166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[138091,138251],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;(TAccumulate, Func&lt;TAccumulate, KeyValuePair&lt;TKey, TValue&gt;, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,160],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[139106,139165],"content":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;KeyValuePair&lt;TKey, TValue&gt;, TAccumulate, TResult&gt;","pos":[0,59],"source":"Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>"}]},{"pos":[139300,139301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[139328,139339],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[139377,139378]},{"pos":[139433,139437],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[139495,139496],"content":"<","needQuote":true,"nodes":[]},{"pos":[139523,139534],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[139572,139573]},{"pos":[139656,139668],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[139754,139755],"content":"<","needQuote":true,"nodes":[]},{"pos":[139782,139786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[139817,139818]},{"pos":[139850,139856],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[139921,139922]},{"pos":[139954,139965],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[140035,140036]},{"pos":[140091,140095],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[140153,140154],"content":"<","needQuote":true,"nodes":[]},{"pos":[140181,140192],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[140230,140231]},{"pos":[140263,140270],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[140335,140336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[140470,140535],"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)","pos":[0,65]}]},{"pos":[140676,140677],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[140704,140715],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[140753,140754]},{"pos":[140809,140813],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[140872,140875]},{"pos":[140909,140920],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[140958,140959]},{"pos":[141042,141054],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[141141,141144]},{"pos":[141178,141182],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[141213,141214]},{"pos":[141246,141252],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[141284,141285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[141313,141314]},{"pos":[141346,141357],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[141394,141395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[141423,141424]},{"pos":[141479,141483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[141542,141545]},{"pos":[141579,141590],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[141628,141629]},{"pos":[141661,141668],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[141701,141702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[141729,141730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[142659,142733],"content":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[143300,143331],"content":"All<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"All&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"All<KeyValuePair<TKey, TValue>>"}]},{"pos":[143438,143439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[143489,143493],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[143551,143552],"content":"<","needQuote":true,"nodes":[]},{"pos":[143630,143642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[143728,143729],"content":"<","needQuote":true,"nodes":[]},{"pos":[143756,143760],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[143791,143792]},{"pos":[143824,143830],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[143895,143896]},{"pos":[143952,143959],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[144052,144053],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144163,144200],"content":"All(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"All(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[144313,144314],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[144364,144368],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[144427,144430]},{"pos":[144515,144527],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[144614,144617]},{"pos":[144651,144655],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[144686,144687]},{"pos":[144719,144725],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[144757,144758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[144786,144787]},{"pos":[144843,144850],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[144911,144912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[144939,144940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[145552,145585],"content":"Any<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Any<KeyValuePair<TKey, TValue>>()"}]},{"pos":[145902,145933],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[146040,146041],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146068,146069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146146,146183],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[146296,146297],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[146324,146325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[146935,147009],"content":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,74],"source":"Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[147576,147607],"content":"Any<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Any&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Any<KeyValuePair<TKey, TValue>>"}]},{"pos":[147714,147715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[147765,147769],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[147827,147828],"content":"<","needQuote":true,"nodes":[]},{"pos":[147906,147918],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[148004,148005],"content":"<","needQuote":true,"nodes":[]},{"pos":[148032,148036],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[148067,148068]},{"pos":[148100,148106],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[148171,148172]},{"pos":[148228,148235],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[148328,148329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[148439,148476],"content":"Any(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Any(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[148589,148590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[148640,148644],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[148703,148706]},{"pos":[148791,148803],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[148890,148893]},{"pos":[148927,148931],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[148962,148963]},{"pos":[148995,149001],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[149033,149034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[149062,149063]},{"pos":[149119,149126],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[149187,149188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149215,149216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[149846,149888],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,42],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>()"}]},{"pos":[150241,150281],"content":"AsEnumerable<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,40],"source":"AsEnumerable<KeyValuePair<TKey, TValue>>"}]},{"pos":[150397,150398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150425,150426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[150512,150558],"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"AsEnumerable(Of KeyValuePair(Of TKey, TValue))","pos":[0,46]}]},{"pos":[150680,150681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[150708,150709],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[151354,151432],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,78],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[152015,152050],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[152161,152162],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[152212,152216],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[152274,152275],"content":"<","needQuote":true,"nodes":[]},{"pos":[152353,152365],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[152451,152452],"content":"<","needQuote":true,"nodes":[]},{"pos":[152479,152483],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[152514,152515]},{"pos":[152547,152553],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[152618,152619]},{"pos":[152675,152682],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[152775,152776],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[152890,152931],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[153048,153049],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[153099,153103],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[153162,153165]},{"pos":[153250,153262],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[153349,153352]},{"pos":[153386,153390],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[153421,153422]},{"pos":[153454,153460],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[153492,153493],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[153521,153522]},{"pos":[153578,153585],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[153646,153647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[153674,153675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[154423,154500],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[155079,155114],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[155225,155226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[155276,155280],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[155338,155339],"content":"<","needQuote":true,"nodes":[]},{"pos":[155417,155429],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[155515,155516],"content":"<","needQuote":true,"nodes":[]},{"pos":[155543,155547],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[155578,155579]},{"pos":[155611,155617],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[155682,155683]},{"pos":[155738,155744],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[155836,155837],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[155950,155991],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[156108,156109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[156159,156163],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[156222,156225]},{"pos":[156310,156322],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[156409,156412]},{"pos":[156446,156450],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[156481,156482]},{"pos":[156514,156520],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[156552,156553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[156581,156582]},{"pos":[156637,156643],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[156703,156704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[156731,156732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[157475,157551],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[158126,158161],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[158272,158273],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[158323,158327],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[158385,158386],"content":"<","needQuote":true,"nodes":[]},{"pos":[158464,158476],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[158562,158563],"content":"<","needQuote":true,"nodes":[]},{"pos":[158590,158594],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[158625,158626]},{"pos":[158658,158664],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[158729,158730]},{"pos":[158784,158789],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[158880,158881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[158993,159034],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[159151,159152],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[159202,159206],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[159265,159268]},{"pos":[159353,159365],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[159452,159455]},{"pos":[159489,159493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[159524,159525]},{"pos":[159557,159563],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[159595,159596],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[159624,159625]},{"pos":[159679,159684],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[159743,159744],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[159771,159772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[160512,160588],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,76],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[161163,161198],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[161309,161310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[161360,161364],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[161422,161423],"content":"<","needQuote":true,"nodes":[]},{"pos":[161501,161513],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[161599,161600],"content":"<","needQuote":true,"nodes":[]},{"pos":[161627,161631],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[161662,161663]},{"pos":[161695,161701],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[161766,161767]},{"pos":[161821,161826],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[161917,161918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162030,162071],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[162188,162189],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[162239,162243],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[162302,162305]},{"pos":[162390,162402],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[162489,162492]},{"pos":[162526,162530],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[162561,162562]},{"pos":[162594,162600],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[162632,162633],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[162661,162662]},{"pos":[162716,162721],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[162780,162781],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[162808,162809],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[163587,163675],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,88],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[164325,164360],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[164471,164472],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[164522,164526],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[164584,164585],"content":"<","needQuote":true,"nodes":[]},{"pos":[164663,164675],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[164761,164762],"content":"<","needQuote":true,"nodes":[]},{"pos":[164789,164793],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[164824,164825]},{"pos":[164857,164863],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[164928,164929]},{"pos":[164988,164996],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[165058,165059],"content":"<","needQuote":true,"nodes":[]},{"pos":[165110,165117],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[165242,165243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[165374,165415],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[165532,165533],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[165583,165587],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[165646,165649]},{"pos":[165734,165746],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[165833,165836]},{"pos":[165870,165874],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[165905,165906]},{"pos":[165938,165944],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[165976,165977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[166005,166006]},{"pos":[166065,166073],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[166136,166139]},{"pos":[166197,166204],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[166265,166266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166293,166294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[166321,166322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[167144,167231],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[167877,167912],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[168023,168024],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[168074,168078],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[168136,168137],"content":"<","needQuote":true,"nodes":[]},{"pos":[168215,168227],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[168313,168314],"content":"<","needQuote":true,"nodes":[]},{"pos":[168341,168345],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[168376,168377]},{"pos":[168409,168415],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[168480,168481]},{"pos":[168540,168548],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[168610,168611],"content":"<","needQuote":true,"nodes":[]},{"pos":[168661,168667],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[168791,168792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[168922,168963],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[169080,169081],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[169131,169135],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[169194,169197]},{"pos":[169282,169294],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[169381,169384]},{"pos":[169418,169422],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[169453,169454]},{"pos":[169486,169492],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[169524,169525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[169553,169554]},{"pos":[169613,169621],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[169684,169687]},{"pos":[169744,169750],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[169810,169811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169838,169839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[169866,169867],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[170684,170770],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[171412,171447],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[171558,171559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[171609,171613],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[171671,171672],"content":"<","needQuote":true,"nodes":[]},{"pos":[171750,171762],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[171848,171849],"content":"<","needQuote":true,"nodes":[]},{"pos":[171876,171880],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[171911,171912]},{"pos":[171944,171950],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[172015,172016]},{"pos":[172075,172083],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[172145,172146],"content":"<","needQuote":true,"nodes":[]},{"pos":[172195,172200],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[172323,172324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[172453,172494],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[172611,172612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[172662,172666],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[172725,172728]},{"pos":[172813,172825],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[172912,172915]},{"pos":[172949,172953],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[172984,172985]},{"pos":[173017,173023],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[173055,173056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[173084,173085]},{"pos":[173144,173152],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[173215,173218]},{"pos":[173274,173279],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[173338,173339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173366,173367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[173394,173395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[174209,174295],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,86],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[174937,174972],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[175083,175084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[175134,175138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[175196,175197],"content":"<","needQuote":true,"nodes":[]},{"pos":[175275,175287],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[175373,175374],"content":"<","needQuote":true,"nodes":[]},{"pos":[175401,175405],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[175436,175437]},{"pos":[175469,175475],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[175540,175541]},{"pos":[175600,175608],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[175670,175671],"content":"<","needQuote":true,"nodes":[]},{"pos":[175720,175725],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[175848,175849],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[175978,176019],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[176136,176137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[176187,176191],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[176250,176253]},{"pos":[176338,176350],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[176437,176440]},{"pos":[176474,176478],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[176509,176510]},{"pos":[176542,176548],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[176580,176581],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[176609,176610]},{"pos":[176669,176677],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[176740,176743]},{"pos":[176799,176804],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[176863,176864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176891,176892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[176919,176920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[177736,177823],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,87],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[178469,178504],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[178615,178616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[178666,178670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[178728,178729],"content":"<","needQuote":true,"nodes":[]},{"pos":[178807,178819],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[178905,178906],"content":"<","needQuote":true,"nodes":[]},{"pos":[178933,178937],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[178968,178969]},{"pos":[179001,179007],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[179072,179073]},{"pos":[179132,179140],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[179202,179203],"content":"<","needQuote":true,"nodes":[]},{"pos":[179253,179259],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[179383,179384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[179514,179555],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[179672,179673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[179723,179727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[179786,179789]},{"pos":[179874,179886],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[179973,179976]},{"pos":[180010,180014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[180045,180046]},{"pos":[180078,180084],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[180116,180117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[180145,180146]},{"pos":[180205,180213],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[180276,180279]},{"pos":[180336,180342],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[180402,180403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180430,180431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[180458,180459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[181244,181321],"content":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,77],"source":"Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[181900,181935],"content":"Average<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Average&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Average<KeyValuePair<TKey, TValue>>"}]},{"pos":[182046,182047],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182097,182101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[182159,182160],"content":"<","needQuote":true,"nodes":[]},{"pos":[182238,182250],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[182336,182337],"content":"<","needQuote":true,"nodes":[]},{"pos":[182364,182368],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[182399,182400]},{"pos":[182432,182438],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[182503,182504]},{"pos":[182559,182565],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[182657,182658],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[182771,182812],"content":"Average(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Average(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[182929,182930],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[182980,182984],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[183043,183046]},{"pos":[183131,183143],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[183230,183233]},{"pos":[183267,183271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[183302,183303]},{"pos":[183335,183341],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[183373,183374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[183402,183403]},{"pos":[183458,183464],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[183524,183525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[183552,183553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184107,184122],"content":"Cast<TResult>()","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;()","pos":[0,15],"source":"Cast<TResult>()"}]},{"pos":[184326,184339],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[184401,184402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184429,184430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[184508,184524],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[184589,184590],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[184617,184618],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[185207,185282],"content":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[185893,185927],"content":"Concat<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Concat&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Concat<KeyValuePair<TKey, TValue>>"}]},{"pos":[186037,186038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186115,186126],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[186211,186212],"content":"<","needQuote":true,"nodes":[]},{"pos":[186290,186302],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[186388,186389],"content":"<","needQuote":true,"nodes":[]},{"pos":[186416,186420],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[186451,186452]},{"pos":[186484,186490],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[186586,186587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[186712,186752],"content":"Concat(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Concat(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[186868,186869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[186946,186957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[187043,187046]},{"pos":[187131,187143],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[187230,187233]},{"pos":[187267,187271],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[187302,187303]},{"pos":[187335,187341],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[187373,187374],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187401,187402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[187429,187430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[188127,188189],"content":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,62],"source":"Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[188661,188695],"content":"Append<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Append&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Append<KeyValuePair<TKey, TValue>>"}]},{"pos":[188805,188806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[188884,188896],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[188982,188983],"content":"<","needQuote":true,"nodes":[]},{"pos":[189010,189014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[189045,189046]},{"pos":[189078,189084],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[189148,189149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189234,189274],"content":"Append(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Append(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[189390,189391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[189469,189481],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[189568,189571]},{"pos":[189605,189609],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[189640,189641]},{"pos":[189673,189679],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[189711,189712],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[189739,189740],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[190370,190433],"content":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,63],"source":"Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[190909,190944],"content":"Prepend<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Prepend&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Prepend<KeyValuePair<TKey, TValue>>"}]},{"pos":[191055,191056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191134,191146],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[191232,191233],"content":"<","needQuote":true,"nodes":[]},{"pos":[191260,191264],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191295,191296]},{"pos":[191328,191334],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[191398,191399],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191485,191526],"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Prepend(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[191643,191644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[191722,191734],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[191821,191824]},{"pos":[191858,191862],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[191893,191894]},{"pos":[191926,191932],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[191964,191965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[191992,191993],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[192628,192692],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,64],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[193172,193208],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[193320,193321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193399,193411],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[193497,193498],"content":"<","needQuote":true,"nodes":[]},{"pos":[193525,193529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[193560,193561]},{"pos":[193593,193599],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[193663,193664],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[193751,193793],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[193911,193912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[193990,194002],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[194089,194092]},{"pos":[194126,194130],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[194161,194162]},{"pos":[194194,194200],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[194232,194233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[194260,194261],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[195052,195163],"content":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,111],"source":"Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[195954,195990],"content":"Contains<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Contains&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Contains<KeyValuePair<TKey, TValue>>"}]},{"pos":[196102,196103],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[196181,196193],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[196279,196280],"content":"<","needQuote":true,"nodes":[]},{"pos":[196307,196311],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[196342,196343]},{"pos":[196375,196381],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[196446,196447]},{"pos":[196535,196552],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[196643,196644],"content":"<","needQuote":true,"nodes":[]},{"pos":[196722,196734],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[196820,196821],"content":"<","needQuote":true,"nodes":[]},{"pos":[196848,196852],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[196883,196884]},{"pos":[196916,196922],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[197018,197019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[197156,197198],"content":"Contains(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Contains(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[197316,197317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[197395,197407],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[197494,197497]},{"pos":[197531,197535],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[197566,197567]},{"pos":[197599,197605],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[197637,197638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[197666,197667]},{"pos":[197755,197772],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[197864,197867]},{"pos":[197952,197964],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[198051,198054]},{"pos":[198088,198092],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[198123,198124]},{"pos":[198156,198162],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[198194,198195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198222,198223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198250,198251],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[198971,199006],"content":"Count<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"Count<KeyValuePair<TKey, TValue>>()"}]},{"pos":[199331,199364],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[199473,199474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199501,199502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[199581,199620],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[199735,199736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[199763,199764],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[200384,200460],"content":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[201035,201068],"content":"Count<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Count&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Count<KeyValuePair<TKey, TValue>>"}]},{"pos":[201177,201178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[201228,201232],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[201290,201291],"content":"<","needQuote":true,"nodes":[]},{"pos":[201369,201381],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[201467,201468],"content":"<","needQuote":true,"nodes":[]},{"pos":[201495,201499],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[201530,201531]},{"pos":[201563,201569],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[201634,201635]},{"pos":[201691,201698],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[201791,201792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[201904,201943],"content":"Count(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Count(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[202058,202059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[202109,202113],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[202172,202175]},{"pos":[202260,202272],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[202359,202362]},{"pos":[202396,202400],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[202431,202432]},{"pos":[202464,202470],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[202502,202503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[202531,202532]},{"pos":[202588,202595],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[202656,202657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[202684,202685],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[203325,203369],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>()"}]},{"pos":[203730,203772],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[203890,203891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[203918,203919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204007,204055],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[204179,204180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[204207,204208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[204817,204887],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,70],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)"}]},{"pos":[205391,205433],"content":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"DefaultIfEmpty<KeyValuePair<TKey, TValue>>"}]},{"pos":[205551,205552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[205630,205642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[205728,205729],"content":"<","needQuote":true,"nodes":[]},{"pos":[205756,205760],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[205791,205792]},{"pos":[205824,205830],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[205894,205895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[205988,206036],"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[206160,206161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[206239,206251],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[206338,206341]},{"pos":[206375,206379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[206410,206411]},{"pos":[206443,206449],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[206481,206482],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[206509,206510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207104,207142],"content":"Distinct<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,38],"source":"Distinct<KeyValuePair<TKey, TValue>>()"}]},{"pos":[207479,207515],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[207627,207628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207655,207656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[207738,207780],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[207898,207899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[207926,207927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[208598,208681],"content":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,83],"source":"Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[209324,209360],"content":"Distinct<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Distinct&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,36],"source":"Distinct<KeyValuePair<TKey, TValue>>"}]},{"pos":[209472,209473],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[209556,209573],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[209664,209665],"content":"<","needQuote":true,"nodes":[]},{"pos":[209743,209755],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[209841,209842],"content":"<","needQuote":true,"nodes":[]},{"pos":[209869,209873],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[209904,209905]},{"pos":[209937,209943],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[210039,210040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210173,210215],"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Distinct(Of KeyValuePair(Of TKey, TValue))","pos":[0,42]}]},{"pos":[210333,210334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[210417,210434],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[210526,210529]},{"pos":[210614,210626],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[210713,210716]},{"pos":[210750,210754],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[210785,210786]},{"pos":[210818,210824],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[210856,210857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210884,210885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[210912,210913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[211605,211649],"content":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,44],"source":"ElementAt<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[212033,212070],"content":"ElementAt<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAt&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"ElementAt<KeyValuePair<TKey, TValue>>"}]},{"pos":[212183,212184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212233,212238],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[212297,212298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[212395,212438],"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAt(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[212557,212558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[212607,212612],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[212671,212672],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[213262,213315],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,53],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[213735,213781],"content":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,46],"source":"ElementAtOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[213903,213904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[213953,213958],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[214017,214018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[214124,214176],"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,52]}]},{"pos":[214304,214305],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[214354,214359],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[214418,214419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[215127,215202],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,75],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[215813,215847],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[215957,215958],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216035,216046],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[216131,216132],"content":"<","needQuote":true,"nodes":[]},{"pos":[216210,216222],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[216308,216309],"content":"<","needQuote":true,"nodes":[]},{"pos":[216336,216340],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[216371,216372]},{"pos":[216404,216410],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[216506,216507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[216632,216672],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[216788,216789],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[216866,216877],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[216963,216966]},{"pos":[217051,217063],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[217150,217153]},{"pos":[217187,217191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[217222,217223]},{"pos":[217255,217261],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[217293,217294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217321,217322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[217349,217350],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[218280,218402],"content":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,122],"source":"Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[219324,219358],"content":"Except<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Except&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Except<KeyValuePair<TKey, TValue>>"}]},{"pos":[219468,219469],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[219546,219557],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[219642,219643],"content":"<","needQuote":true,"nodes":[]},{"pos":[219721,219733],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[219819,219820],"content":"<","needQuote":true,"nodes":[]},{"pos":[219847,219851],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[219882,219883]},{"pos":[219915,219921],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[220018,220019]},{"pos":[220107,220124],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[220215,220216],"content":"<","needQuote":true,"nodes":[]},{"pos":[220294,220306],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[220392,220393],"content":"<","needQuote":true,"nodes":[]},{"pos":[220420,220424],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[220455,220456]},{"pos":[220488,220494],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[220590,220591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[220766,220806],"content":"Except(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Except(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[220922,220923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[221000,221011],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[221097,221100]},{"pos":[221185,221197],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[221284,221287]},{"pos":[221321,221325],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[221356,221357]},{"pos":[221389,221395],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[221427,221428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[221455,221456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[221484,221485]},{"pos":[221573,221590],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[221682,221685]},{"pos":[221770,221782],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[221869,221872]},{"pos":[221906,221910],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[221941,221942]},{"pos":[221974,221980],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[222012,222013],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222040,222041],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222068,222069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[222852,222887],"content":"First<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,35],"source":"First<KeyValuePair<TKey, TValue>>()"}]},{"pos":[223212,223245],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[223354,223355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223382,223383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[223462,223501],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[223616,223617],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[223644,223645],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[224265,224341],"content":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[224916,224949],"content":"First<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"First&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"First<KeyValuePair<TKey, TValue>>"}]},{"pos":[225058,225059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225109,225113],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[225171,225172],"content":"<","needQuote":true,"nodes":[]},{"pos":[225250,225262],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[225348,225349],"content":"<","needQuote":true,"nodes":[]},{"pos":[225376,225380],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[225411,225412]},{"pos":[225444,225450],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[225515,225516]},{"pos":[225572,225579],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[225672,225673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[225785,225824],"content":"First(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"First(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[225939,225940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[225990,225994],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[226053,226056]},{"pos":[226141,226153],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[226240,226243]},{"pos":[226277,226281],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[226312,226313]},{"pos":[226345,226351],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[226383,226384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[226412,226413]},{"pos":[226469,226476],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[226537,226538],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[226565,226566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227206,227250],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,44],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[227611,227653],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[227771,227772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[227799,227800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[227888,227936],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[228060,228061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[228088,228089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[228754,228839],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,85],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[229450,229492],"content":"FirstOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,42],"source":"FirstOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[229610,229611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[229661,229665],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[229723,229724],"content":"<","needQuote":true,"nodes":[]},{"pos":[229802,229814],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[229900,229901],"content":"<","needQuote":true,"nodes":[]},{"pos":[229928,229932],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[229963,229964]},{"pos":[229996,230002],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[230067,230068]},{"pos":[230124,230131],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[230224,230225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[230346,230394],"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,48]}]},{"pos":[230518,230519],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[230569,230573],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[230632,230635]},{"pos":[230720,230732],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[230819,230822]},{"pos":[230856,230860],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[230891,230892]},{"pos":[230924,230930],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[230962,230963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[230991,230992]},{"pos":[231048,231055],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[231116,231117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231144,231145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[231897,231978],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[232545,232586],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[232703,232704],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[232754,232758],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[232816,232817],"content":"<","needQuote":true,"nodes":[]},{"pos":[232895,232907],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[232993,232994],"content":"<","needQuote":true,"nodes":[]},{"pos":[233021,233025],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[233056,233057]},{"pos":[233089,233095],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[233160,233161]},{"pos":[233193,233197],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[233259,233260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[233363,233410],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[233533,233534],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[233584,233588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[233647,233650]},{"pos":[233735,233747],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[233834,233837]},{"pos":[233871,233875],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[233906,233907]},{"pos":[233939,233945],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[233977,233978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[234006,234007]},{"pos":[234039,234043],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[234073,234074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234101,234102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[234931,235037],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,106],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[235789,235830],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[235947,235948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[235998,236002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[236060,236061],"content":"<","needQuote":true,"nodes":[]},{"pos":[236139,236151],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[236237,236238],"content":"<","needQuote":true,"nodes":[]},{"pos":[236265,236269],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236300,236301]},{"pos":[236333,236339],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[236404,236405]},{"pos":[236437,236441],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[236504,236505]},{"pos":[236593,236610],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[236701,236702],"content":"<","needQuote":true,"nodes":[]},{"pos":[236729,236733],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[236795,236796],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[236949,236996],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[237119,237120],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[237170,237174],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[237233,237236]},{"pos":[237321,237333],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[237420,237423]},{"pos":[237457,237461],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[237492,237493]},{"pos":[237525,237531],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[237563,237564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[237592,237593]},{"pos":[237625,237629],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[237659,237660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[237688,237689]},{"pos":[237777,237794],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[237886,237889]},{"pos":[237923,237927],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[237957,237958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[237985,237986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[238917,239052],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,135],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[239882,239933],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[240060,240061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[240111,240115],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[240173,240174],"content":"<","needQuote":true,"nodes":[]},{"pos":[240252,240264],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[240350,240351],"content":"<","needQuote":true,"nodes":[]},{"pos":[240378,240382],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[240413,240414]},{"pos":[240446,240452],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[240517,240518]},{"pos":[240550,240554],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[240617,240618]},{"pos":[240673,240677],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[240735,240736],"content":"<","needQuote":true,"nodes":[]},{"pos":[240814,240826],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[240912,240913],"content":"<","needQuote":true,"nodes":[]},{"pos":[240940,240944],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[240975,240976]},{"pos":[241008,241014],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[241079,241080]},{"pos":[241112,241120],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[241186,241187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[241311,241368],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[241501,241502],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[241552,241556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[241615,241618]},{"pos":[241703,241715],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[241802,241805]},{"pos":[241839,241843],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[241874,241875]},{"pos":[241907,241913],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[241945,241946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[241974,241975]},{"pos":[242007,242011],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[242041,242042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[242070,242071]},{"pos":[242126,242130],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[242189,242192]},{"pos":[242277,242289],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[242376,242379]},{"pos":[242413,242417],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[242448,242449]},{"pos":[242481,242487],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[242519,242520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[242548,242549]},{"pos":[242581,242589],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[242623,242624],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[242651,242652],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[243718,243878],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,160],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[244893,244944],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,51],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[245071,245072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[245122,245126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[245184,245185],"content":"<","needQuote":true,"nodes":[]},{"pos":[245263,245275],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[245361,245362],"content":"<","needQuote":true,"nodes":[]},{"pos":[245389,245393],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[245424,245425]},{"pos":[245457,245463],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[245528,245529]},{"pos":[245561,245565],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[245628,245629]},{"pos":[245684,245688],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[245746,245747],"content":"<","needQuote":true,"nodes":[]},{"pos":[245825,245837],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[245923,245924],"content":"<","needQuote":true,"nodes":[]},{"pos":[245951,245955],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[245986,245987]},{"pos":[246019,246025],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[246090,246091]},{"pos":[246123,246131],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[246198,246199]},{"pos":[246287,246304],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[246395,246396],"content":"<","needQuote":true,"nodes":[]},{"pos":[246423,246427],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[246489,246490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[246664,246721],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,57]}]},{"pos":[246854,246855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[246905,246909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[246968,246971]},{"pos":[247056,247068],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[247155,247158]},{"pos":[247192,247196],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[247227,247228]},{"pos":[247260,247266],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[247298,247299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[247327,247328]},{"pos":[247360,247364],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[247394,247395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[247423,247424]},{"pos":[247479,247483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[247542,247545]},{"pos":[247630,247642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[247729,247732]},{"pos":[247766,247770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[247801,247802]},{"pos":[247834,247840],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[247872,247873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[247901,247902]},{"pos":[247934,247942],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[247976,247977],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[248005,248006]},{"pos":[248094,248111],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[248203,248206]},{"pos":[248240,248244],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[248274,248275],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[248302,248303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[249459,249611],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;)","pos":[0,152],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)"}]},{"pos":[250596,250646],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[250772,250773],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[250823,250827],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[250885,250886],"content":"<","needQuote":true,"nodes":[]},{"pos":[250964,250976],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[251062,251063],"content":"<","needQuote":true,"nodes":[]},{"pos":[251090,251094],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[251125,251126]},{"pos":[251158,251164],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[251229,251230]},{"pos":[251262,251266],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[251329,251330]},{"pos":[251385,251389],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[251447,251448],"content":"<","needQuote":true,"nodes":[]},{"pos":[251475,251479],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[251510,251511]},{"pos":[251593,251604],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[251689,251690],"content":"<","needQuote":true,"nodes":[]},{"pos":[251768,251780],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[251866,251867],"content":"<","needQuote":true,"nodes":[]},{"pos":[251894,251898],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[251929,251930]},{"pos":[251962,251968],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[252065,252066]},{"pos":[252098,252105],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[252170,252171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[252339,252395],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[252527,252528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[252578,252582],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[252641,252644]},{"pos":[252729,252741],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[252828,252831]},{"pos":[252865,252869],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[252900,252901]},{"pos":[252933,252939],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[252971,252972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[253000,253001]},{"pos":[253033,253037],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[253067,253068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[253096,253097]},{"pos":[253152,253156],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[253215,253218]},{"pos":[253252,253256],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[253287,253288]},{"pos":[253370,253381],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[253467,253470]},{"pos":[253555,253567],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[253654,253657]},{"pos":[253691,253695],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[253726,253727]},{"pos":[253759,253765],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[253797,253798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253825,253826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[253854,253855]},{"pos":[253887,253894],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[253927,253928],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[253955,253956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[255193,255370],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TKey, IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,177],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[256540,256590],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TResult&gt;","pos":[0,50],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>"}]},{"pos":[256716,256717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[256767,256771],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[256829,256830],"content":"<","needQuote":true,"nodes":[]},{"pos":[256908,256920],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[257006,257007],"content":"<","needQuote":true,"nodes":[]},{"pos":[257034,257038],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257069,257070]},{"pos":[257102,257108],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[257173,257174]},{"pos":[257206,257210],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257273,257274]},{"pos":[257329,257333],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[257391,257392],"content":"<","needQuote":true,"nodes":[]},{"pos":[257419,257423],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257454,257455]},{"pos":[257537,257548],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[257633,257634],"content":"<","needQuote":true,"nodes":[]},{"pos":[257712,257724],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[257810,257811],"content":"<","needQuote":true,"nodes":[]},{"pos":[257838,257842],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[257873,257874]},{"pos":[257906,257912],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[258009,258010]},{"pos":[258042,258049],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[258115,258116]},{"pos":[258204,258221],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[258312,258313],"content":"<","needQuote":true,"nodes":[]},{"pos":[258340,258344],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[258406,258407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[258625,258681],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)","pos":[0,56]}]},{"pos":[258813,258814],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[258864,258868],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[258927,258930]},{"pos":[259015,259027],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[259114,259117]},{"pos":[259151,259155],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[259186,259187]},{"pos":[259219,259225],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[259257,259258],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[259286,259287]},{"pos":[259319,259323],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[259353,259354],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[259382,259383]},{"pos":[259438,259442],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[259501,259504]},{"pos":[259538,259542],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[259573,259574]},{"pos":[259656,259667],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[259753,259756]},{"pos":[259841,259853],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[259940,259943]},{"pos":[259977,259981],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[260012,260013]},{"pos":[260045,260051],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[260083,260084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260111,260112],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[260140,260141]},{"pos":[260173,260180],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[260213,260214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[260242,260243]},{"pos":[260331,260348],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[260440,260443]},{"pos":[260477,260481],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[260511,260512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[260539,260540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[261833,262021],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,188],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[263155,263215],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[263351,263352],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[263402,263406],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[263464,263465],"content":"<","needQuote":true,"nodes":[]},{"pos":[263543,263555],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[263641,263642],"content":"<","needQuote":true,"nodes":[]},{"pos":[263669,263673],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[263704,263705]},{"pos":[263737,263743],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[263808,263809]},{"pos":[263841,263845],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[263908,263909]},{"pos":[263964,263968],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[264026,264027],"content":"<","needQuote":true,"nodes":[]},{"pos":[264105,264117],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[264203,264204],"content":"<","needQuote":true,"nodes":[]},{"pos":[264231,264235],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[264266,264267]},{"pos":[264299,264305],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[264370,264371]},{"pos":[264403,264411],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[264478,264479]},{"pos":[264534,264538],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[264596,264597],"content":"<","needQuote":true,"nodes":[]},{"pos":[264624,264628],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[264659,264660]},{"pos":[264742,264753],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[264838,264839],"content":"<","needQuote":true,"nodes":[]},{"pos":[264866,264874],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[264941,264942]},{"pos":[264974,264981],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[265046,265047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[265236,265302],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[265444,265445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[265495,265499],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[265558,265561]},{"pos":[265646,265658],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[265745,265748]},{"pos":[265782,265786],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[265817,265818]},{"pos":[265850,265856],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[265888,265889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[265917,265918]},{"pos":[265950,265954],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[265984,265985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266013,266014]},{"pos":[266069,266073],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266132,266135]},{"pos":[266220,266232],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[266319,266322]},{"pos":[266356,266360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[266391,266392]},{"pos":[266424,266430],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[266462,266463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266491,266492]},{"pos":[266524,266532],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[266566,266567],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[266595,266596]},{"pos":[266651,266655],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[266714,266717]},{"pos":[266751,266755],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[266786,266787]},{"pos":[266869,266880],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[266966,266969]},{"pos":[267003,267011],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[267045,267046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[267074,267075]},{"pos":[267107,267114],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[267147,267148],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[267175,267176],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[268565,268778],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,213],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[270097,270157],"content":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement, TResult&gt;","pos":[0,60],"source":"GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>"}]},{"pos":[270293,270294],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[270344,270348],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270406,270407],"content":"<","needQuote":true,"nodes":[]},{"pos":[270485,270497],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[270583,270584],"content":"<","needQuote":true,"nodes":[]},{"pos":[270611,270615],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270646,270647]},{"pos":[270679,270685],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[270750,270751]},{"pos":[270783,270787],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[270850,270851]},{"pos":[270906,270910],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[270968,270969],"content":"<","needQuote":true,"nodes":[]},{"pos":[271047,271059],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[271145,271146],"content":"<","needQuote":true,"nodes":[]},{"pos":[271173,271177],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[271208,271209]},{"pos":[271241,271247],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[271312,271313]},{"pos":[271345,271353],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[271420,271421]},{"pos":[271476,271480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[271538,271539],"content":"<","needQuote":true,"nodes":[]},{"pos":[271566,271570],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[271601,271602]},{"pos":[271684,271695],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[271780,271781],"content":"<","needQuote":true,"nodes":[]},{"pos":[271808,271816],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[271883,271884]},{"pos":[271916,271923],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[271989,271990]},{"pos":[272078,272095],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[272186,272187],"content":"<","needQuote":true,"nodes":[]},{"pos":[272214,272218],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[272280,272281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[272520,272586],"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)","pos":[0,66]}]},{"pos":[272728,272729],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[272779,272783],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[272842,272845]},{"pos":[272930,272942],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[273029,273032]},{"pos":[273066,273070],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[273101,273102]},{"pos":[273134,273140],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[273172,273173],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273201,273202]},{"pos":[273234,273238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[273268,273269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273297,273298]},{"pos":[273353,273357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273416,273419]},{"pos":[273504,273516],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[273603,273606]},{"pos":[273640,273644],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[273675,273676]},{"pos":[273708,273714],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[273746,273747],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273775,273776]},{"pos":[273808,273816],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[273850,273851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[273879,273880]},{"pos":[273935,273939],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[273998,274001]},{"pos":[274035,274039],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[274070,274071]},{"pos":[274153,274164],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[274250,274253]},{"pos":[274287,274295],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[274329,274330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[274358,274359]},{"pos":[274391,274398],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[274431,274432],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[274460,274461]},{"pos":[274549,274566],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[274658,274661]},{"pos":[274695,274699],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[274729,274730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[274757,274758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[276240,276445],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,205],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)"}]},{"pos":[277736,277796],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[277932,277933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[278010,278021],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[278106,278107],"content":"<","needQuote":true,"nodes":[]},{"pos":[278134,278140],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[278205,278206]},{"pos":[278261,278265],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[278323,278324],"content":"<","needQuote":true,"nodes":[]},{"pos":[278402,278414],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[278500,278501],"content":"<","needQuote":true,"nodes":[]},{"pos":[278528,278532],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[278563,278564]},{"pos":[278596,278602],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[278667,278668]},{"pos":[278700,278704],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[278767,278768]},{"pos":[278823,278827],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[278885,278886],"content":"<","needQuote":true,"nodes":[]},{"pos":[278913,278919],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[278952,278953]},{"pos":[278985,278989],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[279052,279053]},{"pos":[279108,279112],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[279170,279171],"content":"<","needQuote":true,"nodes":[]},{"pos":[279249,279261],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[279347,279348],"content":"<","needQuote":true,"nodes":[]},{"pos":[279375,279379],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[279410,279411]},{"pos":[279443,279449],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[279514,279515]},{"pos":[279597,279608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[279693,279694],"content":"<","needQuote":true,"nodes":[]},{"pos":[279721,279727],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[279792,279793]},{"pos":[279825,279832],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[279897,279898],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[280133,280199],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[280341,280342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[280419,280430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[280516,280519]},{"pos":[280553,280559],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[280591,280592],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[280620,280621]},{"pos":[280676,280680],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[280739,280742]},{"pos":[280827,280839],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[280926,280929]},{"pos":[280963,280967],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[280998,280999]},{"pos":[281031,281037],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[281069,281070],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[281098,281099]},{"pos":[281131,281135],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[281165,281166],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[281194,281195]},{"pos":[281250,281254],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[281313,281316]},{"pos":[281350,281356],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[281389,281390]},{"pos":[281422,281426],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[281456,281457],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[281485,281486]},{"pos":[281541,281545],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[281604,281607]},{"pos":[281692,281704],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[281791,281794]},{"pos":[281828,281832],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[281863,281864]},{"pos":[281896,281902],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[281934,281935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[281963,281964]},{"pos":[282046,282057],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[282143,282146]},{"pos":[282180,282186],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[282218,282219],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[282247,282248]},{"pos":[282280,282287],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[282320,282321],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[282348,282349],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[283914,284144],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,230],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[285620,285680],"content":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,60],"source":"GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[285816,285817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[285894,285905],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[285990,285991],"content":"<","needQuote":true,"nodes":[]},{"pos":[286018,286024],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[286089,286090]},{"pos":[286145,286149],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[286207,286208],"content":"<","needQuote":true,"nodes":[]},{"pos":[286286,286298],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[286384,286385],"content":"<","needQuote":true,"nodes":[]},{"pos":[286412,286416],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[286447,286448]},{"pos":[286480,286486],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[286551,286552]},{"pos":[286584,286588],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[286651,286652]},{"pos":[286707,286711],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[286769,286770],"content":"<","needQuote":true,"nodes":[]},{"pos":[286797,286803],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[286836,286837]},{"pos":[286869,286873],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[286936,286937]},{"pos":[286992,286996],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[287054,287055],"content":"<","needQuote":true,"nodes":[]},{"pos":[287133,287145],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[287231,287232],"content":"<","needQuote":true,"nodes":[]},{"pos":[287259,287263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[287294,287295]},{"pos":[287327,287333],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[287398,287399]},{"pos":[287481,287492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[287577,287578],"content":"<","needQuote":true,"nodes":[]},{"pos":[287605,287611],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[287676,287677]},{"pos":[287709,287716],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[287782,287783]},{"pos":[287871,287888],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[287979,287980],"content":"<","needQuote":true,"nodes":[]},{"pos":[288007,288011],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[288073,288074],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[288359,288425],"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,66]}]},{"pos":[288567,288568],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[288645,288656],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[288742,288745]},{"pos":[288779,288785],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[288817,288818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[288846,288847]},{"pos":[288902,288906],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[288965,288968]},{"pos":[289053,289065],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[289152,289155]},{"pos":[289189,289193],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[289224,289225]},{"pos":[289257,289263],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[289295,289296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289324,289325]},{"pos":[289357,289361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[289391,289392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289420,289421]},{"pos":[289476,289480],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289539,289542]},{"pos":[289576,289582],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[289615,289616]},{"pos":[289648,289652],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[289682,289683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[289711,289712]},{"pos":[289767,289771],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[289830,289833]},{"pos":[289918,289930],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[290017,290020]},{"pos":[290054,290058],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[290089,290090]},{"pos":[290122,290128],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[290160,290161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[290189,290190]},{"pos":[290272,290283],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[290369,290372]},{"pos":[290406,290412],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[290444,290445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[290473,290474]},{"pos":[290506,290513],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[290546,290547],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[290575,290576]},{"pos":[290664,290681],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[290773,290776]},{"pos":[290810,290814],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[290844,290845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[290872,290873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[292144,292222],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,78],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[292845,292882],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[292995,292996],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293073,293084],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[293169,293170],"content":"<","needQuote":true,"nodes":[]},{"pos":[293248,293260],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[293346,293347],"content":"<","needQuote":true,"nodes":[]},{"pos":[293374,293378],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[293409,293410]},{"pos":[293442,293448],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[293544,293545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[293673,293716],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[293835,293836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[293913,293924],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[294010,294013]},{"pos":[294098,294110],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[294197,294200]},{"pos":[294234,294238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[294269,294270]},{"pos":[294302,294308],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[294340,294341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294368,294369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[294396,294397],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[295342,295467],"content":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,125],"source":"Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[296401,296438],"content":"Intersect<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Intersect&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"Intersect<KeyValuePair<TKey, TValue>>"}]},{"pos":[296551,296552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[296629,296640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[296725,296726],"content":"<","needQuote":true,"nodes":[]},{"pos":[296804,296816],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[296902,296903],"content":"<","needQuote":true,"nodes":[]},{"pos":[296930,296934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[296965,296966]},{"pos":[296998,297004],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[297101,297102]},{"pos":[297190,297207],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[297298,297299],"content":"<","needQuote":true,"nodes":[]},{"pos":[297377,297389],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[297475,297476],"content":"<","needQuote":true,"nodes":[]},{"pos":[297503,297507],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[297538,297539]},{"pos":[297571,297577],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[297673,297674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[297852,297895],"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Intersect(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[298014,298015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[298092,298103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[298189,298192]},{"pos":[298277,298289],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[298376,298379]},{"pos":[298413,298417],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[298448,298449]},{"pos":[298481,298487],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[298519,298520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[298547,298548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[298576,298577]},{"pos":[298665,298682],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[298774,298777]},{"pos":[298862,298874],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[298961,298964]},{"pos":[298998,299002],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[299033,299034]},{"pos":[299066,299072],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[299104,299105],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299132,299133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[299160,299161],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[300307,300494],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;)","pos":[0,187],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)"}]},{"pos":[301626,301681],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[301812,301813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[301890,301901],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[301986,301987],"content":"<","needQuote":true,"nodes":[]},{"pos":[302014,302020],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[302085,302086]},{"pos":[302141,302145],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[302203,302204],"content":"<","needQuote":true,"nodes":[]},{"pos":[302282,302294],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[302380,302381],"content":"<","needQuote":true,"nodes":[]},{"pos":[302408,302412],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[302443,302444]},{"pos":[302476,302482],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[302547,302548]},{"pos":[302580,302584],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[302647,302648]},{"pos":[302703,302707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[302765,302766],"content":"<","needQuote":true,"nodes":[]},{"pos":[302793,302799],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[302832,302833]},{"pos":[302865,302869],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[302932,302933]},{"pos":[302988,302992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[303050,303051],"content":"<","needQuote":true,"nodes":[]},{"pos":[303129,303141],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[303227,303228],"content":"<","needQuote":true,"nodes":[]},{"pos":[303255,303259],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[303290,303291]},{"pos":[303323,303329],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[303394,303395]},{"pos":[303427,303433],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[303466,303467]},{"pos":[303499,303506],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[303571,303572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[303762,303823],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[303960,303961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[304038,304049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[304135,304138]},{"pos":[304172,304178],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[304210,304211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[304239,304240]},{"pos":[304295,304299],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[304358,304361]},{"pos":[304446,304458],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[304545,304548]},{"pos":[304582,304586],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[304617,304618]},{"pos":[304650,304656],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[304688,304689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[304717,304718]},{"pos":[304750,304754],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[304784,304785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[304813,304814]},{"pos":[304869,304873],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[304932,304935]},{"pos":[304969,304975],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[305008,305009]},{"pos":[305041,305045],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[305075,305076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[305104,305105]},{"pos":[305160,305164],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[305223,305226]},{"pos":[305311,305323],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[305410,305413]},{"pos":[305447,305451],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[305482,305483]},{"pos":[305515,305521],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[305553,305554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[305582,305583]},{"pos":[305615,305621],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[305654,305655]},{"pos":[305687,305694],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[305727,305728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[305755,305756],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[307147,307359],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;(IEnumerable&lt;TInner&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,212],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[308676,308731],"content":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;KeyValuePair&lt;TKey, TValue&gt;, TInner, TKey, TResult&gt;","pos":[0,55],"source":"Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>"}]},{"pos":[308862,308863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[308940,308951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[309036,309037],"content":"<","needQuote":true,"nodes":[]},{"pos":[309064,309070],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[309135,309136]},{"pos":[309191,309195],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309253,309254],"content":"<","needQuote":true,"nodes":[]},{"pos":[309332,309344],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[309430,309431],"content":"<","needQuote":true,"nodes":[]},{"pos":[309458,309462],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309493,309494]},{"pos":[309526,309532],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[309597,309598]},{"pos":[309630,309634],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309697,309698]},{"pos":[309753,309757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[309815,309816],"content":"<","needQuote":true,"nodes":[]},{"pos":[309843,309849],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[309882,309883]},{"pos":[309915,309919],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[309982,309983]},{"pos":[310038,310042],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[310100,310101],"content":"<","needQuote":true,"nodes":[]},{"pos":[310179,310191],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[310277,310278],"content":"<","needQuote":true,"nodes":[]},{"pos":[310305,310309],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[310340,310341]},{"pos":[310373,310379],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[310444,310445]},{"pos":[310477,310483],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[310516,310517]},{"pos":[310549,310556],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[310622,310623]},{"pos":[310711,310728],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[310819,310820],"content":"<","needQuote":true,"nodes":[]},{"pos":[310847,310851],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[310913,310914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[311154,311215],"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)","pos":[0,61]}]},{"pos":[311352,311353],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[311430,311441],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[311527,311530]},{"pos":[311564,311570],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[311602,311603],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[311631,311632]},{"pos":[311687,311691],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[311750,311753]},{"pos":[311838,311850],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[311937,311940]},{"pos":[311974,311978],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[312009,312010]},{"pos":[312042,312048],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[312080,312081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[312109,312110]},{"pos":[312142,312146],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[312176,312177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[312205,312206]},{"pos":[312261,312265],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[312324,312327]},{"pos":[312361,312367],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[312400,312401]},{"pos":[312433,312437],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[312467,312468],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[312496,312497]},{"pos":[312552,312556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[312615,312618]},{"pos":[312703,312715],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[312802,312805]},{"pos":[312839,312843],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[312874,312875]},{"pos":[312907,312913],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[312945,312946],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[312974,312975]},{"pos":[313007,313013],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[313046,313047]},{"pos":[313079,313086],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[313119,313120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[313148,313149]},{"pos":[313237,313254],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[313346,313349]},{"pos":[313383,313387],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[313417,313418],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[313445,313446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[314481,314515],"content":"Last<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,34],"source":"Last<KeyValuePair<TKey, TValue>>()"}]},{"pos":[314836,314868],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[314976,314977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315004,315005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315083,315121],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[315235,315236],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[315263,315264],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[315879,315954],"content":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,75],"source":"Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[316525,316557],"content":"Last<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Last&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Last<KeyValuePair<TKey, TValue>>"}]},{"pos":[316665,316666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[316716,316720],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[316778,316779],"content":"<","needQuote":true,"nodes":[]},{"pos":[316857,316869],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[316955,316956],"content":"<","needQuote":true,"nodes":[]},{"pos":[316983,316987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[317018,317019]},{"pos":[317051,317057],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[317122,317123]},{"pos":[317179,317186],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[317279,317280],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[317391,317429],"content":"Last(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Last(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[317543,317544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[317594,317598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[317657,317660]},{"pos":[317745,317757],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[317844,317847]},{"pos":[317881,317885],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[317916,317917]},{"pos":[317949,317955],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[317987,317988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[318016,318017]},{"pos":[318073,318080],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[318141,318142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318169,318170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[318805,318848],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,43],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[319205,319246],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[319363,319364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319391,319392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[319479,319526],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[319649,319650],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[319677,319678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[320338,320422],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,84],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[321029,321070],"content":"LastOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"LastOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[321187,321188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[321238,321242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[321300,321301],"content":"<","needQuote":true,"nodes":[]},{"pos":[321379,321391],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[321477,321478],"content":"<","needQuote":true,"nodes":[]},{"pos":[321505,321509],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[321540,321541]},{"pos":[321573,321579],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[321644,321645]},{"pos":[321701,321708],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[321801,321802],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[321922,321969],"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LastOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[322092,322093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[322143,322147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[322206,322209]},{"pos":[322294,322306],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[322393,322396]},{"pos":[322430,322434],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[322465,322466]},{"pos":[322498,322504],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[322536,322537],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[322565,322566]},{"pos":[322622,322629],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[322690,322691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[322718,322719],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[323373,323412],"content":"LongCount<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,39],"source":"LongCount<KeyValuePair<TKey, TValue>>()"}]},{"pos":[323753,323790],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[323903,323904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[323931,323932],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324015,324058],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[324177,324178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[324205,324206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[324846,324926],"content":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[325517,325554],"content":"LongCount<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"LongCount&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"LongCount<KeyValuePair<TKey, TValue>>"}]},{"pos":[325667,325668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[325718,325722],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[325780,325781],"content":"<","needQuote":true,"nodes":[]},{"pos":[325859,325871],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[325957,325958],"content":"<","needQuote":true,"nodes":[]},{"pos":[325985,325989],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[326020,326021]},{"pos":[326053,326059],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[326124,326125]},{"pos":[326181,326188],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[326281,326282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[326398,326441],"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"LongCount(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[326560,326561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[326611,326615],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[326674,326677]},{"pos":[326762,326774],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[326861,326864]},{"pos":[326898,326902],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[326933,326934]},{"pos":[326966,326972],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[327004,327005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[327033,327034]},{"pos":[327090,327097],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[327158,327159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327186,327187],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[327817,327850],"content":"Max<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Max<KeyValuePair<TKey, TValue>>()"}]},{"pos":[328167,328198],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[328305,328306],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328333,328334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[328411,328448],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[328561,328562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[328589,328590],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[329200,329274],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[329841,329872],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[329979,329980],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330030,330034],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[330092,330093],"content":"<","needQuote":true,"nodes":[]},{"pos":[330171,330183],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[330269,330270],"content":"<","needQuote":true,"nodes":[]},{"pos":[330297,330301],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[330332,330333]},{"pos":[330365,330371],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[330436,330437]},{"pos":[330493,330500],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[330593,330594],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[330704,330741],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[330854,330855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[330905,330909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[330968,330971]},{"pos":[331056,331068],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[331155,331158]},{"pos":[331192,331196],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[331227,331228]},{"pos":[331260,331266],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[331298,331299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[331327,331328]},{"pos":[331384,331391],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[331452,331453],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[331480,331481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[332209,332282],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[332845,332876],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[332983,332984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333034,333038],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[333096,333097],"content":"<","needQuote":true,"nodes":[]},{"pos":[333175,333187],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[333273,333274],"content":"<","needQuote":true,"nodes":[]},{"pos":[333301,333305],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[333336,333337]},{"pos":[333369,333375],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[333440,333441]},{"pos":[333496,333502],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[333594,333595],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[333704,333741],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[333854,333855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[333905,333909],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[333968,333971]},{"pos":[334056,334068],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[334155,334158]},{"pos":[334192,334196],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[334227,334228]},{"pos":[334260,334266],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[334298,334299],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[334327,334328]},{"pos":[334383,334389],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[334449,334450],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[334477,334478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[335201,335273],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[335832,335863],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[335970,335971],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336021,336025],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[336083,336084],"content":"<","needQuote":true,"nodes":[]},{"pos":[336162,336174],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[336260,336261],"content":"<","needQuote":true,"nodes":[]},{"pos":[336288,336292],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[336323,336324]},{"pos":[336356,336362],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[336427,336428]},{"pos":[336482,336487],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[336578,336579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[336687,336724],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[336837,336838],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[336888,336892],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[336951,336954]},{"pos":[337039,337051],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[337138,337141]},{"pos":[337175,337179],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[337210,337211]},{"pos":[337243,337249],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[337281,337282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[337310,337311]},{"pos":[337365,337370],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[337429,337430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[337457,337458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[338178,338250],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[338809,338840],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[338947,338948],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[338998,339002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[339060,339061],"content":"<","needQuote":true,"nodes":[]},{"pos":[339139,339151],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[339237,339238],"content":"<","needQuote":true,"nodes":[]},{"pos":[339265,339269],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[339300,339301]},{"pos":[339333,339339],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[339404,339405]},{"pos":[339459,339464],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[339555,339556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[339664,339701],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[339814,339815],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[339865,339869],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[339928,339931]},{"pos":[340016,340028],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[340115,340118]},{"pos":[340152,340156],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[340187,340188]},{"pos":[340220,340226],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[340258,340259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[340287,340288]},{"pos":[340342,340347],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[340406,340407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[340434,340435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[341193,341277],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[341911,341942],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[342049,342050],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[342100,342104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[342162,342163],"content":"<","needQuote":true,"nodes":[]},{"pos":[342241,342253],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[342339,342340],"content":"<","needQuote":true,"nodes":[]},{"pos":[342367,342371],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[342402,342403]},{"pos":[342435,342441],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[342506,342507]},{"pos":[342566,342574],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[342636,342637],"content":"<","needQuote":true,"nodes":[]},{"pos":[342688,342695],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[342820,342821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[342948,342985],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[343098,343099],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[343149,343153],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[343212,343215]},{"pos":[343300,343312],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[343399,343402]},{"pos":[343436,343440],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[343471,343472]},{"pos":[343504,343510],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[343542,343543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[343571,343572]},{"pos":[343631,343639],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[343702,343705]},{"pos":[343763,343770],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[343831,343832],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343859,343860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[343887,343888],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[344690,344773],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[345403,345434],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[345541,345542],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[345592,345596],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[345654,345655],"content":"<","needQuote":true,"nodes":[]},{"pos":[345733,345745],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[345831,345832],"content":"<","needQuote":true,"nodes":[]},{"pos":[345859,345863],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[345894,345895]},{"pos":[345927,345933],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[345998,345999]},{"pos":[346058,346066],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[346128,346129],"content":"<","needQuote":true,"nodes":[]},{"pos":[346179,346185],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[346309,346310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[346436,346473],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[346586,346587],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[346637,346641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[346700,346703]},{"pos":[346788,346800],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[346887,346890]},{"pos":[346924,346928],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[346959,346960]},{"pos":[346992,346998],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[347030,347031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[347059,347060]},{"pos":[347119,347127],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[347190,347193]},{"pos":[347250,347256],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[347316,347317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347344,347345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[347372,347373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[348170,348252],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[348878,348909],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[349016,349017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[349067,349071],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[349129,349130],"content":"<","needQuote":true,"nodes":[]},{"pos":[349208,349220],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[349306,349307],"content":"<","needQuote":true,"nodes":[]},{"pos":[349334,349338],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[349369,349370]},{"pos":[349402,349408],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[349473,349474]},{"pos":[349533,349541],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[349603,349604],"content":"<","needQuote":true,"nodes":[]},{"pos":[349653,349658],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[349781,349782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[349907,349944],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[350057,350058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[350108,350112],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[350171,350174]},{"pos":[350259,350271],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[350358,350361]},{"pos":[350395,350399],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[350430,350431]},{"pos":[350463,350469],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[350501,350502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[350530,350531]},{"pos":[350590,350598],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[350661,350664]},{"pos":[350720,350725],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[350784,350785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350812,350813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[350840,350841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[351635,351717],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[352343,352374],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[352481,352482],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[352532,352536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[352594,352595],"content":"<","needQuote":true,"nodes":[]},{"pos":[352673,352685],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[352771,352772],"content":"<","needQuote":true,"nodes":[]},{"pos":[352799,352803],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[352834,352835]},{"pos":[352867,352873],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[352938,352939]},{"pos":[352998,353006],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[353068,353069],"content":"<","needQuote":true,"nodes":[]},{"pos":[353118,353123],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[353246,353247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[353372,353409],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[353522,353523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[353573,353577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[353636,353639]},{"pos":[353724,353736],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[353823,353826]},{"pos":[353860,353864],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[353895,353896]},{"pos":[353928,353934],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[353966,353967],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[353995,353996]},{"pos":[354055,354063],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[354126,354129]},{"pos":[354185,354190],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[354249,354250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354277,354278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[354305,354306],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[355102,355185],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[355815,355846],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[355953,355954],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[356004,356008],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[356066,356067],"content":"<","needQuote":true,"nodes":[]},{"pos":[356145,356157],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[356243,356244],"content":"<","needQuote":true,"nodes":[]},{"pos":[356271,356275],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[356306,356307]},{"pos":[356339,356345],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[356410,356411]},{"pos":[356470,356478],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[356540,356541],"content":"<","needQuote":true,"nodes":[]},{"pos":[356591,356597],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[356721,356722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[356848,356885],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[356998,356999],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[357049,357053],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[357112,357115]},{"pos":[357200,357212],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[357299,357302]},{"pos":[357336,357340],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[357371,357372]},{"pos":[357404,357410],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[357442,357443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[357471,357472]},{"pos":[357531,357539],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[357602,357605]},{"pos":[357662,357668],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[357728,357729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357756,357757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[357784,357785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[358550,358623],"content":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[359186,359217],"content":"Max<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Max<KeyValuePair<TKey, TValue>>"}]},{"pos":[359324,359325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[359375,359379],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[359437,359438],"content":"<","needQuote":true,"nodes":[]},{"pos":[359516,359528],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[359614,359615],"content":"<","needQuote":true,"nodes":[]},{"pos":[359642,359646],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[359677,359678]},{"pos":[359710,359716],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[359781,359782]},{"pos":[359837,359843],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[359935,359936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360045,360082],"content":"Max(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[360195,360196],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[360246,360250],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[360309,360312]},{"pos":[360397,360409],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[360496,360499]},{"pos":[360533,360537],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[360568,360569]},{"pos":[360601,360607],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[360639,360640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[360668,360669]},{"pos":[360724,360730],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[360790,360791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[360818,360819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[361530,361613],"content":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[362182,362222],"content":"Max<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Max<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[362338,362339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[362389,362393],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[362451,362452],"content":"<","needQuote":true,"nodes":[]},{"pos":[362530,362542],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[362628,362629],"content":"<","needQuote":true,"nodes":[]},{"pos":[362656,362660],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[362691,362692]},{"pos":[362724,362730],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[362795,362796]},{"pos":[362828,362835],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[362900,362901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363000,363046],"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Max(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[363168,363169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[363219,363223],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[363282,363285]},{"pos":[363370,363382],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[363469,363472]},{"pos":[363506,363510],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[363541,363542]},{"pos":[363574,363580],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[363612,363613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[363641,363642]},{"pos":[363674,363681],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[363714,363715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[363742,363743],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364362,364395],"content":"Min<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,33],"source":"Min<KeyValuePair<TKey, TValue>>()"}]},{"pos":[364712,364743],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[364850,364851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[364878,364879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[364956,364993],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[365106,365107],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[365134,365135],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[365745,365819],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[366386,366417],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[366524,366525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[366575,366579],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[366637,366638],"content":"<","needQuote":true,"nodes":[]},{"pos":[366716,366728],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[366814,366815],"content":"<","needQuote":true,"nodes":[]},{"pos":[366842,366846],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[366877,366878]},{"pos":[366910,366916],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[366981,366982]},{"pos":[367038,367045],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[367138,367139],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[367249,367286],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[367399,367400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[367450,367454],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[367513,367516]},{"pos":[367601,367613],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[367700,367703]},{"pos":[367737,367741],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[367772,367773]},{"pos":[367805,367811],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[367843,367844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[367872,367873]},{"pos":[367929,367936],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[367997,367998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368025,368026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[368754,368827],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[369390,369421],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[369528,369529],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[369579,369583],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[369641,369642],"content":"<","needQuote":true,"nodes":[]},{"pos":[369720,369732],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[369818,369819],"content":"<","needQuote":true,"nodes":[]},{"pos":[369846,369850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[369881,369882]},{"pos":[369914,369920],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[369985,369986]},{"pos":[370041,370047],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[370139,370140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[370249,370286],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[370399,370400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[370450,370454],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[370513,370516]},{"pos":[370601,370613],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[370700,370703]},{"pos":[370737,370741],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[370772,370773]},{"pos":[370805,370811],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[370843,370844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[370872,370873]},{"pos":[370928,370934],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[370994,370995],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371022,371023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[371746,371818],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[372377,372408],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[372515,372516],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[372566,372570],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[372628,372629],"content":"<","needQuote":true,"nodes":[]},{"pos":[372707,372719],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[372805,372806],"content":"<","needQuote":true,"nodes":[]},{"pos":[372833,372837],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[372868,372869]},{"pos":[372901,372907],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[372972,372973]},{"pos":[373027,373032],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[373123,373124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[373232,373269],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[373382,373383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[373433,373437],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[373496,373499]},{"pos":[373584,373596],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[373683,373686]},{"pos":[373720,373724],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[373755,373756]},{"pos":[373788,373794],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[373826,373827],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[373855,373856]},{"pos":[373910,373915],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[373974,373975],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374002,374003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[374723,374795],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[375354,375385],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[375492,375493],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[375543,375547],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[375605,375606],"content":"<","needQuote":true,"nodes":[]},{"pos":[375684,375696],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[375782,375783],"content":"<","needQuote":true,"nodes":[]},{"pos":[375810,375814],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[375845,375846]},{"pos":[375878,375884],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[375949,375950]},{"pos":[376004,376009],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[376100,376101],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376209,376246],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[376359,376360],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[376410,376414],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[376473,376476]},{"pos":[376561,376573],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[376660,376663]},{"pos":[376697,376701],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[376732,376733]},{"pos":[376765,376771],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[376803,376804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[376832,376833]},{"pos":[376887,376892],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[376951,376952],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[376979,376980],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[377738,377822],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[378456,378487],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[378594,378595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[378645,378649],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[378707,378708],"content":"<","needQuote":true,"nodes":[]},{"pos":[378786,378798],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[378884,378885],"content":"<","needQuote":true,"nodes":[]},{"pos":[378912,378916],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[378947,378948]},{"pos":[378980,378986],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[379051,379052]},{"pos":[379111,379119],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[379181,379182],"content":"<","needQuote":true,"nodes":[]},{"pos":[379233,379240],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[379365,379366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[379493,379530],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[379643,379644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[379694,379698],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[379757,379760]},{"pos":[379845,379857],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[379944,379947]},{"pos":[379981,379985],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[380016,380017]},{"pos":[380049,380055],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[380087,380088],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[380116,380117]},{"pos":[380176,380184],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[380247,380250]},{"pos":[380308,380315],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[380376,380377],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380404,380405],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[380432,380433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[381235,381318],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[381948,381979],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[382086,382087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[382137,382141],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[382199,382200],"content":"<","needQuote":true,"nodes":[]},{"pos":[382278,382290],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[382376,382377],"content":"<","needQuote":true,"nodes":[]},{"pos":[382404,382408],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[382439,382440]},{"pos":[382472,382478],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[382543,382544]},{"pos":[382603,382611],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[382673,382674],"content":"<","needQuote":true,"nodes":[]},{"pos":[382724,382730],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[382854,382855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[382981,383018],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[383131,383132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[383182,383186],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[383245,383248]},{"pos":[383333,383345],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[383432,383435]},{"pos":[383469,383473],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[383504,383505]},{"pos":[383537,383543],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[383575,383576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[383604,383605]},{"pos":[383664,383672],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[383735,383738]},{"pos":[383795,383801],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[383861,383862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383889,383890],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[383917,383918],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[384715,384797],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[385423,385454],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[385561,385562],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[385612,385616],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[385674,385675],"content":"<","needQuote":true,"nodes":[]},{"pos":[385753,385765],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[385851,385852],"content":"<","needQuote":true,"nodes":[]},{"pos":[385879,385883],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[385914,385915]},{"pos":[385947,385953],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[386018,386019]},{"pos":[386078,386086],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[386148,386149],"content":"<","needQuote":true,"nodes":[]},{"pos":[386198,386203],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[386326,386327],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[386452,386489],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[386602,386603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[386653,386657],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[386716,386719]},{"pos":[386804,386816],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[386903,386906]},{"pos":[386940,386944],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[386975,386976]},{"pos":[387008,387014],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[387046,387047],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[387075,387076]},{"pos":[387135,387143],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[387206,387209]},{"pos":[387265,387270],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[387329,387330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387357,387358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[387385,387386],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[388180,388262],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[388888,388919],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[389026,389027],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[389077,389081],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[389139,389140],"content":"<","needQuote":true,"nodes":[]},{"pos":[389218,389230],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[389316,389317],"content":"<","needQuote":true,"nodes":[]},{"pos":[389344,389348],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[389379,389380]},{"pos":[389412,389418],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[389483,389484]},{"pos":[389543,389551],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[389613,389614],"content":"<","needQuote":true,"nodes":[]},{"pos":[389663,389668],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[389791,389792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[389917,389954],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[390067,390068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[390118,390122],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[390181,390184]},{"pos":[390269,390281],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[390368,390371]},{"pos":[390405,390409],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[390440,390441]},{"pos":[390473,390479],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[390511,390512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[390540,390541]},{"pos":[390600,390608],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[390671,390674]},{"pos":[390730,390735],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[390794,390795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390822,390823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[390850,390851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[391647,391730],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[392360,392391],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[392498,392499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[392549,392553],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[392611,392612],"content":"<","needQuote":true,"nodes":[]},{"pos":[392690,392702],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[392788,392789],"content":"<","needQuote":true,"nodes":[]},{"pos":[392816,392820],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[392851,392852]},{"pos":[392884,392890],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[392955,392956]},{"pos":[393015,393023],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[393085,393086],"content":"<","needQuote":true,"nodes":[]},{"pos":[393136,393142],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[393266,393267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[393393,393430],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[393543,393544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[393594,393598],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[393657,393660]},{"pos":[393745,393757],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[393844,393847]},{"pos":[393881,393885],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[393916,393917]},{"pos":[393949,393955],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[393987,393988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[394016,394017]},{"pos":[394076,394084],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[394147,394150]},{"pos":[394207,394213],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[394273,394274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394301,394302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[394329,394330],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[395095,395168],"content":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[395731,395762],"content":"Min<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Min<KeyValuePair<TKey, TValue>>"}]},{"pos":[395869,395870],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[395920,395924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[395982,395983],"content":"<","needQuote":true,"nodes":[]},{"pos":[396061,396073],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[396159,396160],"content":"<","needQuote":true,"nodes":[]},{"pos":[396187,396191],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[396222,396223]},{"pos":[396255,396261],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[396326,396327]},{"pos":[396382,396388],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[396480,396481],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[396590,396627],"content":"Min(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[396740,396741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[396791,396795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[396854,396857]},{"pos":[396942,396954],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[397041,397044]},{"pos":[397078,397082],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[397113,397114]},{"pos":[397146,397152],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[397184,397185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[397213,397214]},{"pos":[397269,397275],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[397335,397336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[397363,397364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[398075,398158],"content":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,83],"source":"Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[398727,398767],"content":"Min<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,40],"source":"Min<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[398883,398884],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[398934,398938],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[398996,398997],"content":"<","needQuote":true,"nodes":[]},{"pos":[399075,399087],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[399173,399174],"content":"<","needQuote":true,"nodes":[]},{"pos":[399201,399205],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[399236,399237]},{"pos":[399269,399275],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[399340,399341]},{"pos":[399373,399380],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[399445,399446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[399545,399591],"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Min(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,46]}]},{"pos":[399713,399714],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[399764,399768],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[399827,399830]},{"pos":[399915,399927],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[400014,400017]},{"pos":[400051,400055],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[400086,400087]},{"pos":[400119,400125],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[400157,400158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[400186,400187]},{"pos":[400219,400226],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[400259,400260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400287,400288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[400844,400861],"content":"OfType<TResult>()","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;()","pos":[0,17],"source":"OfType<TResult>()"}]},{"pos":[401073,401088],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[401152,401153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401180,401181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401261,401279],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[401346,401347],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[401374,401375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[401929,402010],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,81],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[402577,402618],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[402735,402736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[402786,402790],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[402848,402849],"content":"<","needQuote":true,"nodes":[]},{"pos":[402927,402939],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[403025,403026],"content":"<","needQuote":true,"nodes":[]},{"pos":[403053,403057],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[403088,403089]},{"pos":[403121,403127],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[403192,403193]},{"pos":[403225,403229],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[403291,403292],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[403395,403442],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[403565,403566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[403616,403620],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[403679,403682]},{"pos":[403767,403779],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[403866,403869]},{"pos":[403903,403907],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[403938,403939]},{"pos":[403971,403977],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[404009,404010],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[404038,404039]},{"pos":[404071,404075],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[404105,404106],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404133,404134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[404947,405045],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,98],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[405765,405806],"content":"OrderBy<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,41],"source":"OrderBy<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[405923,405924],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[405974,405978],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[406036,406037],"content":"<","needQuote":true,"nodes":[]},{"pos":[406115,406127],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[406213,406214],"content":"<","needQuote":true,"nodes":[]},{"pos":[406241,406245],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[406276,406277]},{"pos":[406309,406315],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[406380,406381]},{"pos":[406413,406417],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[406480,406481]},{"pos":[406561,406570],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[406653,406654],"content":"<","needQuote":true,"nodes":[]},{"pos":[406681,406685],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[406747,406748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[406893,406940],"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,47]}]},{"pos":[407063,407064],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[407114,407118],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[407177,407180]},{"pos":[407265,407277],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[407364,407367]},{"pos":[407401,407405],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[407436,407437]},{"pos":[407469,407475],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[407507,407508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[407536,407537]},{"pos":[407569,407573],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[407603,407604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[407632,407633]},{"pos":[407713,407722],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[407806,407809]},{"pos":[407843,407847],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[407877,407878],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[407905,407906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[408731,408822],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,91],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[409429,409480],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[409607,409608],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[409658,409662],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[409720,409721],"content":"<","needQuote":true,"nodes":[]},{"pos":[409799,409811],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[409897,409898],"content":"<","needQuote":true,"nodes":[]},{"pos":[409925,409929],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[409960,409961]},{"pos":[409993,409999],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[410064,410065]},{"pos":[410097,410101],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[410163,410164],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[410277,410334],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[410467,410468],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[410518,410522],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[410581,410584]},{"pos":[410669,410681],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[410768,410771]},{"pos":[410805,410809],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[410840,410841]},{"pos":[410873,410879],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[410911,410912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[410940,410941]},{"pos":[410973,410977],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[411007,411008],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411035,411036],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[411899,412007],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,108],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)"}]},{"pos":[412767,412818],"content":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,51],"source":"OrderByDescending<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[412945,412946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[412996,413000],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[413058,413059],"content":"<","needQuote":true,"nodes":[]},{"pos":[413137,413149],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[413235,413236],"content":"<","needQuote":true,"nodes":[]},{"pos":[413263,413267],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[413298,413299]},{"pos":[413331,413337],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[413402,413403]},{"pos":[413435,413439],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[413502,413503]},{"pos":[413583,413592],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[413675,413676],"content":"<","needQuote":true,"nodes":[]},{"pos":[413703,413707],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[413769,413770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[413925,413982],"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,57]}]},{"pos":[414115,414116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[414166,414170],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[414229,414232]},{"pos":[414317,414329],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[414416,414419]},{"pos":[414453,414457],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[414488,414489]},{"pos":[414521,414527],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[414559,414560],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[414588,414589]},{"pos":[414621,414625],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[414655,414656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[414684,414685]},{"pos":[414765,414774],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[414858,414861]},{"pos":[414895,414899],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[414929,414930],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[414957,414958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[415694,415731],"content":"Reverse<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"Reverse<KeyValuePair<TKey, TValue>>()"}]},{"pos":[416064,416099],"content":"Reverse<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Reverse&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"Reverse<KeyValuePair<TKey, TValue>>"}]},{"pos":[416210,416211],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416238,416239],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[416320,416361],"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Reverse(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[416478,416479],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[416506,416507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[417119,417205],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;)","pos":[0,86],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)"}]},{"pos":[417786,417829],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[417948,417949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[417999,418003],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[418061,418062],"content":"<","needQuote":true,"nodes":[]},{"pos":[418140,418152],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[418238,418239],"content":"<","needQuote":true,"nodes":[]},{"pos":[418266,418270],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[418301,418302]},{"pos":[418334,418340],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[418405,418406]},{"pos":[418438,418445],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[418510,418511],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[418613,418662],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[418787,418788],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[418838,418842],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[418901,418904]},{"pos":[418989,419001],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[419088,419091]},{"pos":[419125,419129],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[419160,419161]},{"pos":[419193,419199],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[419231,419232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[419260,419261]},{"pos":[419293,419300],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[419333,419334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[419361,419362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[420124,420217],"content":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, TResult&gt;)","pos":[0,93],"source":"Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)"}]},{"pos":[420846,420889],"content":"Select<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,43],"source":"Select<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[421008,421009],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[421059,421063],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[421121,421122],"content":"<","needQuote":true,"nodes":[]},{"pos":[421200,421212],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[421298,421299],"content":"<","needQuote":true,"nodes":[]},{"pos":[421326,421330],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[421361,421362]},{"pos":[421394,421400],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[421465,421466]},{"pos":[421520,421525],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[421585,421586]},{"pos":[421618,421625],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[421690,421691],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[421806,421855],"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"Select(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,49]}]},{"pos":[421980,421981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[422031,422035],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[422094,422097]},{"pos":[422182,422194],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[422281,422284]},{"pos":[422318,422322],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[422353,422354]},{"pos":[422386,422392],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[422424,422425],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[422453,422454]},{"pos":[422508,422513],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[422573,422574]},{"pos":[422606,422613],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[422646,422647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[422674,422675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[423526,423629],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,103],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)"}]},{"pos":[424365,424412],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[424535,424536],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[424586,424590],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[424648,424649],"content":"<","needQuote":true,"nodes":[]},{"pos":[424727,424739],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[424825,424826],"content":"<","needQuote":true,"nodes":[]},{"pos":[424853,424857],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[424888,424889]},{"pos":[424921,424927],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[424992,424993]},{"pos":[425075,425086],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[425171,425172],"content":"<","needQuote":true,"nodes":[]},{"pos":[425199,425206],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[425303,425304],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[425450,425503],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[425632,425633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[425683,425687],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[425746,425749]},{"pos":[425834,425846],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[425933,425936]},{"pos":[425970,425974],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[426005,426006]},{"pos":[426038,426044],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[426076,426077],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[426105,426106]},{"pos":[426188,426199],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[426285,426288]},{"pos":[426322,426329],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[426362,426363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426390,426391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[426418,426419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[427350,427460],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,110],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)"}]},{"pos":[428244,428291],"content":"SelectMany<KeyValuePair<TKey, TValue>, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TResult&gt;","pos":[0,47],"source":"SelectMany<KeyValuePair<TKey, TValue>, TResult>"}]},{"pos":[428414,428415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[428465,428469],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[428527,428528],"content":"<","needQuote":true,"nodes":[]},{"pos":[428606,428618],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[428704,428705],"content":"<","needQuote":true,"nodes":[]},{"pos":[428732,428736],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[428767,428768]},{"pos":[428800,428806],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[428871,428872]},{"pos":[428926,428931],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[428991,428992]},{"pos":[429074,429085],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[429170,429171],"content":"<","needQuote":true,"nodes":[]},{"pos":[429198,429205],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[429302,429303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[429462,429515],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)","pos":[0,53]}]},{"pos":[429644,429645],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[429695,429699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[429758,429761]},{"pos":[429846,429858],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[429945,429948]},{"pos":[429982,429986],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[430017,430018]},{"pos":[430050,430056],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[430088,430089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[430117,430118]},{"pos":[430172,430177],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[430237,430238]},{"pos":[430320,430331],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[430417,430420]},{"pos":[430454,430461],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[430494,430495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430522,430523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[430550,430551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[431606,431782],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,176],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[432842,432902],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[433038,433039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[433089,433093],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[433151,433152],"content":"<","needQuote":true,"nodes":[]},{"pos":[433230,433242],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[433328,433329],"content":"<","needQuote":true,"nodes":[]},{"pos":[433356,433360],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[433391,433392]},{"pos":[433424,433430],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[433495,433496]},{"pos":[433578,433589],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[433674,433675],"content":"<","needQuote":true,"nodes":[]},{"pos":[433702,433713],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[433815,433816]},{"pos":[433871,433875],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[433933,433934],"content":"<","needQuote":true,"nodes":[]},{"pos":[434012,434024],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[434110,434111],"content":"<","needQuote":true,"nodes":[]},{"pos":[434138,434142],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[434173,434174]},{"pos":[434206,434212],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[434277,434278]},{"pos":[434310,434321],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[434359,434360]},{"pos":[434392,434399],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[434464,434465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[434636,434702],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[434844,434845],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[434895,434899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[434958,434961]},{"pos":[435046,435058],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[435145,435148]},{"pos":[435182,435186],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[435217,435218]},{"pos":[435250,435256],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[435288,435289],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[435317,435318]},{"pos":[435400,435411],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[435497,435500]},{"pos":[435534,435545],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[435582,435583],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[435610,435611],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[435639,435640]},{"pos":[435695,435699],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[435758,435761]},{"pos":[435846,435858],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[435945,435948]},{"pos":[435982,435986],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[436017,436018]},{"pos":[436050,436056],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[436088,436089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[436117,436118]},{"pos":[436150,436161],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[436199,436200]},{"pos":[436232,436239],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[436272,436273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[436300,436301],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[437532,437715],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;)","pos":[0,183],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)"}]},{"pos":[438823,438883],"content":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;KeyValuePair&lt;TKey, TValue&gt;, TCollection, TResult&gt;","pos":[0,60],"source":"SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>"}]},{"pos":[439019,439020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[439070,439074],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[439132,439133],"content":"<","needQuote":true,"nodes":[]},{"pos":[439211,439223],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[439309,439310],"content":"<","needQuote":true,"nodes":[]},{"pos":[439337,439341],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[439372,439373]},{"pos":[439405,439411],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[439476,439477]},{"pos":[439531,439536],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[439596,439597]},{"pos":[439679,439690],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[439775,439776],"content":"<","needQuote":true,"nodes":[]},{"pos":[439803,439814],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[439916,439917]},{"pos":[439972,439976],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[440034,440035],"content":"<","needQuote":true,"nodes":[]},{"pos":[440113,440125],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[440211,440212],"content":"<","needQuote":true,"nodes":[]},{"pos":[440239,440243],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[440274,440275]},{"pos":[440307,440313],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[440378,440379]},{"pos":[440411,440422],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[440460,440461]},{"pos":[440493,440500],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[440565,440566],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[440750,440816],"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)","pos":[0,66]}]},{"pos":[440958,440959],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[441009,441013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[441072,441075]},{"pos":[441160,441172],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[441259,441262]},{"pos":[441296,441300],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[441331,441332]},{"pos":[441364,441370],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[441402,441403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[441431,441432]},{"pos":[441486,441491],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[441551,441552]},{"pos":[441634,441645],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[441731,441734]},{"pos":[441768,441779],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[441816,441817],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[441844,441845],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[441873,441874]},{"pos":[441929,441933],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[441992,441995]},{"pos":[442080,442092],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[442179,442182]},{"pos":[442216,442220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[442251,442252]},{"pos":[442284,442290],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[442322,442323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[442351,442352]},{"pos":[442384,442395],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[442433,442434]},{"pos":[442466,442473],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[442506,442507],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[442534,442535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[443610,443692],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,82],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[444331,444372],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[444489,444490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[444567,444578],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[444663,444664],"content":"<","needQuote":true,"nodes":[]},{"pos":[444742,444754],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[444840,444841],"content":"<","needQuote":true,"nodes":[]},{"pos":[444868,444872],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[444903,444904]},{"pos":[444936,444942],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[445038,445039],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445171,445218],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[445341,445342],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[445419,445430],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[445516,445519]},{"pos":[445604,445616],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[445703,445706]},{"pos":[445740,445744],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[445775,445776]},{"pos":[445808,445814],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[445846,445847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445874,445875],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[445902,445903],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[446868,446997],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,129],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[447947,447988],"content":"SequenceEqual<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,41],"source":"SequenceEqual<KeyValuePair<TKey, TValue>>"}]},{"pos":[448105,448106],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[448183,448194],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[448279,448280],"content":"<","needQuote":true,"nodes":[]},{"pos":[448358,448370],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[448456,448457],"content":"<","needQuote":true,"nodes":[]},{"pos":[448484,448488],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[448519,448520]},{"pos":[448552,448558],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[448655,448656]},{"pos":[448744,448761],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[448852,448853],"content":"<","needQuote":true,"nodes":[]},{"pos":[448931,448943],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[449029,449030],"content":"<","needQuote":true,"nodes":[]},{"pos":[449057,449061],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[449092,449093]},{"pos":[449125,449131],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[449227,449228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[449410,449457],"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SequenceEqual(Of KeyValuePair(Of TKey, TValue))","pos":[0,47]}]},{"pos":[449580,449581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[449658,449669],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[449755,449758]},{"pos":[449843,449855],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[449942,449945]},{"pos":[449979,449983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[450014,450015]},{"pos":[450047,450053],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[450085,450086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450113,450114],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[450142,450143]},{"pos":[450231,450248],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[450340,450343]},{"pos":[450428,450440],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[450527,450530]},{"pos":[450564,450568],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[450599,450600]},{"pos":[450632,450638],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[450670,450671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450698,450699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[450726,450727],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[451533,451569],"content":"Single<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"Single<KeyValuePair<TKey, TValue>>()"}]},{"pos":[451898,451932],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[452042,452043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452070,452071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452151,452191],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[452307,452308],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[452335,452336],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[452961,453038],"content":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,77],"source":"Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[453617,453651],"content":"Single<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Single&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"Single<KeyValuePair<TKey, TValue>>"}]},{"pos":[453761,453762],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[453812,453816],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[453874,453875],"content":"<","needQuote":true,"nodes":[]},{"pos":[453953,453965],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[454051,454052],"content":"<","needQuote":true,"nodes":[]},{"pos":[454079,454083],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[454114,454115]},{"pos":[454147,454153],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[454218,454219]},{"pos":[454275,454282],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[454375,454376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[454489,454529],"content":"Single(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Single(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[454645,454646],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[454696,454700],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[454759,454762]},{"pos":[454847,454859],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[454946,454949]},{"pos":[454983,454987],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[455018,455019]},{"pos":[455051,455057],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[455089,455090],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[455118,455119]},{"pos":[455175,455182],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[455243,455244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455271,455272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[455917,455962],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,45],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>()"}]},{"pos":[456327,456370],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[456489,456490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456517,456518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[456607,456656],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[456781,456782],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[456809,456810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[457480,457566],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,86],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[458181,458224],"content":"SingleOrDefault<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,43],"source":"SingleOrDefault<KeyValuePair<TKey, TValue>>"}]},{"pos":[458343,458344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[458394,458398],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[458456,458457],"content":"<","needQuote":true,"nodes":[]},{"pos":[458535,458547],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[458633,458634],"content":"<","needQuote":true,"nodes":[]},{"pos":[458661,458665],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[458696,458697]},{"pos":[458729,458735],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[458800,458801]},{"pos":[458857,458864],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[458957,458958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459080,459129],"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of KeyValuePair(Of TKey, TValue))","pos":[0,49]}]},{"pos":[459254,459255],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[459305,459309],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[459368,459371]},{"pos":[459456,459468],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[459555,459558]},{"pos":[459592,459596],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[459627,459628]},{"pos":[459660,459666],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[459698,459699],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[459727,459728]},{"pos":[459784,459791],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[459852,459853],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[459880,459881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[460558,460597],"content":"Skip<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Skip<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[460961,460993],"content":"Skip<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Skip&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Skip<KeyValuePair<TKey, TValue>>"}]},{"pos":[461101,461102],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461151,461156],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[461215,461216],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[461308,461346],"content":"Skip(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Skip(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[461460,461461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[461510,461515],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[461574,461575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[462223,462303],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[462894,462931],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[463044,463045],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463095,463099],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[463157,463158],"content":"<","needQuote":true,"nodes":[]},{"pos":[463236,463248],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[463334,463335],"content":"<","needQuote":true,"nodes":[]},{"pos":[463362,463366],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[463397,463398]},{"pos":[463430,463436],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[463501,463502]},{"pos":[463558,463565],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[463658,463659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[463775,463818],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[463937,463938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[463988,463992],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[464051,464054]},{"pos":[464139,464151],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[464238,464241]},{"pos":[464275,464279],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[464310,464311]},{"pos":[464343,464349],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[464381,464382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[464410,464411]},{"pos":[464467,464474],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[464535,464536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[464563,464564],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[465350,465437],"content":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[466076,466113],"content":"SkipWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"SkipWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[466226,466227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[466277,466281],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[466339,466340],"content":"<","needQuote":true,"nodes":[]},{"pos":[466418,466430],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[466516,466517],"content":"<","needQuote":true,"nodes":[]},{"pos":[466544,466548],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[466579,466580]},{"pos":[466612,466618],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[466683,466684]},{"pos":[466738,466743],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[466803,466804]},{"pos":[466860,466867],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[466960,466961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467090,467133],"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"SkipWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[467252,467253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[467303,467307],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[467366,467369]},{"pos":[467454,467466],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[467553,467556]},{"pos":[467590,467594],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[467625,467626]},{"pos":[467658,467664],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[467696,467697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[467725,467726]},{"pos":[467780,467785],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[467845,467846]},{"pos":[467902,467909],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[467970,467971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[467998,467999],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[468774,468848],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Decimal&gt;)","pos":[0,74],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)"}]},{"pos":[469415,469446],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[469553,469554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[469604,469608],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[469666,469667],"content":"<","needQuote":true,"nodes":[]},{"pos":[469745,469757],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[469843,469844],"content":"<","needQuote":true,"nodes":[]},{"pos":[469871,469875],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[469906,469907]},{"pos":[469939,469945],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[470010,470011]},{"pos":[470067,470074],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[470167,470168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[470278,470315],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[470428,470429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[470479,470483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[470542,470545]},{"pos":[470630,470642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[470729,470732]},{"pos":[470766,470770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[470801,470802]},{"pos":[470834,470840],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[470872,470873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[470901,470902]},{"pos":[470958,470965],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[471026,471027],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471054,471055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[471783,471856],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Double&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)"}]},{"pos":[472419,472450],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[472557,472558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[472608,472612],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[472670,472671],"content":"<","needQuote":true,"nodes":[]},{"pos":[472749,472761],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[472847,472848],"content":"<","needQuote":true,"nodes":[]},{"pos":[472875,472879],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[472910,472911]},{"pos":[472943,472949],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[473014,473015]},{"pos":[473070,473076],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[473168,473169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[473278,473315],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[473428,473429],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[473479,473483],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[473542,473545]},{"pos":[473630,473642],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[473729,473732]},{"pos":[473766,473770],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[473801,473802]},{"pos":[473834,473840],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[473872,473873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[473901,473902]},{"pos":[473957,473963],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[474023,474024],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474051,474052],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[474775,474847],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)"}]},{"pos":[475406,475437],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[475544,475545],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[475595,475599],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[475657,475658],"content":"<","needQuote":true,"nodes":[]},{"pos":[475736,475748],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[475834,475835],"content":"<","needQuote":true,"nodes":[]},{"pos":[475862,475866],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[475897,475898]},{"pos":[475930,475936],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[476001,476002]},{"pos":[476056,476061],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[476152,476153],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[476261,476298],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[476411,476412],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[476462,476466],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[476525,476528]},{"pos":[476613,476625],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[476712,476715]},{"pos":[476749,476753],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[476784,476785]},{"pos":[476817,476823],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[476855,476856],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[476884,476885]},{"pos":[476939,476944],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[477003,477004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477031,477032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[477752,477824],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int64&gt;)","pos":[0,72],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)"}]},{"pos":[478383,478414],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[478521,478522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[478572,478576],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[478634,478635],"content":"<","needQuote":true,"nodes":[]},{"pos":[478713,478725],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[478811,478812],"content":"<","needQuote":true,"nodes":[]},{"pos":[478839,478843],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[478874,478875]},{"pos":[478907,478913],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[478978,478979]},{"pos":[479033,479038],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[479129,479130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[479238,479275],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[479388,479389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[479439,479443],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[479502,479505]},{"pos":[479590,479602],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[479689,479692]},{"pos":[479726,479730],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[479761,479762]},{"pos":[479794,479800],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[479832,479833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[479861,479862]},{"pos":[479916,479921],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[479980,479981],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480008,480009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[480767,480851],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Decimal&gt;&gt;)","pos":[0,84],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)"}]},{"pos":[481485,481516],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[481623,481624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[481674,481678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[481736,481737],"content":"<","needQuote":true,"nodes":[]},{"pos":[481815,481827],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[481913,481914],"content":"<","needQuote":true,"nodes":[]},{"pos":[481941,481945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[481976,481977]},{"pos":[482009,482015],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[482080,482081]},{"pos":[482140,482148],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[482210,482211],"content":"<","needQuote":true,"nodes":[]},{"pos":[482262,482269],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[482394,482395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[482522,482559],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[482672,482673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[482723,482727],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[482786,482789]},{"pos":[482874,482886],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[482973,482976]},{"pos":[483010,483014],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[483045,483046]},{"pos":[483078,483084],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[483116,483117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[483145,483146]},{"pos":[483205,483213],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[483276,483279]},{"pos":[483337,483344],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[483405,483406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483433,483434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[483461,483462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[484264,484347],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Double&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)"}]},{"pos":[484977,485008],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[485115,485116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[485166,485170],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[485228,485229],"content":"<","needQuote":true,"nodes":[]},{"pos":[485307,485319],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[485405,485406],"content":"<","needQuote":true,"nodes":[]},{"pos":[485433,485437],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[485468,485469]},{"pos":[485501,485507],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[485572,485573]},{"pos":[485632,485640],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[485702,485703],"content":"<","needQuote":true,"nodes":[]},{"pos":[485753,485759],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[485883,485884],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486010,486047],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[486160,486161],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[486211,486215],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[486274,486277]},{"pos":[486362,486374],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[486461,486464]},{"pos":[486498,486502],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[486533,486534]},{"pos":[486566,486572],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[486604,486605],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[486633,486634]},{"pos":[486693,486701],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[486764,486767]},{"pos":[486824,486830],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[486890,486891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486918,486919],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[486946,486947],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[487744,487826],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int32&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)"}]},{"pos":[488452,488483],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[488590,488591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[488641,488645],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[488703,488704],"content":"<","needQuote":true,"nodes":[]},{"pos":[488782,488794],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[488880,488881],"content":"<","needQuote":true,"nodes":[]},{"pos":[488908,488912],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[488943,488944]},{"pos":[488976,488982],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[489047,489048]},{"pos":[489107,489115],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[489177,489178],"content":"<","needQuote":true,"nodes":[]},{"pos":[489227,489232],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[489355,489356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[489481,489518],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[489631,489632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[489682,489686],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[489745,489748]},{"pos":[489833,489845],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[489932,489935]},{"pos":[489969,489973],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[490004,490005]},{"pos":[490037,490043],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[490075,490076],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[490104,490105]},{"pos":[490164,490172],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[490235,490238]},{"pos":[490294,490299],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[490358,490359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490386,490387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[490414,490415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[491209,491291],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Int64&gt;&gt;)","pos":[0,82],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)"}]},{"pos":[491917,491948],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[492055,492056],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[492106,492110],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[492168,492169],"content":"<","needQuote":true,"nodes":[]},{"pos":[492247,492259],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[492345,492346],"content":"<","needQuote":true,"nodes":[]},{"pos":[492373,492377],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[492408,492409]},{"pos":[492441,492447],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[492512,492513]},{"pos":[492572,492580],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[492642,492643],"content":"<","needQuote":true,"nodes":[]},{"pos":[492692,492697],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[492820,492821],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[492946,492983],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[493096,493097],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[493147,493151],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[493210,493213]},{"pos":[493298,493310],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[493397,493400]},{"pos":[493434,493438],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[493469,493470]},{"pos":[493502,493508],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[493540,493541],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[493569,493570]},{"pos":[493629,493637],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[493700,493703]},{"pos":[493759,493764],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[493823,493824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493851,493852],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[493879,493880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[494676,494759],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Nullable&lt;Single&gt;&gt;)","pos":[0,83],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)"}]},{"pos":[495389,495420],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[495527,495528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[495578,495582],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[495640,495641],"content":"<","needQuote":true,"nodes":[]},{"pos":[495719,495731],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[495817,495818],"content":"<","needQuote":true,"nodes":[]},{"pos":[495845,495849],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[495880,495881]},{"pos":[495913,495919],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[495984,495985]},{"pos":[496044,496052],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[496114,496115],"content":"<","needQuote":true,"nodes":[]},{"pos":[496165,496171],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[496295,496296],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[496422,496459],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[496572,496573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[496623,496627],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[496686,496689]},{"pos":[496774,496786],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[496873,496876]},{"pos":[496910,496914],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[496945,496946]},{"pos":[496978,496984],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[497016,497017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[497045,497046]},{"pos":[497105,497113],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[497176,497179]},{"pos":[497236,497242],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[497302,497303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497330,497331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[497358,497359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[498124,498197],"content":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Single&gt;)","pos":[0,73],"source":"Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)"}]},{"pos":[498760,498791],"content":"Sum<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Sum&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,31],"source":"Sum<KeyValuePair<TKey, TValue>>"}]},{"pos":[498898,498899],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[498949,498953],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[499011,499012],"content":"<","needQuote":true,"nodes":[]},{"pos":[499090,499102],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[499188,499189],"content":"<","needQuote":true,"nodes":[]},{"pos":[499216,499220],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[499251,499252]},{"pos":[499284,499290],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[499355,499356]},{"pos":[499411,499417],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[499509,499510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[499619,499656],"content":"Sum(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Sum(Of KeyValuePair(Of TKey, TValue))","pos":[0,37]}]},{"pos":[499769,499770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[499820,499824],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[499883,499886]},{"pos":[499971,499983],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[500070,500073]},{"pos":[500107,500111],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[500142,500143]},{"pos":[500175,500181],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[500213,500214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[500242,500243]},{"pos":[500298,500304],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[500364,500365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[500392,500393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501031,501070],"content":"Take<KeyValuePair<TKey, TValue>>(Int32)","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Int32)","pos":[0,39],"source":"Take<KeyValuePair<TKey, TValue>>(Int32)"}]},{"pos":[501434,501466],"content":"Take<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Take&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,32],"source":"Take<KeyValuePair<TKey, TValue>>"}]},{"pos":[501574,501575],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501624,501629],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[501688,501689],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[501781,501819],"content":"Take(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Take(Of KeyValuePair(Of TKey, TValue))","pos":[0,38]}]},{"pos":[501933,501934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[501983,501988],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[502047,502048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[502696,502776],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,80],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[503367,503404],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[503517,503518],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[503568,503572],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[503630,503631],"content":"<","needQuote":true,"nodes":[]},{"pos":[503709,503721],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[503807,503808],"content":"<","needQuote":true,"nodes":[]},{"pos":[503835,503839],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[503870,503871]},{"pos":[503903,503909],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[503974,503975]},{"pos":[504031,504038],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[504131,504132],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[504248,504291],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[504410,504411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[504461,504465],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[504524,504527]},{"pos":[504612,504624],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[504711,504714]},{"pos":[504748,504752],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[504783,504784]},{"pos":[504816,504822],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[504854,504855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[504883,504884]},{"pos":[504940,504947],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[505008,505009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505036,505037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[505823,505910],"content":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,87],"source":"TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[506549,506586],"content":"TakeWhile<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,37],"source":"TakeWhile<KeyValuePair<TKey, TValue>>"}]},{"pos":[506699,506700],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[506750,506754],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[506812,506813],"content":"<","needQuote":true,"nodes":[]},{"pos":[506891,506903],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[506989,506990],"content":"<","needQuote":true,"nodes":[]},{"pos":[507017,507021],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[507052,507053]},{"pos":[507085,507091],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[507156,507157]},{"pos":[507211,507216],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[507276,507277]},{"pos":[507333,507340],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[507433,507434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[507563,507606],"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"TakeWhile(Of KeyValuePair(Of TKey, TValue))","pos":[0,43]}]},{"pos":[507725,507726],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[507776,507780],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[507839,507842]},{"pos":[507927,507939],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[508026,508029]},{"pos":[508063,508067],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[508098,508099]},{"pos":[508131,508137],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[508169,508170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[508198,508199]},{"pos":[508253,508258],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[508318,508319]},{"pos":[508375,508382],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[508443,508444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[508471,508472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509137,509174],"content":"ToArray<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,37],"source":"ToArray<KeyValuePair<TKey, TValue>>()"}]},{"pos":[509507,509542],"content":"ToArray<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToArray&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,35],"source":"ToArray<KeyValuePair<TKey, TValue>>"}]},{"pos":[509653,509654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509681,509682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[509763,509804],"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToArray(Of KeyValuePair(Of TKey, TValue))","pos":[0,41]}]},{"pos":[509921,509922],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[509949,509950],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[510571,510657],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,86],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[511244,511290],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[511412,511413],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[511463,511467],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[511525,511526],"content":"<","needQuote":true,"nodes":[]},{"pos":[511604,511616],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[511702,511703],"content":"<","needQuote":true,"nodes":[]},{"pos":[511730,511734],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[511765,511766]},{"pos":[511798,511804],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[511869,511870]},{"pos":[511902,511906],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[511968,511969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512077,512129],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[512257,512258],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[512308,512312],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[512371,512374]},{"pos":[512459,512471],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[512558,512561]},{"pos":[512595,512599],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[512630,512631]},{"pos":[512663,512669],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[512701,512702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[512730,512731]},{"pos":[512763,512767],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[512797,512798],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[512825,512826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[513680,513791],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,111],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[514563,514609],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,46],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[514731,514732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[514782,514786],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[514844,514845],"content":"<","needQuote":true,"nodes":[]},{"pos":[514923,514935],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[515021,515022],"content":"<","needQuote":true,"nodes":[]},{"pos":[515049,515053],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[515084,515085]},{"pos":[515117,515123],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[515188,515189]},{"pos":[515221,515225],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[515288,515289]},{"pos":[515377,515394],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[515485,515486],"content":"<","needQuote":true,"nodes":[]},{"pos":[515513,515517],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[515579,515580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[515738,515790],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,52]}]},{"pos":[515918,515919],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[515969,515973],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[516032,516035]},{"pos":[516120,516132],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[516219,516222]},{"pos":[516256,516260],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[516291,516292]},{"pos":[516324,516330],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[516362,516363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[516391,516392]},{"pos":[516424,516428],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[516458,516459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[516487,516488]},{"pos":[516576,516593],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[516685,516688]},{"pos":[516722,516726],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[516756,516757],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[516784,516785],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[517741,517881],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,140],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[518731,518787],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[518919,518920],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[518970,518974],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[519032,519033],"content":"<","needQuote":true,"nodes":[]},{"pos":[519111,519123],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[519209,519210],"content":"<","needQuote":true,"nodes":[]},{"pos":[519237,519241],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[519272,519273]},{"pos":[519305,519311],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[519376,519377]},{"pos":[519409,519413],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[519476,519477]},{"pos":[519532,519536],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[519594,519595],"content":"<","needQuote":true,"nodes":[]},{"pos":[519673,519685],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[519771,519772],"content":"<","needQuote":true,"nodes":[]},{"pos":[519799,519803],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[519834,519835]},{"pos":[519867,519873],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[519938,519939]},{"pos":[519971,519979],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[520045,520046],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[520175,520237],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[520375,520376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[520426,520430],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[520489,520492]},{"pos":[520577,520589],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[520676,520679]},{"pos":[520713,520717],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[520748,520749]},{"pos":[520781,520787],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[520819,520820],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520848,520849]},{"pos":[520881,520885],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[520915,520916],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[520944,520945]},{"pos":[521000,521004],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[521063,521066]},{"pos":[521151,521163],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[521250,521253]},{"pos":[521287,521291],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[521322,521323]},{"pos":[521355,521361],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[521393,521394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[521422,521423]},{"pos":[521455,521463],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[521497,521498],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[521525,521526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[522617,522782],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,165],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[523817,523873],"content":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,56],"source":"ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[524005,524006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[524056,524060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[524118,524119],"content":"<","needQuote":true,"nodes":[]},{"pos":[524197,524209],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[524295,524296],"content":"<","needQuote":true,"nodes":[]},{"pos":[524323,524327],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[524358,524359]},{"pos":[524391,524397],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[524462,524463]},{"pos":[524495,524499],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[524562,524563]},{"pos":[524618,524622],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[524680,524681],"content":"<","needQuote":true,"nodes":[]},{"pos":[524759,524771],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[524857,524858],"content":"<","needQuote":true,"nodes":[]},{"pos":[524885,524889],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[524920,524921]},{"pos":[524953,524959],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[525024,525025]},{"pos":[525057,525065],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[525132,525133]},{"pos":[525221,525238],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[525329,525330],"content":"<","needQuote":true,"nodes":[]},{"pos":[525357,525361],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[525423,525424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[525603,525665],"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,62]}]},{"pos":[525803,525804],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[525854,525858],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[525917,525920]},{"pos":[526005,526017],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[526104,526107]},{"pos":[526141,526145],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[526176,526177]},{"pos":[526209,526215],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[526247,526248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526276,526277]},{"pos":[526309,526313],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[526343,526344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526372,526373]},{"pos":[526428,526432],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[526491,526494]},{"pos":[526579,526591],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[526678,526681]},{"pos":[526715,526719],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[526750,526751]},{"pos":[526783,526789],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[526821,526822],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526850,526851]},{"pos":[526883,526891],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[526925,526926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[526954,526955]},{"pos":[527043,527060],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[527152,527155]},{"pos":[527189,527193],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[527223,527224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[527251,527252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528130,528166],"content":"ToList<KeyValuePair<TKey, TValue>>()","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;()","pos":[0,36],"source":"ToList<KeyValuePair<TKey, TValue>>()"}]},{"pos":[528495,528529],"content":"ToList<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"ToList&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,34],"source":"ToList<KeyValuePair<TKey, TValue>>"}]},{"pos":[528639,528640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528667,528668],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[528748,528788],"content":"ToList(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"ToList(Of KeyValuePair(Of TKey, TValue))","pos":[0,40]}]},{"pos":[528904,528905],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[528932,528933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[529543,529625],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;)","pos":[0,82],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)"}]},{"pos":[530196,530238],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[530356,530357],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[530407,530411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[530469,530470],"content":"<","needQuote":true,"nodes":[]},{"pos":[530548,530560],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[530646,530647],"content":"<","needQuote":true,"nodes":[]},{"pos":[530674,530678],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[530709,530710]},{"pos":[530742,530748],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[530813,530814]},{"pos":[530846,530850],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[530912,530913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531017,531065],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[531189,531190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[531240,531244],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[531303,531306]},{"pos":[531391,531403],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[531490,531493]},{"pos":[531527,531531],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[531562,531563]},{"pos":[531595,531601],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[531633,531634],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[531662,531663]},{"pos":[531695,531699],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[531729,531730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[531757,531758],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[532592,532699],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,107],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[533455,533497],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;","pos":[0,42],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey>"}]},{"pos":[533615,533616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[533666,533670],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[533728,533729],"content":"<","needQuote":true,"nodes":[]},{"pos":[533807,533819],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[533905,533906],"content":"<","needQuote":true,"nodes":[]},{"pos":[533933,533937],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[533968,533969]},{"pos":[534001,534007],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[534072,534073]},{"pos":[534105,534109],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[534172,534173]},{"pos":[534261,534278],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[534369,534370],"content":"<","needQuote":true,"nodes":[]},{"pos":[534397,534401],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[534463,534464],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[534618,534666],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)","pos":[0,48]}]},{"pos":[534790,534791],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[534841,534845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[534904,534907]},{"pos":[534992,535004],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[535091,535094]},{"pos":[535128,535132],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[535163,535164]},{"pos":[535196,535202],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[535234,535235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535263,535264]},{"pos":[535296,535300],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[535330,535331],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[535359,535360]},{"pos":[535448,535465],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[535557,535560]},{"pos":[535594,535598],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[535628,535629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[535656,535657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[536593,536729],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;)","pos":[0,136],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)"}]},{"pos":[537563,537615],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[537743,537744],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[537794,537798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[537856,537857],"content":"<","needQuote":true,"nodes":[]},{"pos":[537935,537947],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[538033,538034],"content":"<","needQuote":true,"nodes":[]},{"pos":[538061,538065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[538096,538097]},{"pos":[538129,538135],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[538200,538201]},{"pos":[538233,538237],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[538300,538301]},{"pos":[538356,538360],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[538418,538419],"content":"<","needQuote":true,"nodes":[]},{"pos":[538497,538509],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[538595,538596],"content":"<","needQuote":true,"nodes":[]},{"pos":[538623,538627],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[538658,538659]},{"pos":[538691,538697],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[538762,538763]},{"pos":[538795,538803],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[538869,538870],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[538995,539053],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[539187,539188],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[539238,539242],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[539301,539304]},{"pos":[539389,539401],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[539488,539491]},{"pos":[539525,539529],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[539560,539561]},{"pos":[539593,539599],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[539631,539632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[539660,539661]},{"pos":[539693,539697],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[539727,539728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[539756,539757]},{"pos":[539812,539816],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[539875,539878]},{"pos":[539963,539975],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[540062,540065]},{"pos":[540099,540103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[540134,540135]},{"pos":[540167,540173],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[540205,540206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[540234,540235]},{"pos":[540267,540275],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[540309,540310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[540337,540338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[541409,541570],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,161],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[542589,542641],"content":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;KeyValuePair&lt;TKey, TValue&gt;, TKey, TElement&gt;","pos":[0,52],"source":"ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>"}]},{"pos":[542769,542770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[542820,542824],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[542882,542883],"content":"<","needQuote":true,"nodes":[]},{"pos":[542961,542973],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[543059,543060],"content":"<","needQuote":true,"nodes":[]},{"pos":[543087,543091],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[543122,543123]},{"pos":[543155,543161],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[543226,543227]},{"pos":[543259,543263],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[543326,543327]},{"pos":[543382,543386],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[543444,543445],"content":"<","needQuote":true,"nodes":[]},{"pos":[543523,543535],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[543621,543622],"content":"<","needQuote":true,"nodes":[]},{"pos":[543649,543653],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[543684,543685]},{"pos":[543717,543723],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[543788,543789]},{"pos":[543821,543829],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[543896,543897]},{"pos":[543985,544002],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[544093,544094],"content":"<","needQuote":true,"nodes":[]},{"pos":[544121,544125],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[544187,544188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[544363,544421],"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)","pos":[0,58]}]},{"pos":[544555,544556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[544606,544610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[544669,544672]},{"pos":[544757,544769],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[544856,544859]},{"pos":[544893,544897],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[544928,544929]},{"pos":[544961,544967],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[544999,545000],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545028,545029]},{"pos":[545061,545065],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[545095,545096],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545124,545125]},{"pos":[545180,545184],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[545243,545246]},{"pos":[545331,545343],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[545430,545433]},{"pos":[545467,545471],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[545502,545503]},{"pos":[545535,545541],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[545573,545574],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545602,545603]},{"pos":[545635,545643],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[545677,545678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[545706,545707]},{"pos":[545795,545812],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[545904,545907]},{"pos":[545941,545945],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[545975,545976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[546003,546004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[547010,547084],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,74],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)"}]},{"pos":[547691,547724],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[547833,547834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[547911,547922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[548007,548008],"content":"<","needQuote":true,"nodes":[]},{"pos":[548086,548098],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[548184,548185],"content":"<","needQuote":true,"nodes":[]},{"pos":[548212,548216],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[548247,548248]},{"pos":[548280,548286],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[548382,548383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[548507,548546],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[548661,548662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[548739,548750],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[548836,548839]},{"pos":[548924,548936],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[549023,549026]},{"pos":[549060,549064],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[549095,549096]},{"pos":[549128,549134],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[549166,549167],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549194,549195],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[549222,549223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[550148,550269],"content":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(IEnumerable&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEqualityComparer&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;)","pos":[0,121],"source":"Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)"}]},{"pos":[551187,551220],"content":"Union<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Union&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Union<KeyValuePair<TKey, TValue>>"}]},{"pos":[551329,551330],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[551407,551418],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[551503,551504],"content":"<","needQuote":true,"nodes":[]},{"pos":[551582,551594],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[551680,551681],"content":"<","needQuote":true,"nodes":[]},{"pos":[551708,551712],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[551743,551744]},{"pos":[551776,551782],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[551879,551880]},{"pos":[551968,551985],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[552076,552077],"content":"<","needQuote":true,"nodes":[]},{"pos":[552155,552167],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[552253,552254],"content":"<","needQuote":true,"nodes":[]},{"pos":[552281,552285],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[552316,552317]},{"pos":[552349,552355],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[552451,552452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[552626,552665],"content":"Union(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Union(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[552780,552781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[552858,552869],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[552955,552958]},{"pos":[553043,553055],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[553142,553145]},{"pos":[553179,553183],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[553214,553215]},{"pos":[553247,553253],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[553285,553286],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553313,553314],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[553342,553343]},{"pos":[553431,553448],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[553540,553543]},{"pos":[553628,553640],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[553727,553730]},{"pos":[553764,553768],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[553799,553800]},{"pos":[553832,553838],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[553870,553871],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553898,553899],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[553926,553927],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[554825,554901],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Boolean&gt;)","pos":[0,76],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)"}]},{"pos":[555476,555509],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[555618,555619],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[555669,555673],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[555731,555732],"content":"<","needQuote":true,"nodes":[]},{"pos":[555810,555822],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[555908,555909],"content":"<","needQuote":true,"nodes":[]},{"pos":[555936,555940],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[555971,555972]},{"pos":[556004,556010],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[556075,556076]},{"pos":[556132,556139],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[556232,556233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[556345,556384],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[556499,556500],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[556550,556554],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[556613,556616]},{"pos":[556701,556713],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[556800,556803]},{"pos":[556837,556841],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[556872,556873]},{"pos":[556905,556911],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[556943,556944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[556972,556973]},{"pos":[557029,557036],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[557097,557098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557125,557126],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[557892,557975],"content":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;(Func&lt;KeyValuePair&lt;TKey, TValue&gt;, Int32, Boolean&gt;)","pos":[0,83],"source":"Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)"}]},{"pos":[558598,558631],"content":"Where<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"Where&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,33],"source":"Where<KeyValuePair<TKey, TValue>>"}]},{"pos":[558740,558741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[558791,558795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[558853,558854],"content":"<","needQuote":true,"nodes":[]},{"pos":[558932,558944],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[559030,559031],"content":"<","needQuote":true,"nodes":[]},{"pos":[559058,559062],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[559093,559094]},{"pos":[559126,559132],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[559197,559198]},{"pos":[559252,559257],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[559317,559318]},{"pos":[559374,559381],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[559474,559475],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[559600,559639],"content":"Where(Of KeyValuePair(Of TKey, TValue))","needQuote":true,"nodes":[{"content":"Where(Of KeyValuePair(Of TKey, TValue))","pos":[0,39]}]},{"pos":[559754,559755],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[559805,559809],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[559868,559871]},{"pos":[559956,559968],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[560055,560058]},{"pos":[560092,560096],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[560127,560128]},{"pos":[560160,560166],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[560198,560199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[560227,560228]},{"pos":[560282,560287],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[560347,560348]},{"pos":[560404,560411],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[560472,560473],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[560500,560501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[561356,561479],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;(IEnumerable&lt;TSecond&gt;, Func&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;)","pos":[0,123],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)"}]},{"pos":[562276,562325],"content":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;KeyValuePair&lt;TKey, TValue&gt;, TSecond, TResult&gt;","pos":[0,49],"source":"Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>"}]},{"pos":[562450,562451],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[562528,562539],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[562624,562625],"content":"<","needQuote":true,"nodes":[]},{"pos":[562652,562659],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[562725,562726]},{"pos":[562781,562785],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[562843,562844],"content":"<","needQuote":true,"nodes":[]},{"pos":[562922,562934],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[563020,563021],"content":"<","needQuote":true,"nodes":[]},{"pos":[563048,563052],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[563083,563084]},{"pos":[563116,563122],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":",","pos":[563187,563188]},{"pos":[563220,563227],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[563261,563262]},{"pos":[563294,563301],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[563366,563367],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[563514,563569],"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)","pos":[0,55]}]},{"pos":[563700,563701],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[563778,563789],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[563875,563878]},{"pos":[563912,563919],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[563952,563953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[563981,563982]},{"pos":[564037,564041],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[564100,564103]},{"pos":[564188,564200],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[564287,564290]},{"pos":[564324,564328],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[564359,564360]},{"pos":[564392,564398],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[564430,564431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[564459,564460]},{"pos":[564492,564499],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[564533,564534]},{"pos":[564566,564573],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[564606,564607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[564634,564635],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[565173,565179],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[565320,565345],"content":"IDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IDictionary&lt;TKey, TValue&gt;","pos":[0,25],"source":"IDictionary<TKey, TValue>"}]},{"pos":[565597,565608],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[565672,565673],"content":"<","needQuote":true,"nodes":[]},{"pos":[565700,565704],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[565735,565736]},{"pos":[565768,565774],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[565899,565910],"content":"IDictionary","needQuote":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"content":"(Of","pos":[565975,565978]},{"pos":[566012,566016],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[566047,566048]},{"pos":[566080,566086],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[566118,566119],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[566344,566370],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[566571,566585],"content":"ICollection<T>","needQuote":true,"nodes":[{"content":"ICollection&lt;T&gt;","pos":[0,14],"source":"ICollection<T>"}]},{"pos":[566804,566815],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[566879,566880],"content":"<","needQuote":true,"nodes":[]},{"pos":[566907,566908],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[567028,567039],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[567104,567107]},{"pos":[567141,567142],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[567169,567170],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[567395,567428],"content":"IReadOnlyDictionary<TKey, TValue>","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary&lt;TKey, TValue&gt;","pos":[0,33],"source":"IReadOnlyDictionary<TKey, TValue>"}]},{"pos":[567712,567731],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"pos":[567803,567804],"content":"<","needQuote":true,"nodes":[]},{"pos":[567831,567835],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[567866,567867]},{"pos":[567899,567905],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[568038,568057],"content":"IReadOnlyDictionary","needQuote":true,"nodes":[{"content":"IReadOnlyDictionary","pos":[0,19]}]},{"content":"(Of","pos":[568130,568133]},{"pos":[568167,568171],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[568202,568203]},{"pos":[568235,568241],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[568273,568274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[568545,568567],"content":"IReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"IReadOnlyCollection&lt;T&gt;","pos":[0,22],"source":"IReadOnlyCollection<T>"}]},{"pos":[568818,568837],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"pos":[568909,568910],"content":"<","needQuote":true,"nodes":[]},{"pos":[568937,568938],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[569066,569085],"content":"IReadOnlyCollection","needQuote":true,"nodes":[{"content":"IReadOnlyCollection","pos":[0,19]}]},{"content":"(Of","pos":[569158,569161]},{"pos":[569195,569196],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[569223,569224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[569465,569479],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[569698,569709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[569773,569774],"content":"<","needQuote":true,"nodes":[]},{"pos":[569801,569802],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[569922,569933],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[569998,570001]},{"pos":[570035,570036],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[570063,570064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[570259,570277],"content":"System.Collections","needQuote":true,"nodes":[{"content":"System.Collections","pos":[0,18]}]},{"pos":[570478,570502],"content":"AsQueryable(IEnumerable)","needQuote":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[570681,570692],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[570751,570752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[570819,570830],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[570907,570908],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571021,571032],"content":"AsQueryable","needQuote":true,"nodes":[{"content":"AsQueryable","pos":[0,11]}]},{"pos":[571091,571092],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[571159,571170],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[571247,571248],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[571476,571485],"content":"Queryable","needQuote":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[571699,571743],"content":"AsQueryable<TElement>(IEnumerable<TElement>)","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;(IEnumerable&lt;TElement&gt;)","pos":[0,44],"source":"AsQueryable<TElement>(IEnumerable<TElement>)"}]},{"pos":[572143,572164],"content":"AsQueryable<TElement>","needQuote":true,"nodes":[{"content":"AsQueryable&lt;TElement&gt;","pos":[0,21],"source":"AsQueryable<TElement>"}]},{"pos":[572233,572234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572311,572322],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[572407,572408],"content":"<","needQuote":true,"nodes":[]},{"pos":[572435,572443],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[572509,572510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[572639,572663],"content":"AsQueryable(Of TElement)","needQuote":true,"nodes":[{"content":"AsQueryable(Of TElement)","pos":[0,24]}]},{"pos":[572735,572736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[572813,572824],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[572910,572913]},{"pos":[572947,572955],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[572989,572990],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573017,573018],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573391,573414],"content":"AsParallel(IEnumerable)","needQuote":true,"nodes":[{"content":"AsParallel(IEnumerable)","pos":[0,23]}]},{"pos":[573609,573619],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[573686,573687],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[573754,573765],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[573842,573843],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[573964,573974],"content":"AsParallel","needQuote":true,"nodes":[{"content":"AsParallel","pos":[0,10]}]},{"pos":[574041,574042],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[574109,574120],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[574197,574198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[574451,574469],"content":"ParallelEnumerable","needQuote":true,"nodes":[{"content":"ParallelEnumerable","pos":[0,18]}]},{"pos":[574718,574759],"content":"AsParallel<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,41],"source":"AsParallel<TSource>(IEnumerable<TSource>)"}]},{"pos":[575176,575195],"content":"AsParallel<TSource>","needQuote":true,"nodes":[{"content":"AsParallel&lt;TSource&gt;","pos":[0,19],"source":"AsParallel<TSource>"}]},{"pos":[575271,575272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575349,575360],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[575445,575446],"content":"<","needQuote":true,"nodes":[]},{"pos":[575473,575480],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[575545,575546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[575683,575705],"content":"AsParallel(Of TSource)","needQuote":true,"nodes":[{"content":"AsParallel(Of TSource)","pos":[0,22]}]},{"pos":[575784,575785],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[575862,575873],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[575959,575962]},{"pos":[575996,576003],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[576036,576037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576064,576065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[576490,576563],"content":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TSource, TSource&gt;)","pos":[0,73],"source":"Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)"}]},{"pos":[577096,577114],"content":"Aggregate<TSource>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource&gt;","pos":[0,18],"source":"Aggregate<TSource>"}]},{"pos":[577181,577182],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[577259,577270],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[577355,577356],"content":"<","needQuote":true,"nodes":[]},{"pos":[577383,577390],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577456,577457]},{"pos":[577512,577516],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[577574,577575],"content":"<","needQuote":true,"nodes":[]},{"pos":[577602,577609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577643,577644]},{"pos":[577676,577683],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[577717,577718]},{"pos":[577750,577757],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[577822,577823],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[577976,577997],"content":"Aggregate(Of TSource)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource)","pos":[0,21]}]},{"pos":[578067,578068],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[578145,578156],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[578242,578245]},{"pos":[578279,578286],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[578319,578320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[578348,578349]},{"pos":[578404,578408],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[578467,578470]},{"pos":[578504,578511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578545,578546]},{"pos":[578578,578585],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[578619,578620]},{"pos":[578652,578659],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[578692,578693],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[578720,578721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[579153,579163],"content":"Enumerable","needQuote":true,"nodes":[{"content":"Enumerable","pos":[0,10]}]},{"pos":[579408,579515],"content":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;)","pos":[0,107],"source":"Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)"}]},{"pos":[580154,580185],"content":"Aggregate<TSource, TAccumulate>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate&gt;","pos":[0,31],"source":"Aggregate<TSource, TAccumulate>"}]},{"pos":[580265,580266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[580343,580354],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[580439,580440],"content":"<","needQuote":true,"nodes":[]},{"pos":[580467,580474],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580540,580541]},{"pos":[580573,580584],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[580622,580623]},{"pos":[580678,580682],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[580740,580741],"content":"<","needQuote":true,"nodes":[]},{"pos":[580768,580779],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[580817,580818]},{"pos":[580850,580857],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[580891,580892]},{"pos":[580924,580935],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[581004,581005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[581162,581196],"content":"Aggregate(Of TSource, TAccumulate)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate)","pos":[0,34]}]},{"pos":[581279,581280],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[581357,581368],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[581454,581457]},{"pos":[581491,581498],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[581531,581532],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[581560,581561]},{"pos":[581593,581604],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[581642,581643]},{"pos":[581698,581702],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[581761,581764]},{"pos":[581798,581809],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[581847,581848]},{"pos":[581880,581887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[581921,581922]},{"pos":[581954,581965],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[582002,582003],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582030,582031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[582620,582764],"content":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;(IEnumerable&lt;TSource&gt;, TAccumulate, Func&lt;TAccumulate, TSource, TAccumulate&gt;, Func&lt;TAccumulate, TResult&gt;)","pos":[0,144],"source":"Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)"}]},{"pos":[583555,583595],"content":"Aggregate<TSource, TAccumulate, TResult>","needQuote":true,"nodes":[{"content":"Aggregate&lt;TSource, TAccumulate, TResult&gt;","pos":[0,40],"source":"Aggregate<TSource, TAccumulate, TResult>"}]},{"pos":[583684,583685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[583762,583773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[583858,583859],"content":"<","needQuote":true,"nodes":[]},{"pos":[583886,583893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[583959,583960]},{"pos":[583992,584003],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[584041,584042]},{"pos":[584097,584101],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[584159,584160],"content":"<","needQuote":true,"nodes":[]},{"pos":[584187,584198],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[584236,584237]},{"pos":[584269,584276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[584310,584311]},{"pos":[584343,584354],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[584424,584425]},{"pos":[584480,584484],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[584542,584543],"content":"<","needQuote":true,"nodes":[]},{"pos":[584570,584581],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[584619,584620]},{"pos":[584652,584659],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[584724,584725],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[584903,584946],"content":"Aggregate(Of TSource, TAccumulate, TResult)","needQuote":true,"nodes":[{"content":"Aggregate(Of TSource, TAccumulate, TResult)","pos":[0,43]}]},{"pos":[585038,585039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[585116,585127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[585213,585216]},{"pos":[585250,585257],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[585290,585291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[585319,585320]},{"pos":[585352,585363],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[585401,585402]},{"pos":[585457,585461],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[585520,585523]},{"pos":[585557,585568],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[585606,585607]},{"pos":[585639,585646],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[585680,585681]},{"pos":[585713,585724],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[585761,585762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[585790,585791]},{"pos":[585846,585850],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[585909,585912]},{"pos":[585946,585957],"content":"TAccumulate","needQuote":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"content":",","pos":[585995,585996]},{"pos":[586028,586035],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[586068,586069],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586096,586097],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[586760,586818],"content":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[587321,587333],"content":"All<TSource>","needQuote":true,"nodes":[{"content":"All&lt;TSource&gt;","pos":[0,12],"source":"All<TSource>"}]},{"pos":[587394,587395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[587472,587483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[587568,587569],"content":"<","needQuote":true,"nodes":[]},{"pos":[587596,587603],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587669,587670]},{"pos":[587725,587729],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[587787,587788],"content":"<","needQuote":true,"nodes":[]},{"pos":[587815,587822],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[587856,587857]},{"pos":[587913,587920],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[588013,588014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588168,588183],"content":"All(Of TSource)","needQuote":true,"nodes":[{"content":"All(Of TSource)","pos":[0,15]}]},{"pos":[588247,588248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[588325,588336],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[588422,588425]},{"pos":[588459,588466],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[588499,588500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[588528,588529]},{"pos":[588584,588588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[588647,588650]},{"pos":[588684,588691],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[588725,588726]},{"pos":[588782,588789],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[588850,588851],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[588878,588879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[589311,589345],"content":"Any<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Any<TSource>(IEnumerable<TSource>)"}]},{"pos":[589710,589722],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[589783,589784],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[589861,589872],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[589957,589958],"content":"<","needQuote":true,"nodes":[]},{"pos":[589985,589992],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[590057,590058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590180,590195],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[590259,590260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[590337,590348],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[590434,590437]},{"pos":[590471,590478],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[590511,590512],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590539,590540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[590921,590979],"content":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,58],"source":"Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[591482,591494],"content":"Any<TSource>","needQuote":true,"nodes":[{"content":"Any&lt;TSource&gt;","pos":[0,12],"source":"Any<TSource>"}]},{"pos":[591555,591556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[591633,591644],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[591729,591730],"content":"<","needQuote":true,"nodes":[]},{"pos":[591757,591764],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[591830,591831]},{"pos":[591886,591890],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[591948,591949],"content":"<","needQuote":true,"nodes":[]},{"pos":[591976,591983],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592017,592018]},{"pos":[592074,592081],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[592174,592175],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[592329,592344],"content":"Any(Of TSource)","needQuote":true,"nodes":[{"content":"Any(Of TSource)","pos":[0,15]}]},{"pos":[592408,592409],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[592486,592497],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[592583,592586]},{"pos":[592620,592627],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[592660,592661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[592689,592690]},{"pos":[592745,592749],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[592808,592811]},{"pos":[592845,592852],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[592886,592887]},{"pos":[592943,592950],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[593011,593012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593039,593040],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[593481,593524],"content":"AsEnumerable<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,43],"source":"AsEnumerable<TSource>(IEnumerable<TSource>)"}]},{"pos":[593925,593946],"content":"AsEnumerable<TSource>","needQuote":true,"nodes":[{"content":"AsEnumerable&lt;TSource&gt;","pos":[0,21],"source":"AsEnumerable<TSource>"}]},{"pos":[594016,594017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594094,594105],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[594190,594191],"content":"<","needQuote":true,"nodes":[]},{"pos":[594218,594225],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594290,594291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594422,594446],"content":"AsEnumerable(Of TSource)","needQuote":true,"nodes":[{"content":"AsEnumerable(Of TSource)","pos":[0,24]}]},{"pos":[594519,594520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[594597,594608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[594694,594697]},{"pos":[594731,594738],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[594771,594772],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[594799,594800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[595212,595274],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,62],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[595793,595809],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[595874,595875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[595952,595963],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[596048,596049],"content":"<","needQuote":true,"nodes":[]},{"pos":[596076,596083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596149,596150]},{"pos":[596205,596209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[596267,596268],"content":"<","needQuote":true,"nodes":[]},{"pos":[596295,596302],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[596336,596337]},{"pos":[596393,596400],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[596493,596494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[596652,596671],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[596739,596740],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[596817,596828],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[596914,596917]},{"pos":[596951,596958],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[596991,596992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[597020,597021]},{"pos":[597076,597080],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[597139,597142]},{"pos":[597176,597183],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[597217,597218]},{"pos":[597274,597281],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[597342,597343],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597370,597371],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[597850,597911],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[598426,598442],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[598507,598508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[598585,598596],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[598681,598682],"content":"<","needQuote":true,"nodes":[]},{"pos":[598709,598716],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598782,598783]},{"pos":[598838,598842],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[598900,598901],"content":"<","needQuote":true,"nodes":[]},{"pos":[598928,598935],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[598969,598970]},{"pos":[599025,599031],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[599123,599124],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599281,599300],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[599368,599369],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[599446,599457],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[599543,599546]},{"pos":[599580,599587],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[599620,599621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[599649,599650]},{"pos":[599705,599709],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[599768,599771]},{"pos":[599805,599812],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[599846,599847]},{"pos":[599902,599908],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[599968,599969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[599996,599997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[600472,600532],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[601043,601059],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[601124,601125],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[601202,601213],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[601298,601299],"content":"<","needQuote":true,"nodes":[]},{"pos":[601326,601333],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601399,601400]},{"pos":[601455,601459],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[601517,601518],"content":"<","needQuote":true,"nodes":[]},{"pos":[601545,601552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[601586,601587]},{"pos":[601641,601646],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[601737,601738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[601894,601913],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[601981,601982],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[602059,602070],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[602156,602159]},{"pos":[602193,602200],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[602233,602234],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[602262,602263]},{"pos":[602318,602322],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[602381,602384]},{"pos":[602418,602425],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[602459,602460]},{"pos":[602514,602519],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[602578,602579],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[602606,602607],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[603079,603139],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,60],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[603650,603666],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[603731,603732],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[603809,603820],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[603905,603906],"content":"<","needQuote":true,"nodes":[]},{"pos":[603933,603940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604006,604007]},{"pos":[604062,604066],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[604124,604125],"content":"<","needQuote":true,"nodes":[]},{"pos":[604152,604159],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[604193,604194]},{"pos":[604248,604253],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[604344,604345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[604501,604520],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[604588,604589],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[604666,604677],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[604763,604766]},{"pos":[604800,604807],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[604840,604841],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[604869,604870]},{"pos":[604925,604929],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[604988,604991]},{"pos":[605025,605032],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[605066,605067]},{"pos":[605121,605126],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[605185,605186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605213,605214],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[605705,605777],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,72],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[606363,606379],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[606444,606445],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[606522,606533],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[606618,606619],"content":"<","needQuote":true,"nodes":[]},{"pos":[606646,606653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606719,606720]},{"pos":[606775,606779],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[606837,606838],"content":"<","needQuote":true,"nodes":[]},{"pos":[606865,606872],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[606906,606907]},{"pos":[606966,606974],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[607036,607037],"content":"<","needQuote":true,"nodes":[]},{"pos":[607088,607095],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[607220,607221],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[607396,607415],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[607483,607484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[607561,607572],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[607658,607661]},{"pos":[607695,607702],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[607735,607736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[607764,607765]},{"pos":[607820,607824],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[607883,607886]},{"pos":[607920,607927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[607961,607962]},{"pos":[608021,608029],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[608092,608095]},{"pos":[608153,608160],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[608221,608222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608249,608250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608277,608278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[608814,608885],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[609467,609483],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[609548,609549],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[609626,609637],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[609722,609723],"content":"<","needQuote":true,"nodes":[]},{"pos":[609750,609757],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[609823,609824]},{"pos":[609879,609883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[609941,609942],"content":"<","needQuote":true,"nodes":[]},{"pos":[609969,609976],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[610010,610011]},{"pos":[610070,610078],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[610140,610141],"content":"<","needQuote":true,"nodes":[]},{"pos":[610191,610197],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[610321,610322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[610496,610515],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[610583,610584],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[610661,610672],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[610758,610761]},{"pos":[610795,610802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[610835,610836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[610864,610865]},{"pos":[610920,610924],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[610983,610986]},{"pos":[611020,611027],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[611061,611062]},{"pos":[611121,611129],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[611192,611195]},{"pos":[611252,611258],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[611318,611319],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611346,611347],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611374,611375],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[611907,611977],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[612555,612571],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[612636,612637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[612714,612725],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[612810,612811],"content":"<","needQuote":true,"nodes":[]},{"pos":[612838,612845],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[612911,612912]},{"pos":[612967,612971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[613029,613030],"content":"<","needQuote":true,"nodes":[]},{"pos":[613057,613064],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[613098,613099]},{"pos":[613158,613166],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[613228,613229],"content":"<","needQuote":true,"nodes":[]},{"pos":[613278,613283],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[613406,613407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[613580,613599],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[613667,613668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[613745,613756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[613842,613845]},{"pos":[613879,613886],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[613919,613920],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[613948,613949]},{"pos":[614004,614008],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[614067,614070]},{"pos":[614104,614111],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[614145,614146]},{"pos":[614205,614213],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[614276,614279]},{"pos":[614335,614340],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[614399,614400],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614427,614428],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614455,614456],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[614985,615055],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,70],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[615633,615649],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[615714,615715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[615792,615803],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[615888,615889],"content":"<","needQuote":true,"nodes":[]},{"pos":[615916,615923],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[615989,615990]},{"pos":[616045,616049],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[616107,616108],"content":"<","needQuote":true,"nodes":[]},{"pos":[616135,616142],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[616176,616177]},{"pos":[616236,616244],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[616306,616307],"content":"<","needQuote":true,"nodes":[]},{"pos":[616356,616361],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[616484,616485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[616658,616677],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[616745,616746],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[616823,616834],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[616920,616923]},{"pos":[616957,616964],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[616997,616998],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[617026,617027]},{"pos":[617082,617086],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[617145,617148]},{"pos":[617182,617189],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[617223,617224]},{"pos":[617283,617291],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[617354,617357]},{"pos":[617413,617418],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[617477,617478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617505,617506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[617533,617534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[618064,618135],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,71],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[618717,618733],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[618798,618799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[618876,618887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[618972,618973],"content":"<","needQuote":true,"nodes":[]},{"pos":[619000,619007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[619073,619074]},{"pos":[619129,619133],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[619191,619192],"content":"<","needQuote":true,"nodes":[]},{"pos":[619219,619226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[619260,619261]},{"pos":[619320,619328],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[619390,619391],"content":"<","needQuote":true,"nodes":[]},{"pos":[619441,619447],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[619571,619572],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[619746,619765],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[619833,619834],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[619911,619922],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[620008,620011]},{"pos":[620045,620052],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[620085,620086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[620114,620115]},{"pos":[620170,620174],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[620233,620236]},{"pos":[620270,620277],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[620311,620312]},{"pos":[620371,620379],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[620442,620445]},{"pos":[620502,620508],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[620568,620569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620596,620597],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[620624,620625],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[621141,621202],"content":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,61],"source":"Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[621717,621733],"content":"Average<TSource>","needQuote":true,"nodes":[{"content":"Average&lt;TSource&gt;","pos":[0,16],"source":"Average<TSource>"}]},{"pos":[621798,621799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[621876,621887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[621972,621973],"content":"<","needQuote":true,"nodes":[]},{"pos":[622000,622007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[622073,622074]},{"pos":[622129,622133],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[622191,622192],"content":"<","needQuote":true,"nodes":[]},{"pos":[622219,622226],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[622260,622261]},{"pos":[622316,622322],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[622414,622415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[622572,622591],"content":"Average(Of TSource)","needQuote":true,"nodes":[{"content":"Average(Of TSource)","pos":[0,19]}]},{"pos":[622659,622660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[622737,622748],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[622834,622837]},{"pos":[622871,622878],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[622911,622912],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[622940,622941]},{"pos":[622996,623000],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[623059,623062]},{"pos":[623096,623103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[623137,623138]},{"pos":[623193,623199],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[623259,623260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623287,623288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[623717,623743],"content":"Cast<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;(IEnumerable)","pos":[0,26],"source":"Cast<TResult>(IEnumerable)"}]},{"pos":[624050,624063],"content":"Cast<TResult>","needQuote":true,"nodes":[{"content":"Cast&lt;TResult&gt;","pos":[0,13],"source":"Cast<TResult>"}]},{"pos":[624125,624126],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624193,624204],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[624281,624282],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624392,624408],"content":"Cast(Of TResult)","needQuote":true,"nodes":[{"content":"Cast(Of TResult)","pos":[0,16]}]},{"pos":[624473,624474],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[624541,624552],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[624629,624630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[624995,625054],"content":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[625601,625616],"content":"Concat<TSource>","needQuote":true,"nodes":[{"content":"Concat&lt;TSource&gt;","pos":[0,15],"source":"Concat<TSource>"}]},{"pos":[625680,625681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[625758,625769],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[625854,625855],"content":"<","needQuote":true,"nodes":[]},{"pos":[625882,625889],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[625955,625956]},{"pos":[626038,626049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[626134,626135],"content":"<","needQuote":true,"nodes":[]},{"pos":[626162,626169],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[626234,626235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[626404,626422],"content":"Concat(Of TSource)","needQuote":true,"nodes":[{"content":"Concat(Of TSource)","pos":[0,18]}]},{"pos":[626489,626490],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[626567,626578],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[626664,626667]},{"pos":[626701,626708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[626741,626742],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[626770,626771]},{"pos":[626853,626864],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[626950,626953]},{"pos":[626987,626994],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[627027,627028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627055,627056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[627512,627558],"content":"Append<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,46],"source":"Append<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[627966,627981],"content":"Append<TSource>","needQuote":true,"nodes":[{"content":"Append&lt;TSource&gt;","pos":[0,15],"source":"Append<TSource>"}]},{"pos":[628045,628046],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628123,628134],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[628219,628220],"content":"<","needQuote":true,"nodes":[]},{"pos":[628247,628254],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[628320,628321]},{"pos":[628353,628360],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628393,628394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[628523,628541],"content":"Append(Of TSource)","needQuote":true,"nodes":[{"content":"Append(Of TSource)","pos":[0,18]}]},{"pos":[628608,628609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[628686,628697],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[628783,628786]},{"pos":[628820,628827],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628860,628861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[628889,628890]},{"pos":[628922,628929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[628962,628963],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[629351,629398],"content":"Prepend<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,47],"source":"Prepend<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[629810,629826],"content":"Prepend<TSource>","needQuote":true,"nodes":[{"content":"Prepend&lt;TSource&gt;","pos":[0,16],"source":"Prepend<TSource>"}]},{"pos":[629891,629892],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[629969,629980],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[630065,630066],"content":"<","needQuote":true,"nodes":[]},{"pos":[630093,630100],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[630166,630167]},{"pos":[630199,630206],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[630239,630240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[630370,630389],"content":"Prepend(Of TSource)","needQuote":true,"nodes":[{"content":"Prepend(Of TSource)","pos":[0,19]}]},{"pos":[630457,630458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[630535,630546],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[630632,630635]},{"pos":[630669,630676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[630709,630710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[630738,630739]},{"pos":[630771,630778],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[630811,630812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[631204,631252],"content":"Contains<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,48],"source":"Contains<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[631668,631685],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[631751,631752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[631829,631840],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[631925,631926],"content":"<","needQuote":true,"nodes":[]},{"pos":[631953,631960],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[632026,632027]},{"pos":[632059,632066],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632099,632100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[632231,632251],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[632320,632321],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[632398,632409],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[632495,632498]},{"pos":[632532,632539],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632572,632573],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[632601,632602]},{"pos":[632634,632641],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[632674,632675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[633120,633196],"content":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource, IEqualityComparer&lt;TSource&gt;)","pos":[0,76],"source":"Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)"}]},{"pos":[633806,633823],"content":"Contains<TSource>","needQuote":true,"nodes":[{"content":"Contains&lt;TSource&gt;","pos":[0,17],"source":"Contains<TSource>"}]},{"pos":[633889,633890],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[633967,633978],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[634063,634064],"content":"<","needQuote":true,"nodes":[]},{"pos":[634091,634098],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634164,634165]},{"pos":[634197,634204],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[634238,634239]},{"pos":[634327,634344],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[634435,634436],"content":"<","needQuote":true,"nodes":[]},{"pos":[634463,634470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[634535,634536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[634717,634737],"content":"Contains(Of TSource)","needQuote":true,"nodes":[{"content":"Contains(Of TSource)","pos":[0,20]}]},{"pos":[634806,634807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[634884,634895],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[634981,634984]},{"pos":[635018,635025],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[635058,635059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[635087,635088]},{"pos":[635120,635127],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[635161,635162]},{"pos":[635250,635267],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[635359,635362]},{"pos":[635396,635403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[635436,635437],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635464,635465],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[635962,635998],"content":"Count<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"Count<TSource>(IEnumerable<TSource>)"}]},{"pos":[636371,636385],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[636448,636449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[636526,636537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[636622,636623],"content":"<","needQuote":true,"nodes":[]},{"pos":[636650,636657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[636722,636723],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[636847,636864],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[636930,636931],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[637008,637019],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[637105,637108]},{"pos":[637142,637149],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[637182,637183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637210,637211],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[637600,637660],"content":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[638171,638185],"content":"Count<TSource>","needQuote":true,"nodes":[{"content":"Count&lt;TSource&gt;","pos":[0,14],"source":"Count<TSource>"}]},{"pos":[638248,638249],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[638326,638337],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[638422,638423],"content":"<","needQuote":true,"nodes":[]},{"pos":[638450,638457],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638523,638524]},{"pos":[638579,638583],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[638641,638642],"content":"<","needQuote":true,"nodes":[]},{"pos":[638669,638676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[638710,638711]},{"pos":[638767,638774],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[638867,638868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639024,639041],"content":"Count(Of TSource)","needQuote":true,"nodes":[{"content":"Count(Of TSource)","pos":[0,17]}]},{"pos":[639107,639108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[639185,639196],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[639282,639285]},{"pos":[639319,639326],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[639359,639360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[639388,639389]},{"pos":[639444,639448],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[639507,639510]},{"pos":[639544,639551],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[639585,639586]},{"pos":[639642,639649],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[639710,639711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[639738,639739],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[640188,640233],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>)"}]},{"pos":[640642,640665],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[640737,640738],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[640815,640826],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[640911,640912],"content":"<","needQuote":true,"nodes":[]},{"pos":[640939,640946],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[641011,641012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641145,641171],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[641246,641247],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[641324,641335],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[641421,641424]},{"pos":[641458,641465],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[641498,641499],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641526,641527],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[641924,641978],"content":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, TSource)","pos":[0,54],"source":"DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)"}]},{"pos":[642418,642441],"content":"DefaultIfEmpty<TSource>","needQuote":true,"nodes":[{"content":"DefaultIfEmpty&lt;TSource&gt;","pos":[0,23],"source":"DefaultIfEmpty<TSource>"}]},{"pos":[642513,642514],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[642591,642602],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[642687,642688],"content":"<","needQuote":true,"nodes":[]},{"pos":[642715,642722],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[642788,642789]},{"pos":[642821,642828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[642861,642862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[642999,643025],"content":"DefaultIfEmpty(Of TSource)","needQuote":true,"nodes":[{"content":"DefaultIfEmpty(Of TSource)","pos":[0,26]}]},{"pos":[643100,643101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[643178,643189],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[643275,643278]},{"pos":[643312,643319],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[643352,643353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[643381,643382]},{"pos":[643414,643421],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[643454,643455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[643864,643903],"content":"Distinct<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,39],"source":"Distinct<TSource>(IEnumerable<TSource>)"}]},{"pos":[644288,644305],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[644371,644372],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644449,644460],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[644545,644546],"content":"<","needQuote":true,"nodes":[]},{"pos":[644573,644580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[644645,644646],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[644773,644793],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[644862,644863],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[644940,644951],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[645037,645040]},{"pos":[645074,645081],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[645114,645115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645142,645143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[645562,645629],"content":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,67],"source":"Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[646208,646225],"content":"Distinct<TSource>","needQuote":true,"nodes":[{"content":"Distinct&lt;TSource&gt;","pos":[0,17],"source":"Distinct<TSource>"}]},{"pos":[646291,646292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[646369,646380],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[646465,646466],"content":"<","needQuote":true,"nodes":[]},{"pos":[646493,646500],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[646566,646567]},{"pos":[646655,646672],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[646763,646764],"content":"<","needQuote":true,"nodes":[]},{"pos":[646791,646798],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[646863,646864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647041,647061],"content":"Distinct(Of TSource)","needQuote":true,"nodes":[{"content":"Distinct(Of TSource)","pos":[0,20]}]},{"pos":[647130,647131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[647208,647219],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[647305,647308]},{"pos":[647342,647349],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647382,647383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[647411,647412]},{"pos":[647500,647517],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[647609,647612]},{"pos":[647646,647653],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[647686,647687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[647714,647715],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[648207,648254],"content":"ElementAt<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,47],"source":"ElementAt<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[648691,648709],"content":"ElementAt<TSource>","needQuote":true,"nodes":[{"content":"ElementAt&lt;TSource&gt;","pos":[0,18],"source":"ElementAt<TSource>"}]},{"pos":[648776,648777],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[648854,648865],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[648950,648951],"content":"<","needQuote":true,"nodes":[]},{"pos":[648978,648985],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[649051,649052]},{"pos":[649106,649111],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[649170,649171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[649312,649333],"content":"ElementAt(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAt(Of TSource)","pos":[0,21]}]},{"pos":[649403,649404],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[649481,649492],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[649578,649581]},{"pos":[649615,649622],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[649655,649656],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[649684,649685]},{"pos":[649739,649744],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[649803,649804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[650226,650282],"content":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,56],"source":"ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[650755,650782],"content":"ElementAtOrDefault<TSource>","needQuote":true,"nodes":[{"content":"ElementAtOrDefault&lt;TSource&gt;","pos":[0,27],"source":"ElementAtOrDefault<TSource>"}]},{"pos":[650858,650859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[650936,650947],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[651032,651033],"content":"<","needQuote":true,"nodes":[]},{"pos":[651060,651067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[651133,651134]},{"pos":[651188,651193],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[651252,651253],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[651403,651433],"content":"ElementAtOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"ElementAtOrDefault(Of TSource)","pos":[0,30]}]},{"pos":[651512,651513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[651590,651601],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[651687,651690]},{"pos":[651724,651731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[651764,651765],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[651793,651794]},{"pos":[651848,651853],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[651912,651913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[652381,652440],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,59],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[652987,653002],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[653066,653067],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653144,653155],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[653240,653241],"content":"<","needQuote":true,"nodes":[]},{"pos":[653268,653275],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[653341,653342]},{"pos":[653424,653435],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[653520,653521],"content":"<","needQuote":true,"nodes":[]},{"pos":[653548,653555],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[653620,653621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[653790,653808],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[653875,653876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[653953,653964],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[654050,654053]},{"pos":[654087,654094],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654127,654128],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[654156,654157]},{"pos":[654239,654250],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[654336,654339]},{"pos":[654373,654380],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[654413,654414],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654441,654442],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[654988,655075],"content":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,87],"source":"Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[655816,655831],"content":"Except<TSource>","needQuote":true,"nodes":[{"content":"Except&lt;TSource&gt;","pos":[0,15],"source":"Except<TSource>"}]},{"pos":[655895,655896],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[655973,655984],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[656069,656070],"content":"<","needQuote":true,"nodes":[]},{"pos":[656097,656104],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656170,656171]},{"pos":[656253,656264],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[656349,656350],"content":"<","needQuote":true,"nodes":[]},{"pos":[656377,656384],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[656450,656451]},{"pos":[656539,656556],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[656647,656648],"content":"<","needQuote":true,"nodes":[]},{"pos":[656675,656682],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[656747,656748],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[656967,656985],"content":"Except(Of TSource)","needQuote":true,"nodes":[{"content":"Except(Of TSource)","pos":[0,18]}]},{"pos":[657052,657053],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[657130,657141],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[657227,657230]},{"pos":[657264,657271],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657304,657305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[657333,657334]},{"pos":[657416,657427],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[657513,657516]},{"pos":[657550,657557],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657590,657591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[657619,657620]},{"pos":[657708,657725],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[657817,657820]},{"pos":[657854,657861],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[657894,657895],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[657922,657923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[658483,658519],"content":"First<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,36],"source":"First<TSource>(IEnumerable<TSource>)"}]},{"pos":[658892,658906],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[658969,658970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659047,659058],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[659143,659144],"content":"<","needQuote":true,"nodes":[]},{"pos":[659171,659178],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[659243,659244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659368,659385],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[659451,659452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[659529,659540],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[659626,659629]},{"pos":[659663,659670],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[659703,659704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[659731,659732],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[660121,660181],"content":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[660692,660706],"content":"First<TSource>","needQuote":true,"nodes":[{"content":"First&lt;TSource&gt;","pos":[0,14],"source":"First<TSource>"}]},{"pos":[660769,660770],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[660847,660858],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[660943,660944],"content":"<","needQuote":true,"nodes":[]},{"pos":[660971,660978],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661044,661045]},{"pos":[661100,661104],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[661162,661163],"content":"<","needQuote":true,"nodes":[]},{"pos":[661190,661197],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[661231,661232]},{"pos":[661288,661295],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[661388,661389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[661545,661562],"content":"First(Of TSource)","needQuote":true,"nodes":[{"content":"First(Of TSource)","pos":[0,17]}]},{"pos":[661628,661629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[661706,661717],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[661803,661806]},{"pos":[661840,661847],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[661880,661881],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[661909,661910]},{"pos":[661965,661969],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[662028,662031]},{"pos":[662065,662072],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[662106,662107]},{"pos":[662163,662170],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[662231,662232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662259,662260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[662709,662754],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,45],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[663163,663186],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[663258,663259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663336,663347],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[663432,663433],"content":"<","needQuote":true,"nodes":[]},{"pos":[663460,663467],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[663532,663533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[663666,663692],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[663767,663768],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[663845,663856],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[663942,663945]},{"pos":[663979,663986],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[664019,664020],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664047,664048],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[664473,664542],"content":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,69],"source":"FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[665089,665112],"content":"FirstOrDefault<TSource>","needQuote":true,"nodes":[{"content":"FirstOrDefault&lt;TSource&gt;","pos":[0,23],"source":"FirstOrDefault<TSource>"}]},{"pos":[665184,665185],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[665262,665273],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[665358,665359],"content":"<","needQuote":true,"nodes":[]},{"pos":[665386,665393],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665459,665460]},{"pos":[665515,665519],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[665577,665578],"content":"<","needQuote":true,"nodes":[]},{"pos":[665605,665612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[665646,665647]},{"pos":[665703,665710],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[665803,665804],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[665969,665995],"content":"FirstOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"FirstOrDefault(Of TSource)","pos":[0,26]}]},{"pos":[666070,666071],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[666148,666159],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[666245,666248]},{"pos":[666282,666289],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[666322,666323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[666351,666352]},{"pos":[666407,666411],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[666470,666473]},{"pos":[666507,666514],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[666548,666549]},{"pos":[666605,666612],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[666673,666674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[666701,666702],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[667192,667257],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[667760,667782],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[667853,667854],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[667931,667942],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[668027,668028],"content":"<","needQuote":true,"nodes":[]},{"pos":[668055,668062],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668128,668129]},{"pos":[668184,668188],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[668246,668247],"content":"<","needQuote":true,"nodes":[]},{"pos":[668274,668281],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[668315,668316]},{"pos":[668348,668352],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[668414,668415],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[668562,668587],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[668661,668662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[668739,668750],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[668836,668839]},{"pos":[668873,668880],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[668913,668914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[668942,668943]},{"pos":[668998,669002],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[669061,669064]},{"pos":[669098,669105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[669139,669140]},{"pos":[669172,669176],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[669206,669207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669234,669235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[669749,669839],"content":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,90],"source":"GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[670527,670549],"content":"GroupBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"GroupBy<TSource, TKey>"}]},{"pos":[670620,670621],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[670698,670709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[670794,670795],"content":"<","needQuote":true,"nodes":[]},{"pos":[670822,670829],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[670895,670896]},{"pos":[670951,670955],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[671013,671014],"content":"<","needQuote":true,"nodes":[]},{"pos":[671041,671048],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[671082,671083]},{"pos":[671115,671119],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[671182,671183]},{"pos":[671271,671288],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[671379,671380],"content":"<","needQuote":true,"nodes":[]},{"pos":[671407,671411],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[671473,671474],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[671671,671696],"content":"GroupBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[671770,671771],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[671848,671859],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[671945,671948]},{"pos":[671982,671989],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[672022,672023],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[672051,672052]},{"pos":[672107,672111],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[672170,672173]},{"pos":[672207,672214],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[672248,672249]},{"pos":[672281,672285],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[672315,672316],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[672344,672345]},{"pos":[672433,672450],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[672542,672545]},{"pos":[672579,672583],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[672613,672614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[672641,672642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[673230,673330],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,100],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[673979,674011],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[674092,674093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[674170,674181],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[674266,674267],"content":"<","needQuote":true,"nodes":[]},{"pos":[674294,674301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674367,674368]},{"pos":[674423,674427],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[674485,674486],"content":"<","needQuote":true,"nodes":[]},{"pos":[674513,674520],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674554,674555]},{"pos":[674587,674591],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[674654,674655]},{"pos":[674710,674714],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[674772,674773],"content":"<","needQuote":true,"nodes":[]},{"pos":[674800,674807],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[674841,674842]},{"pos":[674874,674882],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[674948,674949],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[675117,675152],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[675236,675237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[675314,675325],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[675411,675414]},{"pos":[675448,675455],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[675488,675489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[675517,675518]},{"pos":[675573,675577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[675636,675639]},{"pos":[675673,675680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[675714,675715]},{"pos":[675747,675751],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[675781,675782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[675810,675811]},{"pos":[675866,675870],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[675929,675932]},{"pos":[675966,675973],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[676007,676008]},{"pos":[676040,676048],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[676082,676083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676110,676111],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[676740,676865],"content":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,125],"source":"GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[677699,677731],"content":"GroupBy<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement&gt;","pos":[0,32],"source":"GroupBy<TSource, TKey, TElement>"}]},{"pos":[677812,677813],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[677890,677901],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[677986,677987],"content":"<","needQuote":true,"nodes":[]},{"pos":[678014,678021],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678087,678088]},{"pos":[678143,678147],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[678205,678206],"content":"<","needQuote":true,"nodes":[]},{"pos":[678233,678240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678274,678275]},{"pos":[678307,678311],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[678374,678375]},{"pos":[678430,678434],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[678492,678493],"content":"<","needQuote":true,"nodes":[]},{"pos":[678520,678527],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[678561,678562]},{"pos":[678594,678602],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[678669,678670]},{"pos":[678758,678775],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[678866,678867],"content":"<","needQuote":true,"nodes":[]},{"pos":[678894,678898],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[678960,678961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[679179,679214],"content":"GroupBy(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement)","pos":[0,35]}]},{"pos":[679298,679299],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[679376,679387],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[679473,679476]},{"pos":[679510,679517],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[679550,679551],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[679579,679580]},{"pos":[679635,679639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[679698,679701]},{"pos":[679735,679742],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[679776,679777]},{"pos":[679809,679813],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[679843,679844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[679872,679873]},{"pos":[679928,679932],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[679991,679994]},{"pos":[680028,680035],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[680069,680070]},{"pos":[680102,680110],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[680144,680145],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[680173,680174]},{"pos":[680262,680279],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[680371,680374]},{"pos":[680408,680412],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[680442,680443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[680470,680471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[681197,681314],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;)","pos":[0,117],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)"}]},{"pos":[682118,682149],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[682229,682230],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[682307,682318],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[682403,682404],"content":"<","needQuote":true,"nodes":[]},{"pos":[682431,682438],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682504,682505]},{"pos":[682560,682564],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[682622,682623],"content":"<","needQuote":true,"nodes":[]},{"pos":[682650,682657],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[682691,682692]},{"pos":[682724,682728],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[682791,682792]},{"pos":[682847,682851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[682909,682910],"content":"<","needQuote":true,"nodes":[]},{"pos":[682937,682941],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[682972,682973]},{"pos":[683055,683066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[683151,683152],"content":"<","needQuote":true,"nodes":[]},{"pos":[683179,683186],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[683252,683253]},{"pos":[683285,683292],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[683357,683358],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[683570,683604],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[683687,683688],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[683765,683776],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[683862,683865]},{"pos":[683899,683906],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[683939,683940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[683968,683969]},{"pos":[684024,684028],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[684087,684090]},{"pos":[684124,684131],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[684165,684166]},{"pos":[684198,684202],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[684232,684233],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[684261,684262]},{"pos":[684317,684321],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[684380,684383]},{"pos":[684417,684421],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[684452,684453]},{"pos":[684535,684546],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[684632,684635]},{"pos":[684669,684676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[684709,684710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[684738,684739]},{"pos":[684771,684778],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[684811,684812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[684839,684840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[685594,685736],"content":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TKey, IEnumerable&lt;TSource&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,142],"source":"GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[686725,686756],"content":"GroupBy<TSource, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TResult&gt;","pos":[0,31],"source":"GroupBy<TSource, TKey, TResult>"}]},{"pos":[686836,686837],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[686914,686925],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687010,687011],"content":"<","needQuote":true,"nodes":[]},{"pos":[687038,687045],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687111,687112]},{"pos":[687167,687171],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687229,687230],"content":"<","needQuote":true,"nodes":[]},{"pos":[687257,687264],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687298,687299]},{"pos":[687331,687335],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[687398,687399]},{"pos":[687454,687458],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[687516,687517],"content":"<","needQuote":true,"nodes":[]},{"pos":[687544,687548],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[687579,687580]},{"pos":[687662,687673],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[687758,687759],"content":"<","needQuote":true,"nodes":[]},{"pos":[687786,687793],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[687859,687860]},{"pos":[687892,687899],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[687965,687966]},{"pos":[688054,688071],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[688162,688163],"content":"<","needQuote":true,"nodes":[]},{"pos":[688190,688194],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[688256,688257],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[688519,688553],"content":"GroupBy(Of TSource, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TResult)","pos":[0,34]}]},{"pos":[688636,688637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[688714,688725],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[688811,688814]},{"pos":[688848,688855],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[688888,688889],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[688917,688918]},{"pos":[688973,688977],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[689036,689039]},{"pos":[689073,689080],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[689114,689115]},{"pos":[689147,689151],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[689181,689182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[689210,689211]},{"pos":[689266,689270],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[689329,689332]},{"pos":[689366,689370],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[689401,689402]},{"pos":[689484,689495],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[689581,689584]},{"pos":[689618,689625],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[689658,689659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[689687,689688]},{"pos":[689720,689727],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[689760,689761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[689789,689790]},{"pos":[689878,689895],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[689987,689990]},{"pos":[690024,690028],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[690058,690059],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690086,690087],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[690915,691068],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;)","pos":[0,153],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)"}]},{"pos":[692021,692062],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[692152,692153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[692230,692241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[692326,692327],"content":"<","needQuote":true,"nodes":[]},{"pos":[692354,692361],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692427,692428]},{"pos":[692483,692487],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692545,692546],"content":"<","needQuote":true,"nodes":[]},{"pos":[692573,692580],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692614,692615]},{"pos":[692647,692651],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[692714,692715]},{"pos":[692770,692774],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[692832,692833],"content":"<","needQuote":true,"nodes":[]},{"pos":[692860,692867],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[692901,692902]},{"pos":[692934,692942],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[693009,693010]},{"pos":[693065,693069],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[693127,693128],"content":"<","needQuote":true,"nodes":[]},{"pos":[693155,693159],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[693190,693191]},{"pos":[693273,693284],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[693369,693370],"content":"<","needQuote":true,"nodes":[]},{"pos":[693397,693405],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[693472,693473]},{"pos":[693505,693512],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[693577,693578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[693811,693855],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[693948,693949],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[694026,694037],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[694123,694126]},{"pos":[694160,694167],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[694200,694201],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694229,694230]},{"pos":[694285,694289],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[694348,694351]},{"pos":[694385,694392],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694426,694427]},{"pos":[694459,694463],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[694493,694494],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694522,694523]},{"pos":[694578,694582],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[694641,694644]},{"pos":[694678,694685],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[694719,694720]},{"pos":[694752,694760],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[694794,694795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[694823,694824]},{"pos":[694879,694883],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[694942,694945]},{"pos":[694979,694983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[695014,695015]},{"pos":[695097,695108],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[695194,695197]},{"pos":[695231,695239],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[695273,695274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[695302,695303]},{"pos":[695335,695342],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[695375,695376],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[695403,695404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[696275,696453],"content":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, Func&lt;TKey, IEnumerable&lt;TElement&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,178],"source":"GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[697591,697632],"content":"GroupBy<TSource, TKey, TElement, TResult>","needQuote":true,"nodes":[{"content":"GroupBy&lt;TSource, TKey, TElement, TResult&gt;","pos":[0,41],"source":"GroupBy<TSource, TKey, TElement, TResult>"}]},{"pos":[697722,697723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[697800,697811],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[697896,697897],"content":"<","needQuote":true,"nodes":[]},{"pos":[697924,697931],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[697997,697998]},{"pos":[698053,698057],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698115,698116],"content":"<","needQuote":true,"nodes":[]},{"pos":[698143,698150],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698184,698185]},{"pos":[698217,698221],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[698284,698285]},{"pos":[698340,698344],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698402,698403],"content":"<","needQuote":true,"nodes":[]},{"pos":[698430,698437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[698471,698472]},{"pos":[698504,698512],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[698579,698580]},{"pos":[698635,698639],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[698697,698698],"content":"<","needQuote":true,"nodes":[]},{"pos":[698725,698729],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[698760,698761]},{"pos":[698843,698854],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[698939,698940],"content":"<","needQuote":true,"nodes":[]},{"pos":[698967,698975],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[699042,699043]},{"pos":[699075,699082],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[699148,699149]},{"pos":[699237,699254],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[699345,699346],"content":"<","needQuote":true,"nodes":[]},{"pos":[699373,699377],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[699439,699440],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[699723,699767],"content":"GroupBy(Of TSource, TKey, TElement, TResult)","needQuote":true,"nodes":[{"content":"GroupBy(Of TSource, TKey, TElement, TResult)","pos":[0,44]}]},{"pos":[699860,699861],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[699938,699949],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[700035,700038]},{"pos":[700072,700079],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[700112,700113],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700141,700142]},{"pos":[700197,700201],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[700260,700263]},{"pos":[700297,700304],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700338,700339]},{"pos":[700371,700375],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[700405,700406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700434,700435]},{"pos":[700490,700494],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[700553,700556]},{"pos":[700590,700597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[700631,700632]},{"pos":[700664,700672],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[700706,700707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[700735,700736]},{"pos":[700791,700795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[700854,700857]},{"pos":[700891,700895],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[700926,700927]},{"pos":[701009,701020],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[701106,701109]},{"pos":[701143,701151],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[701185,701186],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[701214,701215]},{"pos":[701247,701254],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[701287,701288],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[701316,701317]},{"pos":[701405,701422],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[701514,701517]},{"pos":[701551,701555],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[701585,701586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[701613,701614],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[702584,702750],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;)","pos":[0,166],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)"}]},{"pos":[703848,703888],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[703977,703978],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[704055,704066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[704151,704152],"content":"<","needQuote":true,"nodes":[]},{"pos":[704179,704185],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[704250,704251]},{"pos":[704333,704344],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[704429,704430],"content":"<","needQuote":true,"nodes":[]},{"pos":[704457,704463],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[704528,704529]},{"pos":[704584,704588],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[704646,704647],"content":"<","needQuote":true,"nodes":[]},{"pos":[704674,704680],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[704713,704714]},{"pos":[704746,704750],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[704813,704814]},{"pos":[704869,704873],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[704931,704932],"content":"<","needQuote":true,"nodes":[]},{"pos":[704959,704965],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[704998,704999]},{"pos":[705031,705035],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[705098,705099]},{"pos":[705154,705158],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[705216,705217],"content":"<","needQuote":true,"nodes":[]},{"pos":[705244,705250],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[705283,705284]},{"pos":[705366,705377],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[705462,705463],"content":"<","needQuote":true,"nodes":[]},{"pos":[705490,705496],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[705561,705562]},{"pos":[705594,705601],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[705666,705667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[705946,705989],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[706081,706082],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[706159,706170],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[706256,706259]},{"pos":[706293,706299],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[706331,706332],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[706360,706361]},{"pos":[706443,706454],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[706540,706543]},{"pos":[706577,706583],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[706615,706616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[706644,706645]},{"pos":[706700,706704],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[706763,706766]},{"pos":[706800,706806],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[706839,706840]},{"pos":[706872,706876],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[706906,706907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[706935,706936]},{"pos":[706991,706995],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[707054,707057]},{"pos":[707091,707097],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[707130,707131]},{"pos":[707163,707167],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[707197,707198],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[707226,707227]},{"pos":[707282,707286],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[707345,707348]},{"pos":[707382,707388],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[707421,707422]},{"pos":[707504,707515],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[707601,707604]},{"pos":[707638,707644],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[707676,707677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[707705,707706]},{"pos":[707738,707745],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[707778,707779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[707806,707807],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[708799,708990],"content":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, IEnumerable&lt;TInner&gt;, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,191],"source":"GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[710273,710313],"content":"GroupJoin<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,40],"source":"GroupJoin<TOuter, TInner, TKey, TResult>"}]},{"pos":[710402,710403],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[710480,710491],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710576,710577],"content":"<","needQuote":true,"nodes":[]},{"pos":[710604,710610],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[710675,710676]},{"pos":[710758,710769],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[710854,710855],"content":"<","needQuote":true,"nodes":[]},{"pos":[710882,710888],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[710953,710954]},{"pos":[711009,711013],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711071,711072],"content":"<","needQuote":true,"nodes":[]},{"pos":[711099,711105],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[711138,711139]},{"pos":[711171,711175],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[711238,711239]},{"pos":[711294,711298],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711356,711357],"content":"<","needQuote":true,"nodes":[]},{"pos":[711384,711390],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[711423,711424]},{"pos":[711456,711460],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[711523,711524]},{"pos":[711579,711583],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[711641,711642],"content":"<","needQuote":true,"nodes":[]},{"pos":[711669,711675],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[711708,711709]},{"pos":[711791,711802],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[711887,711888],"content":"<","needQuote":true,"nodes":[]},{"pos":[711915,711921],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[711986,711987]},{"pos":[712019,712026],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[712092,712093]},{"pos":[712181,712198],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[712289,712290],"content":"<","needQuote":true,"nodes":[]},{"pos":[712317,712321],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[712383,712384],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[712713,712756],"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"GroupJoin(Of TOuter, TInner, TKey, TResult)","pos":[0,43]}]},{"pos":[712848,712849],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[712926,712937],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[713023,713026]},{"pos":[713060,713066],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[713098,713099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713127,713128]},{"pos":[713210,713221],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[713307,713310]},{"pos":[713344,713350],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[713382,713383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713411,713412]},{"pos":[713467,713471],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713530,713533]},{"pos":[713567,713573],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[713606,713607]},{"pos":[713639,713643],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[713673,713674],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713702,713703]},{"pos":[713758,713762],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[713821,713824]},{"pos":[713858,713864],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[713897,713898]},{"pos":[713930,713934],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[713964,713965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[713993,713994]},{"pos":[714049,714053],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[714112,714115]},{"pos":[714149,714155],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[714188,714189]},{"pos":[714271,714282],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[714368,714371]},{"pos":[714405,714411],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[714443,714444],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[714472,714473]},{"pos":[714505,714512],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[714545,714546],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[714574,714575]},{"pos":[714663,714680],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[714772,714775]},{"pos":[714809,714813],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[714843,714844],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[714871,714872],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[715810,715872],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,62],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[716431,716449],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[716516,716517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[716594,716605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716690,716691],"content":"<","needQuote":true,"nodes":[]},{"pos":[716718,716725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[716791,716792]},{"pos":[716874,716885],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[716970,716971],"content":"<","needQuote":true,"nodes":[]},{"pos":[716998,717005],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[717070,717071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717243,717264],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[717334,717335],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[717412,717423],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[717509,717512]},{"pos":[717546,717553],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[717586,717587],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[717615,717616]},{"pos":[717698,717709],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[717795,717798]},{"pos":[717832,717839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[717872,717873],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[717900,717901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[718459,718549],"content":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,90],"source":"Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[719302,719320],"content":"Intersect<TSource>","needQuote":true,"nodes":[{"content":"Intersect&lt;TSource&gt;","pos":[0,18],"source":"Intersect<TSource>"}]},{"pos":[719387,719388],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[719465,719476],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[719561,719562],"content":"<","needQuote":true,"nodes":[]},{"pos":[719589,719596],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719662,719663]},{"pos":[719745,719756],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[719841,719842],"content":"<","needQuote":true,"nodes":[]},{"pos":[719869,719876],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[719942,719943]},{"pos":[720031,720048],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[720139,720140],"content":"<","needQuote":true,"nodes":[]},{"pos":[720167,720174],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720239,720240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[720462,720483],"content":"Intersect(Of TSource)","needQuote":true,"nodes":[{"content":"Intersect(Of TSource)","pos":[0,21]}]},{"pos":[720553,720554],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[720631,720642],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[720728,720731]},{"pos":[720765,720772],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[720805,720806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[720834,720835]},{"pos":[720917,720928],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[721014,721017]},{"pos":[721051,721058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[721091,721092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[721120,721121]},{"pos":[721209,721226],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[721318,721321]},{"pos":[721355,721362],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[721395,721396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[721423,721424],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[722103,722251],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;)","pos":[0,148],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)"}]},{"pos":[723190,723225],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[723309,723310],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[723387,723398],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723483,723484],"content":"<","needQuote":true,"nodes":[]},{"pos":[723511,723517],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[723582,723583]},{"pos":[723665,723676],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[723761,723762],"content":"<","needQuote":true,"nodes":[]},{"pos":[723789,723795],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[723860,723861]},{"pos":[723916,723920],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[723978,723979],"content":"<","needQuote":true,"nodes":[]},{"pos":[724006,724012],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[724045,724046]},{"pos":[724078,724082],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[724145,724146]},{"pos":[724201,724205],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[724263,724264],"content":"<","needQuote":true,"nodes":[]},{"pos":[724291,724297],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[724330,724331]},{"pos":[724363,724367],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[724430,724431]},{"pos":[724486,724490],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[724548,724549],"content":"<","needQuote":true,"nodes":[]},{"pos":[724576,724582],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[724615,724616]},{"pos":[724648,724654],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[724687,724688]},{"pos":[724720,724727],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[724792,724793],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[725027,725065],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[725152,725153],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[725230,725241],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725327,725330]},{"pos":[725364,725370],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[725402,725403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725431,725432]},{"pos":[725514,725525],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[725611,725614]},{"pos":[725648,725654],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[725686,725687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[725715,725716]},{"pos":[725771,725775],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[725834,725837]},{"pos":[725871,725877],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[725910,725911]},{"pos":[725943,725947],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[725977,725978],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726006,726007]},{"pos":[726062,726066],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726125,726128]},{"pos":[726162,726168],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[726201,726202]},{"pos":[726234,726238],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[726268,726269],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[726297,726298]},{"pos":[726353,726357],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[726416,726419]},{"pos":[726453,726459],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[726492,726493]},{"pos":[726525,726531],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[726564,726565]},{"pos":[726597,726604],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[726637,726638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[726665,726666],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[727529,727702],"content":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;(IEnumerable&lt;TOuter&gt;, IEnumerable&lt;TInner&gt;, Func&lt;TOuter, TKey&gt;, Func&lt;TInner, TKey&gt;, Func&lt;TOuter, TInner, TResult&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,173],"source":"Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)"}]},{"pos":[728826,728861],"content":"Join<TOuter, TInner, TKey, TResult>","needQuote":true,"nodes":[{"content":"Join&lt;TOuter, TInner, TKey, TResult&gt;","pos":[0,35],"source":"Join<TOuter, TInner, TKey, TResult>"}]},{"pos":[728945,728946],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[729023,729034],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729119,729120],"content":"<","needQuote":true,"nodes":[]},{"pos":[729147,729153],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[729218,729219]},{"pos":[729301,729312],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[729397,729398],"content":"<","needQuote":true,"nodes":[]},{"pos":[729425,729431],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[729496,729497]},{"pos":[729552,729556],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[729614,729615],"content":"<","needQuote":true,"nodes":[]},{"pos":[729642,729648],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[729681,729682]},{"pos":[729714,729718],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[729781,729782]},{"pos":[729837,729841],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[729899,729900],"content":"<","needQuote":true,"nodes":[]},{"pos":[729927,729933],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[729966,729967]},{"pos":[729999,730003],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[730066,730067]},{"pos":[730122,730126],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[730184,730185],"content":"<","needQuote":true,"nodes":[]},{"pos":[730212,730218],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[730251,730252]},{"pos":[730284,730290],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[730323,730324]},{"pos":[730356,730363],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"content":",","pos":[730429,730430]},{"pos":[730518,730535],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[730626,730627],"content":"<","needQuote":true,"nodes":[]},{"pos":[730654,730658],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[730720,730721],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[731005,731043],"content":"Join(Of TOuter, TInner, TKey, TResult)","needQuote":true,"nodes":[{"content":"Join(Of TOuter, TInner, TKey, TResult)","pos":[0,38]}]},{"pos":[731130,731131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[731208,731219],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[731305,731308]},{"pos":[731342,731348],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"pos":[731380,731381],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731409,731410]},{"pos":[731492,731503],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[731589,731592]},{"pos":[731626,731632],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"pos":[731664,731665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731693,731694]},{"pos":[731749,731753],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[731812,731815]},{"pos":[731849,731855],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[731888,731889]},{"pos":[731921,731925],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[731955,731956],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[731984,731985]},{"pos":[732040,732044],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[732103,732106]},{"pos":[732140,732146],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[732179,732180]},{"pos":[732212,732216],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[732246,732247],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[732275,732276]},{"pos":[732331,732335],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[732394,732397]},{"pos":[732431,732437],"content":"TOuter","needQuote":true,"nodes":[{"content":"TOuter","pos":[0,6]}]},{"content":",","pos":[732470,732471]},{"pos":[732503,732509],"content":"TInner","needQuote":true,"nodes":[{"content":"TInner","pos":[0,6]}]},{"content":",","pos":[732542,732543]},{"pos":[732575,732582],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[732615,732616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[732644,732645]},{"pos":[732733,732750],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[732842,732845]},{"pos":[732879,732883],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[732913,732914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[732941,732942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[733747,733782],"content":"Last<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,35],"source":"Last<TSource>(IEnumerable<TSource>)"}]},{"pos":[734151,734164],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[734226,734227],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[734304,734315],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[734400,734401],"content":"<","needQuote":true,"nodes":[]},{"pos":[734428,734435],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[734500,734501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734624,734640],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[734705,734706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[734783,734794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[734880,734883]},{"pos":[734917,734924],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[734957,734958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[734985,734986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[735371,735430],"content":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,59],"source":"Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[735937,735950],"content":"Last<TSource>","needQuote":true,"nodes":[{"content":"Last&lt;TSource&gt;","pos":[0,13],"source":"Last<TSource>"}]},{"pos":[736012,736013],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736090,736101],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[736186,736187],"content":"<","needQuote":true,"nodes":[]},{"pos":[736214,736221],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736287,736288]},{"pos":[736343,736347],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[736405,736406],"content":"<","needQuote":true,"nodes":[]},{"pos":[736433,736440],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[736474,736475]},{"pos":[736531,736538],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[736631,736632],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[736787,736803],"content":"Last(Of TSource)","needQuote":true,"nodes":[{"content":"Last(Of TSource)","pos":[0,16]}]},{"pos":[736868,736869],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[736946,736957],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[737043,737046]},{"pos":[737080,737087],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[737120,737121],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[737149,737150]},{"pos":[737205,737209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[737268,737271]},{"pos":[737305,737312],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[737346,737347]},{"pos":[737403,737410],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[737471,737472],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737499,737500],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[737945,737989],"content":"LastOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,44],"source":"LastOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[738394,738416],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[738487,738488],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[738565,738576],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[738661,738662],"content":"<","needQuote":true,"nodes":[]},{"pos":[738689,738696],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[738761,738762],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[738894,738919],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[738993,738994],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[739071,739082],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[739168,739171]},{"pos":[739205,739212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[739245,739246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739273,739274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[739695,739763],"content":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,68],"source":"LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[740306,740328],"content":"LastOrDefault<TSource>","needQuote":true,"nodes":[{"content":"LastOrDefault&lt;TSource&gt;","pos":[0,22],"source":"LastOrDefault<TSource>"}]},{"pos":[740399,740400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[740477,740488],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[740573,740574],"content":"<","needQuote":true,"nodes":[]},{"pos":[740601,740608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740674,740675]},{"pos":[740730,740734],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[740792,740793],"content":"<","needQuote":true,"nodes":[]},{"pos":[740820,740827],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[740861,740862]},{"pos":[740918,740925],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[741018,741019],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741183,741208],"content":"LastOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"LastOrDefault(Of TSource)","pos":[0,25]}]},{"pos":[741282,741283],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[741360,741371],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[741457,741460]},{"pos":[741494,741501],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[741534,741535],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[741563,741564]},{"pos":[741619,741623],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[741682,741685]},{"pos":[741719,741726],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[741760,741761]},{"pos":[741817,741824],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[741885,741886],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[741913,741914],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[742382,742422],"content":"LongCount<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,40],"source":"LongCount<TSource>(IEnumerable<TSource>)"}]},{"pos":[742811,742829],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[742896,742897],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[742974,742985],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[743070,743071],"content":"<","needQuote":true,"nodes":[]},{"pos":[743098,743105],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[743170,743171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743299,743320],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[743390,743391],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[743468,743479],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[743565,743568]},{"pos":[743602,743609],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[743642,743643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[743670,743671],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[744076,744140],"content":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[744667,744685],"content":"LongCount<TSource>","needQuote":true,"nodes":[{"content":"LongCount&lt;TSource&gt;","pos":[0,18],"source":"LongCount<TSource>"}]},{"pos":[744752,744753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[744830,744841],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[744926,744927],"content":"<","needQuote":true,"nodes":[]},{"pos":[744954,744961],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745027,745028]},{"pos":[745083,745087],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[745145,745146],"content":"<","needQuote":true,"nodes":[]},{"pos":[745173,745180],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[745214,745215]},{"pos":[745271,745278],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[745371,745372],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[745532,745553],"content":"LongCount(Of TSource)","needQuote":true,"nodes":[{"content":"LongCount(Of TSource)","pos":[0,21]}]},{"pos":[745623,745624],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[745701,745712],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[745798,745801]},{"pos":[745835,745842],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[745875,745876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[745904,745905]},{"pos":[745960,745964],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[746023,746026]},{"pos":[746060,746067],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[746101,746102]},{"pos":[746158,746165],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[746226,746227],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746254,746255],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[746705,746739],"content":"Max<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Max<TSource>(IEnumerable<TSource>)"}]},{"pos":[747104,747116],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[747177,747178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747255,747266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[747351,747352],"content":"<","needQuote":true,"nodes":[]},{"pos":[747379,747386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[747451,747452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747574,747589],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[747653,747654],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[747731,747742],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[747828,747831]},{"pos":[747865,747872],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[747905,747906],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[747933,747934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[748315,748373],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[748876,748888],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[748949,748950],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749027,749038],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[749123,749124],"content":"<","needQuote":true,"nodes":[]},{"pos":[749151,749158],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[749224,749225]},{"pos":[749280,749284],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[749342,749343],"content":"<","needQuote":true,"nodes":[]},{"pos":[749370,749377],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[749411,749412]},{"pos":[749468,749475],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[749568,749569],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[749723,749738],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[749802,749803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[749880,749891],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[749977,749980]},{"pos":[750014,750021],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[750054,750055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[750083,750084]},{"pos":[750139,750143],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[750202,750205]},{"pos":[750239,750246],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[750280,750281]},{"pos":[750337,750344],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[750405,750406],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750433,750434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[750897,750954],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[751453,751465],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[751526,751527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[751604,751615],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[751700,751701],"content":"<","needQuote":true,"nodes":[]},{"pos":[751728,751735],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[751801,751802]},{"pos":[751857,751861],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[751919,751920],"content":"<","needQuote":true,"nodes":[]},{"pos":[751947,751954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[751988,751989]},{"pos":[752044,752050],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[752142,752143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[752296,752311],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[752375,752376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[752453,752464],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[752550,752553]},{"pos":[752587,752594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[752627,752628],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[752656,752657]},{"pos":[752712,752716],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[752775,752778]},{"pos":[752812,752819],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[752853,752854]},{"pos":[752909,752915],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[752975,752976],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753003,753004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[753463,753519],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[754014,754026],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[754087,754088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[754165,754176],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[754261,754262],"content":"<","needQuote":true,"nodes":[]},{"pos":[754289,754296],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[754362,754363]},{"pos":[754418,754422],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[754480,754481],"content":"<","needQuote":true,"nodes":[]},{"pos":[754508,754515],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[754549,754550]},{"pos":[754604,754609],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[754700,754701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[754853,754868],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[754932,754933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[755010,755021],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[755107,755110]},{"pos":[755144,755151],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[755184,755185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[755213,755214]},{"pos":[755269,755273],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[755332,755335]},{"pos":[755369,755376],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[755410,755411]},{"pos":[755465,755470],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[755529,755530],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[755557,755558],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[756014,756070],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[756565,756577],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[756638,756639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[756716,756727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[756812,756813],"content":"<","needQuote":true,"nodes":[]},{"pos":[756840,756847],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[756913,756914]},{"pos":[756969,756973],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[757031,757032],"content":"<","needQuote":true,"nodes":[]},{"pos":[757059,757066],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[757100,757101]},{"pos":[757155,757160],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[757251,757252],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[757404,757419],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[757483,757484],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[757561,757572],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[757658,757661]},{"pos":[757695,757702],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[757735,757736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[757764,757765]},{"pos":[757820,757824],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[757883,757886]},{"pos":[757920,757927],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[757961,757962]},{"pos":[758016,758021],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[758080,758081],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758108,758109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[758584,758652],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[759222,759234],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[759295,759296],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[759373,759384],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[759469,759470],"content":"<","needQuote":true,"nodes":[]},{"pos":[759497,759504],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759570,759571]},{"pos":[759626,759630],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[759688,759689],"content":"<","needQuote":true,"nodes":[]},{"pos":[759716,759723],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[759757,759758]},{"pos":[759817,759825],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[759887,759888],"content":"<","needQuote":true,"nodes":[]},{"pos":[759939,759946],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[760071,760072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[760243,760258],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[760322,760323],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[760400,760411],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[760497,760500]},{"pos":[760534,760541],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[760574,760575],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[760603,760604]},{"pos":[760659,760663],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[760722,760725]},{"pos":[760759,760766],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[760800,760801]},{"pos":[760860,760868],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[760931,760934]},{"pos":[760992,760999],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[761060,761061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761088,761089],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761116,761117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[761637,761704],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[762270,762282],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[762343,762344],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[762421,762432],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[762517,762518],"content":"<","needQuote":true,"nodes":[]},{"pos":[762545,762552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[762618,762619]},{"pos":[762674,762678],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[762736,762737],"content":"<","needQuote":true,"nodes":[]},{"pos":[762764,762771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[762805,762806]},{"pos":[762865,762873],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[762935,762936],"content":"<","needQuote":true,"nodes":[]},{"pos":[762986,762992],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[763116,763117],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[763287,763302],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[763366,763367],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[763444,763455],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[763541,763544]},{"pos":[763578,763585],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[763618,763619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[763647,763648]},{"pos":[763703,763707],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[763766,763769]},{"pos":[763803,763810],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[763844,763845]},{"pos":[763904,763912],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[763975,763978]},{"pos":[764035,764041],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[764101,764102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764129,764130],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764157,764158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[764674,764740],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[765302,765314],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[765375,765376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[765453,765464],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[765549,765550],"content":"<","needQuote":true,"nodes":[]},{"pos":[765577,765584],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765650,765651]},{"pos":[765706,765710],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[765768,765769],"content":"<","needQuote":true,"nodes":[]},{"pos":[765796,765803],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[765837,765838]},{"pos":[765897,765905],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[765967,765968],"content":"<","needQuote":true,"nodes":[]},{"pos":[766017,766022],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[766145,766146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[766315,766330],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[766394,766395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[766472,766483],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[766569,766572]},{"pos":[766606,766613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[766646,766647],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[766675,766676]},{"pos":[766731,766735],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[766794,766797]},{"pos":[766831,766838],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[766872,766873]},{"pos":[766932,766940],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[767003,767006]},{"pos":[767062,767067],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[767126,767127],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767154,767155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767182,767183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[767696,767762],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[768324,768336],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[768397,768398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[768475,768486],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[768571,768572],"content":"<","needQuote":true,"nodes":[]},{"pos":[768599,768606],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768672,768673]},{"pos":[768728,768732],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[768790,768791],"content":"<","needQuote":true,"nodes":[]},{"pos":[768818,768825],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[768859,768860]},{"pos":[768919,768927],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[768989,768990],"content":"<","needQuote":true,"nodes":[]},{"pos":[769039,769044],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[769167,769168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[769337,769352],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[769416,769417],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[769494,769505],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[769591,769594]},{"pos":[769628,769635],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[769668,769669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[769697,769698]},{"pos":[769753,769757],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[769816,769819]},{"pos":[769853,769860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[769894,769895]},{"pos":[769954,769962],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[770025,770028]},{"pos":[770084,770089],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[770148,770149],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770176,770177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770204,770205],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[770719,770786],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[771352,771364],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[771425,771426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[771503,771514],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[771599,771600],"content":"<","needQuote":true,"nodes":[]},{"pos":[771627,771634],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771700,771701]},{"pos":[771756,771760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[771818,771819],"content":"<","needQuote":true,"nodes":[]},{"pos":[771846,771853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[771887,771888]},{"pos":[771947,771955],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[772017,772018],"content":"<","needQuote":true,"nodes":[]},{"pos":[772068,772074],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[772198,772199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[772369,772384],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[772448,772449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[772526,772537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[772623,772626]},{"pos":[772660,772667],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[772700,772701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[772729,772730]},{"pos":[772785,772789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[772848,772851]},{"pos":[772885,772892],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[772926,772927]},{"pos":[772986,772994],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[773057,773060]},{"pos":[773117,773123],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[773183,773184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773211,773212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773239,773240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[773740,773797],"content":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[774296,774308],"content":"Max<TSource>","needQuote":true,"nodes":[{"content":"Max&lt;TSource&gt;","pos":[0,12],"source":"Max<TSource>"}]},{"pos":[774369,774370],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[774447,774458],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[774543,774544],"content":"<","needQuote":true,"nodes":[]},{"pos":[774571,774578],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[774644,774645]},{"pos":[774700,774704],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[774762,774763],"content":"<","needQuote":true,"nodes":[]},{"pos":[774790,774797],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[774831,774832]},{"pos":[774887,774893],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[774985,774986],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775139,775154],"content":"Max(Of TSource)","needQuote":true,"nodes":[{"content":"Max(Of TSource)","pos":[0,15]}]},{"pos":[775218,775219],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[775296,775307],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[775393,775396]},{"pos":[775430,775437],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[775470,775471],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[775499,775500]},{"pos":[775555,775559],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[775618,775621]},{"pos":[775655,775662],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[775696,775697]},{"pos":[775752,775758],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[775818,775819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[775846,775847],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[776297,776364],"content":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[776869,776890],"content":"Max<TSource, TResult>","needQuote":true,"nodes":[{"content":"Max&lt;TSource, TResult&gt;","pos":[0,21],"source":"Max<TSource, TResult>"}]},{"pos":[776960,776961],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777038,777049],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[777134,777135],"content":"<","needQuote":true,"nodes":[]},{"pos":[777162,777169],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777235,777236]},{"pos":[777291,777295],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[777353,777354],"content":"<","needQuote":true,"nodes":[]},{"pos":[777381,777388],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[777422,777423]},{"pos":[777455,777462],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[777527,777528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[777671,777695],"content":"Max(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Max(Of TSource, TResult)","pos":[0,24]}]},{"pos":[777768,777769],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[777846,777857],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[777943,777946]},{"pos":[777980,777987],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[778020,778021],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[778049,778050]},{"pos":[778105,778109],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[778168,778171]},{"pos":[778205,778212],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[778246,778247]},{"pos":[778279,778286],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[778319,778320],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778347,778348],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[778787,778821],"content":"Min<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,34],"source":"Min<TSource>(IEnumerable<TSource>)"}]},{"pos":[779186,779198],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[779259,779260],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779337,779348],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[779433,779434],"content":"<","needQuote":true,"nodes":[]},{"pos":[779461,779468],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[779533,779534],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[779656,779671],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[779735,779736],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[779813,779824],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[779910,779913]},{"pos":[779947,779954],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[779987,779988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780015,780016],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[780397,780455],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[780958,780970],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[781031,781032],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[781109,781120],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[781205,781206],"content":"<","needQuote":true,"nodes":[]},{"pos":[781233,781240],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781306,781307]},{"pos":[781362,781366],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[781424,781425],"content":"<","needQuote":true,"nodes":[]},{"pos":[781452,781459],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[781493,781494]},{"pos":[781550,781557],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[781650,781651],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[781805,781820],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[781884,781885],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[781962,781973],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[782059,782062]},{"pos":[782096,782103],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[782136,782137],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[782165,782166]},{"pos":[782221,782225],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[782284,782287]},{"pos":[782321,782328],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[782362,782363]},{"pos":[782419,782426],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[782487,782488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782515,782516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[782979,783036],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[783535,783547],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[783608,783609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[783686,783697],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[783782,783783],"content":"<","needQuote":true,"nodes":[]},{"pos":[783810,783817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[783883,783884]},{"pos":[783939,783943],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[784001,784002],"content":"<","needQuote":true,"nodes":[]},{"pos":[784029,784036],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784070,784071]},{"pos":[784126,784132],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[784224,784225],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[784378,784393],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[784457,784458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[784535,784546],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[784632,784635]},{"pos":[784669,784676],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[784709,784710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[784738,784739]},{"pos":[784794,784798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[784857,784860]},{"pos":[784894,784901],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[784935,784936]},{"pos":[784991,784997],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[785057,785058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785085,785086],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[785545,785601],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[786096,786108],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[786169,786170],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[786247,786258],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[786343,786344],"content":"<","needQuote":true,"nodes":[]},{"pos":[786371,786378],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786444,786445]},{"pos":[786500,786504],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[786562,786563],"content":"<","needQuote":true,"nodes":[]},{"pos":[786590,786597],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[786631,786632]},{"pos":[786686,786691],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[786782,786783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[786935,786950],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[787014,787015],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[787092,787103],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[787189,787192]},{"pos":[787226,787233],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[787266,787267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[787295,787296]},{"pos":[787351,787355],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[787414,787417]},{"pos":[787451,787458],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[787492,787493]},{"pos":[787547,787552],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[787611,787612],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[787639,787640],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[788096,788152],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[788647,788659],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[788720,788721],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[788798,788809],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[788894,788895],"content":"<","needQuote":true,"nodes":[]},{"pos":[788922,788929],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[788995,788996]},{"pos":[789051,789055],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[789113,789114],"content":"<","needQuote":true,"nodes":[]},{"pos":[789141,789148],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[789182,789183]},{"pos":[789237,789242],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[789333,789334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[789486,789501],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[789565,789566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[789643,789654],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[789740,789743]},{"pos":[789777,789784],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[789817,789818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[789846,789847]},{"pos":[789902,789906],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[789965,789968]},{"pos":[790002,790009],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[790043,790044]},{"pos":[790098,790103],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[790162,790163],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790190,790191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[790666,790734],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[791304,791316],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[791377,791378],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[791455,791466],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[791551,791552],"content":"<","needQuote":true,"nodes":[]},{"pos":[791579,791586],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791652,791653]},{"pos":[791708,791712],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[791770,791771],"content":"<","needQuote":true,"nodes":[]},{"pos":[791798,791805],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[791839,791840]},{"pos":[791899,791907],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[791969,791970],"content":"<","needQuote":true,"nodes":[]},{"pos":[792021,792028],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[792153,792154],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[792325,792340],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[792404,792405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[792482,792493],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[792579,792582]},{"pos":[792616,792623],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[792656,792657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[792685,792686]},{"pos":[792741,792745],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[792804,792807]},{"pos":[792841,792848],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[792882,792883]},{"pos":[792942,792950],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[793013,793016]},{"pos":[793074,793081],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[793142,793143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793170,793171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793198,793199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[793719,793786],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[794352,794364],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[794425,794426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[794503,794514],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[794599,794600],"content":"<","needQuote":true,"nodes":[]},{"pos":[794627,794634],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794700,794701]},{"pos":[794756,794760],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[794818,794819],"content":"<","needQuote":true,"nodes":[]},{"pos":[794846,794853],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[794887,794888]},{"pos":[794947,794955],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[795017,795018],"content":"<","needQuote":true,"nodes":[]},{"pos":[795068,795074],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[795198,795199],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[795369,795384],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[795448,795449],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[795526,795537],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[795623,795626]},{"pos":[795660,795667],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[795700,795701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[795729,795730]},{"pos":[795785,795789],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[795848,795851]},{"pos":[795885,795892],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[795926,795927]},{"pos":[795986,795994],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[796057,796060]},{"pos":[796117,796123],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[796183,796184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796211,796212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796239,796240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[796756,796822],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[797384,797396],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[797457,797458],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[797535,797546],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[797631,797632],"content":"<","needQuote":true,"nodes":[]},{"pos":[797659,797666],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797732,797733]},{"pos":[797788,797792],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[797850,797851],"content":"<","needQuote":true,"nodes":[]},{"pos":[797878,797885],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[797919,797920]},{"pos":[797979,797987],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[798049,798050],"content":"<","needQuote":true,"nodes":[]},{"pos":[798099,798104],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[798227,798228],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[798397,798412],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[798476,798477],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[798554,798565],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[798651,798654]},{"pos":[798688,798695],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[798728,798729],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[798757,798758]},{"pos":[798813,798817],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[798876,798879]},{"pos":[798913,798920],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[798954,798955]},{"pos":[799014,799022],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[799085,799088]},{"pos":[799144,799149],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[799208,799209],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799236,799237],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799264,799265],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[799778,799844],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[800406,800418],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[800479,800480],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[800557,800568],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[800653,800654],"content":"<","needQuote":true,"nodes":[]},{"pos":[800681,800688],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800754,800755]},{"pos":[800810,800814],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[800872,800873],"content":"<","needQuote":true,"nodes":[]},{"pos":[800900,800907],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[800941,800942]},{"pos":[801001,801009],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[801071,801072],"content":"<","needQuote":true,"nodes":[]},{"pos":[801121,801126],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[801249,801250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[801419,801434],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[801498,801499],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[801576,801587],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[801673,801676]},{"pos":[801710,801717],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[801750,801751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[801779,801780]},{"pos":[801835,801839],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[801898,801901]},{"pos":[801935,801942],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[801976,801977]},{"pos":[802036,802044],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[802107,802110]},{"pos":[802166,802171],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[802230,802231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802258,802259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802286,802287],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[802801,802868],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[803434,803446],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[803507,803508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[803585,803596],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[803681,803682],"content":"<","needQuote":true,"nodes":[]},{"pos":[803709,803716],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[803782,803783]},{"pos":[803838,803842],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[803900,803901],"content":"<","needQuote":true,"nodes":[]},{"pos":[803928,803935],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[803969,803970]},{"pos":[804029,804037],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[804099,804100],"content":"<","needQuote":true,"nodes":[]},{"pos":[804150,804156],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[804280,804281],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[804451,804466],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[804530,804531],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[804608,804619],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[804705,804708]},{"pos":[804742,804749],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[804782,804783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[804811,804812]},{"pos":[804867,804871],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[804930,804933]},{"pos":[804967,804974],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[805008,805009]},{"pos":[805068,805076],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[805139,805142]},{"pos":[805199,805205],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[805265,805266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805293,805294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805321,805322],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[805822,805879],"content":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[806378,806390],"content":"Min<TSource>","needQuote":true,"nodes":[{"content":"Min&lt;TSource&gt;","pos":[0,12],"source":"Min<TSource>"}]},{"pos":[806451,806452],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[806529,806540],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[806625,806626],"content":"<","needQuote":true,"nodes":[]},{"pos":[806653,806660],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[806726,806727]},{"pos":[806782,806786],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[806844,806845],"content":"<","needQuote":true,"nodes":[]},{"pos":[806872,806879],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[806913,806914]},{"pos":[806969,806975],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[807067,807068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[807221,807236],"content":"Min(Of TSource)","needQuote":true,"nodes":[{"content":"Min(Of TSource)","pos":[0,15]}]},{"pos":[807300,807301],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[807378,807389],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[807475,807478]},{"pos":[807512,807519],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[807552,807553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[807581,807582]},{"pos":[807637,807641],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[807700,807703]},{"pos":[807737,807744],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[807778,807779]},{"pos":[807834,807840],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[807900,807901],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[807928,807929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[808379,808446],"content":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,67],"source":"Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[808951,808972],"content":"Min<TSource, TResult>","needQuote":true,"nodes":[{"content":"Min&lt;TSource, TResult&gt;","pos":[0,21],"source":"Min<TSource, TResult>"}]},{"pos":[809042,809043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[809120,809131],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[809216,809217],"content":"<","needQuote":true,"nodes":[]},{"pos":[809244,809251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[809317,809318]},{"pos":[809373,809377],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[809435,809436],"content":"<","needQuote":true,"nodes":[]},{"pos":[809463,809470],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[809504,809505]},{"pos":[809537,809544],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[809609,809610],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[809753,809777],"content":"Min(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Min(Of TSource, TResult)","pos":[0,24]}]},{"pos":[809850,809851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[809928,809939],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[810025,810028]},{"pos":[810062,810069],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[810102,810103],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[810131,810132]},{"pos":[810187,810191],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[810250,810253]},{"pos":[810287,810294],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[810328,810329]},{"pos":[810361,810368],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[810401,810402],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810429,810430],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[810859,810887],"content":"OfType<TResult>(IEnumerable)","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;(IEnumerable)","pos":[0,28],"source":"OfType<TResult>(IEnumerable)"}]},{"pos":[811202,811217],"content":"OfType<TResult>","needQuote":true,"nodes":[{"content":"OfType&lt;TResult&gt;","pos":[0,15],"source":"OfType<TResult>"}]},{"pos":[811281,811282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811349,811360],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[811437,811438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[811550,811568],"content":"OfType(Of TResult)","needQuote":true,"nodes":[{"content":"OfType(Of TResult)","pos":[0,18]}]},{"pos":[811635,811636],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[811703,811714],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[811791,811792],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[812141,812206],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,65],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[812709,812731],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[812802,812803],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[812880,812891],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[812976,812977],"content":"<","needQuote":true,"nodes":[]},{"pos":[813004,813011],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813077,813078]},{"pos":[813133,813137],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[813195,813196],"content":"<","needQuote":true,"nodes":[]},{"pos":[813223,813230],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[813264,813265]},{"pos":[813297,813301],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[813363,813364],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[813511,813536],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[813610,813611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[813688,813699],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[813785,813788]},{"pos":[813822,813829],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[813862,813863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[813891,813892]},{"pos":[813947,813951],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[814010,814013]},{"pos":[814047,814054],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[814088,814089]},{"pos":[814121,814125],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[814155,814156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814183,814184],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[814690,814772],"content":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,82],"source":"OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[815428,815450],"content":"OrderBy<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderBy&lt;TSource, TKey&gt;","pos":[0,22],"source":"OrderBy<TSource, TKey>"}]},{"pos":[815521,815522],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[815599,815610],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[815695,815696],"content":"<","needQuote":true,"nodes":[]},{"pos":[815723,815730],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815796,815797]},{"pos":[815852,815856],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[815914,815915],"content":"<","needQuote":true,"nodes":[]},{"pos":[815942,815949],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[815983,815984]},{"pos":[816016,816020],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[816083,816084]},{"pos":[816164,816173],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[816256,816257],"content":"<","needQuote":true,"nodes":[]},{"pos":[816284,816288],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[816350,816351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[816540,816565],"content":"OrderBy(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderBy(Of TSource, TKey)","pos":[0,25]}]},{"pos":[816639,816640],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[816717,816728],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[816814,816817]},{"pos":[816851,816858],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[816891,816892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[816920,816921]},{"pos":[816976,816980],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[817039,817042]},{"pos":[817076,817083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[817117,817118]},{"pos":[817150,817154],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[817184,817185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[817213,817214]},{"pos":[817294,817303],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[817387,817390]},{"pos":[817424,817428],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[817458,817459],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[817486,817487],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[818040,818115],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,75],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[818658,818690],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[818771,818772],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[818849,818860],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[818945,818946],"content":"<","needQuote":true,"nodes":[]},{"pos":[818973,818980],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819046,819047]},{"pos":[819102,819106],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[819164,819165],"content":"<","needQuote":true,"nodes":[]},{"pos":[819192,819199],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[819233,819234]},{"pos":[819266,819270],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[819332,819333],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[819490,819525],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[819609,819610],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[819687,819698],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[819784,819787]},{"pos":[819821,819828],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[819861,819862],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[819890,819891]},{"pos":[819946,819950],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[820009,820012]},{"pos":[820046,820053],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[820087,820088]},{"pos":[820120,820124],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[820154,820155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820182,820183],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[820729,820821],"content":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IComparer&lt;TKey&gt;)","pos":[0,92],"source":"OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)"}]},{"pos":[821517,821549],"content":"OrderByDescending<TSource, TKey>","needQuote":true,"nodes":[{"content":"OrderByDescending&lt;TSource, TKey&gt;","pos":[0,32],"source":"OrderByDescending<TSource, TKey>"}]},{"pos":[821630,821631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[821708,821719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[821804,821805],"content":"<","needQuote":true,"nodes":[]},{"pos":[821832,821839],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[821905,821906]},{"pos":[821961,821965],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[822023,822024],"content":"<","needQuote":true,"nodes":[]},{"pos":[822051,822058],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[822092,822093]},{"pos":[822125,822129],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[822192,822193]},{"pos":[822273,822282],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[822365,822366],"content":"<","needQuote":true,"nodes":[]},{"pos":[822393,822397],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[822459,822460],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[822659,822694],"content":"OrderByDescending(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"OrderByDescending(Of TSource, TKey)","pos":[0,35]}]},{"pos":[822778,822779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[822856,822867],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[822953,822956]},{"pos":[822990,822997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[823030,823031],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823059,823060]},{"pos":[823115,823119],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[823178,823181]},{"pos":[823215,823222],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[823256,823257]},{"pos":[823289,823293],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[823323,823324],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[823352,823353]},{"pos":[823433,823442],"content":"IComparer","needQuote":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"content":"(Of","pos":[823526,823529]},{"pos":[823563,823567],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[823597,823598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[823625,823626],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[824178,824216],"content":"Reverse<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"Reverse<TSource>(IEnumerable<TSource>)"}]},{"pos":[824597,824613],"content":"Reverse<TSource>","needQuote":true,"nodes":[{"content":"Reverse&lt;TSource&gt;","pos":[0,16],"source":"Reverse<TSource>"}]},{"pos":[824678,824679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[824756,824767],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[824852,824853],"content":"<","needQuote":true,"nodes":[]},{"pos":[824880,824887],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[824952,824953],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825079,825098],"content":"Reverse(Of TSource)","needQuote":true,"nodes":[{"content":"Reverse(Of TSource)","pos":[0,19]}]},{"pos":[825166,825167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[825244,825255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[825341,825344]},{"pos":[825378,825385],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[825418,825419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825446,825447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[825832,825902],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TResult&gt;)","pos":[0,70],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)"}]},{"pos":[826419,826443],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[826516,826517],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[826594,826605],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[826690,826691],"content":"<","needQuote":true,"nodes":[]},{"pos":[826718,826725],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826791,826792]},{"pos":[826847,826851],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[826909,826910],"content":"<","needQuote":true,"nodes":[]},{"pos":[826937,826944],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[826978,826979]},{"pos":[827011,827018],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[827083,827084],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827230,827257],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[827333,827334],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[827411,827422],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[827508,827511]},{"pos":[827545,827552],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[827585,827586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[827614,827615]},{"pos":[827670,827674],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[827733,827736]},{"pos":[827770,827777],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[827811,827812]},{"pos":[827844,827851],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[827884,827885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[827912,827913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[828398,828475],"content":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, TResult&gt;)","pos":[0,77],"source":"Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)"}]},{"pos":[829040,829064],"content":"Select<TSource, TResult>","needQuote":true,"nodes":[{"content":"Select&lt;TSource, TResult&gt;","pos":[0,24],"source":"Select<TSource, TResult>"}]},{"pos":[829137,829138],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[829215,829226],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[829311,829312],"content":"<","needQuote":true,"nodes":[]},{"pos":[829339,829346],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829412,829413]},{"pos":[829468,829472],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[829530,829531],"content":"<","needQuote":true,"nodes":[]},{"pos":[829558,829565],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[829599,829600]},{"pos":[829654,829659],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[829719,829720]},{"pos":[829752,829759],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[829824,829825],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[829984,830011],"content":"Select(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"Select(Of TSource, TResult)","pos":[0,27]}]},{"pos":[830087,830088],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[830165,830176],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[830262,830265]},{"pos":[830299,830306],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[830339,830340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[830368,830369]},{"pos":[830424,830428],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[830487,830490]},{"pos":[830524,830531],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[830565,830566]},{"pos":[830620,830625],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[830685,830686]},{"pos":[830718,830725],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[830758,830759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[830786,830787],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[831330,831417],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,87],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)"}]},{"pos":[832089,832117],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[832194,832195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[832272,832283],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[832368,832369],"content":"<","needQuote":true,"nodes":[]},{"pos":[832396,832403],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832469,832470]},{"pos":[832525,832529],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[832587,832588],"content":"<","needQuote":true,"nodes":[]},{"pos":[832615,832622],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[832656,832657]},{"pos":[832739,832750],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[832835,832836],"content":"<","needQuote":true,"nodes":[]},{"pos":[832863,832870],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[832967,832968],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[833158,833189],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[833269,833270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[833347,833358],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[833444,833447]},{"pos":[833481,833488],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[833521,833522],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[833550,833551]},{"pos":[833606,833610],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[833669,833672]},{"pos":[833706,833713],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[833747,833748]},{"pos":[833830,833841],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[833927,833930]},{"pos":[833964,833971],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[834004,834005],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834032,834033],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834060,834061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[834671,834765],"content":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TResult&gt;&gt;)","pos":[0,94],"source":"SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)"}]},{"pos":[835485,835513],"content":"SelectMany<TSource, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TResult&gt;","pos":[0,28],"source":"SelectMany<TSource, TResult>"}]},{"pos":[835590,835591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[835668,835679],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[835764,835765],"content":"<","needQuote":true,"nodes":[]},{"pos":[835792,835799],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[835865,835866]},{"pos":[835921,835925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[835983,835984],"content":"<","needQuote":true,"nodes":[]},{"pos":[836011,836018],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[836052,836053]},{"pos":[836107,836112],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[836172,836173]},{"pos":[836255,836266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[836351,836352],"content":"<","needQuote":true,"nodes":[]},{"pos":[836379,836386],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[836483,836484],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[836687,836718],"content":"SelectMany(Of TSource, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TResult)","pos":[0,31]}]},{"pos":[836798,836799],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[836876,836887],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[836973,836976]},{"pos":[837010,837017],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[837050,837051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[837079,837080]},{"pos":[837135,837139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[837198,837201]},{"pos":[837235,837242],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[837276,837277]},{"pos":[837331,837336],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[837396,837397]},{"pos":[837479,837490],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[837576,837579]},{"pos":[837613,837620],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[837653,837654],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837681,837682],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[837709,837710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[838359,838500],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,141],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[839379,839420],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[839510,839511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[839588,839599],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[839684,839685],"content":"<","needQuote":true,"nodes":[]},{"pos":[839712,839719],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839785,839786]},{"pos":[839841,839845],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[839903,839904],"content":"<","needQuote":true,"nodes":[]},{"pos":[839931,839938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[839972,839973]},{"pos":[840055,840066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[840151,840152],"content":"<","needQuote":true,"nodes":[]},{"pos":[840179,840190],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[840292,840293]},{"pos":[840348,840352],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[840410,840411],"content":"<","needQuote":true,"nodes":[]},{"pos":[840438,840445],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[840479,840480]},{"pos":[840512,840523],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[840561,840562]},{"pos":[840594,840601],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[840666,840667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[840882,840926],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[841019,841020],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[841097,841108],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[841194,841197]},{"pos":[841231,841238],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[841271,841272],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[841300,841301]},{"pos":[841356,841360],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[841419,841422]},{"pos":[841456,841463],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[841497,841498]},{"pos":[841580,841591],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[841677,841680]},{"pos":[841714,841725],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[841762,841763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[841790,841791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[841819,841820]},{"pos":[841875,841879],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[841938,841941]},{"pos":[841975,841982],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[842016,842017]},{"pos":[842049,842060],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[842098,842099]},{"pos":[842131,842138],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[842171,842172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842199,842200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[842971,843119],"content":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, IEnumerable&lt;TCollection&gt;&gt;, Func&lt;TSource, TCollection, TResult&gt;)","pos":[0,148],"source":"SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)"}]},{"pos":[844046,844087],"content":"SelectMany<TSource, TCollection, TResult>","needQuote":true,"nodes":[{"content":"SelectMany&lt;TSource, TCollection, TResult&gt;","pos":[0,41],"source":"SelectMany<TSource, TCollection, TResult>"}]},{"pos":[844177,844178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[844255,844266],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[844351,844352],"content":"<","needQuote":true,"nodes":[]},{"pos":[844379,844386],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[844452,844453]},{"pos":[844508,844512],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[844570,844571],"content":"<","needQuote":true,"nodes":[]},{"pos":[844598,844605],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[844639,844640]},{"pos":[844694,844699],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[844759,844760]},{"pos":[844842,844853],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[844938,844939],"content":"<","needQuote":true,"nodes":[]},{"pos":[844966,844977],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[845079,845080]},{"pos":[845135,845139],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[845197,845198],"content":"<","needQuote":true,"nodes":[]},{"pos":[845225,845232],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[845266,845267]},{"pos":[845299,845310],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[845348,845349]},{"pos":[845381,845388],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[845453,845454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[845682,845726],"content":"SelectMany(Of TSource, TCollection, TResult)","needQuote":true,"nodes":[{"content":"SelectMany(Of TSource, TCollection, TResult)","pos":[0,44]}]},{"pos":[845819,845820],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[845897,845908],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[845994,845997]},{"pos":[846031,846038],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[846071,846072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846100,846101]},{"pos":[846156,846160],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[846219,846222]},{"pos":[846256,846263],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[846297,846298]},{"pos":[846352,846357],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[846417,846418]},{"pos":[846500,846511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[846597,846600]},{"pos":[846634,846645],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"pos":[846682,846683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[846710,846711],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[846739,846740]},{"pos":[846795,846799],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[846858,846861]},{"pos":[846895,846902],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[846936,846937]},{"pos":[846969,846980],"content":"TCollection","needQuote":true,"nodes":[{"content":"TCollection","pos":[0,11]}]},{"content":",","pos":[847018,847019]},{"pos":[847051,847058],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[847091,847092],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847119,847120],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[847866,847932],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,66],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[848507,848529],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[848600,848601],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[848678,848689],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[848774,848775],"content":"<","needQuote":true,"nodes":[]},{"pos":[848802,848809],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[848875,848876]},{"pos":[848958,848969],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[849054,849055],"content":"<","needQuote":true,"nodes":[]},{"pos":[849082,849089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849154,849155],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849331,849356],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[849430,849431],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[849508,849519],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[849605,849608]},{"pos":[849642,849649],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849682,849683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[849711,849712]},{"pos":[849794,849805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[849891,849894]},{"pos":[849928,849935],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[849968,849969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[849996,849997],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[850571,850665],"content":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,94],"source":"SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[851434,851456],"content":"SequenceEqual<TSource>","needQuote":true,"nodes":[{"content":"SequenceEqual&lt;TSource&gt;","pos":[0,22],"source":"SequenceEqual<TSource>"}]},{"pos":[851527,851528],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[851605,851616],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[851701,851702],"content":"<","needQuote":true,"nodes":[]},{"pos":[851729,851736],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[851802,851803]},{"pos":[851885,851896],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[851981,851982],"content":"<","needQuote":true,"nodes":[]},{"pos":[852009,852016],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[852082,852083]},{"pos":[852171,852188],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[852279,852280],"content":"<","needQuote":true,"nodes":[]},{"pos":[852307,852314],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[852379,852380],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[852606,852631],"content":"SequenceEqual(Of TSource)","needQuote":true,"nodes":[{"content":"SequenceEqual(Of TSource)","pos":[0,25]}]},{"pos":[852705,852706],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[852783,852794],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[852880,852883]},{"pos":[852917,852924],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[852957,852958],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[852986,852987]},{"pos":[853069,853080],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[853166,853169]},{"pos":[853203,853210],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[853243,853244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[853272,853273]},{"pos":[853361,853378],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[853470,853473]},{"pos":[853507,853514],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[853547,853548],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[853575,853576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[854158,854195],"content":"Single<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"Single<TSource>(IEnumerable<TSource>)"}]},{"pos":[854572,854587],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[854651,854652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[854729,854740],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[854825,854826],"content":"<","needQuote":true,"nodes":[]},{"pos":[854853,854860],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[854925,854926],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855051,855069],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[855136,855137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[855214,855225],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[855311,855314]},{"pos":[855348,855355],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[855388,855389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855416,855417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[855810,855871],"content":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,61],"source":"Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[856386,856401],"content":"Single<TSource>","needQuote":true,"nodes":[{"content":"Single&lt;TSource&gt;","pos":[0,15],"source":"Single<TSource>"}]},{"pos":[856465,856466],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[856543,856554],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[856639,856640],"content":"<","needQuote":true,"nodes":[]},{"pos":[856667,856674],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[856740,856741]},{"pos":[856796,856800],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[856858,856859],"content":"<","needQuote":true,"nodes":[]},{"pos":[856886,856893],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[856927,856928]},{"pos":[856984,856991],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[857084,857085],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[857242,857260],"content":"Single(Of TSource)","needQuote":true,"nodes":[{"content":"Single(Of TSource)","pos":[0,18]}]},{"pos":[857327,857328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[857405,857416],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[857502,857505]},{"pos":[857539,857546],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[857579,857580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[857608,857609]},{"pos":[857664,857668],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[857727,857730]},{"pos":[857764,857771],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[857805,857806]},{"pos":[857862,857869],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[857930,857931],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[857958,857959],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[858412,858458],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,46],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>)"}]},{"pos":[858871,858895],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[858968,858969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[859046,859057],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[859142,859143],"content":"<","needQuote":true,"nodes":[]},{"pos":[859170,859177],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[859242,859243],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859377,859404],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[859480,859481],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[859558,859569],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[859655,859658]},{"pos":[859692,859699],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[859732,859733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[859760,859761],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[860190,860260],"content":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,70],"source":"SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[860811,860835],"content":"SingleOrDefault<TSource>","needQuote":true,"nodes":[{"content":"SingleOrDefault&lt;TSource&gt;","pos":[0,24],"source":"SingleOrDefault<TSource>"}]},{"pos":[860908,860909],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[860986,860997],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[861082,861083],"content":"<","needQuote":true,"nodes":[]},{"pos":[861110,861117],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[861183,861184]},{"pos":[861239,861243],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[861301,861302],"content":"<","needQuote":true,"nodes":[]},{"pos":[861329,861336],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[861370,861371]},{"pos":[861427,861434],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[861527,861528],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[861694,861721],"content":"SingleOrDefault(Of TSource)","needQuote":true,"nodes":[{"content":"SingleOrDefault(Of TSource)","pos":[0,27]}]},{"pos":[861797,861798],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[861875,861886],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[861972,861975]},{"pos":[862009,862016],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[862049,862050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[862078,862079]},{"pos":[862134,862138],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[862197,862200]},{"pos":[862234,862241],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[862275,862276]},{"pos":[862332,862339],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[862400,862401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862428,862429],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[862911,862953],"content":"Skip<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Skip<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[863370,863383],"content":"Skip<TSource>","needQuote":true,"nodes":[{"content":"Skip&lt;TSource&gt;","pos":[0,13],"source":"Skip<TSource>"}]},{"pos":[863445,863446],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[863523,863534],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[863619,863620],"content":"<","needQuote":true,"nodes":[]},{"pos":[863647,863654],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[863720,863721]},{"pos":[863775,863780],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[863839,863840],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[863976,863992],"content":"Skip(Of TSource)","needQuote":true,"nodes":[{"content":"Skip(Of TSource)","pos":[0,16]}]},{"pos":[864057,864058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[864135,864146],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[864232,864235]},{"pos":[864269,864276],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[864309,864310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[864338,864339]},{"pos":[864393,864398],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[864457,864458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[864875,864939],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[865466,865484],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[865551,865552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[865629,865640],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[865725,865726],"content":"<","needQuote":true,"nodes":[]},{"pos":[865753,865760],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[865826,865827]},{"pos":[865882,865886],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[865944,865945],"content":"<","needQuote":true,"nodes":[]},{"pos":[865972,865979],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[866013,866014]},{"pos":[866070,866077],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[866170,866171],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[866331,866352],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[866422,866423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[866500,866511],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[866597,866600]},{"pos":[866634,866641],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[866674,866675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[866703,866704]},{"pos":[866759,866763],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[866822,866825]},{"pos":[866859,866866],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[866900,866901]},{"pos":[866957,866964],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[867025,867026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867053,867054],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[867555,867626],"content":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[868201,868219],"content":"SkipWhile<TSource>","needQuote":true,"nodes":[{"content":"SkipWhile&lt;TSource&gt;","pos":[0,18],"source":"SkipWhile<TSource>"}]},{"pos":[868286,868287],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[868364,868375],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[868460,868461],"content":"<","needQuote":true,"nodes":[]},{"pos":[868488,868495],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[868561,868562]},{"pos":[868617,868621],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[868679,868680],"content":"<","needQuote":true,"nodes":[]},{"pos":[868707,868714],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[868748,868749]},{"pos":[868803,868808],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[868868,868869]},{"pos":[868925,868932],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[869025,869026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[869199,869220],"content":"SkipWhile(Of TSource)","needQuote":true,"nodes":[{"content":"SkipWhile(Of TSource)","pos":[0,21]}]},{"pos":[869290,869291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[869368,869379],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[869465,869468]},{"pos":[869502,869509],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[869542,869543],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[869571,869572]},{"pos":[869627,869631],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[869690,869693]},{"pos":[869727,869734],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[869768,869769]},{"pos":[869823,869828],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[869888,869889]},{"pos":[869945,869952],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[870013,870014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870041,870042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[870551,870609],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Decimal&gt;)","pos":[0,58],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)"}]},{"pos":[871112,871124],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[871185,871186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[871263,871274],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[871359,871360],"content":"<","needQuote":true,"nodes":[]},{"pos":[871387,871394],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[871460,871461]},{"pos":[871516,871520],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[871578,871579],"content":"<","needQuote":true,"nodes":[]},{"pos":[871606,871613],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[871647,871648]},{"pos":[871704,871711],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[871804,871805],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[871959,871974],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[872038,872039],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[872116,872127],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[872213,872216]},{"pos":[872250,872257],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[872290,872291],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[872319,872320]},{"pos":[872375,872379],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[872438,872441]},{"pos":[872475,872482],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[872516,872517]},{"pos":[872573,872580],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[872641,872642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[872669,872670],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[873133,873190],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Double&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)"}]},{"pos":[873689,873701],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[873762,873763],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[873840,873851],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[873936,873937],"content":"<","needQuote":true,"nodes":[]},{"pos":[873964,873971],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[874037,874038]},{"pos":[874093,874097],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[874155,874156],"content":"<","needQuote":true,"nodes":[]},{"pos":[874183,874190],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[874224,874225]},{"pos":[874280,874286],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[874378,874379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[874532,874547],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[874611,874612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[874689,874700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[874786,874789]},{"pos":[874823,874830],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[874863,874864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[874892,874893]},{"pos":[874948,874952],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[875011,875014]},{"pos":[875048,875055],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[875089,875090]},{"pos":[875145,875151],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[875211,875212],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875239,875240],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[875699,875755],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)"}]},{"pos":[876250,876262],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[876323,876324],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[876401,876412],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[876497,876498],"content":"<","needQuote":true,"nodes":[]},{"pos":[876525,876532],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[876598,876599]},{"pos":[876654,876658],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[876716,876717],"content":"<","needQuote":true,"nodes":[]},{"pos":[876744,876751],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[876785,876786]},{"pos":[876840,876845],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[876936,876937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877089,877104],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[877168,877169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[877246,877257],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[877343,877346]},{"pos":[877380,877387],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[877420,877421],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[877449,877450]},{"pos":[877505,877509],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[877568,877571]},{"pos":[877605,877612],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[877646,877647]},{"pos":[877701,877706],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[877765,877766],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[877793,877794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[878250,878306],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int64&gt;)","pos":[0,56],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)"}]},{"pos":[878801,878813],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[878874,878875],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[878952,878963],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[879048,879049],"content":"<","needQuote":true,"nodes":[]},{"pos":[879076,879083],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[879149,879150]},{"pos":[879205,879209],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[879267,879268],"content":"<","needQuote":true,"nodes":[]},{"pos":[879295,879302],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[879336,879337]},{"pos":[879391,879396],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[879487,879488],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[879640,879655],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[879719,879720],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[879797,879808],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[879894,879897]},{"pos":[879931,879938],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[879971,879972],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[880000,880001]},{"pos":[880056,880060],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[880119,880122]},{"pos":[880156,880163],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[880197,880198]},{"pos":[880252,880257],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[880316,880317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880344,880345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[880820,880888],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Decimal&gt;&gt;)","pos":[0,68],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)"}]},{"pos":[881458,881470],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[881531,881532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[881609,881620],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[881705,881706],"content":"<","needQuote":true,"nodes":[]},{"pos":[881733,881740],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[881806,881807]},{"pos":[881862,881866],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[881924,881925],"content":"<","needQuote":true,"nodes":[]},{"pos":[881952,881959],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[881993,881994]},{"pos":[882053,882061],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[882123,882124],"content":"<","needQuote":true,"nodes":[]},{"pos":[882175,882182],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[882307,882308],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[882479,882494],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[882558,882559],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[882636,882647],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[882733,882736]},{"pos":[882770,882777],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[882810,882811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[882839,882840]},{"pos":[882895,882899],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[882958,882961]},{"pos":[882995,883002],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[883036,883037]},{"pos":[883096,883104],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[883167,883170]},{"pos":[883228,883235],"content":"Decimal","needQuote":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[883296,883297],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883324,883325],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883352,883353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[883873,883940],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Double&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)"}]},{"pos":[884506,884518],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[884579,884580],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[884657,884668],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[884753,884754],"content":"<","needQuote":true,"nodes":[]},{"pos":[884781,884788],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[884854,884855]},{"pos":[884910,884914],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[884972,884973],"content":"<","needQuote":true,"nodes":[]},{"pos":[885000,885007],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[885041,885042]},{"pos":[885101,885109],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[885171,885172],"content":"<","needQuote":true,"nodes":[]},{"pos":[885222,885228],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[885352,885353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[885523,885538],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[885602,885603],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[885680,885691],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[885777,885780]},{"pos":[885814,885821],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[885854,885855],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[885883,885884]},{"pos":[885939,885943],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[886002,886005]},{"pos":[886039,886046],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[886080,886081]},{"pos":[886140,886148],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[886211,886214]},{"pos":[886271,886277],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[886337,886338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886365,886366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886393,886394],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[886910,886976],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int32&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)"}]},{"pos":[887538,887550],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[887611,887612],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[887689,887700],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[887785,887786],"content":"<","needQuote":true,"nodes":[]},{"pos":[887813,887820],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[887886,887887]},{"pos":[887942,887946],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[888004,888005],"content":"<","needQuote":true,"nodes":[]},{"pos":[888032,888039],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[888073,888074]},{"pos":[888133,888141],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[888203,888204],"content":"<","needQuote":true,"nodes":[]},{"pos":[888253,888258],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[888381,888382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[888551,888566],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[888630,888631],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[888708,888719],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[888805,888808]},{"pos":[888842,888849],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[888882,888883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[888911,888912]},{"pos":[888967,888971],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[889030,889033]},{"pos":[889067,889074],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[889108,889109]},{"pos":[889168,889176],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[889239,889242]},{"pos":[889298,889303],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[889362,889363],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889390,889391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889418,889419],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[889932,889998],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Int64&gt;&gt;)","pos":[0,66],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)"}]},{"pos":[890560,890572],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[890633,890634],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[890711,890722],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[890807,890808],"content":"<","needQuote":true,"nodes":[]},{"pos":[890835,890842],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[890908,890909]},{"pos":[890964,890968],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[891026,891027],"content":"<","needQuote":true,"nodes":[]},{"pos":[891054,891061],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[891095,891096]},{"pos":[891155,891163],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[891225,891226],"content":"<","needQuote":true,"nodes":[]},{"pos":[891275,891280],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[891403,891404],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[891573,891588],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[891652,891653],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[891730,891741],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[891827,891830]},{"pos":[891864,891871],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[891904,891905],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[891933,891934]},{"pos":[891989,891993],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[892052,892055]},{"pos":[892089,892096],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[892130,892131]},{"pos":[892190,892198],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[892261,892264]},{"pos":[892320,892325],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[892384,892385],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[892412,892413],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[892440,892441],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[892955,893022],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Nullable&lt;Single&gt;&gt;)","pos":[0,67],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)"}]},{"pos":[893588,893600],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[893661,893662],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[893739,893750],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[893835,893836],"content":"<","needQuote":true,"nodes":[]},{"pos":[893863,893870],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[893936,893937]},{"pos":[893992,893996],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[894054,894055],"content":"<","needQuote":true,"nodes":[]},{"pos":[894082,894089],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[894123,894124]},{"pos":[894183,894191],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[894253,894254],"content":"<","needQuote":true,"nodes":[]},{"pos":[894304,894310],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[894434,894435],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[894605,894620],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[894684,894685],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[894762,894773],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[894859,894862]},{"pos":[894896,894903],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[894936,894937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[894965,894966]},{"pos":[895021,895025],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[895084,895087]},{"pos":[895121,895128],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[895162,895163]},{"pos":[895222,895230],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[895293,895296]},{"pos":[895353,895359],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[895419,895420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895447,895448],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895475,895476],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[895976,896033],"content":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Single&gt;)","pos":[0,57],"source":"Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)"}]},{"pos":[896532,896544],"content":"Sum<TSource>","needQuote":true,"nodes":[{"content":"Sum&lt;TSource&gt;","pos":[0,12],"source":"Sum<TSource>"}]},{"pos":[896605,896606],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[896683,896694],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[896779,896780],"content":"<","needQuote":true,"nodes":[]},{"pos":[896807,896814],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[896880,896881]},{"pos":[896936,896940],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[896998,896999],"content":"<","needQuote":true,"nodes":[]},{"pos":[897026,897033],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[897067,897068]},{"pos":[897123,897129],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[897221,897222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[897375,897390],"content":"Sum(Of TSource)","needQuote":true,"nodes":[{"content":"Sum(Of TSource)","pos":[0,15]}]},{"pos":[897454,897455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[897532,897543],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[897629,897632]},{"pos":[897666,897673],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[897706,897707],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[897735,897736]},{"pos":[897791,897795],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[897854,897857]},{"pos":[897891,897898],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[897932,897933]},{"pos":[897988,897994],"content":"Single","needQuote":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[898054,898055],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[898082,898083],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[898526,898568],"content":"Take<TSource>(IEnumerable<TSource>, Int32)","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Int32)","pos":[0,42],"source":"Take<TSource>(IEnumerable<TSource>, Int32)"}]},{"pos":[898985,898998],"content":"Take<TSource>","needQuote":true,"nodes":[{"content":"Take&lt;TSource&gt;","pos":[0,13],"source":"Take<TSource>"}]},{"pos":[899060,899061],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[899138,899149],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[899234,899235],"content":"<","needQuote":true,"nodes":[]},{"pos":[899262,899269],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[899335,899336]},{"pos":[899390,899395],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[899454,899455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[899591,899607],"content":"Take(Of TSource)","needQuote":true,"nodes":[{"content":"Take(Of TSource)","pos":[0,16]}]},{"pos":[899672,899673],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[899750,899761],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[899847,899850]},{"pos":[899884,899891],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[899924,899925],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[899953,899954]},{"pos":[900008,900013],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[900072,900073],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[900490,900554],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,64],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[901081,901099],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[901166,901167],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[901244,901255],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[901340,901341],"content":"<","needQuote":true,"nodes":[]},{"pos":[901368,901375],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[901441,901442]},{"pos":[901497,901501],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[901559,901560],"content":"<","needQuote":true,"nodes":[]},{"pos":[901587,901594],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[901628,901629]},{"pos":[901685,901692],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[901785,901786],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[901946,901967],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[902037,902038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[902115,902126],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[902212,902215]},{"pos":[902249,902256],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[902289,902290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[902318,902319]},{"pos":[902374,902378],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[902437,902440]},{"pos":[902474,902481],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[902515,902516]},{"pos":[902572,902579],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[902640,902641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[902668,902669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[903170,903241],"content":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,71],"source":"TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[903816,903834],"content":"TakeWhile<TSource>","needQuote":true,"nodes":[{"content":"TakeWhile&lt;TSource&gt;","pos":[0,18],"source":"TakeWhile<TSource>"}]},{"pos":[903901,903902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[903979,903990],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[904075,904076],"content":"<","needQuote":true,"nodes":[]},{"pos":[904103,904110],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[904176,904177]},{"pos":[904232,904236],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[904294,904295],"content":"<","needQuote":true,"nodes":[]},{"pos":[904322,904329],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[904363,904364]},{"pos":[904418,904423],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[904483,904484]},{"pos":[904540,904547],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[904640,904641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[904814,904835],"content":"TakeWhile(Of TSource)","needQuote":true,"nodes":[{"content":"TakeWhile(Of TSource)","pos":[0,21]}]},{"pos":[904905,904906],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[904983,904994],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[905080,905083]},{"pos":[905117,905124],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[905157,905158],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[905186,905187]},{"pos":[905242,905246],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[905305,905308]},{"pos":[905342,905349],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[905383,905384]},{"pos":[905438,905443],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[905503,905504]},{"pos":[905560,905567],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[905628,905629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[905656,905657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[906138,906176],"content":"ToArray<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,38],"source":"ToArray<TSource>(IEnumerable<TSource>)"}]},{"pos":[906557,906573],"content":"ToArray<TSource>","needQuote":true,"nodes":[{"content":"ToArray&lt;TSource&gt;","pos":[0,16],"source":"ToArray<TSource>"}]},{"pos":[906638,906639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[906716,906727],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[906812,906813],"content":"<","needQuote":true,"nodes":[]},{"pos":[906840,906847],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[906912,906913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[907039,907058],"content":"ToArray(Of TSource)","needQuote":true,"nodes":[{"content":"ToArray(Of TSource)","pos":[0,19]}]},{"pos":[907126,907127],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[907204,907215],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[907301,907304]},{"pos":[907338,907345],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[907378,907379],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[907406,907407],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[907798,907868],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,70],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[908391,908418],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[908494,908495],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[908572,908583],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[908668,908669],"content":"<","needQuote":true,"nodes":[]},{"pos":[908696,908703],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[908769,908770]},{"pos":[908825,908829],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[908887,908888],"content":"<","needQuote":true,"nodes":[]},{"pos":[908915,908922],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[908956,908957]},{"pos":[908989,908993],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[909055,909056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[909208,909238],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[909317,909318],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[909395,909406],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[909492,909495]},{"pos":[909529,909536],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[909569,909570],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[909598,909599]},{"pos":[909654,909658],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[909717,909720]},{"pos":[909754,909761],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[909795,909796]},{"pos":[909828,909832],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[909862,909863],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[909890,909891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[910425,910520],"content":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,95],"source":"ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[911228,911255],"content":"ToDictionary<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey&gt;","pos":[0,27],"source":"ToDictionary<TSource, TKey>"}]},{"pos":[911331,911332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[911409,911420],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[911505,911506],"content":"<","needQuote":true,"nodes":[]},{"pos":[911533,911540],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[911606,911607]},{"pos":[911662,911666],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[911724,911725],"content":"<","needQuote":true,"nodes":[]},{"pos":[911752,911759],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[911793,911794]},{"pos":[911826,911830],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[911893,911894]},{"pos":[911982,911999],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[912090,912091],"content":"<","needQuote":true,"nodes":[]},{"pos":[912118,912122],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[912184,912185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[912387,912417],"content":"ToDictionary(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey)","pos":[0,30]}]},{"pos":[912496,912497],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[912574,912585],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[912671,912674]},{"pos":[912708,912715],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[912748,912749],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[912777,912778]},{"pos":[912833,912837],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[912896,912899]},{"pos":[912933,912940],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[912974,912975]},{"pos":[913007,913011],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[913041,913042],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[913070,913071]},{"pos":[913159,913176],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[913268,913271]},{"pos":[913305,913309],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[913339,913340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[913367,913368],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[913976,914081],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,105],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[914750,914787],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[914873,914874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[914951,914962],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[915047,915048],"content":"<","needQuote":true,"nodes":[]},{"pos":[915075,915082],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915148,915149]},{"pos":[915204,915208],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[915266,915267],"content":"<","needQuote":true,"nodes":[]},{"pos":[915294,915301],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915335,915336]},{"pos":[915368,915372],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[915435,915436]},{"pos":[915491,915495],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[915553,915554],"content":"<","needQuote":true,"nodes":[]},{"pos":[915581,915588],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[915622,915623]},{"pos":[915655,915663],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[915729,915730],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[915903,915943],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[916032,916033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[916110,916121],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[916207,916210]},{"pos":[916244,916251],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[916284,916285],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[916313,916314]},{"pos":[916369,916373],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[916432,916435]},{"pos":[916469,916476],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[916510,916511]},{"pos":[916543,916547],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[916577,916578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[916606,916607]},{"pos":[916662,916666],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[916725,916728]},{"pos":[916762,916769],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[916803,916804]},{"pos":[916836,916844],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[916878,916879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[916906,916907],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[917556,917686],"content":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,130],"source":"ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[918540,918577],"content":"ToDictionary<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToDictionary&lt;TSource, TKey, TElement&gt;","pos":[0,37],"source":"ToDictionary<TSource, TKey, TElement>"}]},{"pos":[918663,918664],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[918741,918752],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[918837,918838],"content":"<","needQuote":true,"nodes":[]},{"pos":[918865,918872],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[918938,918939]},{"pos":[918994,918998],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[919056,919057],"content":"<","needQuote":true,"nodes":[]},{"pos":[919084,919091],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[919125,919126]},{"pos":[919158,919162],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[919225,919226]},{"pos":[919281,919285],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[919343,919344],"content":"<","needQuote":true,"nodes":[]},{"pos":[919371,919378],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[919412,919413]},{"pos":[919445,919453],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[919520,919521]},{"pos":[919609,919626],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[919717,919718],"content":"<","needQuote":true,"nodes":[]},{"pos":[919745,919749],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[919811,919812],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[920035,920075],"content":"ToDictionary(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToDictionary(Of TSource, TKey, TElement)","pos":[0,40]}]},{"pos":[920164,920165],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[920242,920253],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[920339,920342]},{"pos":[920376,920383],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[920416,920417],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[920445,920446]},{"pos":[920501,920505],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[920564,920567]},{"pos":[920601,920608],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920642,920643]},{"pos":[920675,920679],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[920709,920710],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[920738,920739]},{"pos":[920794,920798],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[920857,920860]},{"pos":[920894,920901],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[920935,920936]},{"pos":[920968,920976],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[921010,921011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[921039,921040]},{"pos":[921128,921145],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[921237,921240]},{"pos":[921274,921278],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[921308,921309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[921336,921337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[921991,922028],"content":"ToList<TSource>(IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;(IEnumerable&lt;TSource&gt;)","pos":[0,37],"source":"ToList<TSource>(IEnumerable<TSource>)"}]},{"pos":[922405,922420],"content":"ToList<TSource>","needQuote":true,"nodes":[{"content":"ToList&lt;TSource&gt;","pos":[0,15],"source":"ToList<TSource>"}]},{"pos":[922484,922485],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[922562,922573],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[922658,922659],"content":"<","needQuote":true,"nodes":[]},{"pos":[922686,922693],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[922758,922759],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[922884,922902],"content":"ToList(Of TSource)","needQuote":true,"nodes":[{"content":"ToList(Of TSource)","pos":[0,18]}]},{"pos":[922969,922970],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[923047,923058],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[923144,923147]},{"pos":[923181,923188],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[923221,923222],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[923249,923250],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[923634,923700],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;)","pos":[0,66],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)"}]},{"pos":[924207,924230],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[924302,924303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[924380,924391],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[924476,924477],"content":"<","needQuote":true,"nodes":[]},{"pos":[924504,924511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[924577,924578]},{"pos":[924633,924637],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[924695,924696],"content":"<","needQuote":true,"nodes":[]},{"pos":[924723,924730],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[924764,924765]},{"pos":[924797,924801],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[924863,924864],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925012,925038],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[925113,925114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[925191,925202],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[925288,925291]},{"pos":[925325,925332],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[925365,925366],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[925394,925395]},{"pos":[925450,925454],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[925513,925516]},{"pos":[925550,925557],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[925591,925592]},{"pos":[925624,925628],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[925658,925659],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[925686,925687],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[926205,926296],"content":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,91],"source":"ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)"}]},{"pos":[926988,927011],"content":"ToLookup<TSource, TKey>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey&gt;","pos":[0,23],"source":"ToLookup<TSource, TKey>"}]},{"pos":[927083,927084],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[927161,927172],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[927257,927258],"content":"<","needQuote":true,"nodes":[]},{"pos":[927285,927292],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[927358,927359]},{"pos":[927414,927418],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[927476,927477],"content":"<","needQuote":true,"nodes":[]},{"pos":[927504,927511],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[927545,927546]},{"pos":[927578,927582],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[927645,927646]},{"pos":[927734,927751],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[927842,927843],"content":"<","needQuote":true,"nodes":[]},{"pos":[927870,927874],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[927936,927937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[928135,928161],"content":"ToLookup(Of TSource, TKey)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey)","pos":[0,26]}]},{"pos":[928236,928237],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[928314,928325],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[928411,928414]},{"pos":[928448,928455],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[928488,928489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[928517,928518]},{"pos":[928573,928577],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[928636,928639]},{"pos":[928673,928680],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[928714,928715]},{"pos":[928747,928751],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[928781,928782],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[928810,928811]},{"pos":[928899,928916],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[929008,929011]},{"pos":[929045,929049],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[929079,929080],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[929107,929108],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[929700,929801],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;)","pos":[0,101],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)"}]},{"pos":[930454,930487],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[930569,930570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[930647,930658],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[930743,930744],"content":"<","needQuote":true,"nodes":[]},{"pos":[930771,930778],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[930844,930845]},{"pos":[930900,930904],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[930962,930963],"content":"<","needQuote":true,"nodes":[]},{"pos":[930990,930997],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[931031,931032]},{"pos":[931064,931068],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[931131,931132]},{"pos":[931187,931191],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[931249,931250],"content":"<","needQuote":true,"nodes":[]},{"pos":[931277,931284],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[931318,931319]},{"pos":[931351,931359],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[931425,931426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[931595,931631],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[931716,931717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[931794,931805],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[931891,931894]},{"pos":[931928,931935],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[931968,931969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[931997,931998]},{"pos":[932053,932057],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[932116,932119]},{"pos":[932153,932160],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[932194,932195]},{"pos":[932227,932231],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[932261,932262],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[932290,932291]},{"pos":[932346,932350],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[932409,932412]},{"pos":[932446,932453],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[932487,932488]},{"pos":[932520,932528],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[932562,932563],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[932590,932591],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[933224,933350],"content":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, TKey&gt;, Func&lt;TSource, TElement&gt;, IEqualityComparer&lt;TKey&gt;)","pos":[0,126],"source":"ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)"}]},{"pos":[934188,934221],"content":"ToLookup<TSource, TKey, TElement>","needQuote":true,"nodes":[{"content":"ToLookup&lt;TSource, TKey, TElement&gt;","pos":[0,33],"source":"ToLookup<TSource, TKey, TElement>"}]},{"pos":[934303,934304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[934381,934392],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[934477,934478],"content":"<","needQuote":true,"nodes":[]},{"pos":[934505,934512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[934578,934579]},{"pos":[934634,934638],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[934696,934697],"content":"<","needQuote":true,"nodes":[]},{"pos":[934724,934731],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[934765,934766]},{"pos":[934798,934802],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[934865,934866]},{"pos":[934921,934925],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[934983,934984],"content":"<","needQuote":true,"nodes":[]},{"pos":[935011,935018],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[935052,935053]},{"pos":[935085,935093],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"content":",","pos":[935160,935161]},{"pos":[935249,935266],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[935357,935358],"content":"<","needQuote":true,"nodes":[]},{"pos":[935385,935389],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[935451,935452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[935671,935707],"content":"ToLookup(Of TSource, TKey, TElement)","needQuote":true,"nodes":[{"content":"ToLookup(Of TSource, TKey, TElement)","pos":[0,36]}]},{"pos":[935792,935793],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[935870,935881],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[935967,935970]},{"pos":[936004,936011],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[936044,936045],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[936073,936074]},{"pos":[936129,936133],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[936192,936195]},{"pos":[936229,936236],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[936270,936271]},{"pos":[936303,936307],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[936337,936338],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[936366,936367]},{"pos":[936422,936426],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[936485,936488]},{"pos":[936522,936529],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[936563,936564]},{"pos":[936596,936604],"content":"TElement","needQuote":true,"nodes":[{"content":"TElement","pos":[0,8]}]},{"pos":[936638,936639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[936667,936668]},{"pos":[936756,936773],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[936865,936868]},{"pos":[936902,936906],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[936936,936937],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[936964,936965],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[937650,937708],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;)","pos":[0,58],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)"}]},{"pos":[938251,938265],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[938328,938329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[938406,938417],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[938502,938503],"content":"<","needQuote":true,"nodes":[]},{"pos":[938530,938537],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[938603,938604]},{"pos":[938686,938697],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[938782,938783],"content":"<","needQuote":true,"nodes":[]},{"pos":[938810,938817],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[938882,938883],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[939051,939068],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[939134,939135],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[939212,939223],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[939309,939312]},{"pos":[939346,939353],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[939386,939387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[939415,939416]},{"pos":[939498,939509],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[939595,939598]},{"pos":[939632,939639],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[939672,939673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[939700,939701],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[940243,940329],"content":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, IEnumerable&lt;TSource&gt;, IEqualityComparer&lt;TSource&gt;)","pos":[0,86],"source":"Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)"}]},{"pos":[941066,941080],"content":"Union<TSource>","needQuote":true,"nodes":[{"content":"Union&lt;TSource&gt;","pos":[0,14],"source":"Union<TSource>"}]},{"pos":[941143,941144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[941221,941232],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[941317,941318],"content":"<","needQuote":true,"nodes":[]},{"pos":[941345,941352],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[941418,941419]},{"pos":[941501,941512],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[941597,941598],"content":"<","needQuote":true,"nodes":[]},{"pos":[941625,941632],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[941698,941699]},{"pos":[941787,941804],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[941895,941896],"content":"<","needQuote":true,"nodes":[]},{"pos":[941923,941930],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[941995,941996],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[942214,942231],"content":"Union(Of TSource)","needQuote":true,"nodes":[{"content":"Union(Of TSource)","pos":[0,17]}]},{"pos":[942297,942298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[942375,942386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[942472,942475]},{"pos":[942509,942516],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[942549,942550],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[942578,942579]},{"pos":[942661,942672],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[942758,942761]},{"pos":[942795,942802],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[942835,942836],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[942864,942865]},{"pos":[942953,942970],"content":"IEqualityComparer","needQuote":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"content":"(Of","pos":[943062,943065]},{"pos":[943099,943106],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[943139,943140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[943167,943168],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[943757,943817],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Boolean&gt;)","pos":[0,60],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)"}]},{"pos":[944328,944342],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[944405,944406],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[944483,944494],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[944579,944580],"content":"<","needQuote":true,"nodes":[]},{"pos":[944607,944614],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[944680,944681]},{"pos":[944736,944740],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[944798,944799],"content":"<","needQuote":true,"nodes":[]},{"pos":[944826,944833],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[944867,944868]},{"pos":[944924,944931],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[945024,945025],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[945181,945198],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[945264,945265],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[945342,945353],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[945439,945442]},{"pos":[945476,945483],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[945516,945517],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[945545,945546]},{"pos":[945601,945605],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[945664,945667]},{"pos":[945701,945708],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[945742,945743]},{"pos":[945799,945806],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[945867,945868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[945895,945896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[946381,946448],"content":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, Int32, Boolean&gt;)","pos":[0,67],"source":"Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)"}]},{"pos":[947007,947021],"content":"Where<TSource>","needQuote":true,"nodes":[{"content":"Where&lt;TSource&gt;","pos":[0,14],"source":"Where<TSource>"}]},{"pos":[947084,947085],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[947162,947173],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[947258,947259],"content":"<","needQuote":true,"nodes":[]},{"pos":[947286,947293],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[947359,947360]},{"pos":[947415,947419],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[947477,947478],"content":"<","needQuote":true,"nodes":[]},{"pos":[947505,947512],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[947546,947547]},{"pos":[947601,947606],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[947666,947667]},{"pos":[947723,947730],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[947823,947824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[947993,948010],"content":"Where(Of TSource)","needQuote":true,"nodes":[{"content":"Where(Of TSource)","pos":[0,17]}]},{"pos":[948076,948077],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[948154,948165],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[948251,948254]},{"pos":[948288,948295],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[948328,948329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[948357,948358]},{"pos":[948413,948417],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[948476,948479]},{"pos":[948513,948520],"content":"TSource","needQuote":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"content":",","pos":[948554,948555]},{"pos":[948609,948614],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[948674,948675]},{"pos":[948731,948738],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[948799,948800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[948827,948828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[949362,949466],"content":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;(IEnumerable&lt;TFirst&gt;, IEnumerable&lt;TSecond&gt;, Func&lt;TFirst, TSecond, TResult&gt;)","pos":[0,104],"source":"Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)"}]},{"pos":[950190,950219],"content":"Zip<TFirst, TSecond, TResult>","needQuote":true,"nodes":[{"content":"Zip&lt;TFirst, TSecond, TResult&gt;","pos":[0,29],"source":"Zip<TFirst, TSecond, TResult>"}]},{"pos":[950297,950298],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[950375,950386],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[950471,950472],"content":"<","needQuote":true,"nodes":[]},{"pos":[950499,950505],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[950570,950571]},{"pos":[950653,950664],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[950749,950750],"content":"<","needQuote":true,"nodes":[]},{"pos":[950777,950784],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[950850,950851]},{"pos":[950906,950910],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"pos":[950968,950969],"content":"<","needQuote":true,"nodes":[]},{"pos":[950996,951002],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[951035,951036]},{"pos":[951068,951075],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[951109,951110]},{"pos":[951142,951149],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[951214,951215],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[951406,951438],"content":"Zip(Of TFirst, TSecond, TResult)","needQuote":true,"nodes":[{"content":"Zip(Of TFirst, TSecond, TResult)","pos":[0,32]}]},{"pos":[951519,951520],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[951597,951608],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[951694,951697]},{"pos":[951731,951737],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"pos":[951769,951770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[951798,951799]},{"pos":[951881,951892],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[951978,951981]},{"pos":[952015,952022],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"pos":[952055,952056],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"content":",","pos":[952084,952085]},{"pos":[952140,952144],"content":"Func","needQuote":true,"nodes":[{"content":"Func","pos":[0,4]}]},{"content":"(Of","pos":[952203,952206]},{"pos":[952240,952246],"content":"TFirst","needQuote":true,"nodes":[{"content":"TFirst","pos":[0,6]}]},{"content":",","pos":[952279,952280]},{"pos":[952312,952319],"content":"TSecond","needQuote":true,"nodes":[{"content":"TSecond","pos":[0,7]}]},{"content":",","pos":[952353,952354]},{"pos":[952386,952393],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[952426,952427],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[952454,952455],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[952957,952968],"content":"System.Linq","needQuote":true,"nodes":[{"content":"System.Linq","pos":[0,11]}]},{"pos":[953334,953339],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[954124,954129],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[954757,954762],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[954963,954968],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[955126,955131],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[955490,955495],"content":"Count","needQuote":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[956042,956052],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[956341,956345],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[956458,956459]},{"pos":[956489,956493],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[956524,956525]},{"pos":[956633,956637],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[956752,956753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[956780,956784],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[956814,956815],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[957081,957085],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[957193,957199],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[957358,957368],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[957657,957661],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[957774,957775]},{"pos":[957805,957809],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[957840,957841]},{"pos":[957949,957953],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[958068,958069],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[958096,958100],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[958130,958131],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[958389,958393],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[958474,958480],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[958665,958699],"content":"ReadOnlyDictionary.KeyCollection<>","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.KeyCollection&lt;&gt;","pos":[0,34],"source":"ReadOnlyDictionary.KeyCollection<>"}]},{"pos":[959011,959043],"content":"ReadOnlyDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.KeyCollection","pos":[0,32]}]},{"pos":[959132,959133],"content":"<","needQuote":true,"nodes":[]},{"pos":[959278,959310],"content":"ReadOnlyDictionary.KeyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.KeyCollection","pos":[0,32]}]},{"content":"(Of","pos":[959400,959403]},{"pos":[959437,959438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[959940,959950],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[960517,960524],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[960693,960703],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[961211,961221],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[961486,961490],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[961595,961596]},{"pos":[961626,961630],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[961661,961662]},{"pos":[961762,961766],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[961873,961874],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[961901,961905],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[961935,961936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[962219,962229],"content":"Item[TKey]","needQuote":true,"nodes":[{"content":"Item[TKey]","pos":[0,10]}]},{"pos":[962494,962498],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[962603,962604]},{"pos":[962634,962638],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":"]","pos":[962669,962670]},{"pos":[962770,962774],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[962881,962882],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[962909,962913],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[962943,962944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[963340,963344],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[963811,963828],"content":"ICollection<TKey>","needQuote":true,"nodes":[{"content":"ICollection&lt;TKey&gt;","pos":[0,17],"source":"ICollection<TKey>"}]},{"pos":[964056,964067],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[964131,964132],"content":"<","needQuote":true,"nodes":[]},{"pos":[964159,964163],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[964286,964297],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[964362,964365]},{"pos":[964399,964403],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[964433,964434],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[964663,964667],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[965181,965187],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[965666,965685],"content":"ICollection<TValue>","needQuote":true,"nodes":[{"content":"ICollection&lt;TValue&gt;","pos":[0,19],"source":"ICollection<TValue>"}]},{"pos":[965919,965930],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[965994,965995],"content":"<","needQuote":true,"nodes":[]},{"pos":[966022,966028],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[966153,966164],"content":"ICollection","needQuote":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"content":"(Of","pos":[966229,966232]},{"pos":[966266,966272],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[966304,966305],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[966540,966546],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[967090,967094],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[967601,967618],"content":"IEnumerable<TKey>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TKey&gt;","pos":[0,17],"source":"IEnumerable<TKey>"}]},{"pos":[967846,967857],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[967921,967922],"content":"<","needQuote":true,"nodes":[]},{"pos":[967949,967953],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[968076,968087],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[968152,968155]},{"pos":[968189,968193],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[968223,968224],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[968461,968465],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[969043,969049],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[969568,969587],"content":"IEnumerable<TValue>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;TValue&gt;","pos":[0,19],"source":"IEnumerable<TValue>"}]},{"pos":[969821,969832],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[969896,969897],"content":"<","needQuote":true,"nodes":[]},{"pos":[969924,969930],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[970055,970066],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[970131,970134]},{"pos":[970168,970174],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[970206,970207],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[970450,970456],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[970936,970950],"content":"IsSynchronized","needQuote":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[971229,971237],"content":"SyncRoot","needQuote":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[971500,971511],"content":"IsFixedSize","needQuote":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[971782,971792],"content":"IsReadOnly","needQuote":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[972069,972081],"content":"Item[Object]","needQuote":true,"nodes":[{"content":"Item[Object]","pos":[0,12]}]},{"pos":[972320,972324],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"content":"[","pos":[972407,972408]},{"pos":[972461,972467],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":"]","pos":[972528,972529]},{"pos":[972630,972634],"content":"Item","needQuote":true,"nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[972716,972717],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[972767,972773],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[972833,972834],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[973113,973117],"content":"Keys","needQuote":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[973363,973369],"content":"Values","needQuote":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[973652,973688],"content":"ReadOnlyDictionary.ValueCollection<>","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.ValueCollection&lt;&gt;","pos":[0,36],"source":"ReadOnlyDictionary.ValueCollection<>"}]},{"pos":[974008,974042],"content":"ReadOnlyDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.ValueCollection","pos":[0,34]}]},{"pos":[974133,974134],"content":"<","needQuote":true,"nodes":[]},{"pos":[974281,974315],"content":"ReadOnlyDictionary.ValueCollection","needQuote":true,"nodes":[{"content":"ReadOnlyDictionary.ValueCollection","pos":[0,34]}]},{"content":"(Of","pos":[974407,974410]},{"pos":[974444,974445],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[974885,974902],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[975166,975177],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[975288,975289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[975316,975320],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[975350,975351],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[975455,975466],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[975580,975581],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[975608,975612],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[975642,975643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[976115,976132],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[976420,976431],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[976550,976551],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[976578,976582],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[976612,976613],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[976725,976736],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[976858,976859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[976886,976890],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[976920,976921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[977256,977273],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[977537,977548],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[977659,977660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[977687,977691],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[977721,977722],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[977826,977837],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[977951,977952],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[977979,977983],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[978013,978014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[978328,978345],"content":"ContainsKey(TKey)","needQuote":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[978633,978644],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[978763,978764],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[978791,978795],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[978825,978826],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[978938,978949],"content":"ContainsKey","needQuote":true,"nodes":[{"content":"ContainsKey","pos":[0,11]}]},{"pos":[979071,979072],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[979099,979103],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[979133,979134],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[979675,979690],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[980033,980046],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[980179,980180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[980207,980208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[980310,980323],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[980462,980463],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[980490,980491],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[980981,981020],"content":"IEnumerator<KeyValuePair<TKey, TValue>>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;","pos":[0,39],"source":"IEnumerator<KeyValuePair<TKey, TValue>>"}]},{"pos":[981374,981385],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[981470,981471],"content":"<","needQuote":true,"nodes":[]},{"pos":[981549,981561],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[981647,981648],"content":"<","needQuote":true,"nodes":[]},{"pos":[981675,981679],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[981710,981711]},{"pos":[981743,981749],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[981906,981917],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[982003,982006]},{"pos":[982091,982103],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[982190,982193]},{"pos":[982227,982231],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[982262,982263]},{"pos":[982295,982301],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[982333,982334],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[982361,982362],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[982692,982707],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[982943,982956],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[983037,983038],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[983065,983066],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[983168,983181],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[983265,983266],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[983293,983294],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[983557,983571],"content":"IEnumerator<T>","needQuote":true,"nodes":[{"content":"IEnumerator&lt;T&gt;","pos":[0,14],"source":"IEnumerator<T>"}]},{"pos":[983790,983801],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[983865,983866],"content":"<","needQuote":true,"nodes":[]},{"pos":[983893,983894],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[984014,984025],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"content":"(Of","pos":[984090,984093]},{"pos":[984127,984128],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[984155,984156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[984641,984672],"content":"Add(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Add(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,31],"source":"Add(KeyValuePair<TKey, TValue>)"}]},{"pos":[985144,985147],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[985270,985271],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[985349,985361],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[985426,985427],"content":"<","needQuote":true,"nodes":[]},{"pos":[985454,985458],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[985489,985490]},{"pos":[985522,985528],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[985592,985593],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[985689,985692],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[985821,985822],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[985900,985912],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[985978,985981]},{"pos":[986015,986019],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[986050,986051]},{"pos":[986083,986089],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[986121,986122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[986149,986150],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[986674,986700],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[986956,986968],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[987054,987055],"content":"<","needQuote":true,"nodes":[]},{"pos":[987082,987086],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[987117,987118]},{"pos":[987150,987156],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[987282,987294],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[987381,987384]},{"pos":[987418,987422],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[987453,987454]},{"pos":[987486,987492],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[987524,987525],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[987780,987786],"content":"Add(T)","needQuote":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[987998,988001],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[988072,988073],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[988100,988101],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[988128,988129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[988225,988228],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[988302,988303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[988330,988331],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[988358,988359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[988599,988625],"content":"KeyValuePair<TKey, TValue>","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;","pos":[0,26],"source":"KeyValuePair<TKey, TValue>"}]},{"pos":[988881,988893],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[988958,988959],"content":"<","needQuote":true,"nodes":[]},{"pos":[988986,988990],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[989021,989022]},{"pos":[989054,989060],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[989186,989198],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[989264,989267]},{"pos":[989301,989305],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[989336,989337]},{"pos":[989369,989375],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[989407,989408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[989860,989867],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[990186,990191],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[990316,990317],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[990344,990345],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[990439,990444],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[990575,990576],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[990603,990604],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[990948,990955],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[991167,991172],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[991245,991246],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[991273,991274],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[991368,991373],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[991449,991450],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[991477,991478],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[991995,992031],"content":"Contains(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Contains(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,36],"source":"Contains(KeyValuePair<TKey, TValue>)"}]},{"pos":[992523,992531],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[992659,992660],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[992738,992750],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[992815,992816],"content":"<","needQuote":true,"nodes":[]},{"pos":[992843,992847],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[992878,992879]},{"pos":[992911,992917],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[992981,992982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[993083,993091],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[993225,993226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[993304,993316],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[993382,993385]},{"pos":[993419,993423],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[993454,993455]},{"pos":[993487,993493],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[993525,993526],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[993553,993554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[994017,994028],"content":"Contains(T)","needQuote":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[994255,994263],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[994339,994340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[994367,994368],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[994395,994396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[994497,994505],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[994584,994585],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[994612,994613],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[994640,994641],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[995199,995242],"content":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;TKey, TValue&gt;[], Int32)","pos":[0,43],"source":"CopyTo(KeyValuePair<TKey, TValue>[], Int32)"}]},{"pos":[995782,995788],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[995914,995915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[995993,996005],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[996070,996071],"content":"<","needQuote":true,"nodes":[]},{"pos":[996098,996102],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[996133,996134]},{"pos":[996166,996172],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[996237,996239]},{"content":",","pos":[996271,996272]},{"pos":[996326,996331],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[996390,996391],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[996505,996511],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[996643,996644],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[996722,996734],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[996800,996803]},{"pos":[996837,996841],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[996872,996873]},{"pos":[996905,996911],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[996943,996944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[996971,996973],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[997002,997003]},{"pos":[997057,997062],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[997121,997122],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[997597,997625],"content":"KeyValuePair<TKey, TValue>[]","needQuote":true,"nodes":[{"content":"KeyValuePair&lt;TKey, TValue&gt;[]","pos":[0,28],"source":"KeyValuePair<TKey, TValue>[]"}]},{"pos":[997887,997899],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[997985,997986],"content":"<","needQuote":true,"nodes":[]},{"pos":[998013,998017],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[998048,998049]},{"pos":[998081,998087],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"content":"[]","pos":[998152,998154]},{"pos":[998247,998259],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[998346,998349]},{"pos":[998383,998387],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[998418,998419]},{"pos":[998451,998457],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[998489,998490],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[998517,998519],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[998734,998752],"content":"CopyTo(T[], Int32)","needQuote":true,"nodes":[{"content":"CopyTo(T[], Int32)","pos":[0,18]}]},{"pos":[999050,999056],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[999130,999131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[999158,999159],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"content":"[]","pos":[999187,999189]},{"content":",","pos":[999221,999222]},{"pos":[999276,999281],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[999340,999341],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[999455,999461],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[999538,999539],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[999566,999567],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[999594,999596],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[999625,999626]},{"pos":[999680,999685],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[999744,999745],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1000300,1000334],"content":"Remove(KeyValuePair<TKey, TValue>)","needQuote":true,"nodes":[{"content":"Remove(KeyValuePair&lt;TKey, TValue&gt;)","pos":[0,34],"source":"Remove(KeyValuePair<TKey, TValue>)"}]},{"pos":[1000818,1000824],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1000950,1000951],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1001029,1001041],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"pos":[1001106,1001107],"content":"<","needQuote":true,"nodes":[]},{"pos":[1001134,1001138],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1001169,1001170]},{"pos":[1001202,1001208],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1001272,1001273],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1001372,1001378],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1001510,1001511],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1001589,1001601],"content":"KeyValuePair","needQuote":true,"nodes":[{"content":"KeyValuePair","pos":[0,12]}]},{"content":"(Of","pos":[1001667,1001670]},{"pos":[1001704,1001708],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1001739,1001740]},{"pos":[1001772,1001778],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1001810,1001811],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1001838,1001839],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1002294,1002303],"content":"Remove(T)","needQuote":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[1002524,1002530],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1002604,1002605],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1002632,1002633],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1002660,1002661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1002760,1002766],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1002843,1002844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1002871,1002872],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[1002899,1002900],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1003296,1003313],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[1003572,1003575],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1003678,1003679],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1003706,1003710],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1003741,1003742]},{"pos":[1003774,1003780],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1003812,1003813],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1003912,1003915],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1004021,1004022],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1004049,1004053],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1004084,1004085]},{"pos":[1004117,1004123],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1004155,1004156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1004457,1004474],"content":"Add(TKey, TValue)","needQuote":true,"nodes":[{"content":"Add(TKey, TValue)","pos":[0,17]}]},{"pos":[1004733,1004736],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1004839,1004840],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1004867,1004871],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1004902,1004903]},{"pos":[1004935,1004941],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1004973,1004974],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1005073,1005076],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1005182,1005183],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1005210,1005214],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1005245,1005246]},{"pos":[1005278,1005284],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1005316,1005317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1005745,1005757],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1006006,1006012],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1006118,1006119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1006146,1006150],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1006180,1006181],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1006280,1006286],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1006395,1006396],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1006423,1006427],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1006457,1006458],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1006749,1006761],"content":"Remove(TKey)","needQuote":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[1007010,1007016],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1007122,1007123],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1007150,1007154],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1007184,1007185],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1007284,1007290],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1007399,1007400],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1007427,1007431],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[1007461,1007462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1007802,1007822],"content":"CopyTo(Array, Int32)","needQuote":true,"nodes":[{"content":"CopyTo(Array, Int32)","pos":[0,20]}]},{"pos":[1008000,1008006],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1008069,1008070],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1008119,1008124],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1008163,1008164]},{"pos":[1008218,1008223],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1008282,1008283],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1008395,1008401],"content":"CopyTo","needQuote":true,"nodes":[{"content":"CopyTo","pos":[0,6]}]},{"pos":[1008464,1008465],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1008514,1008519],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"content":",","pos":[1008558,1008559]},{"pos":[1008613,1008618],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[1008677,1008678],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1008889,1008894],"content":"Array","needQuote":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[1009109,1009128],"content":"Add(Object, Object)","needQuote":true,"nodes":[{"content":"Add(Object, Object)","pos":[0,19]}]},{"pos":[1009304,1009307],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1009388,1009389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1009439,1009445],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1009506,1009507]},{"pos":[1009562,1009568],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1009628,1009629],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1009740,1009743],"content":"Add","needQuote":true,"nodes":[{"content":"Add","pos":[0,3]}]},{"pos":[1009824,1009825],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1009875,1009881],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[1009942,1009943]},{"pos":[1009998,1010004],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1010064,1010065],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1010321,1010328],"content":"Clear()","needQuote":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[1010451,1010456],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1010539,1010540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1010567,1010568],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1010652,1010657],"content":"Clear","needQuote":true,"nodes":[{"content":"Clear","pos":[0,5]}]},{"pos":[1010740,1010741],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1010768,1010769],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1011004,1011020],"content":"Contains(Object)","needQuote":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[1011177,1011185],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1011271,1011272],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1011322,1011328],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1011388,1011389],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1011491,1011499],"content":"Contains","needQuote":true,"nodes":[{"content":"Contains","pos":[0,8]}]},{"pos":[1011585,1011586],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1011636,1011642],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1011702,1011703],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1011955,1011970],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1012109,1012122],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1012213,1012214],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1012241,1012242],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1012334,1012347],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1012438,1012439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1012466,1012467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1012693,1012714],"content":"IDictionaryEnumerator","needQuote":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[1012990,1013004],"content":"Remove(Object)","needQuote":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[1013157,1013163],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1013247,1013248],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1013298,1013304],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1013364,1013365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013465,1013471],"content":"Remove","needQuote":true,"nodes":[{"content":"Remove","pos":[0,6]}]},{"pos":[1013555,1013556],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1013606,1013612],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1013672,1013673],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1013922,1013937],"content":"GetEnumerator()","needQuote":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[1014076,1014089],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1014159,1014160],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1014187,1014188],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1014280,1014293],"content":"GetEnumerator","needQuote":true,"nodes":[{"content":"GetEnumerator","pos":[0,13]}]},{"pos":[1014363,1014364],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1014391,1014392],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1014608,1014619],"content":"IEnumerator","needQuote":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[1014979,1015004],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1015288,1015299],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1015410,1015411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1015438,1015442],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1015473,1015474]},{"pos":[1015506,1015512],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1015544,1015545],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1015653,1015664],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1015778,1015779],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1015806,1015810],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1015841,1015842]},{"pos":[1015874,1015880],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1015912,1015913],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1016419,1016444],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1016752,1016763],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1016882,1016883],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1016910,1016914],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1016945,1016946]},{"pos":[1016978,1016984],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1017016,1017017],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017133,1017144],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1017266,1017267],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1017294,1017298],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1017329,1017330]},{"pos":[1017362,1017368],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1017400,1017401],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1017760,1017785],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1018069,1018080],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1018191,1018192],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1018219,1018223],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1018254,1018255]},{"pos":[1018287,1018293],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1018325,1018326],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1018434,1018445],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1018559,1018560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1018587,1018591],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1018622,1018623]},{"pos":[1018655,1018661],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1018693,1018694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1019032,1019057],"content":"TryGetValue(TKey, TValue)","needQuote":true,"nodes":[{"content":"TryGetValue(TKey, TValue)","pos":[0,25]}]},{"pos":[1019365,1019376],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1019495,1019496],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1019523,1019527],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1019558,1019559]},{"pos":[1019591,1019597],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1019629,1019630],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1019746,1019757],"content":"TryGetValue","needQuote":true,"nodes":[{"content":"TryGetValue","pos":[0,11]}]},{"pos":[1019879,1019880],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1019907,1019911],"content":"TKey","needQuote":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"content":",","pos":[1019942,1019943]},{"pos":[1019975,1019981],"content":"TValue","needQuote":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[1020013,1020014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[1020337,1020358],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[1020565,1020585],"content":"KeyNotFoundException","needQuote":true,"nodes":[{"content":"KeyNotFoundException","pos":[0,20]}]},{"pos":[1020827,1020848],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]},{"pos":[1021042,1021069],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[1021288,1021305],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]}],"content":"items:\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2\n  id: ReadOnlyDictionary`2\n  parent: System.Collections.ObjectModel\n  children:\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  langs:\n  - csharp\n  - vb\n  name: ReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ReadOnlyDictionary\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 21\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Represents a read-only, generic collection of key/value pairs.</p>\\n\"\n  syntax:\n    content: >-\n      [Serializable]\n\n      [DebuggerTypeProxy(typeof (Mscorlib_DictionaryDebugView<, >))]\n\n      [DebuggerDisplay(\"Count = {Count}\")]\n\n      public class ReadOnlyDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable\n    content.vb: >-\n      <Serializable>\n\n      <DebuggerTypeProxy(GetType(Mscorlib_DictionaryDebugView(Of , )))>\n\n      <DebuggerDisplay(\"Count = {Count}\")>\n\n      Public Class ReadOnlyDictionary(Of TKey, TValue)\n          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable\n    typeParameters:\n    - id: TKey\n      description: \"\\n<p>The type of keys in the dictionary.</p>\\n\"\n    - id: TValue\n      description: \"\\n<p>The type of values in the dictionary.</p>\\n\"\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  - System.Collections.IDictionary\n  - System.Collections.ICollection\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)\n  name.vb: ReadOnlyDictionary(Of TKey, TValue)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>\n  extensionMethods:\n  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})\n  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ReadOnlyDictionary(IDictionary<TKey, TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 34\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Collections.ObjectModel.ReadOnlyDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class that is a wrapper around the specified dictionary.</p>\\n\"\n  syntax:\n    content: public ReadOnlyDictionary(IDictionary<TKey, TValue> dictionary)\n    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The dictionary to wrap.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ReadOnlyDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))\n  name.vb: ReadOnlyDictionary(IDictionary(Of TKey, TValue))\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(IDictionary<TKey, TValue>)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).ReadOnlyDictionary(IDictionary(Of TKey, TValue))\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  id: Count\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Count\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Count\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Count\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 116\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets the number of items in the dictionary.</p>\\n\"\n  syntax:\n    content: public int Count { get; }\n    content.vb: Public ReadOnly Property Count As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The number of items in the dictionary.</p>\\n\"\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  - System.Collections.ICollection.Count\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Count\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.Count\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Count\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  id: Dictionary\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Dictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Dictionary\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Dictionary\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 42\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets the dictionary that is wrapped by this <xref href=\\\"System.Collections.ObjectModel.ReadOnlyDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  syntax:\n    content: protected IDictionary<TKey, TValue> Dictionary { get; }\n    content.vb: Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TValue)\n    parameters: []\n    return:\n      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n      description: \"\\n<p>The dictionary that is wrapped by this object.</p>\\n\"\n  modifiers.csharp:\n  - protected\n  - get\n  modifiers.vb:\n  - Protected\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Dictionary\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.Dictionary\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Dictionary\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Item[TKey]\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: this[]\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 88\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets the element that has the specified key.</p>\\n\"\n  syntax:\n    content: public TValue this[TKey key] { get; }\n    content.vb: Public ReadOnly Property Item(key As TKey) As TValue\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key of the element to get.</p>\\n\"\n    return:\n      type: '{TValue}'\n      description: \"\\n<p>The element that has the specified key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Collections.Generic.KeyNotFoundException\n    commentId: T:System.Collections.Generic.KeyNotFoundException\n    description: \"\\n<p>The property is retrieved and <em>key</em> is not found.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  id: Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Keys\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 46\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a key collection that contains the keys of the dictionary.</p>\\n\"\n  syntax:\n    content: public ReadOnlyDictionary<TKey, TValue>.KeyCollection Keys { get; }\n    content.vb: Public ReadOnly Property Keys As ReadOnlyDictionary(Of TKey, TValue).KeyCollection\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n      description: \"\\n<p>A key collection that contains the keys of the dictionary.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Keys\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 128\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Item[TKey]\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.this[]\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 103\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: TValue IDictionary<TKey, TValue>.this[TKey key] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Item(key As TKey) As TValue Implements IDictionary(Of TKey, TValue).this\n    parameters:\n    - id: key\n      type: '{TKey}'\n    return:\n      type: '{TValue}'\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 72\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TKey}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 82\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.ICollection{{TValue}}\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 336\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: IEnumerable<TKey> IReadOnlyDictionary<TKey, TValue>.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TKey}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IReadOnlyDictionary<TKey, TValue>.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 342\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: IEnumerable<TValue> IReadOnlyDictionary<TKey, TValue>.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{{TValue}}\n  implements:\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.IsSynchronized\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 278\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a value that indicates whether access to the dictionary is synchronized (thread safe).</p>\\n\"\n  syntax:\n    content: bool ICollection.IsSynchronized { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if access to the dictionary is synchronized (thread safe); otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.IsSynchronized\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n  name.vb: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.IsSynchronized\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.SyncRoot\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 282\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets an object that can be used to synchronize access to the dictionary.</p>\\n\"\n  syntax:\n    content: object ICollection.SyncRoot { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An object that can be used to synchronize access to the dictionary.</p>\\n\"\n  implements:\n  - System.Collections.ICollection.SyncRoot\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n  name.vb: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.SyncRoot\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsFixedSize\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.IsFixedSize\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 192\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a value that indicates whether the dictionary has a fixed size.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsFixedSize { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the dictionary has a fixed size; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.IsFixedSize\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n  name.vb: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.IsFixedSize\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.IsReadOnly\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 196\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a value that indicates whether the dictionary is read-only.</p>\\n\"\n  syntax:\n    content: bool IDictionary.IsReadOnly { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> in all cases.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.IsReadOnly\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n  name.vb: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.IsReadOnly\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Item[Object]\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.this[]\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 216\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets the element that has the specified key.</p>\\n\"\n  syntax:\n    content: object IDictionary.this[object key] { get; set; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to get or set. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The element that has the specified key.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The property is set.</p>\\n<p>-or- </p>\\n<p>The property is set, <em>key</em> does not exist in the collection, and the dictionary has a fixed size. </p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Item(System.Object)\n  modifiers.csharp:\n  - get\n  - set\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)\n  name.vb: System.Collections.IDictionary.Item(Object)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Item[Object]\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Keys\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Keys\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 200\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a collection that contains the keys of the dictionary.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Keys { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>A collection that contains the keys of the dictionary.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Keys\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys\n  name.vb: System.Collections.IDictionary.Keys\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Keys\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Values\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Values\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 210\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a collection that contains the values in the dictionary.</p>\\n\"\n  syntax:\n    content: ICollection IDictionary.Values { get; }\n    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values\n    parameters: []\n    return:\n      type: System.Collections.ICollection\n      description: \"\\n<p>A collection that contains the values in the dictionary.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Values\n  modifiers.csharp:\n  - get\n  modifiers.vb:\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Values\n  name.vb: System.Collections.IDictionary.Values\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Values\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  id: Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Values\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Values\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 56\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Gets a collection that contains the values in the dictionary.</p>\\n\"\n  syntax:\n    content: public ReadOnlyDictionary<TKey, TValue>.ValueCollection Values { get; }\n    content.vb: Public ReadOnly Property Values As ReadOnlyDictionary(Of TKey, TValue).ValueCollection\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n      description: \"\\n<p>A collection that contains the values in the object that implements <xref href=\\\"System.Collections.ObjectModel.ReadOnlyDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ContainsKey(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ContainsKey\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 68\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Determines whether the dictionary contains an element that has the specified key.</p>\\n\"\n  syntax:\n    content: public bool ContainsKey(TKey key)\n    content.vb: Public Function ContainsKey(key As TKey) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key to locate in the dictionary.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: GetEnumerator\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 149\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Returns an enumerator that iterates through the <xref href=\\\"System.Collections.ObjectModel.ReadOnlyDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()\n    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n      description: \"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.GetEnumerator()\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).GetEnumerator()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 132\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item)\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(item As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 136\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.Clear()\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Clear\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Clear()\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 120\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> item)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 124\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)\n    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n    - id: arrayIndex\n      type: System.Int32\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 140\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item)\n    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Add\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 94\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IDictionary<TKey, TValue>.Add(TKey key, TValue value)\n    content.vb: Sub System.Collections.Generic.IDictionary<TKey,TValue>.Add(key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add\n    parameters:\n    - id: key\n      type: '{TKey}'\n    - id: value\n      type: '{TValue}'\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary<TKey, TValue>.Remove(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.Generic.IDictionary<TKey,TValue>.Remove\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 98\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool IDictionary<TKey, TValue>.Remove(TKey key)\n    content.vb: Function System.Collections.Generic.IDictionary<TKey,TValue>.Remove(key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove\n    parameters:\n    - id: key\n      type: '{TKey}'\n    return:\n      type: System.Boolean\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)\n  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: ICollection.CopyTo(Array, Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.ICollection.CopyTo\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 228\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Copies the elements of the dictionary to an array, starting at the specified array index.</p>\\n\"\n  syntax:\n    content: void ICollection.CopyTo(Array array, int index)\n    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo\n    parameters:\n    - id: array\n      type: System.Array\n      description: \"\\n<p>The one-dimensional array that is the destination of the elements copied from the dictionary. The array must have zero-based indexing. </p>\\n\"\n    - id: index\n      type: System.Int32\n      description: \"\\n<p>The zero-based index in <em>array</em> at which copying begins. </p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>array</em> is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>\\n<em>index</em> is less than zero. </p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>array</em> is multidimensional.</p>\\n<p>-or- </p>\\n<p>The number of elements in the source dictionary is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\\n<p>-or-</p>\\n<p> The type of the source dictionary cannot be cast automatically to the type of the destination <em>array</em><em>.</em></p>\\n\"\n  implements:\n  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Add(Object, Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Add\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 172\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> exception in all cases.</p>\\n\"\n  syntax:\n    content: void IDictionary.Add(object key, object value)\n    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to add. </p>\\n\"\n    - id: value\n      type: System.Object\n      description: \"\\n<p>The value of the element to add. </p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Add(System.Object,System.Object)\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)\n  name.vb: System.Collections.IDictionary.Add(Object, Object)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Add(Object, Object)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  id: System#Collections#IDictionary#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Clear()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Clear\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 176\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> exception in all cases.</p>\\n\"\n  syntax:\n    content: void IDictionary.Clear()\n    content.vb: Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Clear\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Clear()\n  name.vb: System.Collections.IDictionary.Clear()\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Clear()\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Contains(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Contains\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 180\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Determines whether the dictionary contains an element that has the specified key.</p>\\n\"\n  syntax:\n    content: bool IDictionary.Contains(object key)\n    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key to locate in the dictionary.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>key</em> is <strong>null</strong>. </p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Contains(System.Object)\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)\n  name.vb: System.Collections.IDictionary.Contains(Object)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Contains(Object)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.GetEnumerator\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 184\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Returns an enumerator for the dictionary.</p>\\n\"\n  syntax:\n    content: IDictionaryEnumerator IDictionary.GetEnumerator()\n    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: \"\\n<p>An enumerator for the dictionary.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.GetEnumerator\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n  name.vb: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.GetEnumerator()\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IDictionary.Remove(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IDictionary.Remove\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 206\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Throws a <xref href=\\\"System.NotSupportedException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> exception in all cases.</p>\\n\"\n  syntax:\n    content: void IDictionary.Remove(object key)\n    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove\n    parameters:\n    - id: key\n      type: System.Object\n      description: \"\\n<p>The key of the element to remove. </p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>In all cases.</p>\\n\"\n  implements:\n  - System.Collections.IDictionary.Remove(System.Object)\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)\n  name.vb: System.Collections.IDictionary.Remove(Object)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Remove(Object)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: System.Collections.IEnumerable.GetEnumerator\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 157\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Returns an enumerator that iterates through a collection.</p>\\n\"\n  syntax:\n    content: IEnumerator IEnumerable.GetEnumerator()\n    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator\n    return:\n      type: System.Collections.IEnumerator\n      description: \"\\n<p>An enumerator that can be used to iterate through the collection.</p>\\n\"\n  implements:\n  - System.Collections.IEnumerable.GetEnumerator\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n  name.vb: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.IEnumerable.GetEnumerator()\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  - vb\n  name: TryGetValue(TKey, out TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryGetValue\n    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs\n    startLine: 78\n  assemblies:\n  - System.ObjectModel\n  namespace: System.Collections.ObjectModel\n  summary: \"\\n<p>Retrieves the value that is associated with the specified key.</p>\\n\"\n  syntax:\n    content: public bool TryGetValue(TKey key, out TValue value)\n    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean\n    parameters:\n    - id: key\n      type: '{TKey}'\n      description: \"\\n<p>The key whose value will be retrieved.</p>\\n\"\n    - id: value\n      type: '{TValue}'\n      description: \"\\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter. This parameter is passed uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the object that implements <xref href=\\\"System.Collections.ObjectModel.ReadOnlyDictionary`2\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\\n\"\n  implements:\n  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\n  name.vb: TryGetValue(TKey, ByRef TValue)\n  nameWithType: ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)\n  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)\nreferences:\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary{`0,`1}\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyDictionary`2\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IReadOnlyCollection`1\n  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  fullName: System.Collections.IDictionary\n  nameWithType: IDictionary\n  commentId: T:System.Collections.IDictionary\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  fullName: System.Collections.ICollection\n  nameWithType: ICollection\n  commentId: T:System.Collections.ICollection\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  fullName: System.Collections.IEnumerable\n  nameWithType: IEnumerable\n  commentId: T:System.Collections.IEnumerable\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  name: AsQueryable()\n  fullName: System.Linq.Queryable.AsQueryable()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable()\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1\n  parent: System.Linq.Queryable\n  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsQueryable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1\n    name: AsQueryable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Queryable.AsQueryable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  name: AsParallel()\n  fullName: System.Linq.ParallelEnumerable.AsParallel()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1\n  parent: System.Linq.ParallelEnumerable\n  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsParallel<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1\n    name: AsParallel(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  name: Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})\n    name: All(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  name: Any<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})\n    name: Any(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  name: AsEnumerable<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1\n    name: AsEnumerable(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.AsEnumerable(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})\n    name: Average(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  name: Cast<TResult>()\n  fullName: System.Linq.Enumerable.Cast<TResult>()\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()\n  name.vb: Cast(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>()\n  nameWithType.vb: Enumerable.Cast(Of TResult)()\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(``0)\n    name: Append(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(``0)\n    name: Prepend(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0)\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  name: Count<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})\n    name: Count(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)\n    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)\n    name: ElementAt(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)\n    name: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  name: First<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})\n    name: First(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  name: Last<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})\n    name: Last(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  name: LongCount<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})\n    name: LongCount(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  name: Max<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})\n    name: Max(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})\n    name: Max(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  name: Min<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})\n    name: Min(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})\n    name: Min(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  name: OfType<TResult>()\n  fullName: System.Linq.Enumerable.OfType<TResult>()\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()\n  name.vb: OfType(Of TResult)()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>()\n  nameWithType.vb: Enumerable.OfType(Of TResult)()\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  name: Reverse<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Reverse(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1\n    name: Reverse(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Reverse(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, TResult))\n  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})\n    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  name: Single<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})\n    name: Single(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Skip<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Int32)\n    name: Skip(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Skip(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))\n  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})\n    name: Sum(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)\n  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  name: Take<KeyValuePair<TKey, TValue>>(Int32)\n  fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)\n  name.vb: Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Int32)\n    name: Take(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<KeyValuePair<TKey, TValue>>(Int32)\n  nameWithType.vb: Enumerable.Take(Of KeyValuePair(Of TKey, TValue))(Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToArray<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToArray(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1\n    name: ToArray(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToArray(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  name: ToList<KeyValuePair<TKey, TValue>>()\n  fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>()\n  fullname.vb: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()\n  name.vb: ToList(Of KeyValuePair(Of TKey, TValue))()\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1\n    name: ToList(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<KeyValuePair<TKey, TValue>>()\n  nameWithType.vb: Enumerable.ToList(Of KeyValuePair(Of TKey, TValue))()\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)\n  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))\n  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)\n  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))\n  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where<KeyValuePair<TKey, TValue>>\n    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of KeyValuePair(Of TKey, TValue))\n    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  - name: (\n    fullName: (\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})\n  parent: System.Linq.Enumerable\n  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  name.vb: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: IDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)\n  name.vb: IDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>\n  nameWithType.vb: IDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IDictionary`2\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  nameWithType: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n- uid: System.Collections.Generic.ICollection`1\n  isExternal: false\n  name: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n  fullname.vb: System.Collections.Generic.ICollection(Of T)\n  name.vb: ICollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>\n  nameWithType.vb: ICollection(Of T)\n  commentId: T:System.Collections.Generic.ICollection`1\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  isExternal: false\n  name: IReadOnlyDictionary<TKey, TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)\n  name.vb: IReadOnlyDictionary(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)\n  name.vb: IReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyCollection`1\n    name: IReadOnlyCollection\n    fullName: System.Collections.Generic.IReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyCollection<T>\n  nameWithType.vb: IReadOnlyCollection(Of T)\n  commentId: T:System.Collections.Generic.IReadOnlyCollection`1\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n  commentId: T:System.Collections.Generic.IEnumerable`1\n- uid: System.Collections\n  isExternal: false\n  name: System.Collections\n  fullName: System.Collections\n  nameWithType: System.Collections\n  commentId: N:System.Collections\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n    name: AsQueryable\n    fullName: System.Linq.Queryable.AsQueryable\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n- uid: System.Linq.Queryable\n  parent: System.Linq\n  isExternal: false\n  name: Queryable\n  fullName: System.Linq.Queryable\n  nameWithType: Queryable\n  commentId: T:System.Linq.Queryable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)\n  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))\n  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  spec.csharp:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable<TElement>\n    fullName: System.Linq.Queryable.AsQueryable<TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsQueryable(Of TElement)\n    fullName: System.Linq.Queryable.AsQueryable(Of TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))\n  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  isExternal: true\n  name: AsParallel(IEnumerable)\n  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n    name: AsParallel\n    fullName: System.Linq.ParallelEnumerable.AsParallel\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n- uid: System.Linq.ParallelEnumerable\n  parent: System.Linq\n  isExternal: false\n  name: ParallelEnumerable\n  fullName: System.Linq.ParallelEnumerable\n  nameWithType: ParallelEnumerable\n  commentId: T:System.Linq.ParallelEnumerable\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel<TSource>\n    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsParallel(Of TSource)\n    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  isExternal: true\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))\n  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate<TSource>\n    fullName: System.Linq.Enumerable.Aggregate<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n    name: Aggregate(Of TSource)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))\n  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n- uid: System.Linq.Enumerable\n  parent: System.Linq\n  isExternal: false\n  name: Enumerable\n  fullName: System.Linq.Enumerable\n  nameWithType: Enumerable\n  commentId: T:System.Linq.Enumerable\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))\n  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate<TSource, TAccumulate>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n    name: Aggregate(Of TSource, TAccumulate)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))\n  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  isExternal: true\n  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)\n  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))\n  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate<TSource, TAccumulate, TResult>\n    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n    name: Aggregate(Of TSource, TAccumulate, TResult)\n    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TAccumulate\n    fullName: TAccumulate\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)\n  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))\n  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All<TSource>\n    fullName: System.Linq.Enumerable.All<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: All(Of TSource)\n    fullName: System.Linq.Enumerable.All(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any<TSource>\n    fullName: System.Linq.Enumerable.Any<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Any(Of TSource)\n    fullName: System.Linq.Enumerable.Any(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable<TSource>\n    fullName: System.Linq.Enumerable.AsEnumerable<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n    name: AsEnumerable(Of TSource)\n    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average<TSource>\n    fullName: System.Linq.Enumerable.Average<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Average(Of TSource)\n    fullName: System.Linq.Enumerable.Average(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: Cast<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)\n  name.vb: Cast(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast<TResult>\n    fullName: System.Linq.Enumerable.Cast<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n    name: Cast(Of TResult)\n    fullName: System.Linq.Enumerable.Cast(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat<TSource>\n    fullName: System.Linq.Enumerable.Concat<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Concat(Of TSource)\n    fullName: System.Linq.Enumerable.Concat(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append<TSource>\n    fullName: System.Linq.Enumerable.Append<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Append(Of TSource)\n    fullName: System.Linq.Enumerable.Append(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend<TSource>\n    fullName: System.Linq.Enumerable.Prepend<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Prepend(Of TSource)\n    fullName: System.Linq.Enumerable.Prepend(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains<TSource>\n    fullName: System.Linq.Enumerable.Contains<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n    name: Contains(Of TSource)\n    fullName: System.Linq.Enumerable.Contains(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count<TSource>\n    fullName: System.Linq.Enumerable.Count<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Count(Of TSource)\n    fullName: System.Linq.Enumerable.Count(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  isExternal: true\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)\n  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)\n  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty<TSource>\n    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n    name: DefaultIfEmpty(Of TSource)\n    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)\n  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct<TSource>\n    fullName: System.Linq.Enumerable.Distinct<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Distinct(Of TSource)\n    fullName: System.Linq.Enumerable.Distinct(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt<TSource>\n    fullName: System.Linq.Enumerable.ElementAt<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAt(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAt(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault<TSource>\n    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: ElementAtOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except<TSource>\n    fullName: System.Linq.Enumerable.Except<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Except(Of TSource)\n    fullName: System.Linq.Enumerable.Except(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First<TSource>\n    fullName: System.Linq.Enumerable.First<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: First(Of TSource)\n    fullName: System.Linq.Enumerable.First(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault<TSource>\n    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: FirstOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy<TSource, TKey, TElement, TResult>\n    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n    name: GroupBy(Of TSource, TKey, TElement, TResult)\n    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: GroupJoin(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect<TSource>\n    fullName: System.Linq.Enumerable.Intersect<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Intersect(Of TSource)\n    fullName: System.Linq.Enumerable.Intersect(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  isExternal: true\n  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join<TOuter, TInner, TKey, TResult>\n    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n    name: Join(Of TOuter, TInner, TKey, TResult)\n    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TOuter\n    fullName: TOuter\n  - name: ', '\n    fullName: ', '\n  - name: TInner\n    fullName: TInner\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last<TSource>\n    fullName: System.Linq.Enumerable.Last<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Last(Of TSource)\n    fullName: System.Linq.Enumerable.Last(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault<TSource>\n    fullName: System.Linq.Enumerable.LastOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LastOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount<TSource>\n    fullName: System.Linq.Enumerable.LongCount<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: LongCount(Of TSource)\n    fullName: System.Linq.Enumerable.LongCount(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max<TSource>\n    fullName: System.Linq.Enumerable.Max<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Max(Of TSource)\n    fullName: System.Linq.Enumerable.Max(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max<TSource, TResult>\n    fullName: System.Linq.Enumerable.Max<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Max(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min<TSource>\n    fullName: System.Linq.Enumerable.Min<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Min(Of TSource)\n    fullName: System.Linq.Enumerable.Min(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min<TSource, TResult>\n    fullName: System.Linq.Enumerable.Min<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Min(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  isExternal: true\n  name: OfType<TResult>(IEnumerable)\n  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)\n  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)\n  name.vb: OfType(Of TResult)(IEnumerable)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType<TResult>\n    fullName: System.Linq.Enumerable.OfType<TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n    name: OfType(Of TResult)\n    fullName: System.Linq.Enumerable.OfType(Of TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.IEnumerable\n    name: IEnumerable\n    fullName: System.Collections.IEnumerable\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)\n  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderBy(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  isExternal: true\n  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))\n  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending<TSource, TKey>\n    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n    name: OrderByDescending(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IComparer`1\n    name: IComparer\n    fullName: System.Collections.Generic.IComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)\n  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse<TSource>\n    fullName: System.Linq.Enumerable.Reverse<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n    name: Reverse(Of TSource)\n    fullName: System.Linq.Enumerable.Reverse(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  isExternal: true\n  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)\n  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))\n  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select<TSource, TResult>\n    fullName: System.Linq.Enumerable.Select<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n    name: Select(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)\n  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))\n  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  isExternal: true\n  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))\n  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany<TSource, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n    name: SelectMany(Of TSource, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))\n  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  isExternal: true\n  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)\n  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))\n  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany<TSource, TCollection, TResult>\n    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TCollection\n    fullName: TCollection\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n    name: SelectMany(Of TSource, TCollection, TResult)\n    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TCollection\n    fullName: TCollection\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TCollection\n    fullName: TCollection\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)\n  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))\n  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual<TSource>\n    fullName: System.Linq.Enumerable.SequenceEqual<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: SequenceEqual(Of TSource)\n    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single<TSource>\n    fullName: System.Linq.Enumerable.Single<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Single(Of TSource)\n    fullName: System.Linq.Enumerable.Single(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault<TSource>\n    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SingleOrDefault(Of TSource)\n    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip<TSource>\n    fullName: System.Linq.Enumerable.Skip<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Skip(Of TSource)\n    fullName: System.Linq.Enumerable.Skip(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile<TSource>\n    fullName: System.Linq.Enumerable.SkipWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: SkipWhile(Of TSource)\n    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Decimal\n    name: Decimal\n    fullName: System.Decimal\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  isExternal: true\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)\n  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))\n  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum<TSource>\n    fullName: System.Linq.Enumerable.Sum<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n    name: Sum(Of TSource)\n    fullName: System.Linq.Enumerable.Sum(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Single\n    name: Single\n    fullName: System.Single\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)\n  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))\n  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  isExternal: true\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)\n  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)\n  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take<TSource>\n    fullName: System.Linq.Enumerable.Take<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n    name: Take(Of TSource)\n    fullName: System.Linq.Enumerable.Take(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)\n  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile<TSource>\n    fullName: System.Linq.Enumerable.TakeWhile<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: TakeWhile(Of TSource)\n    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray<TSource>\n    fullName: System.Linq.Enumerable.ToArray<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToArray(Of TSource)\n    fullName: System.Linq.Enumerable.ToArray(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToDictionary(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: ToList<TSource>(IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList<TSource>\n    fullName: System.Linq.Enumerable.ToList<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n    name: ToList(Of TSource)\n    fullName: System.Linq.Enumerable.ToList(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  isExternal: true\n  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)\n  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))\n  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup<TSource, TKey, TElement>\n    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n    name: ToLookup(Of TSource, TKey, TElement)\n    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - name: TElement\n    fullName: TElement\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)\n  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))\n  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  isExternal: true\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)\n  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))\n  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union<TSource>\n    fullName: System.Linq.Enumerable.Union<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n    name: Union(Of TSource)\n    fullName: System.Linq.Enumerable.Union(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))\n  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`2\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  isExternal: true\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)\n  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))\n  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where<TSource>\n    fullName: System.Linq.Enumerable.Where<TSource>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n    name: Where(Of TSource)\n    fullName: System.Linq.Enumerable.Where(Of TSource)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSource\n    fullName: TSource\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)\n  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))\n  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  isExternal: true\n  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)\n  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))\n  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  spec.csharp:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip<TFirst, TSecond, TResult>\n    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TSecond\n    fullName: TSecond\n  - name: '>'\n    fullName: '>'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n    name: Zip(Of TFirst, TSecond, TResult)\n    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TSecond\n    fullName: TSecond\n  - name: )\n    fullName: )\n  - name: ', '\n    fullName: ', '\n  - uid: System.Func`3\n    name: Func\n    fullName: System.Func\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TFirst\n    fullName: TFirst\n  - name: ', '\n    fullName: ', '\n  - name: TSecond\n    fullName: TSecond\n  - name: ', '\n    fullName: ', '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)\n  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))\n  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n- uid: System.Linq\n  isExternal: false\n  name: System.Linq\n  fullName: System.Linq\n  nameWithType: System.Linq\n  commentId: N:System.Linq\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count\n  parent: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IReadOnlyCollection`1.Count\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count\n  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>.Count\n  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count\n- uid: System.Collections.ICollection.Count\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: Count\n  fullName: System.Collections.ICollection.Count\n  nameWithType: ICollection.Count\n  commentId: P:System.Collections.ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Collections.Generic.ICollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.ICollection<T>.Count\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Count\n  nameWithType: ICollection<T>.Count\n  nameWithType.vb: ICollection(Of T).Count\n  commentId: P:System.Collections.Generic.ICollection`1.Count\n- uid: System.Collections.Generic.IReadOnlyCollection`1.Count\n  isExternal: false\n  name: Count\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count\n  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count\n  nameWithType: IReadOnlyCollection<T>.Count\n  nameWithType.vb: IReadOnlyCollection(Of T).Count\n  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Item(`0)\n- uid: '{TKey}'\n  definition: TKey\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n  commentId: '!:TKey'\n- uid: '{TValue}'\n  definition: TValue\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n  commentId: '!:TValue'\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)\n- uid: TKey\n  isExternal: false\n  name: TKey\n  fullName: TKey\n  nameWithType: TKey\n- uid: TValue\n  isExternal: false\n  name: TValue\n  fullName: TValue\n  nameWithType: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyDictionary.KeyCollection<>\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection<>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection(Of )\n  name.vb: ReadOnlyDictionary.KeyCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n    name: ReadOnlyDictionary.KeyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n    name: ReadOnlyDictionary.KeyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyDictionary.KeyCollection<>\n  nameWithType.vb: ReadOnlyDictionary.KeyCollection(Of )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.IsReadOnly\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Collections.Generic.ICollection`1.IsReadOnly\n  isExternal: false\n  name: IsReadOnly\n  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly\n  nameWithType: ICollection<T>.IsReadOnly\n  nameWithType.vb: ICollection(Of T).IsReadOnly\n  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Item(`0)\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)\n- uid: System.Collections.Generic.IDictionary`2.Item(`0)\n  isExternal: true\n  name: Item[TKey]\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)\n  name.vb: Item(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - name: TKey\n    fullName: TKey\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Item(`0)\n    name: Item\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Item[TKey]\n  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)\n  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.ICollection{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n  fullname.vb: System.Collections.Generic.ICollection(Of TKey)\n  name.vb: ICollection(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TKey>\n  nameWithType.vb: ICollection(Of TKey)\n  commentId: T:System.Collections.Generic.ICollection{`0}\n- uid: System.Collections.Generic.IDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys\n  nameWithType: IDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IDictionary`2.Keys\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.ICollection{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.ICollection`1\n  name: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n  fullname.vb: System.Collections.Generic.ICollection(Of TValue)\n  name.vb: ICollection(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: ICollection<TValue>\n  nameWithType.vb: ICollection(Of TValue)\n  commentId: T:System.Collections.Generic.ICollection{`1}\n- uid: System.Collections.Generic.IDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values\n  nameWithType: IDictionary<TKey, TValue>.Values\n  nameWithType.vb: IDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IDictionary`2.Values\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Keys\n- uid: System.Collections.Generic.IEnumerable{{TKey}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey)\n  name.vb: IEnumerable(Of TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TKey>\n  nameWithType.vb: IEnumerable(Of TKey)\n  commentId: T:System.Collections.Generic.IEnumerable{`0}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Keys\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Values\n- uid: System.Collections.Generic.IEnumerable{{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)\n  name.vb: IEnumerable(Of TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<TValue>\n  nameWithType.vb: IEnumerable(Of TValue)\n  commentId: T:System.Collections.Generic.IEnumerable{`1}\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values\n  isExternal: true\n  name: Values\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values\n  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Values\n- uid: System.Collections.ICollection.IsSynchronized\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: IsSynchronized\n  fullName: System.Collections.ICollection.IsSynchronized\n  nameWithType: ICollection.IsSynchronized\n  commentId: P:System.Collections.ICollection.IsSynchronized\n- uid: System.Collections.ICollection.SyncRoot\n  parent: System.Collections.ICollection\n  isExternal: false\n  name: SyncRoot\n  fullName: System.Collections.ICollection.SyncRoot\n  nameWithType: ICollection.SyncRoot\n  commentId: P:System.Collections.ICollection.SyncRoot\n- uid: System.Collections.IDictionary.IsFixedSize\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsFixedSize\n  fullName: System.Collections.IDictionary.IsFixedSize\n  nameWithType: IDictionary.IsFixedSize\n  commentId: P:System.Collections.IDictionary.IsFixedSize\n- uid: System.Collections.IDictionary.IsReadOnly\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: IsReadOnly\n  fullName: System.Collections.IDictionary.IsReadOnly\n  nameWithType: IDictionary.IsReadOnly\n  commentId: P:System.Collections.IDictionary.IsReadOnly\n- uid: System.Collections.IDictionary.Item(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Item[Object]\n  fullName: System.Collections.IDictionary.Item[System.Object]\n  fullname.vb: System.Collections.IDictionary.Item(System.Object)\n  name.vb: Item(Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: '['\n    fullName: '['\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ']'\n    fullName: ']'\n  spec.vb:\n  - uid: System.Collections.IDictionary.Item(System.Object)\n    name: Item\n    fullName: System.Collections.IDictionary.Item\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Item[Object]\n  nameWithType.vb: IDictionary.Item(Object)\n  commentId: P:System.Collections.IDictionary.Item(System.Object)\n- uid: System.Collections.IDictionary.Keys\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Keys\n  fullName: System.Collections.IDictionary.Keys\n  nameWithType: IDictionary.Keys\n  commentId: P:System.Collections.IDictionary.Keys\n- uid: System.Collections.IDictionary.Values\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Values\n  fullName: System.Collections.IDictionary.Values\n  nameWithType: IDictionary.Values\n  commentId: P:System.Collections.IDictionary.Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyDictionary.ValueCollection<>\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection<>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection(Of )\n  name.vb: ReadOnlyDictionary.ValueCollection(Of )\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n    name: ReadOnlyDictionary.ValueCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection\n  - name: <\n    fullName: <\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n    name: ReadOnlyDictionary.ValueCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: )\n    fullName: )\n  nameWithType: ReadOnlyDictionary.ValueCollection<>\n  nameWithType.vb: ReadOnlyDictionary.ValueCollection(Of )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.ContainsKey(`0)\n- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n  isExternal: true\n  name: ContainsKey(TKey)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n    name: ContainsKey\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator\n  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<KeyValuePair<TKey, TValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>\n  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))\n  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}\n- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable<T>.GetEnumerator()\n  nameWithType.vb: IEnumerable(Of T).GetEnumerator()\n  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator\n- uid: System.Collections.Generic.IEnumerator`1\n  isExternal: false\n  name: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n  fullname.vb: System.Collections.Generic.IEnumerator(Of T)\n  name.vb: IEnumerator(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: IEnumerator<T>\n  nameWithType.vb: IEnumerator(Of T)\n  commentId: T:System.Collections.Generic.IEnumerator`1\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Add(`0)\n  name: Add(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Add(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}\n- uid: System.Collections.Generic.ICollection`1.Add(`0)\n  isExternal: false\n  name: Add(T)\n  fullName: System.Collections.Generic.ICollection<T>.Add(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection<T>.Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Add(`0)\n    name: Add\n    fullName: System.Collections.Generic.ICollection(Of T).Add\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Add(T)\n  nameWithType.vb: ICollection(Of T).Add(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)\n- uid: System.Collections.Generic.KeyValuePair`2\n  isExternal: false\n  name: KeyValuePair<TKey, TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)\n  name.vb: KeyValuePair(Of TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: KeyValuePair<TKey, TValue>\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)\n  commentId: T:System.Collections.Generic.KeyValuePair`2\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Clear\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear\n- uid: System.Collections.Generic.ICollection`1.Clear\n  isExternal: false\n  name: Clear()\n  fullName: System.Collections.Generic.ICollection<T>.Clear()\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection<T>.Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Clear\n    name: Clear\n    fullName: System.Collections.Generic.ICollection(Of T).Clear\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Clear()\n  nameWithType.vb: ICollection(Of T).Clear()\n  commentId: M:System.Collections.Generic.ICollection`1.Clear\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Contains(`0)\n  name: Contains(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Contains(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Contains(`0)\n  isExternal: false\n  name: Contains(T)\n  fullName: System.Collections.Generic.ICollection<T>.Contains(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection<T>.Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Contains(`0)\n    name: Contains\n    fullName: System.Collections.Generic.ICollection(Of T).Contains\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Contains(T)\n  nameWithType.vb: ICollection(Of T).Contains(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)\n  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]\n  name: KeyValuePair<TKey, TValue>[]\n  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]\n  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()\n  name.vb: KeyValuePair(Of TKey, TValue)()\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: ()\n    fullName: ()\n  nameWithType: KeyValuePair<TKey, TValue>[]\n  nameWithType.vb: KeyValuePair(Of TKey, TValue)()\n- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n  isExternal: true\n  name: CopyTo(T[], Int32)\n  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)\n  name.vb: CopyTo(T(), Int32)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection<T>.CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n    name: CopyTo\n    fullName: System.Collections.Generic.ICollection(Of T).CopyTo\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.CopyTo(T[], Int32)\n  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)\n  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)\n- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})\n  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}\n  definition: System.Collections.Generic.ICollection`1.Remove(`0)\n  name: Remove(KeyValuePair<TKey, TValue>)\n  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)\n  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))\n  name.vb: Remove(KeyValuePair(Of TKey, TValue))\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    fullName: <\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: '>'\n    fullName: '>'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove\n  - name: (\n    fullName: (\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  - name: )\n    fullName: )\n  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)\n  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))\n  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})\n- uid: System.Collections.Generic.ICollection`1.Remove(`0)\n  isExternal: false\n  name: Remove(T)\n  fullName: System.Collections.Generic.ICollection<T>.Remove(T)\n  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection<T>.Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.ICollection`1.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.ICollection(Of T).Remove\n  - name: (\n    fullName: (\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  nameWithType: ICollection<T>.Remove(T)\n  nameWithType.vb: ICollection(Of T).Remove(T)\n  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)\n- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  isExternal: true\n  name: Add(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n    name: Add\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.Remove(`0)\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)\n- uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n  isExternal: true\n  name: Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n    name: Remove\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)\n  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)\n  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)\n- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ICollection\n  isExternal: true\n  name: CopyTo(Array, Int32)\n  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)\n  spec.csharp:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n    name: CopyTo\n    fullName: System.Collections.ICollection.CopyTo\n  - name: (\n    fullName: (\n  - uid: System.Array\n    name: Array\n    fullName: System.Array\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: ICollection.CopyTo(Array, Int32)\n  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  fullName: System.Array\n  nameWithType: Array\n  commentId: T:System.Array\n- uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Add(Object, Object)\n  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n    name: Add\n    fullName: System.Collections.IDictionary.Add\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Add(Object, Object)\n  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)\n- uid: System.Collections.IDictionary.Clear\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Clear()\n  fullName: System.Collections.IDictionary.Clear()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Clear\n    name: Clear\n    fullName: System.Collections.IDictionary.Clear\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Clear()\n  commentId: M:System.Collections.IDictionary.Clear\n- uid: System.Collections.IDictionary.Contains(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Contains(Object)\n  fullName: System.Collections.IDictionary.Contains(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Contains(System.Object)\n    name: Contains\n    fullName: System.Collections.IDictionary.Contains\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Contains(Object)\n  commentId: M:System.Collections.IDictionary.Contains(System.Object)\n- uid: System.Collections.IDictionary.GetEnumerator\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: GetEnumerator()\n  fullName: System.Collections.IDictionary.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IDictionary.GetEnumerator\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.GetEnumerator()\n  commentId: M:System.Collections.IDictionary.GetEnumerator\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  commentId: T:System.Collections.IDictionaryEnumerator\n- uid: System.Collections.IDictionary.Remove(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: true\n  name: Remove(Object)\n  fullName: System.Collections.IDictionary.Remove(System.Object)\n  spec.csharp:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IDictionary.Remove(System.Object)\n    name: Remove\n    fullName: System.Collections.IDictionary.Remove\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: IDictionary.Remove(Object)\n  commentId: M:System.Collections.IDictionary.Remove(System.Object)\n- uid: System.Collections.IEnumerable.GetEnumerator\n  parent: System.Collections.IEnumerable\n  isExternal: false\n  name: GetEnumerator()\n  fullName: System.Collections.IEnumerable.GetEnumerator()\n  spec.csharp:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.IEnumerable.GetEnumerator\n    name: GetEnumerator\n    fullName: System.Collections.IEnumerable.GetEnumerator\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: IEnumerable.GetEnumerator()\n  commentId: M:System.Collections.IEnumerable.GetEnumerator\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  fullName: System.Collections.IEnumerator\n  nameWithType: IEnumerator\n  commentId: T:System.Collections.IEnumerator\n- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)\n  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}\n  definition: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  isExternal: true\n  name: TryGetValue(TKey, TValue)\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n    name: TryGetValue\n    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: TKey\n    fullName: TKey\n  - name: ', '\n    fullName: ', '\n  - name: TValue\n    fullName: TValue\n  - name: )\n    fullName: )\n  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)\n  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)\n  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.Collections.Generic.KeyNotFoundException\n  isExternal: false\n  name: KeyNotFoundException\n  fullName: System.Collections.Generic.KeyNotFoundException\n  nameWithType: KeyNotFoundException\n  commentId: T:System.Collections.Generic.KeyNotFoundException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n"}