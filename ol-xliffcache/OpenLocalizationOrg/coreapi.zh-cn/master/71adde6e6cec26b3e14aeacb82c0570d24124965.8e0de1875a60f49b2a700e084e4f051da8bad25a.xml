{"nodes":[{"pos":[771,807],"content":"TransferCodingWithQualityHeaderValue","needQuote":true,"nodes":[{"content":"TransferCodingWithQualityHeaderValue","pos":[0,36]}]},{"pos":[2797,2841],"content":"TransferCodingWithQualityHeaderValue(String)","needQuote":true,"nodes":[{"content":"TransferCodingWithQualityHeaderValue(String)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;A string used to initialize the new instance.&lt;/p&gt;\\n","pos":[3684,3740],"source":"\\n<p>A string used to initialize the new instance.</p>\\n"},{"pos":[4261,4313],"content":"TransferCodingWithQualityHeaderValue(String, Double)","needQuote":true,"nodes":[{"content":"TransferCodingWithQualityHeaderValue(String, Double)","pos":[0,52]}]},{"content":"\\n&lt;p&gt;A string used to initialize the new instance.&lt;/p&gt;\\n","pos":[5206,5262],"source":"\\n<p>A string used to initialize the new instance.</p>\\n"},{"content":"\\n&lt;p&gt;A value for the quality factor.&lt;/p&gt;\\n","pos":[5328,5370],"source":"\\n<p>A value for the quality factor.</p>\\n"},{"pos":[5816,5823],"content":"Quality","needQuote":true,"nodes":[{"content":"Quality","pos":[0,7]}]},{"pos":[7320,7333],"content":"Parse(String)","needQuote":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A string that represents transfer-coding value information.&lt;/p&gt;\\n","pos":[8200,8270],"source":"\\n<p>A string that represents transfer-coding value information.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is a &lt;strong&gt;null&lt;/strong&gt; reference.&lt;/p&gt;\\n","pos":[8778,8843],"source":"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;input&lt;/em&gt; is not valid transfer-coding with quality header value information.&lt;/p&gt;\\n","pos":[8936,9031],"source":"\\n<p>\\n<em>input</em> is not valid transfer-coding with quality header value information.</p>\\n"},{"pos":[9694,9752],"content":"TryParse(String, out TransferCodingWithQualityHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, out TransferCodingWithQualityHeaderValue)","pos":[0,58]}]},{"content":"\\n&lt;p&gt;The string to validate.&lt;/p&gt;\\n","pos":[10765,10799],"source":"\\n<p>The string to validate.</p>\\n"},{"pos":[12079,12102],"content":"System.Net.Http.Headers","needQuote":true,"nodes":[{"content":"System.Net.Http.Headers","pos":[0,23]}]},{"pos":[12284,12290],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12488,12513],"content":"TransferCodingHeaderValue","needQuote":true,"nodes":[{"content":"TransferCodingHeaderValue","pos":[0,25]}]},{"pos":[12839,12849],"content":"Parameters","needQuote":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[13203,13208],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[13562,13576],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13767,13773],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[13855,13856],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13906,13912],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13972,13973],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14092,14098],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14180,14181],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14231,14237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14297,14298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14616,14629],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14802,14813],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[14900,14901],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14928,14929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15038,15049],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[15136,15137],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15164,15165],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15469,15479],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15646,15654],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15738,15739],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15766,15767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15873,15881],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[15965,15966],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15993,15994],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16357,16400],"content":"TryParse(String, TransferCodingHeaderValue)","needQuote":true,"nodes":[{"content":"TryParse(String, TransferCodingHeaderValue)","pos":[0,43]}]},{"pos":[16697,16705],"content":"TryParse","needQuote":true,"nodes":[{"content":"TryParse","pos":[0,8]}]},{"pos":[16789,16790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16840,16846],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[16907,16908]},{"pos":[16999,17024],"content":"TransferCodingHeaderValue","needQuote":true,"nodes":[{"content":"TransferCodingHeaderValue","pos":[0,25]}]},{"pos":[17099,17100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17272,17280],"content":"TryParse","needQuote":true,"nodes":[{"content":"TryParse","pos":[0,8]}]},{"pos":[17364,17365],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17415,17421],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":",","pos":[17482,17483]},{"pos":[17574,17599],"content":"TransferCodingHeaderValue","needQuote":true,"nodes":[{"content":"TransferCodingHeaderValue","pos":[0,25]}]},{"pos":[17674,17675],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18026,18048],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[18196,18202],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18269,18270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18320,18326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18387,18388]},{"pos":[18443,18449],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18509,18510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18607,18613],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18680,18681],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18731,18737],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18798,18799]},{"pos":[18854,18860],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18920,18921],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19166,19197],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[19363,19378],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19454,19455],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19505,19511],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19572,19573]},{"pos":[19628,19634],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19694,19695],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19801,19816],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19892,19893],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19943,19949],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[20010,20011]},{"pos":[20066,20072],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20132,20133],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20359,20368],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20461,20468],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20536,20537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20564,20565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20634,20641],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20709,20710],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20737,20738],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20913,20930],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[21039,21054],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21130,21131],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21158,21159],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21236,21251],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[21327,21328],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21355,21356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21501,21507],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21638,21644],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21789,21795],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[21969,21985],"content":"Nullable<Double>","needQuote":true,"nodes":[{"content":"Nullable&lt;Double&gt;","pos":[0,16],"source":"Nullable<Double>"}]},{"pos":[22161,22169],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[22231,22232],"content":"<","needQuote":true,"nodes":[]},{"pos":[22282,22288],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[22418,22426],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[22489,22492]},{"pos":[22549,22555],"content":"Double","needQuote":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[22615,22616],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22821,22832],"content":"Nullable<T>","needQuote":true,"nodes":[{"content":"Nullable&lt;T&gt;","pos":[0,11],"source":"Nullable<T>"}]},{"pos":[22979,22987],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"pos":[23028,23029],"content":"<","needQuote":true,"nodes":[]},{"pos":[23056,23057],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23154,23162],"content":"Nullable","needQuote":true,"nodes":[{"content":"Nullable","pos":[0,8]}]},{"content":"(Of","pos":[23204,23207]},{"pos":[23241,23242],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[23269,23270],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23512,23548],"content":"TransferCodingWithQualityHeaderValue","needQuote":true,"nodes":[{"content":"TransferCodingWithQualityHeaderValue","pos":[0,36]}]},{"pos":[23818,23825],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23971,23992],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[24191,24206],"content":"FormatException","needQuote":true,"nodes":[{"content":"FormatException","pos":[0,15]}]}],"content":"items:\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  commentId: T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  id: TransferCodingWithQualityHeaderValue\n  parent: System.Net.Http.Headers\n  children:\n  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)\n  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)\n  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)\n  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality\n  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)\n  langs:\n  - csharp\n  - vb\n  name: TransferCodingWithQualityHeaderValue\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TransferCodingWithQualityHeaderValue\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 577\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Represents an Accept-Encoding header value.with optional quality factor.</p>\\n\"\n  syntax:\n    content: 'public sealed class TransferCodingWithQualityHeaderValue : TransferCodingHeaderValue'\n    content.vb: >-\n      Public NotInheritable Class TransferCodingWithQualityHeaderValue\n          Inherits TransferCodingHeaderValue\n  inheritance:\n  - System.Object\n  - System.Net.Http.Headers.TransferCodingHeaderValue\n  inheritedMembers:\n  - System.Net.Http.Headers.TransferCodingHeaderValue.Parameters\n  - System.Net.Http.Headers.TransferCodingHeaderValue.Value\n  - System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n  - System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n  - System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n  - System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: TransferCodingWithQualityHeaderValue\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)\n  commentId: M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TransferCodingWithQualityHeaderValue(String)\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 579\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public TransferCodingWithQualityHeaderValue(string value)\n    content.vb: Public Sub New(value As String)\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>A string used to initialize the new instance.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String)\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)\n  commentId: M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)\n  id: '#ctor(System.String,System.Double)'\n  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TransferCodingWithQualityHeaderValue(String, Double)\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(System.String, System.Double)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 580\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public TransferCodingWithQualityHeaderValue(string value, double quality)\n    content.vb: Public Sub New(value As String, quality As Double)\n    parameters:\n    - id: value\n      type: System.String\n      description: \"\\n<p>A string used to initialize the new instance.</p>\\n\"\n    - id: quality\n      type: System.Double\n      description: \"\\n<p>A value for the quality factor.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String, Double)\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality\n  commentId: P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality\n  id: Quality\n  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Quality\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality\n  type: Property\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Quality\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 581\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Gets the quality factor from the <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public double ? Quality { get; set; }\n    content.vb: Public Property Quality As Double?\n    parameters: []\n    return:\n      type: System.Nullable{System.Double}\n      description: \"\\n<p>Returns <xref href=\\\"System.Double\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The quality factor from the <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  - set\n  modifiers.vb:\n  - Public\n  nameWithType: TransferCodingWithQualityHeaderValue.Quality\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)\n  commentId: M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: Parse(String)\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Parse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 582\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Converts a string to an <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  syntax:\n    content: public static TransferCodingWithQualityHeaderValue Parse(string input)\n    content.vb: Public Shared Function Parse(input As String) As TransferCodingWithQualityHeaderValue\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>A string that represents transfer-coding value information.</p>\\n\"\n    return:\n      type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n      description: \"\\n<p>Returns <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>An <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> instance.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>input</em> is a <strong>null</strong> reference.</p>\\n\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"\\n<p>\\n<em>input</em> is not valid transfer-coding with quality header value information.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: TransferCodingWithQualityHeaderValue.Parse(String)\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)\n  commentId: M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)\n  id: TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)\n  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  langs:\n  - csharp\n  - vb\n  name: TryParse(String, out TransferCodingWithQualityHeaderValue)\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String, out System.Net.Http.Headers.TransferCodingWithQualityHeaderValue)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryParse\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 583\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http.Headers\n  summary: \"\\n<p>Determines whether a string is valid <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information.</p>\\n\"\n  syntax:\n    content: public static bool TryParse(string input, out TransferCodingWithQualityHeaderValue parsedValue)\n    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As TransferCodingWithQualityHeaderValue) As Boolean\n    parameters:\n    - id: input\n      type: System.String\n      description: \"\\n<p>The string to validate.</p>\\n\"\n    - id: parsedValue\n      type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n      description: \"\\n<p>The <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> version of the string.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>input</em> is valid <xref href=\\\"System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> information; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.TransferCodingWithQualityHeaderValue)\n  name.vb: TryParse(String, ByRef TransferCodingWithQualityHeaderValue)\n  nameWithType: TransferCodingWithQualityHeaderValue.TryParse(String, out TransferCodingWithQualityHeaderValue)\n  nameWithType.vb: TransferCodingWithQualityHeaderValue.TryParse(String, ByRef TransferCodingWithQualityHeaderValue)\nreferences:\n- uid: System.Net.Http.Headers\n  isExternal: false\n  name: System.Net.Http.Headers\n  fullName: System.Net.Http.Headers\n  commentId: N:System.Net.Http.Headers\n  nameWithType: System.Net.Http.Headers\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: TransferCodingHeaderValue\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue\n  commentId: T:System.Net.Http.Headers.TransferCodingHeaderValue\n  nameWithType: TransferCodingHeaderValue\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.Parameters\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: false\n  name: Parameters\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.Parameters\n  commentId: P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters\n  nameWithType: TransferCodingHeaderValue.Parameters\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.Value\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: false\n  name: Value\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.Value\n  commentId: P:System.Net.Http.Headers.TransferCodingHeaderValue.Value\n  nameWithType: TransferCodingHeaderValue.Value\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n    name: Equals\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n    name: Equals\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)\n  nameWithType: TransferCodingHeaderValue.Equals(Object)\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode()\n  spec.csharp:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n    name: GetHashCode\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n    name: GetHashCode\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode\n  nameWithType: TransferCodingHeaderValue.GetHashCode()\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: false\n  name: ToString()\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.ToString()\n  spec.csharp:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n    name: ToString\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n    name: ToString\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString\n  nameWithType: TransferCodingHeaderValue.ToString()\n- uid: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)\n  parent: System.Net.Http.Headers.TransferCodingHeaderValue\n  isExternal: true\n  name: TryParse(String, TransferCodingHeaderValue)\n  fullName: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String, System.Net.Http.Headers.TransferCodingHeaderValue)\n  spec.csharp:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)\n    name: TryParse\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue\n    name: TransferCodingHeaderValue\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)\n    name: TryParse\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue.TryParse\n  - name: (\n    fullName: (\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.Http.Headers.TransferCodingHeaderValue\n    name: TransferCodingHeaderValue\n    fullName: System.Net.Http.Headers.TransferCodingHeaderValue\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)\n  nameWithType: TransferCodingHeaderValue.TryParse(String, TransferCodingHeaderValue)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  fullName: System.Double\n  commentId: T:System.Double\n  nameWithType: Double\n- uid: System.Nullable{System.Double}\n  parent: System\n  definition: System.Nullable`1\n  name: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n  fullname.vb: System.Nullable(Of System.Double)\n  name.vb: Nullable(Of Double)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Double\n    name: Double\n    fullName: System.Double\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable{System.Double}\n  nameWithType: Nullable<Double>\n  nameWithType.vb: Nullable(Of Double)\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  fullName: System.Nullable<T>\n  fullname.vb: System.Nullable(Of T)\n  name.vb: Nullable(Of T)\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Nullable`1\n    name: Nullable\n    fullName: System.Nullable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Nullable`1\n  nameWithType: Nullable<T>\n  nameWithType.vb: Nullable(Of T)\n- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  parent: System.Net.Http.Headers\n  isExternal: false\n  name: TransferCodingWithQualityHeaderValue\n  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  commentId: T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue\n  nameWithType: TransferCodingWithQualityHeaderValue\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  fullName: System.FormatException\n  nameWithType: FormatException\n  commentId: T:System.FormatException\n"}