{"nodes":[{"pos":[517,547],"content":"SocketReceiveMessageFromResult","needQuote":true,"nodes":[{"content":"SocketReceiveMessageFromResult","pos":[0,30]}]},{"pos":[1760,1773],"content":"ReceivedBytes","needQuote":true,"nodes":[{"content":"ReceivedBytes","pos":[0,13]}]},{"pos":[2697,2708],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[3661,3675],"content":"RemoteEndPoint","needQuote":true,"nodes":[{"content":"RemoteEndPoint","pos":[0,14]}]},{"pos":[4615,4632],"content":"PacketInformation","needQuote":true,"nodes":[{"content":"PacketInformation","pos":[0,17]}]},{"pos":[5471,5489],"content":"System.Net.Sockets","needQuote":true,"nodes":[{"content":"System.Net.Sockets","pos":[0,18]}]},{"pos":[5710,5724],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5890,5896],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5980,5981],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6051,6057],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6142,6143],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6249,6255],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6339,6340],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6410,6416],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6501,6502],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6674,6687],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6834,6845],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[6939,6940],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6987,6988],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7084,7095],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[7189,7190],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7237,7238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7404,7414],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7552,7560],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7648,7649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7696,7697],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7790,7798],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7886,7887],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7934,7935],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8145,8167],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[8361,8367],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8466,8467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8537,8543],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8629,8630]},{"pos":[8708,8714],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8799,8800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8917,8923],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9022,9023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9093,9099],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9185,9186]},{"pos":[9264,9270],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9355,9356],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9584,9615],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[9836,9851],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9968,9969],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10039,10045],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10131,10132]},{"pos":[10210,10216],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10301,10302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10428,10443],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10560,10561],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10631,10637],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10723,10724]},{"pos":[10802,10808],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10893,10894],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11048,11057],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11183,11190],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11291,11292],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11339,11340],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11429,11436],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11537,11538],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11585,11586],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11724,11733],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[11884,11890],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12004,12010],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[12146,12151],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12340,12351],"content":"SocketFlags","needQuote":true,"nodes":[{"content":"SocketFlags","pos":[0,11]}]},{"pos":[12466,12474],"content":"EndPoint","needQuote":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[12678,12697],"content":"IPPacketInformation","needQuote":true,"nodes":[{"content":"IPPacketInformation","pos":[0,19]}]}],"content":"items:\n- uid: System.Net.Sockets.SocketReceiveMessageFromResult\n  commentId: T:System.Net.Sockets.SocketReceiveMessageFromResult\n  id: SocketReceiveMessageFromResult\n  parent: System.Net.Sockets\n  children:\n  - System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation\n  - System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes\n  - System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint\n  - System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags\n  langs:\n  - csharp\n  - vb\n  name: SocketReceiveMessageFromResult\n  nameWithType: SocketReceiveMessageFromResult\n  fullName: System.Net.Sockets.SocketReceiveMessageFromResult\n  type: Struct\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SocketReceiveMessageFromResult\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 377\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public struct SocketReceiveMessageFromResult\n    content.vb: Public Structure SocketReceiveMessageFromResult\n  inheritedMembers:\n  - System.ValueType.Equals(System.Object)\n  - System.ValueType.GetHashCode\n  - System.ValueType.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes\n  commentId: F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes\n  id: ReceivedBytes\n  parent: System.Net.Sockets.SocketReceiveMessageFromResult\n  langs:\n  - csharp\n  - vb\n  name: ReceivedBytes\n  nameWithType: SocketReceiveMessageFromResult.ReceivedBytes\n  fullName: System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceivedBytes\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 379\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public int ReceivedBytes\n    content.vb: Public ReceivedBytes As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags\n  commentId: F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags\n  id: SocketFlags\n  parent: System.Net.Sockets.SocketReceiveMessageFromResult\n  langs:\n  - csharp\n  - vb\n  name: SocketFlags\n  nameWithType: SocketReceiveMessageFromResult.SocketFlags\n  fullName: System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SocketFlags\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 380\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public SocketFlags SocketFlags\n    content.vb: Public SocketFlags As SocketFlags\n    return:\n      type: System.Net.Sockets.SocketFlags\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint\n  commentId: F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint\n  id: RemoteEndPoint\n  parent: System.Net.Sockets.SocketReceiveMessageFromResult\n  langs:\n  - csharp\n  - vb\n  name: RemoteEndPoint\n  nameWithType: SocketReceiveMessageFromResult.RemoteEndPoint\n  fullName: System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: RemoteEndPoint\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 381\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public EndPoint RemoteEndPoint\n    content.vb: Public RemoteEndPoint As\n    return:\n      type: EndPoint\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation\n  commentId: F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation\n  id: PacketInformation\n  parent: System.Net.Sockets.SocketReceiveMessageFromResult\n  langs:\n  - csharp\n  - vb\n  name: PacketInformation\n  nameWithType: SocketReceiveMessageFromResult.PacketInformation\n  fullName: System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketInformation\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 382\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public IPPacketInformation PacketInformation\n    content.vb: Public PacketInformation As IPPacketInformation\n    return:\n      type: System.Net.Sockets.IPPacketInformation\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\nreferences:\n- uid: System.Net.Sockets\n  commentId: N:System.Net.Sockets\n  isExternal: false\n  name: System.Net.Sockets\n  nameWithType: System.Net.Sockets\n  fullName: System.Net.Sockets\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.SocketFlags\n  commentId: T:System.Net.Sockets.SocketFlags\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketFlags\n  nameWithType: SocketFlags\n  fullName: System.Net.Sockets.SocketFlags\n- uid: EndPoint\n  isExternal: true\n  name: EndPoint\n  nameWithType: EndPoint\n  fullName: EndPoint\n- uid: System.Net.Sockets.IPPacketInformation\n  commentId: T:System.Net.Sockets.IPPacketInformation\n  parent: System.Net.Sockets\n  isExternal: false\n  name: IPPacketInformation\n  nameWithType: IPPacketInformation\n  fullName: System.Net.Sockets.IPPacketInformation\n"}