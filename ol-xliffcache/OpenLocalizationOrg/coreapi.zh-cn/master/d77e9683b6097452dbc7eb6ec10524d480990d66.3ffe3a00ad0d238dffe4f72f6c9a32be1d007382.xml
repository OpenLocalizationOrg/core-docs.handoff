{"nodes":[{"pos":[609,630],"content":"StructLayoutAttribute","needQuote":true,"nodes":[{"content":"StructLayoutAttribute","pos":[0,21]}]},{"pos":[2242,2251],"content":"Inherited","needQuote":true,"nodes":[{"content":"Inherited","pos":[0,9]}]},{"pos":[2700,2707],"content":"CharSet","needQuote":true,"nodes":[{"content":"CharSet","pos":[0,7]}]},{"pos":[3927,3931],"content":"Pack","needQuote":true,"nodes":[{"content":"Pack","pos":[0,4]}]},{"pos":[4924,4928],"content":"Size","needQuote":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[6037,6070],"content":"StructLayoutAttribute(LayoutKind)","needQuote":true,"nodes":[{"content":"StructLayoutAttribute(LayoutKind)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifes how the class or structure should be arranged.","pos":[7130,7225],"source":"\\n<p>One of the enumeration values that specifes how the class or structure should be arranged."},{"content":"&lt;/p&gt;\\n","pos":[7226,7232],"source":" </p>\\n"},{"pos":[7736,7741],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"content":"\\n&lt;p&gt;One of the enumeration values that specifies how the class or structure is arranged.&lt;/p&gt;\\n","pos":[8597,8692],"source":"\\n<p>One of the enumeration values that specifies how the class or structure is arranged.</p>\\n"},{"pos":[8895,8925],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[9128,9134],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9282,9291],"content":"Attribute","needQuote":true,"nodes":[{"content":"Attribute","pos":[0,9]}]},{"pos":[9479,9493],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9618,9624],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9673,9674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9724,9730],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9790,9791],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9877,9883],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9932,9933],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9983,9989],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10049,10050],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10253,10266],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10373,10384],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10438,10439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10466,10467],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10543,10554],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10608,10609],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10636,10637],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10819,10829],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10924,10932],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11001,11002],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11029,11030],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11100,11108],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[11177,11178],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11205,11206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11403,11425],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[11573,11579],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[11646,11647],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11697,11703],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[11764,11765]},{"pos":[11820,11826],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11886,11887],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11984,11990],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[12057,12058],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12108,12114],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12175,12176]},{"pos":[12231,12237],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12297,12298],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12543,12574],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[12740,12755],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[12831,12832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12882,12888],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[12949,12950]},{"pos":[13005,13011],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13071,13072],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13178,13193],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[13269,13270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13320,13326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[13387,13388]},{"pos":[13443,13449],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13509,13510],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13736,13745],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[13838,13845],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[13913,13914],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13941,13942],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14011,14018],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[14086,14087],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14114,14115],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14290,14307],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[14416,14431],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14507,14508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14535,14536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14613,14628],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[14704,14705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14732,14733],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14878,14884],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[15064,15071],"content":"CharSet","needQuote":true,"nodes":[{"content":"CharSet","pos":[0,7]}]},{"pos":[15266,15271],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15465,15475],"content":"LayoutKind","needQuote":true,"nodes":[{"content":"LayoutKind","pos":[0,10]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.StructLayoutAttribute\n  commentId: T:System.Runtime.InteropServices.StructLayoutAttribute\n  id: StructLayoutAttribute\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n  - System.Runtime.InteropServices.StructLayoutAttribute.CharSet\n  - System.Runtime.InteropServices.StructLayoutAttribute.Pack\n  - System.Runtime.InteropServices.StructLayoutAttribute.Size\n  - System.Runtime.InteropServices.StructLayoutAttribute.Value\n  langs:\n  - csharp\n  - vb\n  name: StructLayoutAttribute\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: StructLayoutAttribute\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 865\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Lets you control the physical layout of the data fields of a class or structure in memory.</p>\\n\"\n  syntax:\n    content: >-\n      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false)]\n\n      [ComVisible(true)]\n\n      public sealed class StructLayoutAttribute : Attribute, _Attribute\n    content.vb: >-\n      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Struct, Inherited:=False)>\n\n      <ComVisible(True)>\n\n      Public NotInheritable Class StructLayoutAttribute\n          Inherits Attribute\n          Implements _Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetHashCode\n  - System.Object.ToString\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  attributes:\n  - type: System.AttributeUsageAttribute\n    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)\n    arguments:\n    - type: System.AttributeTargets\n      value: 12\n    namedArguments:\n    - name: Inherited\n      type: System.Boolean\n      value: false\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: StructLayoutAttribute\n- uid: System.Runtime.InteropServices.StructLayoutAttribute.CharSet\n  commentId: F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet\n  id: CharSet\n  parent: System.Runtime.InteropServices.StructLayoutAttribute\n  langs:\n  - csharp\n  - vb\n  name: CharSet\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute.CharSet\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CharSet\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 935\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Indicates whether string data fields within the class should be marshaled as <strong>LPWSTR</strong> or <strong>LPSTR</strong> by default.</p>\\n\"\n  syntax:\n    content: public CharSet CharSet\n    content.vb: Public CharSet As CharSet\n    return:\n      type: System.Runtime.InteropServices.CharSet\n  seealso:\n  - type: System.Runtime.InteropServices.CharSet\n    commentId: T:System.Runtime.InteropServices.CharSet\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StructLayoutAttribute.CharSet\n- uid: System.Runtime.InteropServices.StructLayoutAttribute.Pack\n  commentId: F:System.Runtime.InteropServices.StructLayoutAttribute.Pack\n  id: Pack\n  parent: System.Runtime.InteropServices.StructLayoutAttribute\n  langs:\n  - csharp\n  - vb\n  name: Pack\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute.Pack\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Pack\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 933\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Controls the alignment of data fields of a class or structure in memory.</p>\\n\"\n  syntax:\n    content: public int Pack\n    content.vb: Public Pack As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StructLayoutAttribute.Pack\n- uid: System.Runtime.InteropServices.StructLayoutAttribute.Size\n  commentId: F:System.Runtime.InteropServices.StructLayoutAttribute.Size\n  id: Size\n  parent: System.Runtime.InteropServices.StructLayoutAttribute\n  langs:\n  - csharp\n  - vb\n  name: Size\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute.Size\n  type: Field\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Size\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 934\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Indicates the absolute size of the class or structure.</p>\\n\"\n  syntax:\n    content: public int Size\n    content.vb: Public Size As Integer\n    return:\n      type: System.Int32\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StructLayoutAttribute.Size\n- uid: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n  commentId: M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n  id: '#ctor(System.Runtime.InteropServices.LayoutKind)'\n  parent: System.Runtime.InteropServices.StructLayoutAttribute\n  langs:\n  - csharp\n  - vb\n  name: StructLayoutAttribute(LayoutKind)\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 924\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Initalizes a new instance of the <xref href=\\\"System.Runtime.InteropServices.StructLayoutAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class with the specified <xref href=\\\"System.Runtime.InteropServices.LayoutKind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration member.</p>\\n\"\n  syntax:\n    content: public StructLayoutAttribute(LayoutKind layoutKind)\n    content.vb: Public Sub New(layoutKind As LayoutKind)\n    parameters:\n    - id: layoutKind\n      type: System.Runtime.InteropServices.LayoutKind\n      description: \"\\n<p>One of the enumeration values that specifes how the class or structure should be arranged. </p>\\n\"\n  seealso:\n  - type: System.Runtime.InteropServices.LayoutKind\n    commentId: T:System.Runtime.InteropServices.LayoutKind\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: StructLayoutAttribute.StructLayoutAttribute(LayoutKind)\n- uid: System.Runtime.InteropServices.StructLayoutAttribute.Value\n  commentId: P:System.Runtime.InteropServices.StructLayoutAttribute.Value\n  id: Value\n  parent: System.Runtime.InteropServices.StructLayoutAttribute\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute.Value\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Value\n    path: src/mscorlib/src/System/Runtime/InteropServices/Attributes.cs\n    startLine: 932\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.InteropServices\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Runtime.InteropServices.LayoutKind\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> value that specifies how the class or structure is arranged.</p>\\n\"\n  syntax:\n    content: public LayoutKind Value { get; }\n    content.vb: Public ReadOnly Property Value As LayoutKind\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.LayoutKind\n      description: \"\\n<p>One of the enumeration values that specifies how the class or structure is arranged.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: StructLayoutAttribute.Value\nreferences:\n- uid: System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  fullName: System.Attribute\n  nameWithType: Attribute\n  commentId: T:System.Attribute\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Attribute.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.Equals(System.Object)\n    name: Equals\n    fullName: System.Attribute.Equals\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Attribute.Equals(Object)\n  commentId: M:System.Attribute.Equals(System.Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  fullName: System.Attribute.GetHashCode()\n  spec.csharp:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Attribute.GetHashCode\n    name: GetHashCode\n    fullName: System.Attribute.GetHashCode\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Attribute.GetHashCode()\n  commentId: M:System.Attribute.GetHashCode\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Runtime.InteropServices.CharSet\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CharSet\n  fullName: System.Runtime.InteropServices.CharSet\n  nameWithType: CharSet\n  commentId: T:System.Runtime.InteropServices.CharSet\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.Runtime.InteropServices.LayoutKind\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: LayoutKind\n  fullName: System.Runtime.InteropServices.LayoutKind\n  nameWithType: LayoutKind\n  commentId: T:System.Runtime.InteropServices.LayoutKind\n"}