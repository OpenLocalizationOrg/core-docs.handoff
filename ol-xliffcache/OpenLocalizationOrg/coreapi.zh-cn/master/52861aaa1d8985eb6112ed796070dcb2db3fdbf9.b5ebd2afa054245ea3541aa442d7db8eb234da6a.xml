{"nodes":[{"pos":[606,617],"content":"IEnumString","needQuote":true,"nodes":[{"content":"IEnumString","pos":[0,11]}]},{"pos":[2386,2408],"content":"Clone(out IEnumString)","needQuote":true,"nodes":[{"content":"Clone(out IEnumString)","pos":[0,22]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the newly created enumerator.","pos":[3284,3368],"source":"\\n<p>When this method returns, contains a reference to the newly created enumerator."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[3369,3414],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[4067,4096],"content":"Next(Int32, String[], IntPtr)","needQuote":true,"nodes":[{"content":"Next(Int32, String[], IntPtr)","pos":[0,29]}]},{"content":"\\n&lt;p&gt;The number of strings to return in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[5130,5185],"source":"\\n<p>The number of strings to return in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[5186,5192],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the enumerated strings.","pos":[5258,5336],"source":"\\n<p>When this method returns, contains a reference to the enumerated strings."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[5337,5382],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[5722,5734],"content":"ArraySubType","needQuote":true,"nodes":[{"content":"ArraySubType","pos":[0,12]}]},{"pos":[5832,5846],"content":"SizeParamIndex","needQuote":true,"nodes":[{"content":"SizeParamIndex","pos":[0,14]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a reference to the actual number of strings enumerated in &lt;em&gt;rgelt&lt;/em&gt;.","pos":[6108,6221],"source":"\\n<p>When this method returns, contains a reference to the actual number of strings enumerated in <em>rgelt</em>."},{"content":"&lt;/p&gt;\\n","pos":[6222,6228],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the &lt;em&gt;pceltFetched&lt;/em&gt; parameter equals the &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[6287,6433],"source":"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[6960,6967],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[7906,7917],"content":"Skip(Int32)","needQuote":true,"nodes":[{"content":"Skip(Int32)","pos":[0,11]}]},{"content":"\\n&lt;p&gt;The number of elements to skip in the enumeration.","pos":[8731,8786],"source":"\\n<p>The number of elements to skip in the enumeration."},{"content":"&lt;/p&gt;\\n","pos":[8787,8793],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;S_OK&lt;/strong&gt; if the number of elements skipped equals the &lt;em&gt;celt&lt;/em&gt; parameter; otherwise, &lt;strong&gt;S_FALSE&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[8852,8993],"source":"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n"},{"pos":[9122,9161],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[9462,9473],"content":"IEnumString","needQuote":true,"nodes":[{"content":"IEnumString","pos":[0,11]}]},{"pos":[9698,9703],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9810,9818],"content":"String[]","needQuote":true,"nodes":[{"content":"String[]","pos":[0,8]}]},{"pos":[9946,9952],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"content":"[]","pos":[10013,10015]},{"pos":[10080,10086],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10146,10148],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[10285,10291],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[10412,10418],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumString\n  id: IEnumString\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)\n  - System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IEnumString.Reset\n  - System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)\n  langs:\n  - csharp\n  - vb\n  name: IEnumString\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IEnumString\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Manages the definition of the <strong>IEnumString</strong> interface.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"00000101-0000-0000-C000-000000000046\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IEnumString\n    content.vb: >-\n      <Guid(\"00000101-0000-0000-C000-000000000046\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IEnumString\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IEnumString\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumString.Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)\n  id: Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumString\n  langs:\n  - csharp\n  - vb\n  name: Clone(out IEnumString)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString.Clone(out System.Runtime.InteropServices.ComTypes.IEnumString)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Creates a new enumerator that contains the same enumeration state as the current one.</p>\\n\"\n  syntax:\n    content: void Clone(out IEnumString ppenum)\n    content.vb: Sub Clone(ByRef ppenum As IEnumString)\n    parameters:\n    - id: ppenum\n      type: System.Runtime.InteropServices.ComTypes.IEnumString\n      description: \"\\n<p>When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumString.Clone(ByRef System.Runtime.InteropServices.ComTypes.IEnumString)\n  name.vb: Clone(ByRef IEnumString)\n  nameWithType: IEnumString.Clone(out IEnumString)\n  nameWithType.vb: IEnumString.Clone(ByRef IEnumString)\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)\n  id: Next(System.Int32,System.String[],System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumString\n  langs:\n  - csharp\n  - vb\n  name: Next(Int32, String[], IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32, System.String[], System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Next\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Next(int celt, [MarshalAs(UnmanagedType.LPArray, ArraySubType = UnmanagedType.LPWStr, SizeParamIndex = (short)0), Out] string[] rgelt, IntPtr pceltFetched)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Next(celt As Integer, rgelt As String(), pceltFetched As IntPtr) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of strings to return in <em>rgelt</em>. </p>\\n\"\n    - id: rgelt\n      type: System.String[]\n      description: \"\\n<p>When this method returns, contains a reference to the enumerated strings. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 42\n        namedArguments:\n        - name: ArraySubType\n          type: System.Runtime.InteropServices.UnmanagedType\n          value: 21\n        - name: SizeParamIndex\n          type: System.Int16\n          value: 0\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: pceltFetched\n      type: System.IntPtr\n      description: \"\\n<p>When this method returns, contains a reference to the actual number of strings enumerated in <em>rgelt</em>. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32, System.String(), System.IntPtr)\n  name.vb: Next(Int32, String(), IntPtr)\n  nameWithType: IEnumString.Next(Int32, String[], IntPtr)\n  nameWithType.vb: IEnumString.Next(Int32, String(), IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString.Reset\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumString.Reset\n  id: Reset\n  parent: System.Runtime.InteropServices.ComTypes.IEnumString\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Resets the enumeration sequence to the beginning.</p>\\n\"\n  syntax:\n    content: void Reset()\n    content.vb: Sub Reset\n  nameWithType: IEnumString.Reset()\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)\n  id: Skip(System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IEnumString\n  langs:\n  - csharp\n  - vb\n  name: Skip(Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString.Skip(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Skip\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumString.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Skips a specified number of items in the enumeration sequence.</p>\\n\"\n  syntax:\n    content: >-\n      [PreserveSig]\n\n      int Skip(int celt)\n    content.vb: >-\n      <PreserveSig>\n\n      Function Skip(celt As Integer) As Integer\n    parameters:\n    - id: celt\n      type: System.Int32\n      description: \"\\n<p>The number of elements to skip in the enumeration. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>\\n<strong>S_OK</strong> if the number of elements skipped equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\\n\"\n  nameWithType: IEnumString.Skip(Int32)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Runtime.InteropServices.ComTypes.IEnumString\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IEnumString\n  fullName: System.Runtime.InteropServices.ComTypes.IEnumString\n  nameWithType: IEnumString\n  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumString\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System.String[]\n  name: String[]\n  fullName: System.String[]\n  fullname.vb: System.String()\n  name.vb: String()\n  spec.csharp:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.String\n    name: String\n    fullName: System.String\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: String[]\n  nameWithType.vb: String()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}