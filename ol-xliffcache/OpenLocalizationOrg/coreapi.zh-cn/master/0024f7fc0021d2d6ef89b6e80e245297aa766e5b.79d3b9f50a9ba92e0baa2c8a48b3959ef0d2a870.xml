{"nodes":[{"pos":[194,208],"content":"IComparable<T>","needQuote":true,"nodes":[{"content":"IComparable&lt;T&gt;","pos":[0,14],"source":"IComparable<T>"}]},{"content":"\\n&lt;p&gt;The type of object to compare.","pos":[894,929],"source":"\\n<p>The type of object to compare."},{"content":"&lt;/p&gt;\\n","pos":[930,936],"source":" </p>\\n"},{"pos":[1482,1494],"content":"CompareTo(T)","needQuote":true,"nodes":[{"content":"CompareTo(T)","pos":[0,12]}]},{"content":"\\n&lt;p&gt;An object to compare with this instance.","pos":[2261,2306],"source":"\\n<p>An object to compare with this instance."},{"content":"&lt;/p&gt;\\n","pos":[2307,2313],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A value that indicates the relative order of the objects being compared.","pos":[2372,2449],"source":"\\n<p>A value that indicates the relative order of the objects being compared."},{"content":"The return value has these meanings: &lt;/p&gt;\\n&lt;p&gt;Value &lt;/p&gt;\\n&lt;p&gt;Meaning &lt;/p&gt;\\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Less than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance precedes &lt;em&gt;other&lt;/em&gt; in the sort order.","pos":[2450,2643],"source":" The return value has these meanings: </p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance precedes <em>other</em> in the sort order."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance occurs in the same position in the sort order as &lt;em&gt;other&lt;/em&gt;.","pos":[2645,2777],"source":"  </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance occurs in the same position in the sort order as <em>other</em>."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\\n&lt;p&gt;Greater than zero &lt;/p&gt;\\n&lt;/td&gt;&lt;td&gt;\\n&lt;p&gt;This instance follows &lt;em&gt;other&lt;/em&gt; in the sort order.","pos":[2778,2900],"source":" </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance follows <em>other</em> in the sort order."},{"content":"&lt;/p&gt;\\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\\n","pos":[2901,2935],"source":" </p>\\n</td></tr></tbody></table>\\n"},{"pos":[3269,3275],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[3377,3378],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[3495,3500],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[3613,3614],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"items:\n- uid: System.IComparable`1\n  commentId: T:System.IComparable`1\n  id: IComparable`1\n  parent: System\n  children:\n  - System.IComparable`1.CompareTo(`0)\n  langs:\n  - csharp\n  - vb\n  name: IComparable<T>\n  fullName: System.IComparable<T>\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/IComparable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IComparable\n    path: src/mscorlib/src/System/IComparable.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</p>\\n\"\n  syntax:\n    content: public interface IComparable<in T>\n    content.vb: Public Interface IComparable(Of In T)\n    typeParameters:\n    - id: T\n      description: \"\\n<p>The type of object to compare. </p>\\n\"\n  seealso:\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  - type: System.IEquatable`1\n    commentId: T:System.IEquatable`1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  fullName.vb: System.IComparable(Of T)\n  name.vb: IComparable(Of T)\n  nameWithType: IComparable<T>\n  nameWithType.vb: IComparable(Of T)\n- uid: System.IComparable`1.CompareTo(`0)\n  commentId: M:System.IComparable`1.CompareTo(`0)\n  id: CompareTo(`0)\n  parent: System.IComparable`1\n  langs:\n  - csharp\n  - vb\n  name: CompareTo(T)\n  fullName: System.IComparable<T>.CompareTo(T)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/IComparable.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CompareTo\n    path: src/mscorlib/src/System/IComparable.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime\n  namespace: System\n  summary: \"\\n<p>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. </p>\\n\"\n  syntax:\n    content: int CompareTo(T other)\n    content.vb: Function CompareTo(other As T) As Integer\n    parameters:\n    - id: other\n      type: '{T}'\n      description: \"\\n<p>An object to compare with this instance. </p>\\n\"\n    return:\n      type: System.Int32\n      description: \"\\n<p>A value that indicates the relative order of the objects being compared. The return value has these meanings: </p>\\n<p>Value </p>\\n<p>Meaning </p>\\n<table><tbody><tr><td>\\n<p>Less than zero </p>\\n</td><td>\\n<p>This instance precedes <em>other</em> in the sort order.  </p>\\n</td></tr><tr><td>\\n<p>Zero </p>\\n</td><td>\\n<p>This instance occurs in the same position in the sort order as <em>other</em>. </p>\\n</td></tr><tr><td>\\n<p>Greater than zero </p>\\n</td><td>\\n<p>This instance follows <em>other</em> in the sort order. </p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.Object\n    commentId: T:System.Object\n  - type: System.IComparable\n    commentId: T:System.IComparable\n  fullName.vb: System.IComparable(Of T).CompareTo(T)\n  nameWithType: IComparable<T>.CompareTo(T)\n  nameWithType.vb: IComparable(Of T).CompareTo(T)\nreferences:\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: '{T}'\n  definition: T\n  name: T\n  fullName: T\n  nameWithType: T\n  commentId: '!:T'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: T\n  isExternal: false\n  name: T\n  fullName: T\n  nameWithType: T\n"}