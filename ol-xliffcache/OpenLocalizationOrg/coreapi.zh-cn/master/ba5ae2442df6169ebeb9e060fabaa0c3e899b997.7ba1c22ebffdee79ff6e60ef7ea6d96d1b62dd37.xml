{"nodes":[{"pos":[2817,2839],"content":"DataContractSerializer","needQuote":true,"nodes":[{"content":"DataContractSerializer","pos":[0,22]}]},{"pos":[5809,5837],"content":"DataContractSerializer(Type)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[6772,6845],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"pos":[7417,7464],"content":"DataContractSerializer(Type, IEnumerable<Type>)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, IEnumerable&lt;Type&gt;)","pos":[0,47],"source":"DataContractSerializer(Type, IEnumerable<Type>)"}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[8591,8664],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"pos":[10242,10302],"content":"DataContractSerializer(Type, DataContractSerializerSettings)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, DataContractSerializerSettings)","pos":[0,60]}]},{"content":"\\n&lt;p&gt;The type of the instance to serialize or deserialize.&lt;/p&gt;\\n","pos":[11396,11460],"source":"\\n<p>The type of the instance to serialize or deserialize.</p>\\n"},{"content":"\\n&lt;p&gt;The serializer settings.&lt;/p&gt;\\n","pos":[11573,11608],"source":"\\n<p>The serializer settings.</p>\\n"},{"pos":[12140,12184],"content":"DataContractSerializer(Type, String, String)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, String, String)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[13283,13356],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"content":"\\n&lt;p&gt;The name of the XML element that encloses the content to serialize or deserialize.&lt;/p&gt;\\n","pos":[13423,13516],"source":"\\n<p>The name of the XML element that encloses the content to serialize or deserialize.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace of the XML element that encloses the content to serialize or deserialize.&lt;/p&gt;\\n","pos":[13588,13686],"source":"\\n<p>The namespace of the XML element that encloses the content to serialize or deserialize.</p>\\n"},{"pos":[14358,14421],"content":"DataContractSerializer(Type, String, String, IEnumerable<Type>)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, String, String, IEnumerable&lt;Type&gt;)","pos":[0,63],"source":"DataContractSerializer(Type, String, String, IEnumerable<Type>)"}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[15750,15823],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"content":"\\n&lt;p&gt;The root element name of the content.&lt;/p&gt;\\n","pos":[15890,15938],"source":"\\n<p>The root element name of the content.</p>\\n"},{"content":"\\n&lt;p&gt;The namespace of the root element.&lt;/p&gt;\\n","pos":[16010,16055],"source":"\\n<p>The namespace of the root element.</p>\\n"},{"pos":[17717,17787],"content":"DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)","pos":[0,70]}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[19095,19168],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"pos":[20450,20539],"content":"DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)","needQuote":true,"nodes":[{"content":"DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable&lt;Type&gt;)","pos":[0,89],"source":"DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)"}]},{"content":"\\n&lt;p&gt;The type of the instances that are serialized or deserialized.&lt;/p&gt;\\n","pos":[22038,22111],"source":"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n"},{"pos":[24204,24229],"content":"IgnoreExtensionDataObject","needQuote":true,"nodes":[{"content":"IgnoreExtensionDataObject","pos":[0,25]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to omit the extension data; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[25141,25238],"source":"\\n<p>\\n<strong>true</strong> to omit the extension data; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[26223,26233],"content":"KnownTypes","needQuote":true,"nodes":[{"content":"KnownTypes","pos":[0,10]}]},{"pos":[28124,28145],"content":"MaxItemsInObjectGraph","needQuote":true,"nodes":[{"content":"MaxItemsInObjectGraph","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The number of items exceeds the maximum value.&lt;/p&gt;\\n","pos":[29274,29331],"source":"\\n<p>The number of items exceeds the maximum value.</p>\\n"},{"pos":[29777,29801],"content":"PreserveObjectReferences","needQuote":true,"nodes":[{"content":"PreserveObjectReferences","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to keep the references; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[30675,30768],"source":"\\n<p>\\n<strong>true</strong> to keep the references; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[31211,31233],"content":"SerializeReadOnlyTypes","needQuote":true,"nodes":[{"content":"SerializeReadOnlyTypes","pos":[0,22]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if read-only types are serialized; &lt;strong&gt;false&lt;/strong&gt; if all types are serialized.&lt;/p&gt;\\n","pos":[32060,32181],"source":"\\n<p>\\n<strong>true</strong> if read-only types are serialized; <strong>false</strong> if all types are serialized.</p>\\n"},{"pos":[32691,32725],"content":"IsStartObject(XmlDictionaryReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlDictionaryReader)","pos":[0,34]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader is at the start element of the stream to read; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[33917,34047],"source":"\\n<p>\\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[34654,34678],"content":"IsStartObject(XmlReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlReader)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the reader is at the start element of the stream to read; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[35811,35941],"source":"\\n<p>\\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[36594,36634],"content":"ReadObject(XmlDictionaryReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlDictionaryReader, Boolean)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;strong&gt;false&lt;/strong&gt;.","pos":[37985,38152],"source":"\\n<p>\\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>."},{"content":"&lt;/p&gt;\\n","pos":[38153,38159],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[38219,38254],"source":"\\n<p>The deserialized object.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;verifyObjectName&lt;/em&gt; parameter is set to &lt;strong&gt;true&lt;/strong&gt;, and the element name and namespace do not correspond to the values set in the constructor.","pos":[38540,38708],"source":"\\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor."},{"content":"&lt;/p&gt;\\n","pos":[38709,38715],"source":" </p>\\n"},{"pos":[39210,39231],"content":"ReadObject(XmlReader)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader)","pos":[0,21]}]},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[40342,40377],"source":"\\n<p>The deserialized object.</p>\\n"},{"pos":[40994,41024],"content":"ReadObject(XmlReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader, Boolean)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[42314,42487],"source":"\\n<p>\\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The deserialized object.&lt;/p&gt;\\n","pos":[42547,42582],"source":"\\n<p>The deserialized object.</p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;verifyObjectName&lt;/em&gt; parameter is set to &lt;strong&gt;true&lt;/strong&gt;, and the element name and namespace do not correspond to the values set in the constructor.","pos":[42858,43026],"source":"\\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor."},{"content":"&lt;/p&gt;\\n","pos":[43027,43033],"source":" </p>\\n"},{"pos":[43560,43595],"content":"WriteEndObject(XmlDictionaryWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlDictionaryWriter)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;There is a problem with the instance being written.&lt;/p&gt;\\n","pos":[45364,45426],"source":"\\n<p>There is a problem with the instance being written.</p>\\n"},{"pos":[45928,45953],"content":"WriteEndObject(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlWriter)","pos":[0,25]}]},{"content":"\\n&lt;p&gt;There is a problem with the instance being written.&lt;/p&gt;\\n","pos":[47652,47714],"source":"\\n<p>There is a problem with the instance being written.</p>\\n"},{"pos":[48239,48269],"content":"WriteObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObject(XmlWriter, Object)","pos":[0,30]}]},{"content":"\\n&lt;p&gt;The object that contains the data to write to the stream.&lt;/p&gt;\\n","pos":[49482,49550],"source":"\\n<p>The object that contains the data to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;There is a problem with the instance being written.&lt;/p&gt;\\n","pos":[50238,50300],"source":"\\n<p>There is a problem with the instance being written.</p>\\n"},{"pos":[50881,50928],"content":"WriteObjectContent(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlDictionaryWriter, Object)","pos":[0,47]}]},{"content":"\\n&lt;p&gt;The object to write to the stream.&lt;/p&gt;\\n","pos":[52128,52173],"source":"\\n<p>The object to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;There is a problem with the instance being written.&lt;/p&gt;\\n","pos":[52878,52940],"source":"\\n<p>There is a problem with the instance being written.</p>\\n"},{"pos":[53508,53545],"content":"WriteObjectContent(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlWriter, Object)","pos":[0,37]}]},{"content":"\\n&lt;p&gt;The object to write to the stream.&lt;/p&gt;\\n","pos":[54685,54730],"source":"\\n<p>The object to write to the stream.</p>\\n"},{"content":"\\n&lt;p&gt;There is a problem with the instance being written.&lt;/p&gt;\\n","pos":[55425,55487],"source":"\\n<p>There is a problem with the instance being written.</p>\\n"},{"pos":[56069,56114],"content":"WriteStartObject(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlDictionaryWriter, Object)","pos":[0,45]}]},{"content":"\\n&lt;p&gt;The object to write.&lt;/p&gt;\\n","pos":[57325,57356],"source":"\\n<p>The object to write.</p>\\n"},{"pos":[58042,58077],"content":"WriteStartObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlWriter, Object)","pos":[0,35]}]},{"content":"\\n&lt;p&gt;The object to write.&lt;/p&gt;\\n","pos":[59228,59259],"source":"\\n<p>The object to write.</p>\\n"},{"pos":[59613,59641],"content":"System.Runtime.Serialization","needQuote":true,"nodes":[{"content":"System.Runtime.Serialization","pos":[0,28]}]},{"pos":[59838,59844],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60046,60065],"content":"XmlObjectSerializer","needQuote":true,"nodes":[{"content":"XmlObjectSerializer","pos":[0,19]}]},{"pos":[60398,60416],"content":"ReadObject(Stream)","needQuote":true,"nodes":[{"content":"ReadObject(Stream)","pos":[0,18]}]},{"pos":[60619,60629],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[60714,60715],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60768,60774],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[60837,60838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60963,60973],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[61058,61059],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61112,61118],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[61181,61182],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61533,61564],"content":"ReadObject(XmlDictionaryReader)","needQuote":true,"nodes":[{"content":"ReadObject(XmlDictionaryReader)","pos":[0,31]}]},{"pos":[61795,61805],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[61890,61891],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61958,61977],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[62033,62034],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62173,62183],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[62268,62269],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62336,62355],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[62411,62412],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62790,62817],"content":"WriteObject(Stream, Object)","needQuote":true,"nodes":[{"content":"WriteObject(Stream, Object)","pos":[0,27]}]},{"pos":[63051,63062],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[63148,63149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63202,63208],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[63272,63273]},{"pos":[63328,63334],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63394,63395],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63535,63546],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[63632,63633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63686,63692],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[63756,63757]},{"pos":[63812,63818],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63878,63879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64268,64308],"content":"WriteObject(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObject(XmlDictionaryWriter, Object)","pos":[0,40]}]},{"pos":[64570,64581],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[64667,64668],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64735,64754],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[64811,64812]},{"pos":[64867,64873],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[64933,64934],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65088,65099],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[65185,65186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65253,65272],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[65329,65330]},{"pos":[65385,65391],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[65451,65452],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65749,65759],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[65854,65862],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[65931,65932],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65959,65960],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66030,66038],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[66107,66108],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66135,66136],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66319,66333],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[66452,66458],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66525,66526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66576,66582],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66642,66643],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66726,66732],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[66799,66800],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66850,66856],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[66916,66917],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67131,67153],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[67301,67307],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67374,67375],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67425,67431],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67492,67493]},{"pos":[67548,67554],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[67614,67615],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67712,67718],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[67785,67786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67836,67842],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[67903,67904]},{"pos":[67959,67965],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68025,68026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68271,68302],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[68468,68483],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[68559,68560],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68610,68616],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[68677,68678]},{"pos":[68733,68739],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[68799,68800],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68906,68921],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[68997,68998],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69048,69054],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[69115,69116]},{"pos":[69171,69177],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[69237,69238],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69468,69481],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[69582,69593],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[69665,69666],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69693,69694],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69767,69778],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[69850,69851],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69878,69879],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70054,70063],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[70156,70163],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70231,70232],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70259,70260],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70329,70336],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[70404,70405],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70432,70433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70608,70625],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[70734,70749],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[70825,70826],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70853,70854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70931,70946],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[71022,71023],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71050,71051],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71552,71587],"content":"GetSerializationSurrogateProvider()","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider()","pos":[0,35]}]},{"pos":[71828,71861],"content":"GetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[71982,71983],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72010,72011],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[72154,72187],"content":"GetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[72308,72309],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[72336,72337],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[73124,73190],"content":"SetSerializationSurrogateProvider(ISerializationSurrogateProvider)","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider(ISerializationSurrogateProvider)","pos":[0,66]}]},{"pos":[73553,73586],"content":"SetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[73707,73708],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[73805,73836],"content":"ISerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"ISerializationSurrogateProvider","pos":[0,31]}]},{"pos":[73943,73944],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74149,74182],"content":"SetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[74303,74304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[74401,74432],"content":"ISerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"ISerializationSurrogateProvider","pos":[0,31]}]},{"pos":[74539,74540],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[74940,74946],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[75195,75252],"content":"GetSerializationSurrogateProvider(DataContractSerializer)","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider(DataContractSerializer)","pos":[0,57]}]},{"pos":[75597,75630],"content":"GetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[75751,75752],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[75840,75862],"content":"DataContractSerializer","needQuote":true,"nodes":[{"content":"DataContractSerializer","pos":[0,22]}]},{"pos":[75939,75940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76136,76169],"content":"GetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"GetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[76290,76291],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[76379,76401],"content":"DataContractSerializer","needQuote":true,"nodes":[{"content":"DataContractSerializer","pos":[0,22]}]},{"pos":[76478,76479],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[76903,76935],"content":"DataContractSerializerExtensions","needQuote":true,"nodes":[{"content":"DataContractSerializerExtensions","pos":[0,32]}]},{"pos":[77380,77470],"content":"SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)","pos":[0,90]}]},{"pos":[77938,77971],"content":"SetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[78092,78093],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[78181,78203],"content":"DataContractSerializer","needQuote":true,"nodes":[{"content":"DataContractSerializer","pos":[0,22]}]},{"content":",","pos":[78281,78282]},{"pos":[78384,78415],"content":"ISerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"ISerializationSurrogateProvider","pos":[0,31]}]},{"pos":[78522,78523],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[78780,78813],"content":"SetSerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"SetSerializationSurrogateProvider","pos":[0,33]}]},{"pos":[78934,78935],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[79023,79045],"content":"DataContractSerializer","needQuote":true,"nodes":[{"content":"DataContractSerializer","pos":[0,22]}]},{"content":",","pos":[79123,79124]},{"pos":[79226,79257],"content":"ISerializationSurrogateProvider","needQuote":true,"nodes":[{"content":"ISerializationSurrogateProvider","pos":[0,31]}]},{"pos":[79364,79365],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[79811,79815],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80047,80064],"content":"IEnumerable<Type>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;Type&gt;","pos":[0,17],"source":"IEnumerable<Type>"}]},{"pos":[80306,80317],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[80402,80403],"content":"<","needQuote":true,"nodes":[]},{"pos":[80451,80455],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80606,80617],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[80703,80706]},{"pos":[80761,80765],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[80823,80824],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81058,81072],"content":"IEnumerable<T>","needQuote":true,"nodes":[{"content":"IEnumerable&lt;T&gt;","pos":[0,14],"source":"IEnumerable<T>"}]},{"pos":[81291,81302],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[81366,81367],"content":"<","needQuote":true,"nodes":[]},{"pos":[81394,81395],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[81515,81526],"content":"IEnumerable","needQuote":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"content":"(Of","pos":[81591,81594]},{"pos":[81628,81629],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[81656,81657],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[81860,81886],"content":"System.Collections.Generic","needQuote":true,"nodes":[{"content":"System.Collections.Generic","pos":[0,26]}]},{"pos":[82145,82175],"content":"DataContractSerializerSettings","needQuote":true,"nodes":[{"content":"DataContractSerializerSettings","pos":[0,30]}]},{"pos":[82436,82442],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[82608,82627],"content":"XmlDictionaryString","needQuote":true,"nodes":[{"content":"XmlDictionaryString","pos":[0,19]}]},{"pos":[82799,82809],"content":"System.Xml","needQuote":true,"nodes":[{"content":"System.Xml","pos":[0,10]}]},{"pos":[82953,82960],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83227,83251],"content":"ReadOnlyCollection<Type>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;Type&gt;","pos":[0,24],"source":"ReadOnlyCollection<Type>"}]},{"pos":[83533,83551],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[83647,83648],"content":"<","needQuote":true,"nodes":[]},{"pos":[83696,83700],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[83862,83880],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[83977,83980]},{"pos":[84035,84039],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[84097,84098],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[84368,84389],"content":"ReadOnlyCollection<T>","needQuote":true,"nodes":[{"content":"ReadOnlyCollection&lt;T&gt;","pos":[0,21],"source":"ReadOnlyCollection<T>"}]},{"pos":[84648,84666],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"pos":[84741,84742],"content":"<","needQuote":true,"nodes":[]},{"pos":[84769,84770],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[84901,84919],"content":"ReadOnlyCollection","needQuote":true,"nodes":[{"content":"ReadOnlyCollection","pos":[0,18]}]},{"content":"(Of","pos":[84995,84998]},{"pos":[85032,85033],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[85060,85061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[85293,85323],"content":"System.Collections.ObjectModel","needQuote":true,"nodes":[{"content":"System.Collections.ObjectModel","pos":[0,30]}]},{"pos":[85525,85530],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85795,85829],"content":"IsStartObject(XmlDictionaryReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlDictionaryReader)","pos":[0,34]}]},{"pos":[86066,86079],"content":"IsStartObject","needQuote":true,"nodes":[{"content":"IsStartObject","pos":[0,13]}]},{"pos":[86167,86168],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86235,86254],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[86310,86311],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86453,86466],"content":"IsStartObject","needQuote":true,"nodes":[{"content":"IsStartObject","pos":[0,13]}]},{"pos":[86554,86555],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[86622,86641],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[86697,86698],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[86983,87002],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"pos":[87306,87330],"content":"IsStartObject(XmlReader)","needQuote":true,"nodes":[{"content":"IsStartObject(XmlReader)","pos":[0,24]}]},{"pos":[87547,87560],"content":"IsStartObject","needQuote":true,"nodes":[{"content":"IsStartObject","pos":[0,13]}]},{"pos":[87648,87649],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[87706,87715],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[87782,87783],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[87915,87928],"content":"IsStartObject","needQuote":true,"nodes":[{"content":"IsStartObject","pos":[0,13]}]},{"pos":[88016,88017],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[88074,88083],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[88150,88151],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[88406,88415],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[88711,88751],"content":"ReadObject(XmlDictionaryReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlDictionaryReader, Boolean)","pos":[0,40]}]},{"pos":[89013,89023],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[89108,89109],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89176,89195],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"content":",","pos":[89252,89253]},{"pos":[89309,89316],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89377,89378],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[89532,89542],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[89627,89628],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[89695,89714],"content":"XmlDictionaryReader","needQuote":true,"nodes":[{"content":"XmlDictionaryReader","pos":[0,19]}]},{"content":",","pos":[89771,89772]},{"pos":[89828,89835],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89896,89897],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90288,90309],"content":"ReadObject(XmlReader)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader)","pos":[0,21]}]},{"pos":[90520,90530],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[90615,90616],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[90673,90682],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[90749,90750],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[90879,90889],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[90974,90975],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91032,91041],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"pos":[91108,91109],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[91471,91501],"content":"ReadObject(XmlReader, Boolean)","needQuote":true,"nodes":[{"content":"ReadObject(XmlReader, Boolean)","pos":[0,30]}]},{"pos":[91743,91753],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[91838,91839],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[91896,91905],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"content":",","pos":[91973,91974]},{"pos":[92030,92037],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92098,92099],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92243,92253],"content":"ReadObject","needQuote":true,"nodes":[{"content":"ReadObject","pos":[0,10]}]},{"pos":[92338,92339],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[92396,92405],"content":"XmlReader","needQuote":true,"nodes":[{"content":"XmlReader","pos":[0,9]}]},{"content":",","pos":[92473,92474]},{"pos":[92530,92537],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92598,92599],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[92985,93020],"content":"WriteEndObject(XmlDictionaryWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlDictionaryWriter)","pos":[0,35]}]},{"pos":[93259,93273],"content":"WriteEndObject","needQuote":true,"nodes":[{"content":"WriteEndObject","pos":[0,14]}]},{"pos":[93362,93363],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93430,93449],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"pos":[93505,93506],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[93649,93663],"content":"WriteEndObject","needQuote":true,"nodes":[{"content":"WriteEndObject","pos":[0,14]}]},{"pos":[93752,93753],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[93820,93839],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"pos":[93895,93896],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[94183,94202],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"pos":[94507,94532],"content":"WriteEndObject(XmlWriter)","needQuote":true,"nodes":[{"content":"WriteEndObject(XmlWriter)","pos":[0,25]}]},{"pos":[94751,94765],"content":"WriteEndObject","needQuote":true,"nodes":[{"content":"WriteEndObject","pos":[0,14]}]},{"pos":[94854,94855],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[94912,94921],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[94988,94989],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95122,95136],"content":"WriteEndObject","needQuote":true,"nodes":[{"content":"WriteEndObject","pos":[0,14]}]},{"pos":[95225,95226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[95283,95292],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[95359,95360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[95617,95626],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"pos":[95912,95942],"content":"WriteObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObject(XmlWriter, Object)","pos":[0,30]}]},{"pos":[96184,96195],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[96281,96282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96339,96348],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[96416,96417]},{"pos":[96472,96478],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[96538,96539],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[96683,96694],"content":"WriteObject","needQuote":true,"nodes":[{"content":"WriteObject","pos":[0,11]}]},{"pos":[96780,96781],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[96838,96847],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[96915,96916]},{"pos":[96971,96977],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[97037,97038],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[97441,97488],"content":"WriteObjectContent(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlDictionaryWriter, Object)","pos":[0,47]}]},{"pos":[97764,97782],"content":"WriteObjectContent","needQuote":true,"nodes":[{"content":"WriteObjectContent","pos":[0,18]}]},{"pos":[97875,97876],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[97943,97962],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[98019,98020]},{"pos":[98075,98081],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98141,98142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[98303,98321],"content":"WriteObjectContent","needQuote":true,"nodes":[{"content":"WriteObjectContent","pos":[0,18]}]},{"pos":[98414,98415],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[98482,98501],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[98558,98559]},{"pos":[98614,98620],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98680,98681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99108,99145],"content":"WriteObjectContent(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteObjectContent(XmlWriter, Object)","pos":[0,37]}]},{"pos":[99401,99419],"content":"WriteObjectContent","needQuote":true,"nodes":[{"content":"WriteObjectContent","pos":[0,18]}]},{"pos":[99512,99513],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[99570,99579],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[99647,99648]},{"pos":[99703,99709],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99769,99770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[99921,99939],"content":"WriteObjectContent","needQuote":true,"nodes":[{"content":"WriteObjectContent","pos":[0,18]}]},{"pos":[100032,100033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[100090,100099],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[100167,100168]},{"pos":[100223,100229],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[100289,100290],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[100705,100750],"content":"WriteStartObject(XmlDictionaryWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlDictionaryWriter, Object)","pos":[0,45]}]},{"pos":[101022,101038],"content":"WriteStartObject","needQuote":true,"nodes":[{"content":"WriteStartObject","pos":[0,16]}]},{"pos":[101129,101130],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101197,101216],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[101273,101274]},{"pos":[101329,101335],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101395,101396],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[101555,101571],"content":"WriteStartObject","needQuote":true,"nodes":[{"content":"WriteStartObject","pos":[0,16]}]},{"pos":[101662,101663],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[101730,101749],"content":"XmlDictionaryWriter","needQuote":true,"nodes":[{"content":"XmlDictionaryWriter","pos":[0,19]}]},{"content":",","pos":[101806,101807]},{"pos":[101862,101868],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101928,101929],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[102350,102385],"content":"WriteStartObject(XmlWriter, Object)","needQuote":true,"nodes":[{"content":"WriteStartObject(XmlWriter, Object)","pos":[0,35]}]},{"pos":[102637,102653],"content":"WriteStartObject","needQuote":true,"nodes":[{"content":"WriteStartObject","pos":[0,16]}]},{"pos":[102744,102745],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[102802,102811],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[102879,102880]},{"pos":[102935,102941],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[103001,103002],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103151,103167],"content":"WriteStartObject","needQuote":true,"nodes":[{"content":"WriteStartObject","pos":[0,16]}]},{"pos":[103258,103259],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[103316,103325],"content":"XmlWriter","needQuote":true,"nodes":[{"content":"XmlWriter","pos":[0,9]}]},{"content":",","pos":[103393,103394]},{"pos":[103449,103455],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[103515,103516],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[103792,103819],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]},{"pos":[104048,104070],"content":"SerializationException","needQuote":true,"nodes":[{"content":"SerializationException","pos":[0,22]}]},{"pos":[104334,104362],"content":"InvalidDataContractException","needQuote":true,"nodes":[{"content":"InvalidDataContractException","pos":[0,28]}]}],"content":"items:\n- uid: System.Runtime.Serialization.DataContractSerializer\n  commentId: T:System.Runtime.Serialization.DataContractSerializer\n  id: DataContractSerializer\n  parent: System.Runtime.Serialization\n  children:\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\n  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})\n  - System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)\n  - System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  - System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\n  - System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences\n  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)\n  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  - System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes\n  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)\n  - System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer\n  fullName: System.Runtime.Serialization.DataContractSerializer\n  type: Class\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DataContractSerializer\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited. </p>\\n\"\n  syntax:\n    content: 'public sealed class DataContractSerializer : XmlObjectSerializer'\n    content.vb: >-\n      Public NotInheritable Class DataContractSerializer\n          Inherits XmlObjectSerializer\n  seealso:\n  - type: System.Runtime.Serialization.DataMemberAttribute\n    commentId: T:System.Runtime.Serialization.DataMemberAttribute\n  - type: System.Runtime.Serialization.DataContractAttribute\n    commentId: T:System.Runtime.Serialization.DataContractAttribute\n  - type: System.Runtime.Serialization.IExtensibleDataObject\n    commentId: T:System.Runtime.Serialization.IExtensibleDataObject\n  - type: System.Runtime.Serialization.ExtensionDataObject\n    commentId: T:System.Runtime.Serialization.ExtensionDataObject\n  inheritance:\n  - System.Object\n  - System.Runtime.Serialization.XmlObjectSerializer\n  inheritedMembers:\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: DataContractSerializer\n  extensionMethods:\n  - System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  - System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type)\n    content.vb: Public Sub New(type As Type)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializer.DataContractSerializer(Type)\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})\n  id: '#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, IEnumerable<Type>)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable<System.Type>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, IEnumerable<Type> knownTypes)\n    content.vb: Public Sub New(type As Type, knownTypes As IEnumerable(Of Type))\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n    - id: knownTypes\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the types that may be present in the object graph.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes\n    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n    commentId: T:System.Runtime.Serialization.KnownTypeAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable(Of System.Type))\n  name.vb: DataContractSerializer(Type, IEnumerable(Of Type))\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, IEnumerable<Type>)\n  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, IEnumerable(Of Type))\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)\n  id: '#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, DataContractSerializerSettings)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Runtime.Serialization.DataContractSerializerSettings)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type and settings.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, DataContractSerializerSettings settings)\n    content.vb: Public Sub New(type As Type, settings As DataContractSerializerSettings)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instance to serialize or deserialize.</p>\\n\"\n    - id: settings\n      type: System.Runtime.Serialization.DataContractSerializerSettings\n      description: \"\\n<p>The serializer settings.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, DataContractSerializerSettings)\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)\n  id: '#ctor(System.Type,System.String,System.String)'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, String, String)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, string rootName, string rootNamespace)\n    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n    - id: rootName\n      type: System.String\n      description: \"\\n<p>The name of the XML element that encloses the content to serialize or deserialize.</p>\\n\"\n    - id: rootNamespace\n      type: System.String\n      description: \"\\n<p>The namespace of the XML element that encloses the content to serialize or deserialize.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, String, String)\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})\n  id: '#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, String, String, IEnumerable<Type>)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable<System.Type>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, string rootName, string rootNamespace, IEnumerable<Type> knownTypes)\n    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String, knownTypes As IEnumerable(Of Type))\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n    - id: rootName\n      type: System.String\n      description: \"\\n<p>The root element name of the content.</p>\\n\"\n    - id: rootNamespace\n      type: System.String\n      description: \"\\n<p>The namespace of the root element.</p>\\n\"\n    - id: knownTypes\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: \"\\n<p>An <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the types that may be present in the object graph.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes\n    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n    commentId: T:System.Runtime.Serialization.KnownTypeAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Type))\n  name.vb: DataContractSerializer(Type, String, String, IEnumerable(Of Type))\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, String, String, IEnumerable<Type>)\n  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, String, String, IEnumerable(Of Type))\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\n  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 23\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace)\n    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n    - id: rootName\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the root element name of the content.</p>\\n\"\n    - id: rootNamespace\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the namespace of the root element.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)\n- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})\n  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})'\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)\n  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable<System.Type>)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 24\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> parameters as well as a list of known types that may be present in the object graph.</p>\\n\"\n  syntax:\n    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace, IEnumerable<Type> knownTypes)\n    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, knownTypes As IEnumerable(Of Type))\n    parameters:\n    - id: type\n      type: System.Type\n      description: \"\\n<p>The type of the instances that are serialized or deserialized.</p>\\n\"\n    - id: rootName\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the root element name of the content.</p>\\n\"\n    - id: rootNamespace\n      type: System.Xml.XmlDictionaryString\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryString\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the namespace of the root element.</p>\\n\"\n    - id: knownTypes\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.Generic.IEnumerable`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> of <xref href=\\\"System.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the known types that may be present in the object graph.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes\n    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n    commentId: T:System.Runtime.Serialization.KnownTypeAttribute\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable(Of System.Type))\n  name.vb: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable(Of Type))\n  nameWithType: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)\n  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable(Of Type))\n- uid: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n  commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n  id: IgnoreExtensionDataObject\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: IgnoreExtensionDataObject\n  fullName: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IgnoreExtensionDataObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 25\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</p>\\n\"\n  syntax:\n    content: public bool IgnoreExtensionDataObject { get; }\n    content.vb: Public ReadOnly Property IgnoreExtensionDataObject As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to omit the extension data; otherwise, <strong>false</strong>.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n    commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\n  - type: System.Runtime.Serialization.DataContractAttribute\n    commentId: T:System.Runtime.Serialization.DataContractAttribute\n  - type: System.Runtime.Serialization.IExtensibleDataObject\n    commentId: T:System.Runtime.Serialization.IExtensibleDataObject\n  - type: System.Runtime.Serialization.ExtensionDataObject\n    commentId: T:System.Runtime.Serialization.ExtensionDataObject\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DataContractSerializer.IgnoreExtensionDataObject\n- uid: System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  id: KnownTypes\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: KnownTypes\n  fullName: System.Runtime.Serialization.DataContractSerializer.KnownTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KnownTypes\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 26\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a collection of types that may be present in the object graph serialized using this instance of the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public ReadOnlyCollection<Type> KnownTypes { get; }\n    content.vb: Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}\n      description: \"\\n<p>A <xref href=\\\"System.Collections.ObjectModel.ReadOnlyCollection`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that contains the expected types passed in as known types to the <xref href=\\\"System.Runtime.Serialization.DataContractSerializer\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> constructor.</p>\\n\"\n  seealso:\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n    commentId: T:System.Runtime.Serialization.KnownTypeAttribute\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DataContractSerializer.KnownTypes\n- uid: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\n  commentId: P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\n  id: MaxItemsInObjectGraph\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: MaxItemsInObjectGraph\n  fullName: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxItemsInObjectGraph\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 27\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets the maximum number of items in an object graph to serialize or deserialize.</p>\\n\"\n  syntax:\n    content: public int MaxItemsInObjectGraph { get; }\n    content.vb: Public ReadOnly Property MaxItemsInObjectGraph As Integer\n    parameters: []\n    return:\n      type: System.Int32\n      description: \"\\n<p>The maximum number of items to serialize or deserialize. The default is <xref href=\\\"System.Int32.MaxValue\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The number of items exceeds the maximum value.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DataContractSerializer.MaxItemsInObjectGraph\n- uid: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences\n  commentId: P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences\n  id: PreserveObjectReferences\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: PreserveObjectReferences\n  fullName: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PreserveObjectReferences\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 28\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data. </p>\\n\"\n  syntax:\n    content: public bool PreserveObjectReferences { get; }\n    content.vb: Public ReadOnly Property PreserveObjectReferences As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to keep the references; otherwise, <strong>false</strong>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DataContractSerializer.PreserveObjectReferences\n- uid: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes\n  commentId: P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes\n  id: SerializeReadOnlyTypes\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: SerializeReadOnlyTypes\n  fullName: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SerializeReadOnlyTypes\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 29\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Gets a value that specifies whether read-only types are serialized.</p>\\n\"\n  syntax:\n    content: public bool SerializeReadOnlyTypes { get; }\n    content.vb: Public ReadOnly Property SerializeReadOnlyTypes As Boolean\n    parameters: []\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if read-only types are serialized; <strong>false</strong> if all types are serialized.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: DataContractSerializer.SerializeReadOnlyTypes\n- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  id: IsStartObject(System.Xml.XmlDictionaryReader)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: IsStartObject(XmlDictionaryReader)\n  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 30\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned on an object that can be deserialized.</p>\\n\"\n  syntax:\n    content: public override bool IsStartObject(XmlDictionaryReader reader)\n    content.vb: Public Overrides Function IsStartObject(reader As XmlDictionaryReader) As Boolean\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: \"\\n<p>An <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.IsStartObject(XmlDictionaryReader)\n- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)\n  id: IsStartObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: IsStartObject(XmlReader)\n  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IsStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 31\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Determines whether the <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> is positioned on an object that can be deserialized.</p>\\n\"\n  syntax:\n    content: public override bool IsStartObject(XmlReader reader)\n    content.vb: Public Overrides Function IsStartObject(reader As XmlReader) As Boolean\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.IsStartObject(XmlReader)\n- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  id: ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlDictionaryReader, Boolean)\n  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 32\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML stream with an <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value. </p>\\n\"\n  syntax:\n    content: public override object ReadObject(XmlDictionaryReader reader, bool verifyObjectName)\n    content.vb: Public Overrides Function ReadObject(reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlDictionaryReader\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream.</p>\\n\"\n    - id: verifyObjectName\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>. </p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.ReadObject(XmlDictionaryReader, Boolean)\n- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)\n  id: ReadObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlReader)\n  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 33\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML stream with an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object.</p>\\n\"\n  syntax:\n    content: public override object ReadObject(XmlReader reader)\n    content.vb: Public Overrides Function ReadObject(reader As XmlReader) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.ReadObject(XmlReader)\n- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  id: ReadObject(System.Xml.XmlReader,System.Boolean)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: ReadObject(XmlReader, Boolean)\n  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReadObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Reads the XML stream with an <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</p>\\n\"\n  syntax:\n    content: public override object ReadObject(XmlReader reader, bool verifyObjectName)\n    content.vb: Public Overrides Function ReadObject(reader As XmlReader, verifyObjectName As Boolean) As Object\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlReader\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to read the XML stream.</p>\\n\"\n    - id: verifyObjectName\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>.</p>\\n\"\n    return:\n      type: System.Object\n      description: \"\\n<p>The deserialized object.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.ReadObject(XmlReader, Boolean)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  id: WriteEndObject(System.Xml.XmlDictionaryWriter)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteEndObject(XmlDictionaryWriter)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteEndObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 35\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the closing XML element using an <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteEndObject(XmlDictionaryWriter writer)\n    content.vb: Public Overrides Sub WriteEndObject(writer As XmlDictionaryWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the stream.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>There is a problem with the instance being written.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteEndObject(XmlDictionaryWriter)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)\n  id: WriteEndObject(System.Xml.XmlWriter)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteEndObject(XmlWriter)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteEndObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 36\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the closing XML element using an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteEndObject(XmlWriter writer)\n    content.vb: Public Overrides Sub WriteEndObject(writer As XmlWriter)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the stream.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>There is a problem with the instance being written.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteEndObject(XmlWriter)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  id: WriteObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 37\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteObject(XmlWriter writer, object graph)\n    content.vb: Public Overrides Sub WriteObject(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML document or stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object that contains the data to write to the stream.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>There is a problem with the instance being written.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteObject(XmlWriter, Object)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  id: WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObjectContent(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObjectContent\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 38\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the XML content using an <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteObjectContent(XmlDictionaryWriter writer, object graph)\n    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlDictionaryWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to write to the stream.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>There is a problem with the instance being written.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteObjectContent(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  id: WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteObjectContent(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteObjectContent\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 39\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the XML content using an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteObjectContent(XmlWriter writer, object graph)\n    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the stream.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to write to the stream.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  exceptions:\n  - type: System.Runtime.Serialization.InvalidDataContractException\n    commentId: T:System.Runtime.Serialization.InvalidDataContractException\n    description: \"\\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\\\"System.Runtime.Serialization.DataContractAttribute\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> attribute has not been applied to the type.</p>\\n\"\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: \"\\n<p>There is a problem with the instance being written.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteObjectContent(XmlWriter, Object)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  id: WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteStartObject(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the opening XML element using an <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteStartObject(XmlDictionaryWriter writer, object graph)\n    content.vb: Public Overrides Sub WriteStartObject(writer As XmlDictionaryWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlDictionaryWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlDictionaryWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML start element.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to write.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteStartObject(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  id: WriteStartObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.DataContractSerializer\n  langs:\n  - csharp\n  - vb\n  name: WriteStartObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: WriteStartObject\n    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  namespace: System.Runtime.Serialization\n  summary: \"\\n<p>Writes the opening XML element using an <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: public override void WriteStartObject(XmlWriter writer, object graph)\n    content.vb: Public Overrides Sub WriteStartObject(writer As XmlWriter, graph As Object)\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: \"\\n<p>The <xref href=\\\"System.Xml.XmlWriter\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> used to write the XML start element.</p>\\n\"\n    - id: graph\n      type: System.Object\n      description: \"\\n<p>The object to write.</p>\\n\"\n  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n  nameWithType: DataContractSerializer.WriteStartObject(XmlWriter, Object)\nreferences:\n- uid: System.Runtime.Serialization\n  isExternal: false\n  name: System.Runtime.Serialization\n  fullName: System.Runtime.Serialization\n  commentId: N:System.Runtime.Serialization\n  nameWithType: System.Runtime.Serialization\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Runtime.Serialization.XmlObjectSerializer\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: XmlObjectSerializer\n  fullName: System.Runtime.Serialization.XmlObjectSerializer\n  commentId: T:System.Runtime.Serialization.XmlObjectSerializer\n  nameWithType: XmlObjectSerializer\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: ReadObject(Stream)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)\n  nameWithType: XmlObjectSerializer.ReadObject(Stream)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: false\n  name: ReadObject(XmlDictionaryReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)\n  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteObject(Stream, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)\n  nameWithType: XmlObjectSerializer.WriteObject(Stream, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteObject(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteObject(XmlDictionaryWriter, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  parent: System.Runtime.Serialization.DataContractSerializerExtensions\n  definition: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n  name: GetSerializationSurrogateProvider()\n  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider()\n  spec.csharp:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n    name: GetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n    name: GetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n  nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider()\n- uid: System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)\n  parent: System.Runtime.Serialization.DataContractSerializerExtensions\n  definition: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n  name: SetSerializationSurrogateProvider(ISerializationSurrogateProvider)\n  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)\n    name: SetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider\n    name: ISerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)\n    name: SetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider\n    name: ISerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n  nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider(ISerializationSurrogateProvider)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n  isExternal: false\n  name: GetSerializationSurrogateProvider(DataContractSerializer)\n  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n    name: GetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.DataContractSerializer\n    name: DataContractSerializer\n    fullName: System.Runtime.Serialization.DataContractSerializer\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n    name: GetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.DataContractSerializer\n    name: DataContractSerializer\n    fullName: System.Runtime.Serialization.DataContractSerializer\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)\n  nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider(DataContractSerializer)\n- uid: System.Runtime.Serialization.DataContractSerializerExtensions\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: DataContractSerializerExtensions\n  fullName: System.Runtime.Serialization.DataContractSerializerExtensions\n  commentId: T:System.Runtime.Serialization.DataContractSerializerExtensions\n  nameWithType: DataContractSerializerExtensions\n- uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n  isExternal: true\n  name: SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)\n  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer, System.Runtime.Serialization.ISerializationSurrogateProvider)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n    name: SetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.DataContractSerializer\n    name: DataContractSerializer\n    fullName: System.Runtime.Serialization.DataContractSerializer\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider\n    name: ISerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n    name: SetSerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider\n  - name: (\n    fullName: (\n  - uid: System.Runtime.Serialization.DataContractSerializer\n    name: DataContractSerializer\n    fullName: System.Runtime.Serialization.DataContractSerializer\n  - name: ', '\n    fullName: ', '\n  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider\n    name: ISerializationSurrogateProvider\n    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)\n  nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  fullName: System.Type\n  commentId: T:System.Type\n  nameWithType: Type\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  definition: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)\n  name.vb: IEnumerable(Of Type)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable{System.Type}\n  nameWithType: IEnumerable<Type>\n  nameWithType.vb: IEnumerable(Of Type)\n- uid: System.Collections.Generic.IEnumerable`1\n  isExternal: false\n  name: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n  fullname.vb: System.Collections.Generic.IEnumerable(Of T)\n  name.vb: IEnumerable(Of T)\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.Generic.IEnumerable`1\n  nameWithType: IEnumerable<T>\n  nameWithType.vb: IEnumerable(Of T)\n- uid: System.Collections.Generic\n  isExternal: false\n  name: System.Collections.Generic\n  fullName: System.Collections.Generic\n  commentId: N:System.Collections.Generic\n  nameWithType: System.Collections.Generic\n- uid: System.Runtime.Serialization.DataContractSerializerSettings\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: DataContractSerializerSettings\n  fullName: System.Runtime.Serialization.DataContractSerializerSettings\n  commentId: T:System.Runtime.Serialization.DataContractSerializerSettings\n  nameWithType: DataContractSerializerSettings\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  commentId: T:System.String\n  nameWithType: String\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n  commentId: T:System.Xml.XmlDictionaryString\n  nameWithType: XmlDictionaryString\n- uid: System.Xml\n  isExternal: false\n  name: System.Xml\n  fullName: System.Xml\n  commentId: N:System.Xml\n  nameWithType: System.Xml\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}\n  parent: System.Collections.ObjectModel\n  definition: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<Type>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Type)\n  name.vb: ReadOnlyCollection(Of Type)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Type}\n  nameWithType: ReadOnlyCollection<Type>\n  nameWithType.vb: ReadOnlyCollection(Of Type)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)\n  name.vb: ReadOnlyCollection(Of T)\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    fullName: <\n  - name: T\n    fullName: T\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: '(Of '\n    fullName: '(Of '\n  - name: T\n    fullName: T\n  - name: )\n    fullName: )\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n  nameWithType: ReadOnlyCollection<T>\n  nameWithType.vb: ReadOnlyCollection(Of T)\n- uid: System.Collections.ObjectModel\n  isExternal: false\n  name: System.Collections.ObjectModel\n  fullName: System.Collections.ObjectModel\n  commentId: N:System.Collections.ObjectModel\n  nameWithType: System.Collections.ObjectModel\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: false\n  name: IsStartObject(XmlDictionaryReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n    name: IsStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n    name: IsStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\n  nameWithType: XmlObjectSerializer.IsStartObject(XmlDictionaryReader)\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n  commentId: T:System.Xml.XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: IsStartObject(XmlReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n    name: IsStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n    name: IsStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)\n  nameWithType: XmlObjectSerializer.IsStartObject(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  fullName: System.Xml.XmlReader\n  commentId: T:System.Xml.XmlReader\n  nameWithType: XmlReader\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: ReadObject(XmlDictionaryReader, Boolean)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryReader\n    name: XmlDictionaryReader\n    fullName: System.Xml.XmlDictionaryReader\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)\n  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader, Boolean)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: ReadObject(XmlReader)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)\n  nameWithType: XmlObjectSerializer.ReadObject(XmlReader)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: ReadObject(XmlReader, Boolean)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n    name: ReadObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    fullName: System.Xml.XmlReader\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)\n  nameWithType: XmlObjectSerializer.ReadObject(XmlReader, Boolean)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: false\n  name: WriteEndObject(XmlDictionaryWriter)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n    name: WriteEndObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n    name: WriteEndObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)\n  nameWithType: XmlObjectSerializer.WriteEndObject(XmlDictionaryWriter)\n- uid: System.Xml.XmlDictionaryWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryWriter\n  fullName: System.Xml.XmlDictionaryWriter\n  commentId: T:System.Xml.XmlDictionaryWriter\n  nameWithType: XmlDictionaryWriter\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteEndObject(XmlWriter)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n    name: WriteEndObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n    name: WriteEndObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)\n  nameWithType: XmlObjectSerializer.WriteEndObject(XmlWriter)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  fullName: System.Xml.XmlWriter\n  commentId: T:System.Xml.XmlWriter\n  nameWithType: XmlWriter\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n    name: WriteObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteObject(XmlWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteObjectContent(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteObjectContent\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteObjectContent\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteObjectContent(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n    name: WriteObjectContent\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n    name: WriteObjectContent\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteStartObject(XmlDictionaryWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n    name: WriteStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlDictionaryWriter\n    name: XmlDictionaryWriter\n    fullName: System.Xml.XmlDictionaryWriter\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteStartObject(XmlDictionaryWriter, Object)\n- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  parent: System.Runtime.Serialization.XmlObjectSerializer\n  isExternal: true\n  name: WriteStartObject(XmlWriter, Object)\n  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)\n  spec.csharp:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n    name: WriteStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n    name: WriteStartObject\n    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject\n  - name: (\n    fullName: (\n  - uid: System.Xml.XmlWriter\n    name: XmlWriter\n    fullName: System.Xml.XmlWriter\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)\n  nameWithType: XmlObjectSerializer.WriteStartObject(XmlWriter, Object)\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n- uid: System.Runtime.Serialization.SerializationException\n  isExternal: false\n  name: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n  nameWithType: SerializationException\n  commentId: T:System.Runtime.Serialization.SerializationException\n- uid: System.Runtime.Serialization.InvalidDataContractException\n  isExternal: false\n  name: InvalidDataContractException\n  fullName: System.Runtime.Serialization.InvalidDataContractException\n  nameWithType: InvalidDataContractException\n  commentId: T:System.Runtime.Serialization.InvalidDataContractException\n"}