{"nodes":[{"pos":[215,222],"content":"IsConst","needQuote":true,"nodes":[{"content":"IsConst","pos":[0,7]}]},{"pos":[1352,1383],"content":"System.Runtime.CompilerServices","needQuote":true,"nodes":[{"content":"System.Runtime.CompilerServices","pos":[0,31]}]},{"pos":[1589,1595],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[1755,1765],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[1860,1868],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[1937,1938],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[1965,1966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2036,2044],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[2113,2114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2141,2142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2325,2339],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2458,2464],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[2531,2532],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2582,2588],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[2648,2649],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[2732,2738],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[2805,2806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[2856,2862],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[2922,2923],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3137,3159],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[3307,3313],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[3380,3381],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3431,3437],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[3498,3499]},{"pos":[3554,3560],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3620,3621],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[3718,3724],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[3791,3792],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[3842,3848],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[3909,3910]},{"pos":[3965,3971],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4031,4032],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4277,4308],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[4474,4489],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[4565,4566],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[4616,4622],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[4683,4684]},{"pos":[4739,4745],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4805,4806],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[4912,4927],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[5003,5004],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5054,5060],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[5121,5122]},{"pos":[5177,5183],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5243,5244],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5474,5487],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5588,5599],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5671,5672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5699,5700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5773,5784],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[5856,5857],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5884,5885],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6060,6069],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[6162,6169],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[6237,6238],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6265,6266],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6335,6342],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[6410,6411],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6438,6439],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6614,6631],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[6740,6755],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[6831,6832],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6859,6860],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6937,6952],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[7028,7029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7056,7057],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7202,7208],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]}],"content":"items:\n- uid: System.Runtime.CompilerServices.IsConst\n  commentId: T:System.Runtime.CompilerServices.IsConst\n  id: IsConst\n  parent: System.Runtime.CompilerServices\n  children: []\n  langs:\n  - csharp\n  - vb\n  name: IsConst\n  fullName: System.Runtime.CompilerServices.IsConst\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/CompilerServices/IsConst.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IsConst\n    path: src/mscorlib/src/System/Runtime/CompilerServices/IsConst.cs\n    startLine: 7\n  assemblies:\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: \"\\n<p>Indicates that the modified type has a <strong>const</strong> modifier. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: public class IsConst\n    content.vb: Public Class IsConst\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: IsConst\nreferences:\n- uid: System.Runtime.CompilerServices\n  isExternal: false\n  name: System.Runtime.CompilerServices\n  fullName: System.Runtime.CompilerServices\n  nameWithType: System.Runtime.CompilerServices\n  commentId: N:System.Runtime.CompilerServices\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n"}