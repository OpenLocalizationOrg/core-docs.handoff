{"nodes":[{"pos":[804,826],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"pos":[2301,2325],"content":"SynchronizationContext()","needQuote":true,"nodes":[{"content":"SynchronizationContext()","pos":[0,24]}]},{"pos":[3497,3504],"content":"Current","needQuote":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[4805,4817],"content":"CreateCopy()","needQuote":true,"nodes":[{"content":"CreateCopy()","pos":[0,12]}]},{"pos":[6098,6118],"content":"OperationCompleted()","needQuote":true,"nodes":[{"content":"OperationCompleted()","pos":[0,20]}]},{"pos":[7187,7205],"content":"OperationStarted()","needQuote":true,"nodes":[{"content":"OperationStarted()","pos":[0,18]}]},{"pos":[8379,8411],"content":"Post(SendOrPostCallback, Object)","needQuote":true,"nodes":[{"content":"Post(SendOrPostCallback, Object)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The object passed to the delegate.&lt;/p&gt;\\n","pos":[9451,9496],"source":"\\n<p>The object passed to the delegate.</p>\\n"},{"pos":[10017,10049],"content":"Send(SendOrPostCallback, Object)","needQuote":true,"nodes":[{"content":"Send(SendOrPostCallback, Object)","pos":[0,32]}]},{"content":"\\n&lt;p&gt;The object passed to the delegate.","pos":[11087,11126],"source":"\\n<p>The object passed to the delegate."},{"content":"&lt;/p&gt;\\n","pos":[11127,11133],"source":" </p>\\n"},{"pos":[12193,12242],"content":"SetSynchronizationContext(SynchronizationContext)","needQuote":true,"nodes":[{"content":"SetSynchronizationContext(SynchronizationContext)","pos":[0,49]}]},{"pos":[13806,13822],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[13983,13989],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14149,14159],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14254,14262],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14331,14332],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14359,14360],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14430,14438],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[14507,14508],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14535,14536],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14719,14733],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14852,14858],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[14925,14926],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14976,14982],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15042,15043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15126,15132],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15199,15200],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15250,15256],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15316,15317],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15531,15553],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[15701,15707],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[15774,15775],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15825,15831],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[15892,15893]},{"pos":[15948,15954],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16014,16015],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16112,16118],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[16185,16186],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16236,16242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[16303,16304]},{"pos":[16359,16365],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16425,16426],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16671,16702],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[16868,16883],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[16959,16960],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17010,17016],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17077,17078]},{"pos":[17133,17139],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17199,17200],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17306,17321],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[17397,17398],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17448,17454],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17515,17516]},{"pos":[17571,17577],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17637,17638],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17868,17881],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[17982,17993],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18065,18066],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18093,18094],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18167,18178],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[18250,18251],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18278,18279],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18454,18463],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[18556,18563],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18631,18632],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18659,18660],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18729,18736],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[18804,18805],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18832,18833],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19008,19025],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[19134,19149],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19225,19226],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19253,19254],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19331,19346],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[19422,19423],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19450,19451],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19596,19602],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[19769,19791],"content":"SynchronizationContext","needQuote":true,"nodes":[{"content":"SynchronizationContext","pos":[0,22]}]},{"pos":[20036,20054],"content":"SendOrPostCallback","needQuote":true,"nodes":[{"content":"SendOrPostCallback","pos":[0,18]}]},{"pos":[20270,20291],"content":"NotSupportedException","needQuote":true,"nodes":[{"content":"NotSupportedException","pos":[0,21]}]}],"content":"items:\n- uid: System.Threading.SynchronizationContext\n  commentId: T:System.Threading.SynchronizationContext\n  id: SynchronizationContext\n  parent: System.Threading\n  children:\n  - System.Threading.SynchronizationContext.#ctor\n  - System.Threading.SynchronizationContext.CreateCopy\n  - System.Threading.SynchronizationContext.Current\n  - System.Threading.SynchronizationContext.OperationCompleted\n  - System.Threading.SynchronizationContext.OperationStarted\n  - System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  - System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  - System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  langs:\n  - csharp\n  - vb\n  name: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SynchronizationContext\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 56\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Provides the basic functionality for propagating a synchronization context in various synchronization models. </p>\\n\"\n  syntax:\n    content: public class SynchronizationContext\n    content.vb: Public Class SynchronizationContext\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: SynchronizationContext\n- uid: System.Threading.SynchronizationContext.#ctor\n  commentId: M:System.Threading.SynchronizationContext.#ctor\n  id: '#ctor'\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: SynchronizationContext()\n  fullName: System.Threading.SynchronizationContext.SynchronizationContext()\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 62\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Creates a new instance of the <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public SynchronizationContext()\n    content.vb: Public Sub New\n  see:\n  - type: System.Security.Permissions.SecurityAction.InheritanceDemand\n    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: SynchronizationContext.SynchronizationContext()\n- uid: System.Threading.SynchronizationContext.Current\n  commentId: P:System.Threading.SynchronizationContext.Current\n  id: Current\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: Current\n  fullName: System.Threading.SynchronizationContext.Current\n  type: Property\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Current\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 183\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Gets the synchronization context for the current thread.</p>\\n\"\n  syntax:\n    content: public static SynchronizationContext Current { get; }\n    content.vb: Public Shared ReadOnly Property Current As SynchronizationContext\n    parameters: []\n    return:\n      type: System.Threading.SynchronizationContext\n      description: \"\\n<p>A <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the current synchronization context.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n  nameWithType: SynchronizationContext.Current\n- uid: System.Threading.SynchronizationContext.CreateCopy\n  commentId: M:System.Threading.SynchronizationContext.CreateCopy\n  id: CreateCopy\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: CreateCopy()\n  fullName: System.Threading.SynchronizationContext.CreateCopy()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CreateCopy\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 305\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>When overridden in a derived class, creates a copy of the synchronization context.  </p>\\n\"\n  syntax:\n    content: public virtual SynchronizationContext CreateCopy()\n    content.vb: Public Overridable Function CreateCopy As SynchronizationContext\n    return:\n      type: System.Threading.SynchronizationContext\n      description: \"\\n<p>A new <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SynchronizationContext.CreateCopy()\n- uid: System.Threading.SynchronizationContext.OperationCompleted\n  commentId: M:System.Threading.SynchronizationContext.OperationCompleted\n  id: OperationCompleted\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: OperationCompleted()\n  fullName: System.Threading.SynchronizationContext.OperationCompleted()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OperationCompleted\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 140\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>When overridden in a derived class, responds to the notification that an operation has completed.</p>\\n\"\n  syntax:\n    content: public virtual void OperationCompleted()\n    content.vb: Public Overridable Sub OperationCompleted\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SynchronizationContext.OperationCompleted()\n- uid: System.Threading.SynchronizationContext.OperationStarted\n  commentId: M:System.Threading.SynchronizationContext.OperationStarted\n  id: OperationStarted\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: OperationStarted()\n  fullName: System.Threading.SynchronizationContext.OperationStarted()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OperationStarted\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 133\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>When overridden in a derived class, responds to the notification that an operation has started.</p>\\n\"\n  syntax:\n    content: public virtual void OperationStarted()\n    content.vb: Public Overridable Sub OperationStarted\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SynchronizationContext.OperationStarted()\n- uid: System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  id: Post(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: Post(SendOrPostCallback, Object)\n  fullName: System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Post\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 124\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>When overridden in a derived class, dispatches an asynchronous message to a synchronization context.</p>\\n\"\n  syntax:\n    content: public virtual void Post(SendOrPostCallback d, object state)\n    content.vb: Public Overridable Sub Post(d As SendOrPostCallback, state As Object)\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.SendOrPostCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call.</p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object passed to the delegate.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SynchronizationContext.Post(SendOrPostCallback, Object)\n- uid: System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  id: Send(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: Send(SendOrPostCallback, Object)\n  fullName: System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Send\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 119\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>When overridden in a derived class, dispatches a synchronous message to a synchronization context.</p>\\n\"\n  syntax:\n    content: public virtual void Send(SendOrPostCallback d, object state)\n    content.vb: Public Overridable Sub Send(d As SendOrPostCallback, state As Object)\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: \"\\n<p>The <xref href=\\\"System.Threading.SendOrPostCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate to call.</p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object passed to the delegate. </p>\\n\"\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"\\n<p>The method was called in a Windows Store app. The implementation of <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> for Windows Store apps does not support the <xref href=\\\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method. </p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: SynchronizationContext.Send(SendOrPostCallback, Object)\n- uid: System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  commentId: M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  id: SetSynchronizationContext(System.Threading.SynchronizationContext)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  - vb\n  name: SetSynchronizationContext(SynchronizationContext)\n  fullName: System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetSynchronizationContext\n    path: src/mscorlib/src/System/Threading/SynchronizationContext.cs\n    startLine: 171\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Sets the current synchronization context.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static void SetSynchronizationContext(SynchronizationContext syncContext)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Sub SetSynchronizationContext(syncContext As SynchronizationContext)\n    parameters:\n    - id: syncContext\n      type: System.Threading.SynchronizationContext\n      description: \"\\n<p>The <xref href=\\\"System.Threading.SynchronizationContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object to be set.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n  nameWithType: SynchronizationContext\n  commentId: T:System.Threading.SynchronizationContext\n- uid: System.Threading.SendOrPostCallback\n  parent: System.Threading\n  isExternal: false\n  name: SendOrPostCallback\n  fullName: System.Threading.SendOrPostCallback\n  nameWithType: SendOrPostCallback\n  commentId: T:System.Threading.SendOrPostCallback\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  fullName: System.NotSupportedException\n  nameWithType: NotSupportedException\n  commentId: T:System.NotSupportedException\n"}