{"nodes":[{"pos":[262,276],"content":"ErrorEventArgs","needQuote":true,"nodes":[{"content":"ErrorEventArgs","pos":[0,14]}]},{"pos":[2019,2044],"content":"ErrorEventArgs(Exception)","needQuote":true,"nodes":[{"content":"ErrorEventArgs(Exception)","pos":[0,25]}]},{"pos":[3281,3295],"content":"GetException()","needQuote":true,"nodes":[{"content":"GetException()","pos":[0,14]}]},{"pos":[4391,4400],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[4540,4546],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4694,4703],"content":"EventArgs","needQuote":true,"nodes":[{"content":"EventArgs","pos":[0,9]}]},{"pos":[4875,4880],"content":"Empty","needQuote":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[5067,5077],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5172,5180],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5249,5250],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5277,5278],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5348,5356],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[5425,5426],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5453,5454],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[5637,5651],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5770,5776],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[5843,5844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[5894,5900],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5960,5961],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6044,6050],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6117,6118],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6168,6174],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6234,6235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6449,6471],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[6619,6625],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[6692,6693],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6743,6749],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[6810,6811]},{"pos":[6866,6872],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6932,6933],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7030,7036],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7103,7104],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7154,7160],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7221,7222]},{"pos":[7277,7283],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7343,7344],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7589,7620],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[7786,7801],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[7877,7878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7928,7934],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7995,7996]},{"pos":[8051,8057],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8117,8118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8224,8239],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[8315,8316],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8366,8372],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8433,8434]},{"pos":[8489,8495],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8555,8556],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8786,8799],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8900,8911],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[8983,8984],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9011,9012],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9085,9096],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[9168,9169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9196,9197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9372,9381],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[9474,9481],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9549,9550],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9577,9578],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9647,9654],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[9722,9723],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9750,9751],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9926,9943],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[10052,10067],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10143,10144],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10171,10172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10249,10264],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[10340,10341],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10368,10369],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10514,10520],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[10654,10663],"content":"Exception","needQuote":true,"nodes":[{"content":"Exception","pos":[0,9]}]}],"content":"items:\n- uid: System.IO.ErrorEventArgs\n  commentId: T:System.IO.ErrorEventArgs\n  id: ErrorEventArgs\n  parent: System.IO\n  children:\n  - System.IO.ErrorEventArgs.#ctor(System.Exception)\n  - System.IO.ErrorEventArgs.GetException\n  langs:\n  - csharp\n  - vb\n  name: ErrorEventArgs\n  fullName: System.IO.ErrorEventArgs\n  type: Class\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ErrorEventArgs\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 10\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Provides data for the <xref href=\\\"System.IO.FileSystemWatcher.Error\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> event.</p>\\n\"\n  syntax:\n    content: 'public class ErrorEventArgs : EventArgs'\n    content.vb: >-\n      Public Class ErrorEventArgs\n          Inherits EventArgs\n  seealso:\n  - type: System.IO.ErrorEventHandler\n    commentId: T:System.IO.ErrorEventHandler\n  - type: System.IO.FileSystemWatcher\n    commentId: T:System.IO.FileSystemWatcher\n  - type: System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n    commentId: M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ErrorEventArgs\n- uid: System.IO.ErrorEventArgs.#ctor(System.Exception)\n  commentId: M:System.IO.ErrorEventArgs.#ctor(System.Exception)\n  id: '#ctor(System.Exception)'\n  parent: System.IO.ErrorEventArgs\n  langs:\n  - csharp\n  - vb\n  name: ErrorEventArgs(Exception)\n  fullName: System.IO.ErrorEventArgs.ErrorEventArgs(System.Exception)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 12\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.IO.ErrorEventArgs\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ErrorEventArgs(Exception exception)\n    content.vb: Public Sub New(exception As Exception)\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: \"\\n<p>An <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the error that occurred. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: ErrorEventArgs.ErrorEventArgs(Exception)\n- uid: System.IO.ErrorEventArgs.GetException\n  commentId: M:System.IO.ErrorEventArgs.GetException\n  id: GetException\n  parent: System.IO.ErrorEventArgs\n  langs:\n  - csharp\n  - vb\n  name: GetException()\n  fullName: System.IO.ErrorEventArgs.GetException()\n  type: Method\n  source:\n    remote:\n      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetException\n    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs\n    startLine: 13\n  assemblies:\n  - System.IO.FileSystem.Watcher\n  namespace: System.IO\n  summary: \"\\n<p>Gets the <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the error that occurred.</p>\\n\"\n  syntax:\n    content: public virtual Exception GetException()\n    content.vb: Public Overridable Function GetException As Exception\n    return:\n      type: System.Exception\n      description: \"\\n<p>An <xref href=\\\"System.Exception\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> that represents the error that occurred.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - virtual\n  modifiers.vb:\n  - Public\n  - Overridable\n  nameWithType: ErrorEventArgs.GetException()\nreferences:\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  fullName: System.EventArgs\n  commentId: T:System.EventArgs\n  nameWithType: EventArgs\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: true\n  name: Empty\n  fullName: System.EventArgs.Empty\n  commentId: F:System.EventArgs.Empty\n  nameWithType: EventArgs.Empty\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  fullName: System.Exception\n  commentId: T:System.Exception\n  nameWithType: Exception\n"}