{"nodes":[{"pos":[759,774],"content":"EventWaitHandle","needQuote":true,"nodes":[{"content":"EventWaitHandle","pos":[0,15]}]},{"pos":[5102,5142],"content":"EventWaitHandle(Boolean, EventResetMode)","needQuote":true,"nodes":[{"content":"EventWaitHandle(Boolean, EventResetMode)","pos":[0,40]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to set the initial state to signaled; &lt;strong&gt;false&lt;/strong&gt; to set it to nonsignaled.&lt;/p&gt;\\n","pos":[6186,6307],"source":"\\n<p>\\n<strong>true</strong> to set the initial state to signaled; <strong>false</strong> to set it to nonsignaled.</p>\\n"},{"pos":[7087,7135],"content":"EventWaitHandle(Boolean, EventResetMode, String)","needQuote":true,"nodes":[{"content":"EventWaitHandle(Boolean, EventResetMode, String)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to set the initial state to signaled if the named event is created as a result of this call; &lt;strong&gt;false&lt;/strong&gt; to set it to nonsignaled.&lt;/p&gt;\\n","pos":[8295,8471],"source":"\\n<p>\\n<strong>true</strong> to set the initial state to signaled if the named event is created as a result of this call; <strong>false</strong> to set it to nonsignaled.</p>\\n"},{"content":"\\n&lt;p&gt;The name of a system-wide synchronization event.&lt;/p&gt;\\n","pos":[8803,8862],"source":"\\n<p>The name of a system-wide synchronization event.</p>\\n"},{"content":"\\n&lt;p&gt;A Win32 error occurred.&lt;/p&gt;\\n","pos":[8967,9001],"source":"\\n<p>A Win32 error occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The named event cannot be created, perhaps because a wait handle of a different type has the same name.&lt;/p&gt;\\n","pos":[9485,9599],"source":"\\n<p>The named event cannot be created, perhaps because a wait handle of a different type has the same name.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is longer than 260 characters.&lt;/p&gt;\\n","pos":[9696,9753],"source":"\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n"},{"pos":[10580,10641],"content":"EventWaitHandle(Boolean, EventResetMode, String, out Boolean)","needQuote":true,"nodes":[{"content":"EventWaitHandle(Boolean, EventResetMode, String, out Boolean)","pos":[0,61]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; to set the initial state to signaled if the named event is created as a result of this call; &lt;strong&gt;false&lt;/strong&gt; to set it to nonsignaled.&lt;/p&gt;\\n","pos":[11971,12147],"source":"\\n<p>\\n<strong>true</strong> to set the initial state to signaled if the named event is created as a result of this call; <strong>false</strong> to set it to nonsignaled.</p>\\n"},{"content":"\\n&lt;p&gt;The name of a system-wide synchronization event.&lt;/p&gt;\\n","pos":[12479,12538],"source":"\\n<p>The name of a system-wide synchronization event.</p>\\n"},{"content":"\\n&lt;p&gt;When this method returns, contains &lt;strong&gt;true&lt;/strong&gt;if a local event was created (that is, if &lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or an empty string) or if the specified named system event was created; &lt;strong&gt;false&lt;/strong&gt; if the specified named system event already existed.","pos":[12608,12897],"source":"\\n<p>When this method returns, contains <strong>true</strong>if a local event was created (that is, if <em>name</em> is <strong>null</strong> or an empty string) or if the specified named system event was created; <strong>false</strong> if the specified named system event already existed."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[12898,12943],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;A Win32 error occurred.&lt;/p&gt;\\n","pos":[13048,13082],"source":"\\n<p>A Win32 error occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The named event cannot be created, perhaps because a wait handle of a different type has the same name.&lt;/p&gt;\\n","pos":[13566,13680],"source":"\\n<p>The named event cannot be created, perhaps because a wait handle of a different type has the same name.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is longer than 260 characters.&lt;/p&gt;\\n","pos":[13777,13834],"source":"\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n"},{"pos":[14828,14848],"content":"OpenExisting(String)","needQuote":true,"nodes":[{"content":"OpenExisting(String)","pos":[0,20]}]},{"content":"\\n&lt;p&gt;The name of the system synchronization event to open.&lt;/p&gt;\\n","pos":[15671,15735],"source":"\\n<p>The name of the system synchronization event to open.</p>\\n"},{"content":"\\n&lt;p&gt;An  object that represents the named system event.&lt;/p&gt;\\n","pos":[15814,15875],"source":"\\n<p>An  object that represents the named system event.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is an empty string.","pos":[15986,16026],"source":"\\n<p>\\n<em>name</em> is an empty string."},{"content":"&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is longer than 260 characters.&lt;/p&gt;\\n","pos":[16027,16101],"source":" </p>\\n<p>-or-</p>\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[16206,16258],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;The named system event does not exist.&lt;/p&gt;\\n","pos":[16407,16456],"source":"\\n<p>The named system event does not exist.</p>\\n"},{"content":"\\n&lt;p&gt;A Win32 error occurred.&lt;/p&gt;\\n","pos":[16547,16581],"source":"\\n<p>A Win32 error occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The named event exists, but the user does not have the security access required to use it.&lt;/p&gt;\\n","pos":[16698,16799],"source":"\\n<p>The named event exists, but the user does not have the security access required to use it.</p>\\n"},{"pos":[17384,17391],"content":"Reset()","needQuote":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operation succeeds; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[18102,18198],"source":"\\n<p>\\n<strong>true</strong> if the operation succeeds; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[18844,18849],"content":"Set()","needQuote":true,"nodes":[{"content":"Set()","pos":[0,5]}]},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the operation succeeds; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[19572,19668],"source":"\\n<p>\\n<strong>true</strong> if the operation succeeds; otherwise, <strong>false</strong>.</p>\\n"},{"pos":[20495,20539],"content":"TryOpenExisting(String, out EventWaitHandle)","needQuote":true,"nodes":[{"content":"TryOpenExisting(String, out EventWaitHandle)","pos":[0,44]}]},{"content":"\\n&lt;p&gt;The name of the system synchronization event to open.&lt;/p&gt;\\n","pos":[21522,21586],"source":"\\n<p>The name of the system synchronization event to open.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;strong&gt;true&lt;/strong&gt; if the named synchronization event was opened successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22038,22167],"source":"\\n<p>\\n<strong>true</strong> if the named synchronization event was opened successfully; otherwise, <strong>false</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is an empty string.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is longer than 260 characters.&lt;/p&gt;\\n","pos":[22278,22392],"source":"\\n<p>\\n<em>name</em> is an empty string.</p>\\n<p>-or-</p>\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n"},{"content":"\\n&lt;p&gt;\\n&lt;em&gt;name&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[22497,22549],"source":"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n"},{"content":"\\n&lt;p&gt;A Win32 error occurred.&lt;/p&gt;\\n","pos":[22640,22674],"source":"\\n<p>A Win32 error occurred.</p>\\n"},{"content":"\\n&lt;p&gt;The named event exists, but the user does not have the desired security access.&lt;/p&gt;\\n","pos":[22791,22881],"source":"\\n<p>The named event exists, but the user does not have the desired security access.</p>\\n"},{"pos":[23623,23639],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[23800,23806],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23962,23980],"content":"MarshalByRefObject","needQuote":true,"nodes":[{"content":"MarshalByRefObject","pos":[0,18]}]},{"pos":[24185,24195],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[24377,24388],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[24594,24605],"content":"WaitTimeout","needQuote":true,"nodes":[{"content":"WaitTimeout","pos":[0,11]}]},{"pos":[24866,24879],"content":"InvalidHandle","needQuote":true,"nodes":[{"content":"InvalidHandle","pos":[0,13]}]},{"pos":[25169,25192],"content":"WaitOne(Int32, Boolean)","needQuote":true,"nodes":[{"content":"WaitOne(Int32, Boolean)","pos":[0,23]}]},{"pos":[25370,25377],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[25459,25460],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25509,25514],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[25574,25575]},{"pos":[25631,25638],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25699,25700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25812,25819],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[25901,25902],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25951,25956],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[26016,26017]},{"pos":[26073,26080],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26141,26142],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26430,26456],"content":"WaitOne(TimeSpan, Boolean)","needQuote":true,"nodes":[{"content":"WaitOne(TimeSpan, Boolean)","pos":[0,26]}]},{"pos":[26640,26647],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[26729,26730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26782,26790],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[26853,26854]},{"pos":[26910,26917],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26978,26979],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27094,27101],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[27183,27184],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27236,27244],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[27307,27308]},{"pos":[27364,27371],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27432,27433],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27695,27704],"content":"WaitOne()","needQuote":true,"nodes":[{"content":"WaitOne()","pos":[0,9]}]},{"pos":[27825,27832],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[27914,27915],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27942,27943],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28026,28033],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[28115,28116],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28143,28144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28371,28385],"content":"WaitOne(Int32)","needQuote":true,"nodes":[{"content":"WaitOne(Int32)","pos":[0,14]}]},{"pos":[28532,28539],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[28621,28622],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28671,28676],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28735,28736],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28833,28840],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[28922,28923],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28972,28977],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29036,29037],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29286,29303],"content":"WaitOne(TimeSpan)","needQuote":true,"nodes":[{"content":"WaitOne(TimeSpan)","pos":[0,17]}]},{"pos":[29456,29463],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[29545,29546],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29598,29606],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[29668,29669],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29769,29776],"content":"WaitOne","needQuote":true,"nodes":[{"content":"WaitOne","pos":[0,7]}]},{"pos":[29858,29859],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[29911,29919],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[29981,29982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30279,30316],"content":"WaitAll(WaitHandle[], Int32, Boolean)","needQuote":true,"nodes":[{"content":"WaitAll(WaitHandle[], Int32, Boolean)","pos":[0,37]}]},{"pos":[30716,30723],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[30805,30806],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30870,30880],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[30955,30957]},{"content":",","pos":[30989,30990]},{"pos":[31044,31049],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[31109,31110]},{"pos":[31166,31173],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31234,31235],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31377,31384],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[31466,31467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31531,31541],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[31615,31617],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[31646,31647]},{"pos":[31701,31706],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[31766,31767]},{"pos":[31823,31830],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31891,31892],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[32322,32362],"content":"WaitAll(WaitHandle[], TimeSpan, Boolean)","needQuote":true,"nodes":[{"content":"WaitAll(WaitHandle[], TimeSpan, Boolean)","pos":[0,40]}]},{"pos":[32774,32781],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[32863,32864],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32928,32938],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[33013,33015]},{"content":",","pos":[33047,33048]},{"pos":[33105,33113],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[33176,33177]},{"pos":[33233,33240],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33301,33302],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33447,33454],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[33536,33537],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33601,33611],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[33685,33687],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[33716,33717]},{"pos":[33774,33782],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[33845,33846]},{"pos":[33902,33909],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33970,33971],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[34379,34400],"content":"WaitAll(WaitHandle[])","needQuote":true,"nodes":[{"content":"WaitAll(WaitHandle[])","pos":[0,21]}]},{"pos":[34696,34703],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[34785,34786],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[34850,34860],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[34935,34937]},{"pos":[34968,34969],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35083,35090],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[35172,35173],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[35237,35247],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[35321,35323],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[35351,35352],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[35704,35732],"content":"WaitAll(WaitHandle[], Int32)","needQuote":true,"nodes":[{"content":"WaitAll(WaitHandle[], Int32)","pos":[0,28]}]},{"pos":[36076,36083],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[36165,36166],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36230,36240],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[36315,36317]},{"content":",","pos":[36349,36350]},{"pos":[36404,36409],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36468,36469],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[36596,36603],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[36685,36686],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[36750,36760],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[36834,36836],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[36865,36866]},{"pos":[36920,36925],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36984,36985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[37367,37398],"content":"WaitAll(WaitHandle[], TimeSpan)","needQuote":true,"nodes":[{"content":"WaitAll(WaitHandle[], TimeSpan)","pos":[0,31]}]},{"pos":[37754,37761],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[37843,37844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[37908,37918],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[37993,37995]},{"content":",","pos":[38027,38028]},{"pos":[38085,38093],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[38155,38156],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[38286,38293],"content":"WaitAll","needQuote":true,"nodes":[{"content":"WaitAll","pos":[0,7]}]},{"pos":[38375,38376],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[38440,38450],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[38524,38526],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[38555,38556]},{"pos":[38613,38621],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[38683,38684],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[39087,39124],"content":"WaitAny(WaitHandle[], Int32, Boolean)","needQuote":true,"nodes":[{"content":"WaitAny(WaitHandle[], Int32, Boolean)","pos":[0,37]}]},{"pos":[39524,39531],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[39613,39614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[39678,39688],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[39763,39765]},{"content":",","pos":[39797,39798]},{"pos":[39852,39857],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[39917,39918]},{"pos":[39974,39981],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40042,40043],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[40185,40192],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[40274,40275],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[40339,40349],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[40423,40425],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[40454,40455]},{"pos":[40509,40514],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[40574,40575]},{"pos":[40631,40638],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40699,40700],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[41130,41170],"content":"WaitAny(WaitHandle[], TimeSpan, Boolean)","needQuote":true,"nodes":[{"content":"WaitAny(WaitHandle[], TimeSpan, Boolean)","pos":[0,40]}]},{"pos":[41582,41589],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[41671,41672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[41736,41746],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[41821,41823]},{"content":",","pos":[41855,41856]},{"pos":[41913,41921],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[41984,41985]},{"pos":[42041,42048],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42109,42110],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[42255,42262],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[42344,42345],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[42409,42419],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[42493,42495],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[42524,42525]},{"pos":[42582,42590],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[42653,42654]},{"pos":[42710,42717],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42778,42779],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[43203,43234],"content":"WaitAny(WaitHandle[], TimeSpan)","needQuote":true,"nodes":[{"content":"WaitAny(WaitHandle[], TimeSpan)","pos":[0,31]}]},{"pos":[43590,43597],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[43679,43680],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[43744,43754],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[43829,43831]},{"content":",","pos":[43863,43864]},{"pos":[43921,43929],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[43991,43992],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44122,44129],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[44211,44212],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[44276,44286],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[44360,44362],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[44391,44392]},{"pos":[44449,44457],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[44519,44520],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[44895,44916],"content":"WaitAny(WaitHandle[])","needQuote":true,"nodes":[{"content":"WaitAny(WaitHandle[])","pos":[0,21]}]},{"pos":[45212,45219],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[45301,45302],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45366,45376],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[45451,45453]},{"pos":[45484,45485],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[45599,45606],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[45688,45689],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[45753,45763],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[45837,45839],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[45867,45868],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[46220,46248],"content":"WaitAny(WaitHandle[], Int32)","needQuote":true,"nodes":[{"content":"WaitAny(WaitHandle[], Int32)","pos":[0,28]}]},{"pos":[46592,46599],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[46681,46682],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[46746,46756],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":"[]","pos":[46831,46833]},{"content":",","pos":[46865,46866]},{"pos":[46920,46925],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46984,46985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47112,47119],"content":"WaitAny","needQuote":true,"nodes":[{"content":"WaitAny","pos":[0,7]}]},{"pos":[47201,47202],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[47266,47276],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[47350,47352],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"content":",","pos":[47381,47382]},{"pos":[47436,47441],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47500,47501],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[47899,47936],"content":"SignalAndWait(WaitHandle, WaitHandle)","needQuote":true,"nodes":[{"content":"SignalAndWait(WaitHandle, WaitHandle)","pos":[0,37]}]},{"pos":[48182,48195],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[48283,48284],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48348,48358],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[48433,48434]},{"pos":[48503,48513],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[48587,48588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[48734,48747],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[48835,48836],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[48900,48910],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[48985,48986]},{"pos":[49055,49065],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[49139,49140],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[49538,49594],"content":"SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)","needQuote":true,"nodes":[{"content":"SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)","pos":[0,56]}]},{"pos":[49904,49917],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[50005,50006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50070,50080],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[50155,50156]},{"pos":[50225,50235],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[50310,50311]},{"pos":[50368,50376],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[50439,50440]},{"pos":[50496,50503],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50564,50565],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[50742,50755],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[50843,50844],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[50908,50918],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[50993,50994]},{"pos":[51063,51073],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[51148,51149]},{"pos":[51206,51214],"content":"TimeSpan","needQuote":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"content":",","pos":[51277,51278]},{"pos":[51334,51341],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51402,51403],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[51848,51901],"content":"SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)","needQuote":true,"nodes":[{"content":"SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)","pos":[0,53]}]},{"pos":[52205,52218],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[52306,52307],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[52371,52381],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[52456,52457]},{"pos":[52526,52536],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[52611,52612]},{"pos":[52666,52671],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[52731,52732]},{"pos":[52788,52795],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[52856,52857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[53031,53044],"content":"SignalAndWait","needQuote":true,"nodes":[{"content":"SignalAndWait","pos":[0,13]}]},{"pos":[53132,53133],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[53197,53207],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[53282,53283]},{"pos":[53352,53362],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[53437,53438]},{"pos":[53492,53497],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"content":",","pos":[53557,53558]},{"pos":[53614,53621],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[53682,53683],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54029,54036],"content":"Close()","needQuote":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[54153,54158],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[54238,54239],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54266,54267],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54348,54353],"content":"Close","needQuote":true,"nodes":[{"content":"Close","pos":[0,5]}]},{"pos":[54433,54434],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54461,54462],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[54687,54703],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[54854,54861],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[54943,54944],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[54995,55002],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55063,55064],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55163,55170],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[55252,55253],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55304,55311],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55372,55373],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55609,55618],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[55739,55746],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[55828,55829],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[55856,55857],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[55940,55947],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[56029,56030],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[56057,56058],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[56270,56276],"content":"Handle","needQuote":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"pos":[56523,56537],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[56821,56845],"content":"MemberwiseClone(Boolean)","needQuote":true,"nodes":[{"content":"MemberwiseClone(Boolean)","pos":[0,24]}]},{"pos":[57008,57023],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[57111,57112],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57163,57170],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57231,57232],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57337,57352],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[57440,57441],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[57492,57499],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57560,57561],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[57826,57846],"content":"GetLifetimeService()","needQuote":true,"nodes":[{"content":"GetLifetimeService()","pos":[0,20]}]},{"pos":[57985,58003],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[58094,58095],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58122,58123],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58215,58233],"content":"GetLifetimeService","needQuote":true,"nodes":[{"content":"GetLifetimeService","pos":[0,18]}]},{"pos":[58324,58325],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58352,58353],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[58608,58635],"content":"InitializeLifetimeService()","needQuote":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[58788,58813],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[58911,58912],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[58939,58940],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59039,59064],"content":"InitializeLifetimeService","needQuote":true,"nodes":[{"content":"InitializeLifetimeService","pos":[0,25]}]},{"pos":[59162,59163],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59190,59191],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59460,59478],"content":"CreateObjRef(Type)","needQuote":true,"nodes":[{"content":"CreateObjRef(Type)","pos":[0,18]}]},{"pos":[59629,59641],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[59726,59727],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[59775,59779],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59837,59838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[59937,59949],"content":"CreateObjRef","needQuote":true,"nodes":[{"content":"CreateObjRef","pos":[0,12]}]},{"pos":[60034,60035],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60083,60087],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[60145,60146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60365,60375],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[60470,60478],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60547,60548],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60575,60576],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60646,60654],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[60723,60724],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[60751,60752],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[60935,60949],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[61068,61074],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61141,61142],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61192,61198],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61258,61259],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61342,61348],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61415,61416],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[61466,61472],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[61532,61533],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[61747,61769],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[61917,61923],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[61990,61991],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62041,62047],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62108,62109]},{"pos":[62164,62170],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62230,62231],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62328,62334],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[62401,62402],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[62452,62458],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[62519,62520]},{"pos":[62575,62581],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[62641,62642],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[62887,62918],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[63084,63099],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[63175,63176],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63226,63232],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63293,63294]},{"pos":[63349,63355],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63415,63416],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[63522,63537],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[63613,63614],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[63664,63670],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[63731,63732]},{"pos":[63787,63793],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[63853,63854],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64084,64097],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[64198,64209],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64281,64282],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64309,64310],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64383,64394],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[64466,64467],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64494,64495],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64670,64679],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[64772,64779],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[64847,64848],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[64875,64876],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[64945,64952],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[65020,65021],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65048,65049],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65224,65241],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[65350,65365],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65441,65442],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65469,65470],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[65547,65562],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[65638,65639],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[65666,65667],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66016,66035],"content":"GetSafeWaitHandle()","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle()","pos":[0,19]}]},{"pos":[66196,66213],"content":"GetSafeWaitHandle","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle","pos":[0,17]}]},{"pos":[66294,66295],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66322,66323],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[66426,66443],"content":"GetSafeWaitHandle","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle","pos":[0,17]}]},{"pos":[66524,66525],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[66552,66553],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67060,67093],"content":"SetSafeWaitHandle(SafeWaitHandle)","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle(SafeWaitHandle)","pos":[0,33]}]},{"pos":[67340,67357],"content":"SetSafeWaitHandle","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle","pos":[0,17]}]},{"pos":[67438,67439],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67518,67532],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[67600,67601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[67748,67765],"content":"SetSafeWaitHandle","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle","pos":[0,17]}]},{"pos":[67846,67847],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[67926,67940],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[68008,68009],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[68282,68288],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[68472,68501],"content":"GetSafeWaitHandle(WaitHandle)","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle(WaitHandle)","pos":[0,29]}]},{"pos":[68718,68735],"content":"GetSafeWaitHandle","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle","pos":[0,17]}]},{"pos":[68816,68817],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[68881,68891],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[68965,68966],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69098,69115],"content":"GetSafeWaitHandle","needQuote":true,"nodes":[{"content":"GetSafeWaitHandle","pos":[0,17]}]},{"pos":[69196,69197],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[69261,69271],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[69345,69346],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[69630,69650],"content":"WaitHandleExtensions","needQuote":true,"nodes":[{"content":"WaitHandleExtensions","pos":[0,20]}]},{"pos":[69953,69998],"content":"SetSafeWaitHandle(WaitHandle, SafeWaitHandle)","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle(WaitHandle, SafeWaitHandle)","pos":[0,45]}]},{"pos":[70302,70319],"content":"SetSafeWaitHandle","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle","pos":[0,17]}]},{"pos":[70400,70401],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[70465,70475],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[70550,70551]},{"pos":[70635,70649],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[70717,70718],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[70893,70910],"content":"SetSafeWaitHandle","needQuote":true,"nodes":[{"content":"SetSafeWaitHandle","pos":[0,17]}]},{"pos":[70991,70992],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[71056,71066],"content":"WaitHandle","needQuote":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"content":",","pos":[71141,71142]},{"pos":[71226,71240],"content":"SafeWaitHandle","needQuote":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[71308,71309],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[71619,71626],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71802,71816],"content":"EventResetMode","needQuote":true,"nodes":[{"content":"EventResetMode","pos":[0,14]}]},{"pos":[72005,72011],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[72185,72200],"content":"EventWaitHandle","needQuote":true,"nodes":[{"content":"EventWaitHandle","pos":[0,15]}]},{"pos":[72403,72414],"content":"IOException","needQuote":true,"nodes":[{"content":"IOException","pos":[0,11]}]},{"pos":[72601,72628],"content":"UnauthorizedAccessException","needQuote":true,"nodes":[{"content":"UnauthorizedAccessException","pos":[0,27]}]},{"pos":[72856,72889],"content":"WaitHandleCannotBeOpenedException","needQuote":true,"nodes":[{"content":"WaitHandleCannotBeOpenedException","pos":[0,33]}]},{"pos":[73146,73163],"content":"ArgumentException","needQuote":true,"nodes":[{"content":"ArgumentException","pos":[0,17]}]},{"pos":[73339,73360],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[73550,73573],"content":"ObjectDisposedException","needQuote":true,"nodes":[{"content":"ObjectDisposedException","pos":[0,23]}]}],"content":"items:\n- uid: System.Threading.EventWaitHandle\n  commentId: T:System.Threading.EventWaitHandle\n  id: EventWaitHandle\n  parent: System.Threading\n  children:\n  - System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)\n  - System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)\n  - System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)\n  - System.Threading.EventWaitHandle.OpenExisting(System.String)\n  - System.Threading.EventWaitHandle.Reset\n  - System.Threading.EventWaitHandle.Set\n  - System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandle\n  fullName: System.Threading.EventWaitHandle\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: EventWaitHandle\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 41\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Represents a thread synchronization event.</p>\\n\"\n  syntax:\n    content: >-\n      [HostProtection(Synchronization = true, ExternalThreading = true)]\n\n      [ComVisible(true)]\n\n      public class EventWaitHandle : WaitHandle, IDisposable\n    content.vb: >-\n      <HostProtection(Synchronization:=True, ExternalThreading:=True)>\n\n      <ComVisible(True)>\n\n      Public Class EventWaitHandle\n          Inherits WaitHandle\n          Implements IDisposable\n  seealso:\n  - type: System.Threading.WaitHandle\n    commentId: T:System.Threading.WaitHandle\n  - type: System.Threading.AutoResetEvent\n    commentId: T:System.Threading.AutoResetEvent\n  - type: System.Threading.ManualResetEvent\n    commentId: T:System.Threading.ManualResetEvent\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.Threading.WaitHandle\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Threading.WaitHandle.WaitTimeout\n  - System.Threading.WaitHandle.InvalidHandle\n  - System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitOne\n  - System.Threading.WaitHandle.WaitOne(System.Int32)\n  - System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.Close\n  - System.Threading.WaitHandle.Dispose(System.Boolean)\n  - System.Threading.WaitHandle.Dispose\n  - System.Threading.WaitHandle.Handle\n  - System.Threading.WaitHandle.SafeWaitHandle\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: EventWaitHandle\n  extensionMethods:\n  - System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  - System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)\n- uid: System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)\n  commentId: M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)\n  id: '#ctor(System.Boolean,System.Threading.EventResetMode)'\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandle(Boolean, EventResetMode)\n  fullName: System.Threading.EventWaitHandle.EventWaitHandle(System.Boolean, System.Threading.EventResetMode)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 45\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying whether the wait handle is initially signaled, and whether it resets automatically or manually.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public EventWaitHandle(bool initialState, EventResetMode mode)\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Sub New(initialState As Boolean, mode As EventResetMode)\n    parameters:\n    - id: initialState\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to set the initial state to signaled; <strong>false</strong> to set it to nonsignaled.</p>\\n\"\n    - id: mode\n      type: System.Threading.EventResetMode\n      description: \"\\n<p>One of the <xref href=\\\"System.Threading.EventResetMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that determines whether the event resets automatically or manually.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandle.EventWaitHandle(Boolean, EventResetMode)\n- uid: System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)\n  commentId: M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)\n  id: '#ctor(System.Boolean,System.Threading.EventResetMode,System.String)'\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandle(Boolean, EventResetMode, String)\n  fullName: System.Threading.EventWaitHandle.EventWaitHandle(System.Boolean, System.Threading.EventResetMode, System.String)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 48\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, and the name of a system synchronization event.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public EventWaitHandle(bool initialState, EventResetMode mode, string name)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub New(initialState As Boolean, mode As EventResetMode, name As String)\n    parameters:\n    - id: initialState\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to set the initial state to signaled if the named event is created as a result of this call; <strong>false</strong> to set it to nonsignaled.</p>\\n\"\n    - id: mode\n      type: System.Threading.EventResetMode\n      description: \"\\n<p>One of the <xref href=\\\"System.Threading.EventResetMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that determines whether the event resets automatically or manually.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of a system-wide synchronization event.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A Win32 error occurred.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The named event exists and has access control security, but the user does not have <xref href=\\\"System.Security.AccessControl.EventWaitHandleRights.FullControl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Threading.WaitHandleCannotBeOpenedException\n    commentId: T:System.Threading.WaitHandleCannotBeOpenedException\n    description: \"\\n<p>The named event cannot be created, perhaps because a wait handle of a different type has the same name.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandle.EventWaitHandle(Boolean, EventResetMode, String)\n- uid: System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)\n  commentId: M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)\n  id: '#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)'\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: EventWaitHandle(Boolean, EventResetMode, String, out Boolean)\n  fullName: System.Threading.EventWaitHandle.EventWaitHandle(System.Boolean, System.Threading.EventResetMode, System.String, out System.Boolean)\n  type: Constructor\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: .ctor\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 91\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class, specifying whether the wait handle is initially signaled if created as a result of this call, whether it resets automatically or manually, the name of a system synchronization event, and a Boolean variable whose value after the call indicates whether the named system event was created.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public EventWaitHandle(bool initialState, EventResetMode mode, string name, out bool createdNew)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Sub New(initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean)\n    parameters:\n    - id: initialState\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> to set the initial state to signaled if the named event is created as a result of this call; <strong>false</strong> to set it to nonsignaled.</p>\\n\"\n    - id: mode\n      type: System.Threading.EventResetMode\n      description: \"\\n<p>One of the <xref href=\\\"System.Threading.EventResetMode\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> values that determines whether the event resets automatically or manually.</p>\\n\"\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of a system-wide synchronization event.</p>\\n\"\n    - id: createdNew\n      type: System.Boolean\n      description: \"\\n<p>When this method returns, contains <strong>true</strong>if a local event was created (that is, if <em>name</em> is <strong>null</strong> or an empty string) or if the specified named system event was created; <strong>false</strong> if the specified named system event already existed. This parameter is passed uninitialized.</p>\\n\"\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A Win32 error occurred.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The named event exists and has access control security, but the user does not have <xref href=\\\"System.Security.AccessControl.EventWaitHandleRights.FullControl\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  - type: System.Threading.WaitHandleCannotBeOpenedException\n    commentId: T:System.Threading.WaitHandleCannotBeOpenedException\n    description: \"\\n<p>The named event cannot be created, perhaps because a wait handle of a different type has the same name.</p>\\n\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Threading.EventWaitHandle.EventWaitHandle(System.Boolean, System.Threading.EventResetMode, System.String, ByRef System.Boolean)\n  name.vb: EventWaitHandle(Boolean, EventResetMode, String, ByRef Boolean)\n  nameWithType: EventWaitHandle.EventWaitHandle(Boolean, EventResetMode, String, out Boolean)\n  nameWithType.vb: EventWaitHandle.EventWaitHandle(Boolean, EventResetMode, String, ByRef Boolean)\n- uid: System.Threading.EventWaitHandle.OpenExisting(System.String)\n  commentId: M:System.Threading.EventWaitHandle.OpenExisting(System.String)\n  id: OpenExisting(System.String)\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: OpenExisting(String)\n  fullName: System.Threading.EventWaitHandle.OpenExisting(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: OpenExisting\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 163\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Opens the specified named synchronization event, if it already exists.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static EventWaitHandle OpenExisting(string name)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Function OpenExisting(name As String) As EventWaitHandle\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the system synchronization event to open.</p>\\n\"\n    return:\n      type: System.Threading.EventWaitHandle\n      description: \"\\n<p>An  object that represents the named system event.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is an empty string. </p>\\n<p>-or-</p>\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.Threading.WaitHandleCannotBeOpenedException\n    commentId: T:System.Threading.WaitHandleCannotBeOpenedException\n    description: \"\\n<p>The named system event does not exist.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A Win32 error occurred.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The named event exists, but the user does not have the security access required to use it.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: EventWaitHandle.OpenExisting(String)\n- uid: System.Threading.EventWaitHandle.Reset\n  commentId: M:System.Threading.EventWaitHandle.Reset\n  id: Reset\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: Reset()\n  fullName: System.Threading.EventWaitHandle.Reset()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Reset\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 258\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Sets the state of the event to nonsignaled, causing threads to block.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public bool Reset()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function Reset As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operation succeeds; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was previously called on this <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandle.Reset()\n- uid: System.Threading.EventWaitHandle.Set\n  commentId: M:System.Threading.EventWaitHandle.Set\n  id: Set\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: Set()\n  fullName: System.Threading.EventWaitHandle.Set()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Set\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 266\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Sets the state of the event to signaled, allowing one or more waiting threads to proceed.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public bool Set()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Function Set As Boolean\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the operation succeeds; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"\\n<p>The <xref href=\\\"System.Threading.WaitHandle.Close\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method was previously called on this <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  nameWithType: EventWaitHandle.Set()\n- uid: System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)\n  commentId: M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)\n  id: TryOpenExisting(System.String,System.Threading.EventWaitHandle@)\n  parent: System.Threading.EventWaitHandle\n  langs:\n  - csharp\n  - vb\n  name: TryOpenExisting(String, out EventWaitHandle)\n  fullName: System.Threading.EventWaitHandle.TryOpenExisting(System.String, out System.Threading.EventWaitHandle)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: TryOpenExisting\n    path: src/mscorlib/src/System/Threading/EventWaitHandle.cs\n    startLine: 194\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Opens the specified named synchronization event, if it already exists, and returns a value that indicates whether the operation succeeded.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      public static bool TryOpenExisting(string name, out EventWaitHandle result)\n    content.vb: >-\n      <SecurityCritical>\n\n      Public Shared Function TryOpenExisting(name As String, ByRef result As EventWaitHandle) As Boolean\n    parameters:\n    - id: name\n      type: System.String\n      description: \"\\n<p>The name of the system synchronization event to open.</p>\\n\"\n    - id: result\n      type: System.Threading.EventWaitHandle\n      description: \"\\n<p>When this method returns, contains a <xref href=\\\"System.Threading.EventWaitHandle\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the named synchronization event if the call succeeded, or <strong>null</strong> if the call failed. This parameter is treated as uninitialized.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>\\n<strong>true</strong> if the named synchronization event was opened successfully; otherwise, <strong>false</strong>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"\\n<p>\\n<em>name</em> is an empty string.</p>\\n<p>-or-</p>\\n<p>\\n<em>name</em> is longer than 260 characters.</p>\\n\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>\\n<em>name</em> is <strong>null</strong>.</p>\\n\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"\\n<p>A Win32 error occurred.</p>\\n\"\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: \"\\n<p>The named event exists, but the user does not have the desired security access.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  fullName.vb: System.Threading.EventWaitHandle.TryOpenExisting(System.String, ByRef System.Threading.EventWaitHandle)\n  name.vb: TryOpenExisting(String, ByRef EventWaitHandle)\n  nameWithType: EventWaitHandle.TryOpenExisting(String, out EventWaitHandle)\n  nameWithType.vb: EventWaitHandle.TryOpenExisting(String, ByRef EventWaitHandle)\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: true\n  name: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  commentId: T:System.MarshalByRefObject\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  fullName: System.Threading.WaitHandle\n  nameWithType: WaitHandle\n  commentId: T:System.Threading.WaitHandle\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  nameWithType: IDisposable\n  commentId: T:System.IDisposable\n- uid: System.Threading.WaitHandle.WaitTimeout\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitTimeout\n  fullName: System.Threading.WaitHandle.WaitTimeout\n  nameWithType: WaitHandle.WaitTimeout\n  commentId: F:System.Threading.WaitHandle.WaitTimeout\n- uid: System.Threading.WaitHandle.InvalidHandle\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: InvalidHandle\n  fullName: System.Threading.WaitHandle.InvalidHandle\n  nameWithType: WaitHandle.InvalidHandle\n  commentId: F:System.Threading.WaitHandle.InvalidHandle\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitOne(Int32, Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(System.Int32, System.Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitOne(Int32, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitOne(TimeSpan, Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(System.TimeSpan, System.Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitOne(TimeSpan, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitOne\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitOne()\n  fullName: System.Threading.WaitHandle.WaitOne()\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitOne\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitOne\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitOne()\n  commentId: M:System.Threading.WaitHandle.WaitOne\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitOne(Int32)\n  fullName: System.Threading.WaitHandle.WaitOne(System.Int32)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitOne(System.Int32)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitOne(System.Int32)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitOne(Int32)\n  commentId: M:System.Threading.WaitHandle.WaitOne(System.Int32)\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitOne(TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n    name: WaitOne\n    fullName: System.Threading.WaitHandle.WaitOne\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitOne(TimeSpan)\n  commentId: M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAll(WaitHandle[], Int32, Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.Int32, System.Boolean)\n  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.Int32, System.Boolean)\n  name.vb: WaitAll(WaitHandle(), Int32, Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAll(WaitHandle[], Int32, Boolean)\n  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), Int32, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAll(WaitHandle[], TimeSpan, Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.TimeSpan, System.Boolean)\n  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.TimeSpan, System.Boolean)\n  name.vb: WaitAll(WaitHandle(), TimeSpan, Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAll(WaitHandle[], TimeSpan, Boolean)\n  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), TimeSpan, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAll(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle())\n  name.vb: WaitAll(WaitHandle())\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAll(WaitHandle[])\n  nameWithType.vb: WaitHandle.WaitAll(WaitHandle())\n  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAll(WaitHandle[], Int32)\n  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.Int32)\n  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.Int32)\n  name.vb: WaitAll(WaitHandle(), Int32)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAll(WaitHandle[], Int32)\n  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), Int32)\n  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAll(WaitHandle[], TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[], System.TimeSpan)\n  fullname.vb: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle(), System.TimeSpan)\n  name.vb: WaitAll(WaitHandle(), TimeSpan)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n    name: WaitAll\n    fullName: System.Threading.WaitHandle.WaitAll\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAll(WaitHandle[], TimeSpan)\n  nameWithType.vb: WaitHandle.WaitAll(WaitHandle(), TimeSpan)\n  commentId: M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAny(WaitHandle[], Int32, Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.Int32, System.Boolean)\n  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.Int32, System.Boolean)\n  name.vb: WaitAny(WaitHandle(), Int32, Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAny(WaitHandle[], Int32, Boolean)\n  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), Int32, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAny(WaitHandle[], TimeSpan, Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan, System.Boolean)\n  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.TimeSpan, System.Boolean)\n  name.vb: WaitAny(WaitHandle(), TimeSpan, Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAny(WaitHandle[], TimeSpan, Boolean)\n  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), TimeSpan, Boolean)\n  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAny(WaitHandle[], TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.TimeSpan)\n  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.TimeSpan)\n  name.vb: WaitAny(WaitHandle(), TimeSpan)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAny(WaitHandle[], TimeSpan)\n  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), TimeSpan)\n  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAny(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle())\n  name.vb: WaitAny(WaitHandle())\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAny(WaitHandle[])\n  nameWithType.vb: WaitHandle.WaitAny(WaitHandle())\n  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: WaitAny(WaitHandle[], Int32)\n  fullName: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], System.Int32)\n  fullname.vb: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle(), System.Int32)\n  name.vb: WaitAny(WaitHandle(), Int32)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n    name: WaitAny\n    fullName: System.Threading.WaitHandle.WaitAny\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ()\n    fullName: ()\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.WaitAny(WaitHandle[], Int32)\n  nameWithType.vb: WaitHandle.WaitAny(WaitHandle(), Int32)\n  commentId: M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: SignalAndWait(WaitHandle, WaitHandle)\n  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle)\n  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle, System.TimeSpan, System.Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.TimeSpan\n    name: TimeSpan\n    fullName: System.TimeSpan\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle, TimeSpan, Boolean)\n  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle, System.Threading.WaitHandle, System.Int32, System.Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n    name: SignalAndWait\n    fullName: System.Threading.WaitHandle.SignalAndWait\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Int32\n    name: Int32\n    fullName: System.Int32\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle, WaitHandle, Int32, Boolean)\n  commentId: M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n- uid: System.Threading.WaitHandle.Close\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: Close()\n  fullName: System.Threading.WaitHandle.Close()\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.Close\n    name: Close\n    fullName: System.Threading.WaitHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.Close\n    name: Close\n    fullName: System.Threading.WaitHandle.Close\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.Close()\n  commentId: M:System.Threading.WaitHandle.Close\n- uid: System.Threading.WaitHandle.Dispose(System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Threading.WaitHandle.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Threading.WaitHandle.Dispose\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Threading.WaitHandle.Dispose\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.Dispose(Boolean)\n  commentId: M:System.Threading.WaitHandle.Dispose(System.Boolean)\n- uid: System.Threading.WaitHandle.Dispose\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: Dispose()\n  fullName: System.Threading.WaitHandle.Dispose()\n  spec.csharp:\n  - uid: System.Threading.WaitHandle.Dispose\n    name: Dispose\n    fullName: System.Threading.WaitHandle.Dispose\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandle.Dispose\n    name: Dispose\n    fullName: System.Threading.WaitHandle.Dispose\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WaitHandle.Dispose()\n  commentId: M:System.Threading.WaitHandle.Dispose\n- uid: System.Threading.WaitHandle.Handle\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: Handle\n  fullName: System.Threading.WaitHandle.Handle\n  nameWithType: WaitHandle.Handle\n  commentId: P:System.Threading.WaitHandle.Handle\n- uid: System.Threading.WaitHandle.SafeWaitHandle\n  parent: System.Threading.WaitHandle\n  isExternal: true\n  name: SafeWaitHandle\n  fullName: System.Threading.WaitHandle.SafeWaitHandle\n  nameWithType: WaitHandle.SafeWaitHandle\n  commentId: P:System.Threading.WaitHandle.SafeWaitHandle\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: MemberwiseClone(Boolean)\n  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n    name: MemberwiseClone\n    fullName: System.MarshalByRefObject.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: GetLifetimeService()\n  fullName: System.MarshalByRefObject.GetLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.GetLifetimeService\n    name: GetLifetimeService\n    fullName: System.MarshalByRefObject.GetLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  commentId: M:System.MarshalByRefObject.GetLifetimeService\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: InitializeLifetimeService()\n  fullName: System.MarshalByRefObject.InitializeLifetimeService()\n  spec.csharp:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.InitializeLifetimeService\n    name: InitializeLifetimeService\n    fullName: System.MarshalByRefObject.InitializeLifetimeService\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  commentId: M:System.MarshalByRefObject.InitializeLifetimeService\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: true\n  name: CreateObjRef(Type)\n  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)\n  spec.csharp:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n    name: CreateObjRef\n    fullName: System.MarshalByRefObject.CreateObjRef\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Type\n    name: Type\n    fullName: System.Type\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  parent: System.Threading.WaitHandleExtensions\n  definition: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n  name: GetSafeWaitHandle()\n  fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle()\n  spec.csharp:\n  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n    name: GetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n    name: GetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: WaitHandleExtensions.GetSafeWaitHandle()\n  commentId: M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n- uid: System.Threading.WaitHandle.System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)\n  parent: System.Threading.WaitHandleExtensions\n  definition: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n  name: SetSafeWaitHandle(SafeWaitHandle)\n  fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)\n  spec.csharp:\n  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)\n    name: SetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n    name: SafeWaitHandle\n    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(Microsoft.Win32.SafeHandles.SafeWaitHandle)\n    name: SetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n    name: SafeWaitHandle\n    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  - name: )\n    fullName: )\n  nameWithType: WaitHandleExtensions.SetSafeWaitHandle(SafeWaitHandle)\n  commentId: M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n  isExternal: true\n  name: GetSafeWaitHandle(WaitHandle)\n  fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n  spec.csharp:\n  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n    name: GetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n    name: GetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.GetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: WaitHandleExtensions.GetSafeWaitHandle(WaitHandle)\n  commentId: M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)\n- uid: System.Threading.WaitHandleExtensions\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandleExtensions\n  fullName: System.Threading.WaitHandleExtensions\n  nameWithType: WaitHandleExtensions\n  commentId: T:System.Threading.WaitHandleExtensions\n- uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n  isExternal: true\n  name: SetSafeWaitHandle(WaitHandle, SafeWaitHandle)\n  fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle, Microsoft.Win32.SafeHandles.SafeWaitHandle)\n  spec.csharp:\n  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n    name: SetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n    name: SafeWaitHandle\n    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n    name: SetSafeWaitHandle\n    fullName: System.Threading.WaitHandleExtensions.SetSafeWaitHandle\n  - name: (\n    fullName: (\n  - uid: System.Threading.WaitHandle\n    name: WaitHandle\n    fullName: System.Threading.WaitHandle\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n    name: SafeWaitHandle\n    fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  - name: )\n    fullName: )\n  nameWithType: WaitHandleExtensions.SetSafeWaitHandle(WaitHandle, SafeWaitHandle)\n  commentId: M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  nameWithType: Boolean\n  commentId: T:System.Boolean\n- uid: System.Threading.EventResetMode\n  parent: System.Threading\n  isExternal: false\n  name: EventResetMode\n  fullName: System.Threading.EventResetMode\n  nameWithType: EventResetMode\n  commentId: T:System.Threading.EventResetMode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  fullName: System.String\n  nameWithType: String\n  commentId: T:System.String\n- uid: System.Threading.EventWaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: EventWaitHandle\n  fullName: System.Threading.EventWaitHandle\n  nameWithType: EventWaitHandle\n  commentId: T:System.Threading.EventWaitHandle\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  fullName: System.IO.IOException\n  nameWithType: IOException\n  commentId: T:System.IO.IOException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  commentId: T:System.UnauthorizedAccessException\n- uid: System.Threading.WaitHandleCannotBeOpenedException\n  isExternal: false\n  name: WaitHandleCannotBeOpenedException\n  fullName: System.Threading.WaitHandleCannotBeOpenedException\n  nameWithType: WaitHandleCannotBeOpenedException\n  commentId: T:System.Threading.WaitHandleCannotBeOpenedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  fullName: System.ArgumentException\n  nameWithType: ArgumentException\n  commentId: T:System.ArgumentException\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ObjectDisposedException\n  isExternal: false\n  name: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  commentId: T:System.ObjectDisposedException\n"}