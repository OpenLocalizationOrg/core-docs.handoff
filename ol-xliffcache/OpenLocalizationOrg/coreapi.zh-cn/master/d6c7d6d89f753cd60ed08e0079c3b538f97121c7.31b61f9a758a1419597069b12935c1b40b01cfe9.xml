{"nodes":[{"pos":[1007,1017],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[2686,2691],"content":"Linux","needQuote":true,"nodes":[{"content":"Linux","pos":[0,5]}]},{"pos":[3810,3813],"content":"OSX","needQuote":true,"nodes":[{"content":"OSX","pos":[0,3]}]},{"pos":[4934,4941],"content":"Windows","needQuote":true,"nodes":[{"content":"Windows","pos":[0,7]}]},{"pos":[6124,6138],"content":"Create(String)","needQuote":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[7383,7397],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8732,8750],"content":"Equals(OSPlatform)","needQuote":true,"nodes":[{"content":"Equals(OSPlatform)","pos":[0,18]}]},{"pos":[10075,10088],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11476,11508],"content":"Equality(OSPlatform, OSPlatform)","needQuote":true,"nodes":[{"content":"Equality(OSPlatform, OSPlatform)","pos":[0,32]}]},{"pos":[13173,13207],"content":"Inequality(OSPlatform, OSPlatform)","needQuote":true,"nodes":[{"content":"Inequality(OSPlatform, OSPlatform)","pos":[0,34]}]},{"pos":[14609,14619],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15626,15656],"content":"System.Runtime.InteropServices","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices","pos":[0,30]}]},{"pos":[15950,15972],"content":"IEquatable<OSPlatform>","needQuote":true,"nodes":[{"content":"IEquatable&lt;OSPlatform&gt;","pos":[0,22],"source":"IEquatable<OSPlatform>"}]},{"pos":[16300,16310],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[16403,16404],"content":"<","needQuote":true,"nodes":[]},{"pos":[16502,16512],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[16702,16712],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[16806,16809]},{"pos":[16919,16929],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[17025,17026],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17236,17258],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[17452,17458],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[17557,17558],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17628,17634],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[17720,17721]},{"pos":[17799,17805],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17890,17891],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18008,18014],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[18113,18114],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18184,18190],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[18276,18277]},{"pos":[18355,18361],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18446,18447],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18675,18706],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[18927,18942],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19059,19060],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19130,19136],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19222,19223]},{"pos":[19301,19307],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19392,19393],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19519,19534],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[19651,19652],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19722,19728],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[19814,19815]},{"pos":[19893,19899],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19984,19985],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20139,20148],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[20274,20281],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20382,20383],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20430,20431],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20520,20527],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[20628,20629],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20676,20677],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20804,20817],"content":"IEquatable<T>","needQuote":true,"nodes":[{"content":"IEquatable&lt;T&gt;","pos":[0,13],"source":"IEquatable<T>"}]},{"pos":[21038,21048],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"pos":[21120,21121],"content":"<","needQuote":true,"nodes":[]},{"pos":[21168,21169],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21310,21320],"content":"IEquatable","needQuote":true,"nodes":[{"content":"IEquatable","pos":[0,10]}]},{"content":"(Of","pos":[21393,21396]},{"pos":[21455,21456],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[21503,21504],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21605,21611],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[21749,21755],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21980,21990],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[22167,22173],"content":"String","needQuote":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22377,22391],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[22557,22563],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22647,22648],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22718,22724],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22809,22810],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22916,22922],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23006,23007],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23077,23083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23168,23169],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23303,23310],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23463,23472],"content":"ValueType","needQuote":true,"nodes":[{"content":"ValueType","pos":[0,9]}]},{"pos":[23896,23914],"content":"Equals(OSPlatform)","needQuote":true,"nodes":[{"content":"Equals(OSPlatform)","pos":[0,18]}]},{"pos":[24354,24360],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[24522,24523],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24621,24631],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[24727,24728],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24826,24832],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25000,25001],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25099,25109],"content":"OSPlatform","needQuote":true,"nodes":[{"content":"OSPlatform","pos":[0,10]}]},{"pos":[25205,25206],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25355,25364],"content":"Equals(T)","needQuote":true,"nodes":[{"content":"Equals(T)","pos":[0,9]}]},{"pos":[25608,25614],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[25706,25707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25754,25755],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[25802,25803],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25901,25907],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[26005,26006],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26053,26054],"content":"T","needQuote":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[26101,26102],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26274,26287],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[26434,26445],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26539,26540],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26587,26588],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26684,26695],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[26789,26790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26837,26838],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26968,26973],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27150,27160],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27298,27306],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27394,27395],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27442,27443],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27536,27544],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[27632,27633],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27680,27681],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.OSPlatform\n  commentId: T:System.Runtime.InteropServices.OSPlatform\n  id: OSPlatform\n  parent: System.Runtime.InteropServices\n  children:\n  - System.Runtime.InteropServices.OSPlatform.Create(System.String)\n  - System.Runtime.InteropServices.OSPlatform.Equals(System.Object)\n  - System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)\n  - System.Runtime.InteropServices.OSPlatform.GetHashCode\n  - System.Runtime.InteropServices.OSPlatform.Linux\n  - System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  - System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  - System.Runtime.InteropServices.OSPlatform.OSX\n  - System.Runtime.InteropServices.OSPlatform.ToString\n  - System.Runtime.InteropServices.OSPlatform.Windows\n  langs:\n  - csharp\n  - vb\n  name: OSPlatform\n  nameWithType: OSPlatform\n  fullName: System.Runtime.InteropServices.OSPlatform\n  type: Struct\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSPlatform\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 10\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: >-\n      [StructLayout(LayoutKind.Sequential)]\n\n      public struct OSPlatform : IEquatable<OSPlatform>\n    content.vb: >-\n      <StructLayout(LayoutKind.Sequential)>\n\n      Public Structure OSPlatform\n          Implements IEquatable(Of OSPlatform)\n  implements:\n  - System.IEquatable{System.Runtime.InteropServices.OSPlatform}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetType\n  attributes:\n  - type: System.Runtime.InteropServices.StructLayoutAttribute\n    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)\n    arguments:\n    - type: System.Runtime.InteropServices.LayoutKind\n      value: 0\n  modifiers.csharp:\n  - public\n  - struct\n  modifiers.vb:\n  - Public\n  - Structure\n- uid: System.Runtime.InteropServices.OSPlatform.Linux\n  commentId: P:System.Runtime.InteropServices.OSPlatform.Linux\n  id: Linux\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Linux\n  nameWithType: OSPlatform.Linux\n  fullName: System.Runtime.InteropServices.OSPlatform.Linux\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Linux\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 13\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static OSPlatform Linux { get; }\n    content.vb: Public Shared ReadOnly Property Linux As OSPlatform\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.OSPlatform\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.OSPlatform.OSX\n  commentId: P:System.Runtime.InteropServices.OSPlatform.OSX\n  id: OSX\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: OSX\n  nameWithType: OSPlatform.OSX\n  fullName: System.Runtime.InteropServices.OSPlatform.OSX\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OSX\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 14\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static OSPlatform OSX { get; }\n    content.vb: Public Shared ReadOnly Property OSX As OSPlatform\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.OSPlatform\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.OSPlatform.Windows\n  commentId: P:System.Runtime.InteropServices.OSPlatform.Windows\n  id: Windows\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Windows\n  nameWithType: OSPlatform.Windows\n  fullName: System.Runtime.InteropServices.OSPlatform.Windows\n  type: Property\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Windows\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 15\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static OSPlatform Windows { get; }\n    content.vb: Public Shared ReadOnly Property Windows As OSPlatform\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.OSPlatform\n  modifiers.csharp:\n  - public\n  - static\n  - get\n  modifiers.vb:\n  - Public\n  - Shared\n  - ReadOnly\n- uid: System.Runtime.InteropServices.OSPlatform.Create(System.String)\n  commentId: M:System.Runtime.InteropServices.OSPlatform.Create(System.String)\n  id: Create(System.String)\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Create(String)\n  nameWithType: OSPlatform.Create(String)\n  fullName: System.Runtime.InteropServices.OSPlatform.Create(System.String)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Create\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 16\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static OSPlatform Create(string osPlatform)\n    content.vb: Public Shared Function Create(osPlatform As String) As OSPlatform\n    parameters:\n    - id: osPlatform\n      type: System.String\n    return:\n      type: System.Runtime.InteropServices.OSPlatform\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Runtime.InteropServices.OSPlatform.Equals(System.Object)\n  commentId: M:System.Runtime.InteropServices.OSPlatform.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Equals(Object)\n  nameWithType: OSPlatform.Equals(Object)\n  fullName: System.Runtime.InteropServices.OSPlatform.Equals(System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 17\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override bool Equals(object obj)\n    content.vb: Public Overrides Function Equals(obj As Object) As Boolean\n    parameters:\n    - id: obj\n      type: System.Object\n    return:\n      type: System.Boolean\n  overridden: System.ValueType.Equals(System.Object)\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)\n  commentId: M:System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)\n  id: Equals(System.Runtime.InteropServices.OSPlatform)\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Equals(OSPlatform)\n  nameWithType: OSPlatform.Equals(OSPlatform)\n  fullName: System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Equals\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 18\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public bool Equals(OSPlatform other)\n    content.vb: Public Function Equals(other As OSPlatform) As Boolean\n    parameters:\n    - id: other\n      type: System.Runtime.InteropServices.OSPlatform\n    return:\n      type: System.Boolean\n  implements:\n  - System.IEquatable{System.Runtime.InteropServices.OSPlatform}.Equals(System.Runtime.InteropServices.OSPlatform)\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n- uid: System.Runtime.InteropServices.OSPlatform.GetHashCode\n  commentId: M:System.Runtime.InteropServices.OSPlatform.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: GetHashCode()\n  nameWithType: OSPlatform.GetHashCode()\n  fullName: System.Runtime.InteropServices.OSPlatform.GetHashCode()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: GetHashCode\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 19\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override int GetHashCode()\n    content.vb: Public Overrides Function GetHashCode As Integer\n    return:\n      type: System.Int32\n  overridden: System.ValueType.GetHashCode\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\n- uid: System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  commentId: M:System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  id: op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Equality(OSPlatform, OSPlatform)\n  nameWithType: OSPlatform.Equality(OSPlatform, OSPlatform)\n  fullName: System.Runtime.InteropServices.OSPlatform.Equality(System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Equality\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 20\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool operator ==(OSPlatform left, OSPlatform right)\n    content.vb: Public Shared Operator =(left As OSPlatform, right As OSPlatform) As Boolean\n    parameters:\n    - id: left\n      type: System.Runtime.InteropServices.OSPlatform\n    - id: right\n      type: System.Runtime.InteropServices.OSPlatform\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  commentId: M:System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  id: op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: Inequality(OSPlatform, OSPlatform)\n  nameWithType: OSPlatform.Inequality(OSPlatform, OSPlatform)\n  fullName: System.Runtime.InteropServices.OSPlatform.Inequality(System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)\n  type: Operator\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: op_Inequality\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 21\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool operator !=(OSPlatform left, OSPlatform right)\n    content.vb: Public Shared Operator <>(left As OSPlatform, right As OSPlatform) As Boolean\n    parameters:\n    - id: left\n      type: System.Runtime.InteropServices.OSPlatform\n    - id: right\n      type: System.Runtime.InteropServices.OSPlatform\n    return:\n      type: System.Boolean\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n- uid: System.Runtime.InteropServices.OSPlatform.ToString\n  commentId: M:System.Runtime.InteropServices.OSPlatform.ToString\n  id: ToString\n  parent: System.Runtime.InteropServices.OSPlatform\n  langs:\n  - csharp\n  - vb\n  name: ToString()\n  nameWithType: OSPlatform.ToString()\n  fullName: System.Runtime.InteropServices.OSPlatform.ToString()\n  type: Method\n  source:\n    remote:\n      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ToString\n    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs\n    startLine: 22\n  assemblies:\n  - System.Runtime.InteropServices.RuntimeInformation\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override string ToString()\n    content.vb: Public Overrides Function ToString As String\n    return:\n      type: System.String\n  overridden: System.ValueType.ToString\n  modifiers.csharp:\n  - public\n  - override\n  modifiers.vb:\n  - Public\n  - Overrides\nreferences:\n- uid: System.Runtime.InteropServices\n  commentId: N:System.Runtime.InteropServices\n  isExternal: false\n  name: System.Runtime.InteropServices\n  nameWithType: System.Runtime.InteropServices\n  fullName: System.Runtime.InteropServices\n- uid: System.IEquatable{System.Runtime.InteropServices.OSPlatform}\n  commentId: T:System.IEquatable{System.Runtime.InteropServices.OSPlatform}\n  parent: System\n  definition: System.IEquatable`1\n  name: IEquatable<OSPlatform>\n  nameWithType: IEquatable<OSPlatform>\n  fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>\n  nameWithType.vb: IEquatable(Of OSPlatform)\n  fullname.vb: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform)\n  name.vb: IEquatable(Of OSPlatform)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.InteropServices.OSPlatform\n    name: OSPlatform\n    nameWithType: OSPlatform\n    fullName: System.Runtime.InteropServices.OSPlatform\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n    isExternal: true\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - uid: System.Runtime.InteropServices.OSPlatform\n    name: OSPlatform\n    nameWithType: OSPlatform\n    fullName: System.Runtime.InteropServices.OSPlatform\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.Equals(System.Object,System.Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    nameWithType: Object.Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    nameWithType: Object.ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    nameWithType: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Object.GetType\n  commentId: M:System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    nameWithType: Object.GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.IEquatable`1\n  commentId: T:System.IEquatable`1\n  isExternal: false\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n  nameWithType.vb: IEquatable(Of T)\n  fullname.vb: System.IEquatable(Of T)\n  name.vb: IEquatable(Of T)\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: '(Of '\n    nameWithType: '(Of '\n    fullName: '(Of '\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System\n  commentId: N:System\n  isExternal: false\n  name: System\n  nameWithType: System\n  fullName: System\n- uid: System.Object\n  commentId: T:System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.OSPlatform\n  commentId: T:System.Runtime.InteropServices.OSPlatform\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: OSPlatform\n  nameWithType: OSPlatform\n  fullName: System.Runtime.InteropServices.OSPlatform\n- uid: System.String\n  commentId: T:System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueType.Equals(System.Object)\n  commentId: M:System.ValueType.Equals(System.Object)\n  parent: System.ValueType\n  isExternal: true\n  name: Equals(Object)\n  nameWithType: ValueType.Equals(Object)\n  fullName: System.ValueType.Equals(System.Object)\n  spec.csharp:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.Equals(System.Object)\n    name: Equals\n    nameWithType: ValueType.Equals\n    fullName: System.ValueType.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Boolean\n  commentId: T:System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueType\n  commentId: T:System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.IEquatable{System.Runtime.InteropServices.OSPlatform}.Equals(System.Runtime.InteropServices.OSPlatform)\n  commentId: M:System.IEquatable{System.Runtime.InteropServices.OSPlatform}.Equals(System.Runtime.InteropServices.OSPlatform)\n  parent: System.IEquatable{System.Runtime.InteropServices.OSPlatform}\n  definition: System.IEquatable`1.Equals(`0)\n  name: Equals(OSPlatform)\n  nameWithType: IEquatable<OSPlatform>.Equals(OSPlatform)\n  fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>.Equals(System.Runtime.InteropServices.OSPlatform)\n  nameWithType.vb: IEquatable(Of OSPlatform).Equals(OSPlatform)\n  fullname.vb: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform).Equals(System.Runtime.InteropServices.OSPlatform)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    nameWithType: IEquatable<OSPlatform>.Equals\n    fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>.Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.OSPlatform\n    name: OSPlatform\n    nameWithType: OSPlatform\n    fullName: System.Runtime.InteropServices.OSPlatform\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    nameWithType: IEquatable(Of OSPlatform).Equals\n    fullName: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform).Equals\n    isExternal: true\n  - name: (\n    nameWithType: (\n    fullName: (\n  - uid: System.Runtime.InteropServices.OSPlatform\n    name: OSPlatform\n    nameWithType: OSPlatform\n    fullName: System.Runtime.InteropServices.OSPlatform\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.IEquatable`1.Equals(`0)\n  commentId: M:System.IEquatable`1.Equals(`0)\n  isExternal: false\n  name: Equals(T)\n  nameWithType: IEquatable<T>.Equals(T)\n  fullName: System.IEquatable<T>.Equals(T)\n  nameWithType.vb: IEquatable(Of T).Equals(T)\n  fullname.vb: System.IEquatable(Of T).Equals(T)\n  spec.csharp:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    nameWithType: IEquatable<T>.Equals\n    fullName: System.IEquatable<T>.Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.IEquatable`1.Equals(`0)\n    name: Equals\n    nameWithType: IEquatable(Of T).Equals\n    fullName: System.IEquatable(Of T).Equals\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: T\n    nameWithType: T\n    fullName: T\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.ValueType.GetHashCode\n  commentId: M:System.ValueType.GetHashCode\n  parent: System.ValueType\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueType.GetHashCode()\n  fullName: System.ValueType.GetHashCode()\n  spec.csharp:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.GetHashCode\n    name: GetHashCode\n    nameWithType: ValueType.GetHashCode\n    fullName: System.ValueType.GetHashCode\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n- uid: System.Int32\n  commentId: T:System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueType.ToString\n  commentId: M:System.ValueType.ToString\n  parent: System.ValueType\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueType.ToString()\n  fullName: System.ValueType.ToString()\n  spec.csharp:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n  spec.vb:\n  - uid: System.ValueType.ToString\n    name: ToString\n    nameWithType: ValueType.ToString\n    fullName: System.ValueType.ToString\n  - name: (\n    nameWithType: (\n    fullName: (\n  - name: )\n    nameWithType: )\n    fullName: )\n"}