{"nodes":[{"pos":[364,380],"content":"ExecutionContext","needQuote":true,"nodes":[{"content":"ExecutionContext","pos":[0,16]}]},{"pos":[1728,1737],"content":"Capture()","needQuote":true,"nodes":[{"content":"Capture()","pos":[0,9]}]},{"pos":[3229,3275],"content":"Run(ExecutionContext, ContextCallback, Object)","needQuote":true,"nodes":[{"content":"Run(ExecutionContext, ContextCallback, Object)","pos":[0,46]}]},{"content":"\\n&lt;p&gt;The object to pass to the callback method.&lt;/p&gt;\\n","pos":[4805,4858],"source":"\\n<p>The object to pass to the callback method.</p>\\n"},{"pos":[5909,5925],"content":"System.Threading","needQuote":true,"nodes":[{"content":"System.Threading","pos":[0,16]}]},{"pos":[6086,6092],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6252,6262],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6357,6365],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6434,6435],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6462,6463],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6533,6541],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[6610,6611],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[6638,6639],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[6822,6836],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6955,6961],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7028,7029],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7079,7085],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7145,7146],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7229,7235],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7302,7303],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7353,7359],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7419,7420],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7634,7656],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[7804,7810],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[7877,7878],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7928,7934],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[7995,7996]},{"pos":[8051,8057],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8117,8118],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8215,8221],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8288,8289],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8339,8345],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[8406,8407]},{"pos":[8462,8468],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8528,8529],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8774,8805],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[8971,8986],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9062,9063],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9113,9119],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9180,9181]},{"pos":[9236,9242],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9302,9303],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9409,9424],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[9500,9501],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9551,9557],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9618,9619]},{"pos":[9674,9680],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9740,9741],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9971,9984],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10085,10096],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10168,10169],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10196,10197],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10270,10281],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[10353,10354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10381,10382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10557,10566],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[10659,10666],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10734,10735],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10762,10763],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10832,10839],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[10907,10908],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10935,10936],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11111,11128],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[11237,11252],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11328,11329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11356,11357],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11434,11449],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[11525,11526],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11553,11554],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11699,11705],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[11866,11882],"content":"ExecutionContext","needQuote":true,"nodes":[{"content":"ExecutionContext","pos":[0,16]}]},{"pos":[12106,12121],"content":"ContextCallback","needQuote":true,"nodes":[{"content":"ContextCallback","pos":[0,15]}]},{"pos":[12332,12357],"content":"InvalidOperationException","needQuote":true,"nodes":[{"content":"InvalidOperationException","pos":[0,25]}]}],"content":"items:\n- uid: System.Threading.ExecutionContext\n  commentId: T:System.Threading.ExecutionContext\n  id: ExecutionContext\n  parent: System.Threading\n  children:\n  - System.Threading.ExecutionContext.Capture\n  - System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)\n  langs:\n  - csharp\n  - vb\n  name: ExecutionContext\n  fullName: System.Threading.ExecutionContext\n  type: Class\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: ExecutionContext\n    path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n    startLine: 65\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Manages the execution context for the current thread. This class cannot be inherited.</p>\\n\"\n  syntax:\n    content: 'public sealed class ExecutionContext : IDisposable'\n    content.vb: >-\n      Public NotInheritable Class ExecutionContext\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: ExecutionContext\n- uid: System.Threading.ExecutionContext.Capture\n  commentId: M:System.Threading.ExecutionContext.Capture\n  id: Capture\n  parent: System.Threading.ExecutionContext\n  langs:\n  - csharp\n  - vb\n  name: Capture()\n  fullName: System.Threading.ExecutionContext.Capture()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Capture\n    path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n    startLine: 84\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Captures the execution context from the current thread.</p>\\n\"\n  syntax:\n    content: >-\n      [SecuritySafeCritical]\n\n      public static ExecutionContext Capture()\n    content.vb: >-\n      <SecuritySafeCritical>\n\n      Public Shared Function Capture As ExecutionContext\n    return:\n      type: System.Threading.ExecutionContext\n      description: \"\\n<p>An <xref href=\\\"System.Threading.ExecutionContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object representing the execution context for the current thread.</p>\\n\"\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ExecutionContext.Capture()\n- uid: System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)\n  commentId: M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)\n  id: Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)\n  parent: System.Threading.ExecutionContext\n  langs:\n  - csharp\n  - vb\n  name: Run(ExecutionContext, ContextCallback, Object)\n  fullName: System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Run\n    path: src/mscorlib/src/System/Threading/ExecutionContext.cs\n    startLine: 90\n  assemblies:\n  - System.Threading\n  namespace: System.Threading\n  summary: \"\\n<p>Runs a method in a specified execution context on the current thread.</p>\\n\"\n  syntax:\n    content: >-\n      [SecurityCritical]\n\n      [HandleProcessCorruptedStateExceptions]\n\n      public static void Run(ExecutionContext executionContext, ContextCallback callback, object state)\n    content.vb: >-\n      <SecurityCritical>\n\n      <HandleProcessCorruptedStateExceptions>\n\n      Public Shared Sub Run(executionContext As ExecutionContext, callback As ContextCallback, state As Object)\n    parameters:\n    - id: executionContext\n      type: System.Threading.ExecutionContext\n      description: \"\\n<p>The <xref href=\\\"System.Threading.ExecutionContext\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> to set.</p>\\n\"\n    - id: callback\n      type: System.Threading.ContextCallback\n      description: \"\\n<p>A <xref href=\\\"System.Threading.ContextCallback\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> delegate that represents the method to be run in the provided execution context.</p>\\n\"\n    - id: state\n      type: System.Object\n      description: \"\\n<p>The object to pass to the callback method.</p>\\n\"\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"\\n<p>\\n<em>executionContext</em> is <strong>null</strong>.</p>\\n<p>-or-</p>\\n<p>\\n<em>executionContext</em> was not acquired through a capture operation. </p>\\n<p>-or-</p>\\n<p>\\n<em>executionContext</em> has already been used as the argument to a <xref href=\\\"System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> call.</p>\\n\"\n  see:\n  - type: System.Security.SecurityCriticalAttribute\n    commentId: T:System.Security.SecurityCriticalAttribute\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n    ctor: System.Security.SecurityCriticalAttribute.#ctor\n    arguments: []\n  modifiers.csharp:\n  - public\n  - static\n  modifiers.vb:\n  - Public\n  - Shared\n  nameWithType: ExecutionContext.Run(ExecutionContext, ContextCallback, Object)\nreferences:\n- uid: System.Threading\n  isExternal: false\n  name: System.Threading\n  fullName: System.Threading\n  nameWithType: System.Threading\n  commentId: N:System.Threading\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  nameWithType: Object\n  commentId: T:System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.ToString()\n  commentId: M:System.Object.ToString\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object)\n  commentId: M:System.Object.Equals(System.Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.Equals(Object, Object)\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetHashCode()\n  commentId: M:System.Object.GetHashCode\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.GetType()\n  commentId: M:System.Object.GetType\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  nameWithType: Object.MemberwiseClone()\n  commentId: M:System.Object.MemberwiseClone\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Threading.ExecutionContext\n  parent: System.Threading\n  isExternal: false\n  name: ExecutionContext\n  fullName: System.Threading.ExecutionContext\n  nameWithType: ExecutionContext\n  commentId: T:System.Threading.ExecutionContext\n- uid: System.Threading.ContextCallback\n  parent: System.Threading\n  isExternal: false\n  name: ContextCallback\n  fullName: System.Threading.ContextCallback\n  nameWithType: ContextCallback\n  commentId: T:System.Threading.ContextCallback\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  fullName: System.InvalidOperationException\n  nameWithType: InvalidOperationException\n  commentId: T:System.InvalidOperationException\n"}