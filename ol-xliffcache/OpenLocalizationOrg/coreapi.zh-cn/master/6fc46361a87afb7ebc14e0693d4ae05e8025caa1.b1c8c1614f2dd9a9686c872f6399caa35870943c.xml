{"nodes":[{"pos":[396,418],"content":"SubjectIdentifierOrKey","needQuote":true,"nodes":[{"content":"SubjectIdentifierOrKey","pos":[0,22]}]},{"pos":[2342,2346],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[4264,4269],"content":"Value","needQuote":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[7082,7115],"content":"System.Security.Cryptography.Pkcs","needQuote":true,"nodes":[{"content":"System.Security.Cryptography.Pkcs","pos":[0,33]}]},{"pos":[7327,7333],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7493,7503],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7598,7606],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7675,7676],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7703,7704],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[7774,7782],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[7851,7852],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[7879,7880],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8063,8077],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8196,8202],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8269,8270],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8320,8326],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8386,8387],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8470,8476],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[8543,8544],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[8594,8600],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8660,8661],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[8875,8897],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[9045,9051],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9118,9119],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9169,9175],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9236,9237]},{"pos":[9292,9298],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9358,9359],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[9456,9462],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[9529,9530],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[9580,9586],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[9647,9648]},{"pos":[9703,9709],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9769,9770],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10015,10046],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[10212,10227],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10303,10304],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10354,10360],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10421,10422]},{"pos":[10477,10483],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10543,10544],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[10650,10665],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[10741,10742],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[10792,10798],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[10859,10860]},{"pos":[10915,10921],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10981,10982],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11212,11225],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11326,11337],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11409,11410],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11437,11438],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11511,11522],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[11594,11595],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[11622,11623],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[11798,11807],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[11900,11907],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[11975,11976],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12003,12004],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12073,12080],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[12148,12149],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12176,12177],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12352,12369],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[12478,12493],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12569,12570],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12597,12598],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12675,12690],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[12766,12767],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[12794,12795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[12940,12946],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[13151,13177],"content":"SubjectIdentifierOrKeyType","needQuote":true,"nodes":[{"content":"SubjectIdentifierOrKeyType","pos":[0,26]}]}],"content":"items:\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  id: SubjectIdentifierOrKey\n  parent: System.Security.Cryptography.Pkcs\n  children:\n  - System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n  - System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n  langs:\n  - csharp\n  - vb\n  name: SubjectIdentifierOrKey\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  type: Class\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SubjectIdentifierOrKey\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 221\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class defines the type of the identifier of a subject, such as a <xref href=\\\"System.Security.Cryptography.Pkcs.CmsSigner\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> or a <xref href=\\\"System.Security.Cryptography.Pkcs.CmsRecipient\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.  The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key. </p>\\n\"\n  syntax:\n    content: public sealed class SubjectIdentifierOrKey\n    content.vb: Public NotInheritable Class SubjectIdentifierOrKey\n  inheritance:\n  - System.Object\n  inheritedMembers:\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - sealed\n  - class\n  modifiers.vb:\n  - Public\n  - NotInheritable\n  - Class\n  nameWithType: SubjectIdentifierOrKey\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n  id: Type\n  parent: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 224\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the type of subject identifier or key. The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.</p>\\n\"\n  syntax:\n    content: >-\n      public SubjectIdentifierOrKeyType Type\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Type As SubjectIdentifierOrKeyType\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\n      description: \"\\n<p>A member of the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>  enumeration that specifies the type of subject identifier.</p>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SubjectIdentifierOrKey.Type\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n  id: Value\n  parent: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\n  langs:\n  - csharp\n  - vb\n  name: Value\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\n  type: Property\n  source:\n    remote:\n      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Value\n    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs\n    startLine: 225\n  assemblies:\n  - System.Security.Cryptography.Pkcs\n  namespace: System.Security.Cryptography.Pkcs\n  summary: \"\\n<p>The <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property retrieves the value of the subject identifier or  key. Use the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to determine the type of subject identifier or key, and use the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property to retrieve the corresponding value.</p>\\n\"\n  syntax:\n    content: >-\n      public object Value\n\n      {\n          [CompilerGenerated]\n          get;\n      }\n    content.vb: Public ReadOnly Property Value As Object\n    parameters: []\n    return:\n      type: System.Object\n      description: \"\\n<p>An <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> object that represents the value of the subject identifier or key. This <xref href=\\\"System.Object\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> can be one of the following objects as determined by the <xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property.</p>\\n<p>\\n<xref href=\\\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> property</p>\\n<p>Object</p>\\n<table><tbody><tr><td>\\n<p>IssuerAndSerialNumber</p>\\n</td><td>\\n<p>\\n<xref href=\\\"System.Security.Cryptography.Xml.X509IssuerSerial\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td></tr><tr><td>\\n<p>SubjectKeyIdentifier</p>\\n</td><td>\\n<p>\\n<xref href=\\\"System.String\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td></tr><tr><td>\\n<p>PublicKeyInfo</p>\\n</td><td>\\n<p>\\n<xref href=\\\"System.Security.Cryptography.Pkcs.PublicKeyInfo\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>\\n</p>\\n</td></tr></tbody></table>\\n\"\n  seealso:\n  - type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\n  modifiers.csharp:\n  - public\n  - get\n  modifiers.vb:\n  - Public\n  - ReadOnly\n  nameWithType: SubjectIdentifierOrKey.Value\nreferences:\n- uid: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: System.Security.Cryptography.Pkcs\n  fullName: System.Security.Cryptography.Pkcs\n  commentId: N:System.Security.Cryptography.Pkcs\n  nameWithType: System.Security.Cryptography.Pkcs\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\n  parent: System.Security.Cryptography.Pkcs\n  isExternal: false\n  name: SubjectIdentifierOrKeyType\n  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\n  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\n  nameWithType: SubjectIdentifierOrKeyType\n"}