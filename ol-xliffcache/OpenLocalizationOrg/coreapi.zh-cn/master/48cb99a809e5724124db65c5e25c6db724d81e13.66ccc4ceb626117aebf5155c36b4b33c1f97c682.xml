{"nodes":[{"pos":[574,590],"content":"ByteArrayContent","needQuote":true,"nodes":[{"content":"ByteArrayContent","pos":[0,16]}]},{"pos":[2529,2553],"content":"ByteArrayContent(Byte[])","needQuote":true,"nodes":[{"content":"ByteArrayContent(Byte[])","pos":[0,24]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;content&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[3555,3616],"source":"\\n<p>The <em>content</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[3617,3623],"source":" </p>\\n"},{"pos":[4233,4271],"content":"ByteArrayContent(Byte[], Int32, Int32)","needQuote":true,"nodes":[{"content":"ByteArrayContent(Byte[], Int32, Int32)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;The &lt;em&gt;content&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.","pos":[5887,5948],"source":"\\n<p>The <em>content</em> parameter is <strong>null</strong>."},{"content":"&lt;/p&gt;\\n","pos":[5949,5955],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;offset&lt;/em&gt; parameter is greater than the length of content specified by the &lt;em&gt;content&lt;/em&gt; parameter.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;count &lt;/em&gt; parameter is less than zero.&lt;/p&gt;\\n&lt;p&gt;-or-&lt;/p&gt;\\n&lt;p&gt;The &lt;em&gt;count&lt;/em&gt; parameter is greater than the length of content specified by the &lt;em&gt;content&lt;/em&gt; parameter - minus the &lt;em&gt;offset&lt;/em&gt; parameter.&lt;/p&gt;\\n","pos":[6072,6506],"source":"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or-</p>\\n<p>The <em>offset</em> parameter is greater than the length of content specified by the <em>content</em> parameter.</p>\\n<p>-or-</p>\\n<p>The <em>count </em> parameter is less than zero.</p>\\n<p>-or-</p>\\n<p>The <em>count</em> parameter is greater than the length of content specified by the <em>content</em> parameter - minus the <em>offset</em> parameter.</p>\\n"},{"pos":[7130,7160],"content":"CreateContentReadStreamAsync()","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync()","pos":[0,30]}]},{"pos":[8849,8897],"content":"SerializeToStreamAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync(Stream, TransportContext)","pos":[0,48]}]},{"content":"\\n&lt;p&gt;The target stream.&lt;/p&gt;\\n","pos":[9799,9828],"source":"\\n<p>The target stream.</p>\\n"},{"content":"\\n&lt;p&gt;Information about the transport, like channel binding token.","pos":[9908,9973],"source":"\\n<p>Information about the transport, like channel binding token."},{"content":"This parameter may be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\\n","pos":[9974,10024],"source":" This parameter may be <strong>null</strong>.</p>\\n"},{"pos":[10825,10852],"content":"TryComputeLength(out Int64)","needQuote":true,"nodes":[{"content":"TryComputeLength(out Int64)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;The length in bytes of the byte array.&lt;/p&gt;\\n","pos":[11593,11642],"source":"\\n<p>The length in bytes of the byte array.</p>\\n"},{"pos":[12385,12400],"content":"System.Net.Http","needQuote":true,"nodes":[{"content":"System.Net.Http","pos":[0,15]}]},{"pos":[12558,12564],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12732,12743],"content":"HttpContent","needQuote":true,"nodes":[{"content":"HttpContent","pos":[0,11]}]},{"pos":[12926,12937],"content":"IDisposable","needQuote":true,"nodes":[{"content":"IDisposable","pos":[0,11]}]},{"pos":[13140,13147],"content":"Headers","needQuote":true,"nodes":[{"content":"Headers","pos":[0,7]}]},{"pos":[13413,13432],"content":"CopyToAsync(Stream)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[13595,13606],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[13671,13672],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[13725,13731],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[13794,13795],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[13900,13911],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[13976,13977],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14030,14036],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[14099,14100],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[14396,14433],"content":"CopyToAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"CopyToAsync(Stream, TransportContext)","pos":[0,37]}]},{"pos":[14653,14664],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[14729,14730],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[14783,14789],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[14853,14854]},{"pos":[14923,14939],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[15013,15014],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15147,15158],"content":"CopyToAsync","needQuote":true,"nodes":[{"content":"CopyToAsync","pos":[0,11]}]},{"pos":[15223,15224],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[15277,15283],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[15347,15348]},{"pos":[15417,15433],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[15507,15508],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[15801,15810],"content":"Dispose()","needQuote":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[15931,15938],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[15999,16000],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16027,16028],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16111,16118],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16179,16180],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16207,16208],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16438,16454],"content":"Dispose(Boolean)","needQuote":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[16605,16612],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16673,16674],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[16725,16732],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16793,16794],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[16893,16900],"content":"Dispose","needQuote":true,"nodes":[{"content":"Dispose","pos":[0,7]}]},{"pos":[16961,16962],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17013,17020],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17081,17082],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17332,17353],"content":"LoadIntoBufferAsync()","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync()","pos":[0,21]}]},{"pos":[17498,17517],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[17590,17591],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17618,17619],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[17714,17733],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[17806,17807],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[17834,17835],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18099,18125],"content":"LoadIntoBufferAsync(Int64)","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync(Int64)","pos":[0,26]}]},{"pos":[18296,18315],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[18388,18389],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18438,18443],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[18502,18503],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[18612,18631],"content":"LoadIntoBufferAsync","needQuote":true,"nodes":[{"content":"LoadIntoBufferAsync","pos":[0,19]}]},{"pos":[18704,18705],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[18754,18759],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[18818,18819],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19090,19112],"content":"ReadAsByteArrayAsync()","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync()","pos":[0,22]}]},{"pos":[19259,19279],"content":"ReadAsByteArrayAsync","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync","pos":[0,20]}]},{"pos":[19353,19354],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19381,19382],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19478,19498],"content":"ReadAsByteArrayAsync","needQuote":true,"nodes":[{"content":"ReadAsByteArrayAsync","pos":[0,20]}]},{"pos":[19572,19573],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[19600,19601],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[19852,19871],"content":"ReadAsStreamAsync()","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync()","pos":[0,19]}]},{"pos":[20012,20029],"content":"ReadAsStreamAsync","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync","pos":[0,17]}]},{"pos":[20100,20101],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20128,20129],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20222,20239],"content":"ReadAsStreamAsync","needQuote":true,"nodes":[{"content":"ReadAsStreamAsync","pos":[0,17]}]},{"pos":[20310,20311],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20338,20339],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20584,20603],"content":"ReadAsStringAsync()","needQuote":true,"nodes":[{"content":"ReadAsStringAsync()","pos":[0,19]}]},{"pos":[20744,20761],"content":"ReadAsStringAsync","needQuote":true,"nodes":[{"content":"ReadAsStringAsync","pos":[0,17]}]},{"pos":[20832,20833],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[20860,20861],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[20954,20971],"content":"ReadAsStringAsync","needQuote":true,"nodes":[{"content":"ReadAsStringAsync","pos":[0,17]}]},{"pos":[21042,21043],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21070,21071],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21278,21288],"content":"ToString()","needQuote":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21383,21391],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21460,21461],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21488,21489],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21559,21567],"content":"ToString","needQuote":true,"nodes":[{"content":"ToString","pos":[0,8]}]},{"pos":[21636,21637],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[21664,21665],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[21848,21862],"content":"Equals(Object)","needQuote":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21981,21987],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22054,22055],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22105,22111],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22171,22172],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22255,22261],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22328,22329],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22379,22385],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22445,22446],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[22660,22682],"content":"Equals(Object, Object)","needQuote":true,"nodes":[{"content":"Equals(Object, Object)","pos":[0,22]}]},{"pos":[22830,22836],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[22903,22904],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[22954,22960],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23021,23022]},{"pos":[23077,23083],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23143,23144],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23241,23247],"content":"Equals","needQuote":true,"nodes":[{"content":"Equals","pos":[0,6]}]},{"pos":[23314,23315],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[23365,23371],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[23432,23433]},{"pos":[23488,23494],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23554,23555],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[23800,23831],"content":"ReferenceEquals(Object, Object)","needQuote":true,"nodes":[{"content":"ReferenceEquals(Object, Object)","pos":[0,31]}]},{"pos":[23997,24012],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24088,24089],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24139,24145],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24206,24207]},{"pos":[24262,24268],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24328,24329],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24435,24450],"content":"ReferenceEquals","needQuote":true,"nodes":[{"content":"ReferenceEquals","pos":[0,15]}]},{"pos":[24526,24527],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[24577,24583],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"content":",","pos":[24644,24645]},{"pos":[24700,24706],"content":"Object","needQuote":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24766,24767],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[24997,25010],"content":"GetHashCode()","needQuote":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25111,25122],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25194,25195],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25222,25223],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25296,25307],"content":"GetHashCode","needQuote":true,"nodes":[{"content":"GetHashCode","pos":[0,11]}]},{"pos":[25379,25380],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25407,25408],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25583,25592],"content":"GetType()","needQuote":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[25685,25692],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25760,25761],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25788,25789],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[25858,25865],"content":"GetType","needQuote":true,"nodes":[{"content":"GetType","pos":[0,7]}]},{"pos":[25933,25934],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[25961,25962],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26137,26154],"content":"MemberwiseClone()","needQuote":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[26263,26278],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26354,26355],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26382,26383],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26460,26475],"content":"MemberwiseClone","needQuote":true,"nodes":[{"content":"MemberwiseClone","pos":[0,15]}]},{"pos":[26551,26552],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[26579,26580],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[26725,26731],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[26825,26831],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[26951,26955],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[27014,27016]},{"pos":[27079,27083],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27141,27143],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[27275,27280],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27486,27516],"content":"CreateContentReadStreamAsync()","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync()","pos":[0,30]}]},{"pos":[27679,27707],"content":"CreateContentReadStreamAsync","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync","pos":[0,28]}]},{"pos":[27789,27790],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[27817,27818],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[27922,27950],"content":"CreateContentReadStreamAsync","needQuote":true,"nodes":[{"content":"CreateContentReadStreamAsync","pos":[0,28]}]},{"pos":[28032,28033],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[28060,28061],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[28347,28359],"content":"Task<Stream>","needQuote":true,"nodes":[{"content":"Task&lt;Stream&gt;","pos":[0,12],"source":"Task<Stream>"}]},{"pos":[28573,28577],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[28651,28652],"content":"<","needQuote":true,"nodes":[]},{"pos":[28705,28711],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[28856,28860],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[28935,28938]},{"pos":[28998,29004],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[29067,29068],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[29275,29288],"content":"Task<TResult>","needQuote":true,"nodes":[{"content":"Task&lt;TResult&gt;","pos":[0,13],"source":"Task<TResult>"}]},{"pos":[29485,29489],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[29542,29543],"content":"<","needQuote":true,"nodes":[]},{"pos":[29570,29577],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[29692,29696],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"content":"(Of","pos":[29750,29753]},{"pos":[29787,29794],"content":"TResult","needQuote":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[29827,29828],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[30014,30036],"content":"System.Threading.Tasks","needQuote":true,"nodes":[{"content":"System.Threading.Tasks","pos":[0,22]}]},{"pos":[30318,30366],"content":"SerializeToStreamAsync(Stream, TransportContext)","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync(Stream, TransportContext)","pos":[0,48]}]},{"pos":[30608,30630],"content":"SerializeToStreamAsync","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync","pos":[0,22]}]},{"pos":[30706,30707],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[30760,30766],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[30830,30831]},{"pos":[30900,30916],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[30990,30991],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31135,31157],"content":"SerializeToStreamAsync","needQuote":true,"nodes":[{"content":"SerializeToStreamAsync","pos":[0,22]}]},{"pos":[31233,31234],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[31287,31293],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"content":",","pos":[31357,31358]},{"pos":[31427,31443],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[31517,31518],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[31796,31802],"content":"Stream","needQuote":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[31950,31966],"content":"TransportContext","needQuote":true,"nodes":[{"content":"TransportContext","pos":[0,16]}]},{"pos":[32179,32183],"content":"Task","needQuote":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[32333,32342],"content":"System.IO","needQuote":true,"nodes":[{"content":"System.IO","pos":[0,9]}]},{"pos":[32548,32571],"content":"TryComputeLength(Int64)","needQuote":true,"nodes":[{"content":"TryComputeLength(Int64)","pos":[0,23]}]},{"pos":[32737,32753],"content":"TryComputeLength","needQuote":true,"nodes":[{"content":"TryComputeLength","pos":[0,16]}]},{"pos":[32823,32824],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[32873,32878],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[32937,32938],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33045,33061],"content":"TryComputeLength","needQuote":true,"nodes":[{"content":"TryComputeLength","pos":[0,16]}]},{"pos":[33131,33132],"content":"(","needQuote":true,"nodes":[{"content":"(","pos":[0,1]}]},{"pos":[33181,33186],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[33245,33246],"content":")","needQuote":true,"nodes":[{"content":")","pos":[0,1]}]},{"pos":[33455,33460],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[33603,33610],"content":"Boolean","needQuote":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33756,33777],"content":"ArgumentNullException","needQuote":true,"nodes":[{"content":"ArgumentNullException","pos":[0,21]}]},{"pos":[33971,33998],"content":"ArgumentOutOfRangeException","needQuote":true,"nodes":[{"content":"ArgumentOutOfRangeException","pos":[0,27]}]}],"content":"items:\n- uid: System.Net.Http.ByteArrayContent\n  commentId: T:System.Net.Http.ByteArrayContent\n  id: ByteArrayContent\n  parent: System.Net.Http\n  children:\n  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  - System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  langs:\n  - csharp\n  - vb\n  name: ByteArrayContent\n  fullName: System.Net.Http.ByteArrayContent\n  type: Class\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ByteArrayContent\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 10\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Provides HTTP content based on a byte array.</p>\\n\"\n  syntax:\n    content: 'public class ByteArrayContent : HttpContent, IDisposable'\n    content.vb: >-\n      Public Class ByteArrayContent\n          Inherits HttpContent\n          Implements IDisposable\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpContent\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Net.Http.HttpContent.Headers\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.HttpContent.Dispose\n  - System.Net.Http.HttpContent.Dispose(System.Boolean)\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  - System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - System.Net.Http.HttpContent.ReadAsStreamAsync\n  - System.Net.Http.HttpContent.ReadAsStringAsync\n  - System.Object.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  modifiers.csharp:\n  - public\n  - class\n  modifiers.vb:\n  - Public\n  - Class\n  nameWithType: ByteArrayContent\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  commentId: M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  - vb\n  name: ByteArrayContent(Byte[])\n  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(System.Byte[])\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 12\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ByteArrayContent(byte[] content)\n    content.vb: Public Sub New(content As Byte())\n    parameters:\n    - id: content\n      type: System.Byte[]\n      description: \"\\n<p>The content used to initialize the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>content</em> parameter is <strong>null</strong>. </p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Http.ByteArrayContent.ByteArrayContent(System.Byte())\n  name.vb: ByteArrayContent(Byte())\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])\n  nameWithType.vb: ByteArrayContent.ByteArrayContent(Byte())\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  id: '#ctor(System.Byte[],System.Int32,System.Int32)'\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  - vb\n  name: ByteArrayContent(Byte[], Int32, Int32)\n  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(System.Byte[], System.Int32, System.Int32)\n  type: Constructor\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: .ctor\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 13\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Initializes a new instance of the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> class.</p>\\n\"\n  syntax:\n    content: public ByteArrayContent(byte[] content, int offset, int count)\n    content.vb: Public Sub New(content As Byte(), offset As Integer, count As Integer)\n    parameters:\n    - id: content\n      type: System.Byte[]\n      description: \"\\n<p>The content used to initialize the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: offset\n      type: System.Int32\n      description: \"\\n<p>The offset, in bytes, in the <em>content</em>  parameter used to initialize the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n    - id: count\n      type: System.Int32\n      description: \"\\n<p>The number of bytes in the <em>content</em> starting from the <em>offset</em> parameter used to initialize the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"\\n<p>The <em>content</em> parameter is <strong>null</strong>. </p>\\n\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"\\n<p>The <em>offset</em> parameter is less than zero.</p>\\n<p>-or-</p>\\n<p>The <em>offset</em> parameter is greater than the length of content specified by the <em>content</em> parameter.</p>\\n<p>-or-</p>\\n<p>The <em>count </em> parameter is less than zero.</p>\\n<p>-or-</p>\\n<p>The <em>count</em> parameter is greater than the length of content specified by the <em>content</em> parameter - minus the <em>offset</em> parameter.</p>\\n\"\n  modifiers.csharp:\n  - public\n  modifiers.vb:\n  - Public\n  fullName.vb: System.Net.Http.ByteArrayContent.ByteArrayContent(System.Byte(), System.Int32, System.Int32)\n  name.vb: ByteArrayContent(Byte(), Int32, Int32)\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[], Int32, Int32)\n  nameWithType.vb: ByteArrayContent.ByteArrayContent(Byte(), Int32, Int32)\n- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  commentId: M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  id: CreateContentReadStreamAsync\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  - vb\n  name: CreateContentReadStreamAsync()\n  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: CreateContentReadStreamAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 14\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <xref href=\\\"System.Net.Http.ByteArrayContent\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n\"\n  syntax:\n    content: protected override Task<Stream> CreateContentReadStreamAsync()\n    content.vb: Protected Overrides Function CreateContentReadStreamAsync As Task(Of Stream)\n    return:\n      type: System.Threading.Tasks.Task{System.IO.Stream}\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()\n- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  commentId: M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  - vb\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SerializeToStreamAsync\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 15\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.</p>\\n\"\n  syntax:\n    content: protected override Task SerializeToStreamAsync(Stream stream, TransportContext context)\n    content.vb: Protected Overrides Function SerializeToStreamAsync(stream As Stream, context As TransportContext) As Task\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: \"\\n<p>The target stream.</p>\\n\"\n    - id: context\n      type: System.Net.TransportContext\n      description: \"\\n<p>Information about the transport, like channel binding token. This parameter may be <strong>null</strong>.</p>\\n\"\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"\\n<p>Returns <xref href=\\\"System.Threading.Tasks.Task\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>. </p>\\n<p>The task object representing the asynchronous operation.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  commentId: M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  id: TryComputeLength(System.Int64@)\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  - vb\n  name: TryComputeLength(out Int64)\n  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(out System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/System.Net.Http/ref/System.Net.Http.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TryComputeLength\n    path: src/System.Net.Http/ref/System.Net.Http.cs\n    startLine: 16\n  assemblies:\n  - System.Net.Http\n  namespace: System.Net.Http\n  summary: \"\\n<p>Determines whether a byte array has a valid length in bytes.</p>\\n\"\n  syntax:\n    content: protected override bool TryComputeLength(out long length)\n    content.vb: Protected Overrides Function TryComputeLength(ByRef length As Long) As Boolean\n    parameters:\n    - id: length\n      type: System.Int64\n      description: \"\\n<p>The length in bytes of the byte array.</p>\\n\"\n    return:\n      type: System.Boolean\n      description: \"\\n<p>Returns <xref href=\\\"System.Boolean\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>.</p>\\n<p>\\n<strong>true</strong> if <em>length</em> is a valid length; otherwise, <strong>false</strong>.</p>\\n\"\n  overridden: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  modifiers.csharp:\n  - protected\n  - override\n  modifiers.vb:\n  - Protected\n  - Overrides\n  fullName.vb: System.Net.Http.ByteArrayContent.TryComputeLength(ByRef System.Int64)\n  name.vb: TryComputeLength(ByRef Int64)\n  nameWithType: ByteArrayContent.TryComputeLength(out Int64)\n  nameWithType.vb: ByteArrayContent.TryComputeLength(ByRef Int64)\nreferences:\n- uid: System.Net.Http\n  isExternal: false\n  name: System.Net.Http\n  fullName: System.Net.Http\n  commentId: N:System.Net.Http\n  nameWithType: System.Net.Http\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  fullName: System.Object\n  commentId: T:System.Object\n  nameWithType: Object\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  fullName: System.Net.Http.HttpContent\n  commentId: T:System.Net.Http.HttpContent\n  nameWithType: HttpContent\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  fullName: System.IDisposable\n  commentId: T:System.IDisposable\n  nameWithType: IDisposable\n- uid: System.Net.Http.HttpContent.Headers\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Headers\n  fullName: System.Net.Http.HttpContent.Headers\n  commentId: P:System.Net.Http.HttpContent.Headers\n  nameWithType: HttpContent.Headers\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: CopyToAsync(Stream)\n  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  nameWithType: HttpContent.CopyToAsync(Stream)\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: CopyToAsync(Stream, TransportContext)\n  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream, System.Net.TransportContext)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n    name: CopyToAsync\n    fullName: System.Net.Http.HttpContent.CopyToAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  nameWithType: HttpContent.CopyToAsync(Stream, TransportContext)\n- uid: System.Net.Http.HttpContent.Dispose\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Dispose()\n  fullName: System.Net.Http.HttpContent.Dispose()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.Dispose\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.Dispose\n  nameWithType: HttpContent.Dispose()\n- uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: Dispose(Boolean)\n  fullName: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n    name: Dispose\n    fullName: System.Net.Http.HttpContent.Dispose\n  - name: (\n    fullName: (\n  - uid: System.Boolean\n    name: Boolean\n    fullName: System.Boolean\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.Dispose(System.Boolean)\n  nameWithType: HttpContent.Dispose(Boolean)\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync()\n  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync\n  nameWithType: HttpContent.LoadIntoBufferAsync()\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: LoadIntoBufferAsync(Int64)\n  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n    name: LoadIntoBufferAsync\n    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  nameWithType: HttpContent.LoadIntoBufferAsync(Int64)\n- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsByteArrayAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n    name: ReadAsByteArrayAsync\n    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n    name: ReadAsByteArrayAsync\n    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  nameWithType: HttpContent.ReadAsByteArrayAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStreamAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsStreamAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n    name: ReadAsStreamAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n    name: ReadAsStreamAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsStreamAsync\n  nameWithType: HttpContent.ReadAsStreamAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStringAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStringAsync()\n  fullName: System.Net.Http.HttpContent.ReadAsStringAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.ReadAsStringAsync\n    name: ReadAsStringAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStringAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.ReadAsStringAsync\n    name: ReadAsStringAsync\n    fullName: System.Net.Http.HttpContent.ReadAsStringAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.ReadAsStringAsync\n  nameWithType: HttpContent.ReadAsStringAsync()\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: true\n  name: ToString()\n  fullName: System.Object.ToString()\n  spec.csharp:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ToString\n    name: ToString\n    fullName: System.Object.ToString\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ToString\n  nameWithType: Object.ToString()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object)\n  fullName: System.Object.Equals(System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object)\n  nameWithType: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: Equals(Object, Object)\n  fullName: System.Object.Equals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.Equals(System.Object,System.Object)\n    name: Equals\n    fullName: System.Object.Equals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.Equals(System.Object,System.Object)\n  nameWithType: Object.Equals(Object, Object)\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: true\n  name: ReferenceEquals(Object, Object)\n  fullName: System.Object.ReferenceEquals(System.Object, System.Object)\n  spec.csharp:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.ReferenceEquals(System.Object,System.Object)\n    name: ReferenceEquals\n    fullName: System.Object.ReferenceEquals\n    isExternal: true\n  - name: (\n    fullName: (\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Object\n    name: Object\n    fullName: System.Object\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: true\n  name: GetHashCode()\n  fullName: System.Object.GetHashCode()\n  spec.csharp:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetHashCode\n    name: GetHashCode\n    fullName: System.Object.GetHashCode\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetHashCode\n  nameWithType: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: true\n  name: GetType()\n  fullName: System.Object.GetType()\n  spec.csharp:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.GetType\n    name: GetType\n    fullName: System.Object.GetType\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.GetType\n  nameWithType: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: true\n  name: MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  spec.csharp:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Object.MemberwiseClone\n    name: MemberwiseClone\n    fullName: System.Object.MemberwiseClone\n    isExternal: true\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Object.MemberwiseClone\n  nameWithType: Object.MemberwiseClone()\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  commentId: N:System\n  nameWithType: System\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  commentId: T:System.Int32\n  nameWithType: Int32\n- uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CreateContentReadStreamAsync()\n  fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync()\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n    name: CreateContentReadStreamAsync\n    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n    name: CreateContentReadStreamAsync\n    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  - name: (\n    fullName: (\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.CreateContentReadStreamAsync\n  nameWithType: HttpContent.CreateContentReadStreamAsync()\n- uid: System.Threading.Tasks.Task{System.IO.Stream}\n  parent: System.Threading.Tasks\n  definition: System.Threading.Tasks.Task`1\n  name: Task<Stream>\n  fullName: System.Threading.Tasks.Task<System.IO.Stream>\n  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)\n  name.vb: Task(Of Stream)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: <\n    fullName: <\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n    isExternal: true\n  - name: '(Of '\n    fullName: '(Of '\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}\n  nameWithType: Task<Stream>\n  nameWithType.vb: Task(Of Stream)\n- uid: System.Threading.Tasks.Task`1\n  isExternal: false\n  name: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n  fullname.vb: System.Threading.Tasks.Task(Of TResult)\n  name.vb: Task(Of TResult)\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    fullName: <\n  - name: TResult\n    fullName: TResult\n  - name: '>'\n    fullName: '>'\n  spec.vb:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    fullName: System.Threading.Tasks.Task\n  - name: '(Of '\n    fullName: '(Of '\n  - name: TResult\n    fullName: TResult\n  - name: )\n    fullName: )\n  commentId: T:System.Threading.Tasks.Task`1\n  nameWithType: Task<TResult>\n  nameWithType.vb: Task(Of TResult)\n- uid: System.Threading.Tasks\n  isExternal: false\n  name: System.Threading.Tasks\n  fullName: System.Threading.Tasks\n  commentId: N:System.Threading.Tasks\n  nameWithType: System.Threading.Tasks\n- uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  fullName: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n    name: SerializeToStreamAsync\n    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n    name: SerializeToStreamAsync\n    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync\n  - name: (\n    fullName: (\n  - uid: System.IO.Stream\n    name: Stream\n    fullName: System.IO.Stream\n    isExternal: true\n  - name: ', '\n    fullName: ', '\n  - uid: System.Net.TransportContext\n    name: TransportContext\n    fullName: System.Net.TransportContext\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  nameWithType: HttpContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  fullName: System.IO.Stream\n  commentId: T:System.IO.Stream\n  nameWithType: Stream\n- uid: System.Net.TransportContext\n  isExternal: false\n  name: TransportContext\n  fullName: System.Net.TransportContext\n  commentId: T:System.Net.TransportContext\n  nameWithType: TransportContext\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  fullName: System.Threading.Tasks.Task\n  commentId: T:System.Threading.Tasks.Task\n  nameWithType: Task\n- uid: System.IO\n  isExternal: false\n  name: System.IO\n  fullName: System.IO\n  commentId: N:System.IO\n  nameWithType: System.IO\n- uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  parent: System.Net.Http.HttpContent\n  isExternal: true\n  name: TryComputeLength(Int64)\n  fullName: System.Net.Http.HttpContent.TryComputeLength(System.Int64)\n  spec.csharp:\n  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n    name: TryComputeLength\n    fullName: System.Net.Http.HttpContent.TryComputeLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  spec.vb:\n  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n    name: TryComputeLength\n    fullName: System.Net.Http.HttpContent.TryComputeLength\n  - name: (\n    fullName: (\n  - uid: System.Int64\n    name: Int64\n    fullName: System.Int64\n    isExternal: true\n  - name: )\n    fullName: )\n  commentId: M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)\n  nameWithType: HttpContent.TryComputeLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  commentId: T:System.Int64\n  nameWithType: Int64\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  fullName: System.Boolean\n  commentId: T:System.Boolean\n  nameWithType: Boolean\n- uid: System.ArgumentNullException\n  isExternal: false\n  name: ArgumentNullException\n  fullName: System.ArgumentNullException\n  nameWithType: ArgumentNullException\n  commentId: T:System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  commentId: T:System.ArgumentOutOfRangeException\n"}