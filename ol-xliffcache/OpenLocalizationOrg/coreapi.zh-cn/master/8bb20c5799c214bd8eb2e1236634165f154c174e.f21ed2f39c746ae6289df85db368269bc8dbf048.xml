{"nodes":[{"pos":[1324,1331],"content":"IStream","needQuote":true,"nodes":[{"content":"IStream","pos":[0,7]}]},{"pos":[3108,3126],"content":"Clone(out IStream)","needQuote":true,"nodes":[{"content":"Clone(out IStream)","pos":[0,18]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the new stream object.","pos":[3994,4056],"source":"\\n<p>When this method returns, contains the new stream object."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[4057,4102],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[4631,4644],"content":"Commit(Int32)","needQuote":true,"nodes":[{"content":"Commit(Int32)","pos":[0,13]}]},{"content":"\\n&lt;p&gt;A value that controls how the changes for the stream object are committed.","pos":[5464,5543],"source":"\\n<p>A value that controls how the changes for the stream object are committed."},{"content":"&lt;/p&gt;\\n","pos":[5544,5550],"source":" </p>\\n"},{"pos":[6098,6136],"content":"CopyTo(IStream, Int64, IntPtr, IntPtr)","needQuote":true,"nodes":[{"content":"CopyTo(IStream, Int64, IntPtr, IntPtr)","pos":[0,38]}]},{"content":"\\n&lt;p&gt;A reference to the destination stream.","pos":[7149,7192],"source":"\\n<p>A reference to the destination stream."},{"content":"&lt;/p&gt;\\n","pos":[7193,7199],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The number of bytes to copy from the source stream.","pos":[7259,7315],"source":"\\n<p>The number of bytes to copy from the source stream."},{"content":"&lt;/p&gt;\\n","pos":[7316,7322],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;On successful return, contains the actual number of bytes read from the source.","pos":[7388,7472],"source":"\\n<p>On successful return, contains the actual number of bytes read from the source."},{"content":"&lt;/p&gt;\\n","pos":[7473,7479],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;On successful return, contains the actual number of bytes written to the destination.","pos":[7548,7638],"source":"\\n<p>On successful return, contains the actual number of bytes written to the destination."},{"content":"&lt;/p&gt;\\n","pos":[7639,7645],"source":" </p>\\n"},{"pos":[8080,8111],"content":"LockRegion(Int64, Int64, Int32)","needQuote":true,"nodes":[{"content":"LockRegion(Int64, Int64, Int32)","pos":[0,31]}]},{"content":"\\n&lt;p&gt;The byte offset for the beginning of the range.","pos":[8962,9014],"source":"\\n<p>The byte offset for the beginning of the range."},{"content":"&lt;/p&gt;\\n","pos":[9015,9021],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length of the range, in bytes, to restrict.","pos":[9081,9133],"source":"\\n<p>The length of the range, in bytes, to restrict."},{"content":"&lt;/p&gt;\\n","pos":[9134,9140],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The requested restrictions on accessing the range.","pos":[9208,9263],"source":"\\n<p>The requested restrictions on accessing the range."},{"content":"&lt;/p&gt;\\n","pos":[9264,9270],"source":" </p>\\n"},{"pos":[9686,9713],"content":"Read(Byte[], Int32, IntPtr)","needQuote":true,"nodes":[{"content":"Read(Byte[], Int32, IntPtr)","pos":[0,27]}]},{"content":"\\n&lt;p&gt;When this method returns, contains the data read from the stream.","pos":[10636,10706],"source":"\\n<p>When this method returns, contains the data read from the stream."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[10707,10752],"source":" This parameter is passed uninitialized.</p>\\n"},{"pos":[11092,11106],"content":"SizeParamIndex","needQuote":true,"nodes":[{"content":"SizeParamIndex","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The number of bytes to read from the stream object.","pos":[11357,11413],"source":"\\n<p>The number of bytes to read from the stream object."},{"content":"&lt;/p&gt;\\n","pos":[11414,11420],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;A pointer to a &lt;strong&gt;ULONG&lt;/strong&gt; variable that receives the actual number of bytes read from the stream object.","pos":[11486,11607],"source":"\\n<p>A pointer to a <strong>ULONG</strong> variable that receives the actual number of bytes read from the stream object."},{"content":"&lt;/p&gt;\\n","pos":[11608,11614],"source":" </p>\\n"},{"pos":[12112,12120],"content":"Revert()","needQuote":true,"nodes":[{"content":"Revert()","pos":[0,8]}]},{"pos":[13281,13307],"content":"Seek(Int64, Int32, IntPtr)","needQuote":true,"nodes":[{"content":"Seek(Int64, Int32, IntPtr)","pos":[0,26]}]},{"content":"\\n&lt;p&gt;The displacement to add to &lt;em&gt;dwOrigin&lt;/em&gt;.","pos":[14238,14288],"source":"\\n<p>The displacement to add to <em>dwOrigin</em>."},{"content":"&lt;/p&gt;\\n","pos":[14289,14295],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The origin of the seek.","pos":[14361,14389],"source":"\\n<p>The origin of the seek."},{"content":"The origin can be the beginning of the file, the current seek pointer, or the end of the file.","pos":[14390,14484]},{"content":"&lt;/p&gt;\\n","pos":[14485,14491],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;On successful return, contains the offset of the seek pointer from the beginning of the stream.","pos":[14565,14665],"source":"\\n<p>On successful return, contains the offset of the seek pointer from the beginning of the stream."},{"content":"&lt;/p&gt;\\n","pos":[14666,14672],"source":" </p>\\n"},{"pos":[15008,15022],"content":"SetSize(Int64)","needQuote":true,"nodes":[{"content":"SetSize(Int64)","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The new size of the stream as a number of bytes.","pos":[15753,15806],"source":"\\n<p>The new size of the stream as a number of bytes."},{"content":"&lt;/p&gt;\\n","pos":[15807,15813],"source":" </p>\\n"},{"pos":[16275,16299],"content":"Stat(out STATSTG, Int32)","needQuote":true,"nodes":[{"content":"Stat(out STATSTG, Int32)","pos":[0,24]}]},{"content":"\\n&lt;p&gt;When this method returns, contains a &lt;strong&gt;STATSTG&lt;/strong&gt; structure that describes this stream object.","pos":[17258,17369],"source":"\\n<p>When this method returns, contains a <strong>STATSTG</strong> structure that describes this stream object."},{"content":"This parameter is passed uninitialized.&lt;/p&gt;\\n","pos":[17370,17415],"source":" This parameter is passed uninitialized.</p>\\n"},{"content":"\\n&lt;p&gt;Members in the &lt;strong&gt;STATSTG&lt;/strong&gt; structure that this method does not return, thus saving some memory allocation operations.","pos":[17484,17619],"source":"\\n<p>Members in the <strong>STATSTG</strong> structure that this method does not return, thus saving some memory allocation operations."},{"content":"&lt;/p&gt;\\n","pos":[17620,17626],"source":" </p>\\n"},{"pos":[18282,18315],"content":"UnlockRegion(Int64, Int64, Int32)","needQuote":true,"nodes":[{"content":"UnlockRegion(Int64, Int64, Int32)","pos":[0,33]}]},{"content":"\\n&lt;p&gt;The byte offset for the beginning of the range.","pos":[19361,19413],"source":"\\n<p>The byte offset for the beginning of the range."},{"content":"&lt;/p&gt;\\n","pos":[19414,19420],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The length, in bytes, of the range to restrict.","pos":[19480,19532],"source":"\\n<p>The length, in bytes, of the range to restrict."},{"content":"&lt;/p&gt;\\n","pos":[19533,19539],"source":" </p>\\n"},{"content":"\\n&lt;p&gt;The access restrictions previously placed on the range.","pos":[19607,19667],"source":"\\n<p>The access restrictions previously placed on the range."},{"content":"&lt;/p&gt;\\n","pos":[19668,19674],"source":" </p>\\n"},{"pos":[20095,20123],"content":"Write(Byte[], Int32, IntPtr)","needQuote":true,"nodes":[{"content":"Write(Byte[], Int32, IntPtr)","pos":[0,28]}]},{"content":"\\n&lt;p&gt;The buffer to write this stream to.","pos":[21040,21080],"source":"\\n<p>The buffer to write this stream to."},{"content":"&lt;/p&gt;\\n","pos":[21081,21087],"source":" </p>\\n"},{"pos":[21427,21441],"content":"SizeParamIndex","needQuote":true,"nodes":[{"content":"SizeParamIndex","pos":[0,14]}]},{"content":"\\n&lt;p&gt;The number of bytes to write to the stream.","pos":[21548,21596],"source":"\\n<p>The number of bytes to write to the stream."},{"content":"&lt;/p&gt;\\n","pos":[21597,21603],"source":" </p>\\n"},{"pos":[22302,22341],"content":"System.Runtime.InteropServices.ComTypes","needQuote":true,"nodes":[{"content":"System.Runtime.InteropServices.ComTypes","pos":[0,39]}]},{"pos":[22638,22645],"content":"IStream","needQuote":true,"nodes":[{"content":"IStream","pos":[0,7]}]},{"pos":[22858,22863],"content":"Int32","needQuote":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22981,22987],"content":"System","needQuote":true,"nodes":[{"content":"System","pos":[0,6]}]},{"pos":[23117,23122],"content":"Int64","needQuote":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[23264,23270],"content":"IntPtr","needQuote":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[23378,23384],"content":"Byte[]","needQuote":true,"nodes":[{"content":"Byte[]","pos":[0,6]}]},{"pos":[23504,23508],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"content":"[]","pos":[23567,23569]},{"pos":[23632,23636],"content":"Byte","needQuote":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23694,23696],"content":"()","needQuote":true,"nodes":[{"content":"()","pos":[0,2]}]},{"pos":[23896,23903],"content":"STATSTG","needQuote":true,"nodes":[{"content":"STATSTG","pos":[0,7]}]}],"content":"items:\n- uid: System.Runtime.InteropServices.ComTypes.IStream\n  commentId: T:System.Runtime.InteropServices.ComTypes.IStream\n  id: IStream\n  parent: System.Runtime.InteropServices.ComTypes\n  children:\n  - System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)\n  - System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)\n  - System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  - System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IStream.Revert\n  - System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  - System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)\n  - System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)\n  - System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  - System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  langs:\n  - csharp\n  - vb\n  name: IStream\n  fullName: System.Runtime.InteropServices.ComTypes.IStream\n  type: Interface\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: IStream\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 34\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Provides the managed definition of the <strong>IStream</strong> interface, with <strong>ISequentialStream</strong> functionality.</p>\\n\"\n  syntax:\n    content: >-\n      [Guid(\"0000000c-0000-0000-C000-000000000046\")]\n\n      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]\n\n      [ComImport]\n\n      public interface IStream\n    content.vb: >-\n      <Guid(\"0000000c-0000-0000-C000-000000000046\")>\n\n      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>\n\n      <ComImport>\n\n      Public Interface IStream\n  attributes:\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)\n    arguments:\n    - type: System.Runtime.InteropServices.ComInterfaceType\n      value: 1\n  modifiers.csharp:\n  - public\n  - interface\n  modifiers.vb:\n  - Public\n  - Interface\n  nameWithType: IStream\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Clone(System.Runtime.InteropServices.ComTypes.IStream@)\n  id: Clone(System.Runtime.InteropServices.ComTypes.IStream@)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Clone(out IStream)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Clone(out System.Runtime.InteropServices.ComTypes.IStream)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Clone\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 52\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Creates a new stream object with its own seek pointer that references the same bytes as the original stream.</p>\\n\"\n  syntax:\n    content: void Clone(out IStream ppstm)\n    content.vb: Sub Clone(ByRef ppstm As IStream)\n    parameters:\n    - id: ppstm\n      type: System.Runtime.InteropServices.ComTypes.IStream\n      description: \"\\n<p>When this method returns, contains the new stream object. This parameter is passed uninitialized.</p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IStream.Clone(ByRef System.Runtime.InteropServices.ComTypes.IStream)\n  name.vb: Clone(ByRef IStream)\n  nameWithType: IStream.Clone(out IStream)\n  nameWithType.vb: IStream.Clone(ByRef IStream)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)\n  id: Commit(System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Commit(Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Commit\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 47\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Ensures that any changes made to a stream object that is open in transacted mode are reflected in the parent storage.</p>\\n\"\n  syntax:\n    content: void Commit(int grfCommitFlags)\n    content.vb: Sub Commit(grfCommitFlags As Integer)\n    parameters:\n    - id: grfCommitFlags\n      type: System.Int32\n      description: \"\\n<p>A value that controls how the changes for the stream object are committed. </p>\\n\"\n  nameWithType: IStream.Commit(Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)\n  id: CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: CopyTo(IStream, Int64, IntPtr, IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.CopyTo(System.Runtime.InteropServices.ComTypes.IStream, System.Int64, System.IntPtr, System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: CopyTo\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 46\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</p>\\n\"\n  syntax:\n    content: void CopyTo(IStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten)\n    content.vb: Sub CopyTo(pstm As IStream, cb As Long, pcbRead As IntPtr, pcbWritten As IntPtr)\n    parameters:\n    - id: pstm\n      type: System.Runtime.InteropServices.ComTypes.IStream\n      description: \"\\n<p>A reference to the destination stream. </p>\\n\"\n    - id: cb\n      type: System.Int64\n      description: \"\\n<p>The number of bytes to copy from the source stream. </p>\\n\"\n    - id: pcbRead\n      type: System.IntPtr\n      description: \"\\n<p>On successful return, contains the actual number of bytes read from the source. </p>\\n\"\n    - id: pcbWritten\n      type: System.IntPtr\n      description: \"\\n<p>On successful return, contains the actual number of bytes written to the destination. </p>\\n\"\n  nameWithType: IStream.CopyTo(IStream, Int64, IntPtr, IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)\n  id: LockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: LockRegion(Int64, Int64, Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64, System.Int64, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: LockRegion\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 49\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Restricts access to a specified range of bytes in the stream.</p>\\n\"\n  syntax:\n    content: void LockRegion(long libOffset, long cb, int dwLockType)\n    content.vb: Sub LockRegion(libOffset As Long, cb As Long, dwLockType As Integer)\n    parameters:\n    - id: libOffset\n      type: System.Int64\n      description: \"\\n<p>The byte offset for the beginning of the range. </p>\\n\"\n    - id: cb\n      type: System.Int64\n      description: \"\\n<p>The length of the range, in bytes, to restrict. </p>\\n\"\n    - id: dwLockType\n      type: System.Int32\n      description: \"\\n<p>The requested restrictions on accessing the range. </p>\\n\"\n  nameWithType: IStream.LockRegion(Int64, Int64, Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[],System.Int32,System.IntPtr)\n  id: Read(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Read(Byte[], Int32, IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte[], System.Int32, System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Read\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 40\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</p>\\n\"\n  syntax:\n    content: void Read([MarshalAs(UnmanagedType.LPArray, SizeParamIndex = (short)1), Out] byte[] pv, int cb, IntPtr pcbRead)\n    content.vb: Sub Read(pv As Byte(), cb As Integer, pcbRead As IntPtr)\n    parameters:\n    - id: pv\n      type: System.Byte[]\n      description: \"\\n<p>When this method returns, contains the data read from the stream. This parameter is passed uninitialized.</p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 42\n        namedArguments:\n        - name: SizeParamIndex\n          type: System.Int16\n          value: 1\n      - type: System.Runtime.InteropServices.OutAttribute\n        ctor: System.Runtime.InteropServices.OutAttribute.#ctor\n        arguments: []\n    - id: cb\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to read from the stream object. </p>\\n\"\n    - id: pcbRead\n      type: System.IntPtr\n      description: \"\\n<p>A pointer to a <strong>ULONG</strong> variable that receives the actual number of bytes read from the stream object. </p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IStream.Read(System.Byte(), System.Int32, System.IntPtr)\n  name.vb: Read(Byte(), Int32, IntPtr)\n  nameWithType: IStream.Read(Byte[], Int32, IntPtr)\n  nameWithType.vb: IStream.Read(Byte(), Int32, IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Revert\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Revert\n  id: Revert\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Revert()\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Revert()\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Revert\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 48\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Discards all changes that have been made to a transacted stream since the last <xref href=\\\"System.Runtime.InteropServices.ComTypes.IStream.Commit(System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> call.</p>\\n\"\n  syntax:\n    content: void Revert()\n    content.vb: Sub Revert\n  nameWithType: IStream.Revert()\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64,System.Int32,System.IntPtr)\n  id: Seek(System.Int64,System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Seek(Int64, Int32, IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Seek(System.Int64, System.Int32, System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Seek\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 44\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.</p>\\n\"\n  syntax:\n    content: void Seek(long dlibMove, int dwOrigin, IntPtr plibNewPosition)\n    content.vb: Sub Seek(dlibMove As Long, dwOrigin As Integer, plibNewPosition As IntPtr)\n    parameters:\n    - id: dlibMove\n      type: System.Int64\n      description: \"\\n<p>The displacement to add to <em>dwOrigin</em>. </p>\\n\"\n    - id: dwOrigin\n      type: System.Int32\n      description: \"\\n<p>The origin of the seek. The origin can be the beginning of the file, the current seek pointer, or the end of the file. </p>\\n\"\n    - id: plibNewPosition\n      type: System.IntPtr\n      description: \"\\n<p>On successful return, contains the offset of the seek pointer from the beginning of the stream. </p>\\n\"\n  nameWithType: IStream.Seek(Int64, Int32, IntPtr)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)\n  id: SetSize(System.Int64)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: SetSize(Int64)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.SetSize(System.Int64)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: SetSize\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 45\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Changes the size of the stream object.</p>\\n\"\n  syntax:\n    content: void SetSize(long libNewSize)\n    content.vb: Sub SetSize(libNewSize As Long)\n    parameters:\n    - id: libNewSize\n      type: System.Int64\n      description: \"\\n<p>The new size of the stream as a number of bytes. </p>\\n\"\n  nameWithType: IStream.SetSize(Int64)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)\n  id: Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Stat(out STATSTG, Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Stat(out System.Runtime.InteropServices.ComTypes.STATSTG, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Stat\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 51\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Retrieves the <xref href=\\\"System.Runtime.InteropServices.STATSTG\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> structure for this stream.</p>\\n\"\n  syntax:\n    content: void Stat(out STATSTG pstatstg, int grfStatFlag)\n    content.vb: Sub Stat(ByRef pstatstg As STATSTG, grfStatFlag As Integer)\n    parameters:\n    - id: pstatstg\n      type: System.Runtime.InteropServices.ComTypes.STATSTG\n      description: \"\\n<p>When this method returns, contains a <strong>STATSTG</strong> structure that describes this stream object. This parameter is passed uninitialized.</p>\\n\"\n    - id: grfStatFlag\n      type: System.Int32\n      description: \"\\n<p>Members in the <strong>STATSTG</strong> structure that this method does not return, thus saving some memory allocation operations. </p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IStream.Stat(ByRef System.Runtime.InteropServices.ComTypes.STATSTG, System.Int32)\n  name.vb: Stat(ByRef STATSTG, Int32)\n  nameWithType: IStream.Stat(out STATSTG, Int32)\n  nameWithType.vb: IStream.Stat(ByRef STATSTG, Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64,System.Int64,System.Int32)\n  id: UnlockRegion(System.Int64,System.Int64,System.Int32)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: UnlockRegion(Int64, Int64, Int32)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(System.Int64, System.Int64, System.Int32)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: UnlockRegion\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 50\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Removes the access restriction on a range of bytes previously restricted with the <xref href=\\\"System.Runtime.InteropServices.ComTypes.IStream.LockRegion(System.Int64,System.Int64,System.Int32)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: void UnlockRegion(long libOffset, long cb, int dwLockType)\n    content.vb: Sub UnlockRegion(libOffset As Long, cb As Long, dwLockType As Integer)\n    parameters:\n    - id: libOffset\n      type: System.Int64\n      description: \"\\n<p>The byte offset for the beginning of the range. </p>\\n\"\n    - id: cb\n      type: System.Int64\n      description: \"\\n<p>The length, in bytes, of the range to restrict. </p>\\n\"\n    - id: dwLockType\n      type: System.Int32\n      description: \"\\n<p>The access restrictions previously placed on the range. </p>\\n\"\n  nameWithType: IStream.UnlockRegion(Int64, Int64, Int32)\n- uid: System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[],System.Int32,System.IntPtr)\n  id: Write(System.Byte[],System.Int32,System.IntPtr)\n  parent: System.Runtime.InteropServices.ComTypes.IStream\n  langs:\n  - csharp\n  - vb\n  name: Write(Byte[], Int32, IntPtr)\n  fullName: System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte[], System.Int32, System.IntPtr)\n  type: Method\n  source:\n    remote:\n      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n      branch: master\n      repo: https://github.com/dotnet/coreclr.git\n    id: Write\n    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IStream.cs\n    startLine: 41\n  assemblies:\n  - System.Runtime.InteropServices\n  namespace: System.Runtime.InteropServices.ComTypes\n  summary: \"\\n<p>Writes a specified number of bytes into the stream object starting at the current seek pointer.</p>\\n\"\n  syntax:\n    content: void Write([MarshalAs(UnmanagedType.LPArray, SizeParamIndex = (short)1)] byte[] pv, int cb, IntPtr pcbWritten)\n    content.vb: Sub Write(pv As Byte(), cb As Integer, pcbWritten As IntPtr)\n    parameters:\n    - id: pv\n      type: System.Byte[]\n      description: \"\\n<p>The buffer to write this stream to. </p>\\n\"\n      attributes:\n      - type: System.Runtime.InteropServices.MarshalAsAttribute\n        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n        arguments:\n        - type: System.Runtime.InteropServices.UnmanagedType\n          value: 42\n        namedArguments:\n        - name: SizeParamIndex\n          type: System.Int16\n          value: 1\n    - id: cb\n      type: System.Int32\n      description: \"\\n<p>The number of bytes to write to the stream. </p>\\n\"\n    - id: pcbWritten\n      type: System.IntPtr\n      description: \"\\n<p>On successful return, contains the actual number of bytes written to the stream object. If the caller sets this pointer to <xref href=\\\"System.IntPtr.Zero\\\" data-throw-if-not-resolved=\\\"false\\\"></xref>, this method does not provide the actual number of bytes written. </p>\\n\"\n  fullName.vb: System.Runtime.InteropServices.ComTypes.IStream.Write(System.Byte(), System.Int32, System.IntPtr)\n  name.vb: Write(Byte(), Int32, IntPtr)\n  nameWithType: IStream.Write(Byte[], Int32, IntPtr)\n  nameWithType.vb: IStream.Write(Byte(), Int32, IntPtr)\nreferences:\n- uid: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: System.Runtime.InteropServices.ComTypes\n  fullName: System.Runtime.InteropServices.ComTypes\n  nameWithType: System.Runtime.InteropServices.ComTypes\n  commentId: N:System.Runtime.InteropServices.ComTypes\n- uid: System.Runtime.InteropServices.ComTypes.IStream\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: IStream\n  fullName: System.Runtime.InteropServices.ComTypes.IStream\n  nameWithType: IStream\n  commentId: T:System.Runtime.InteropServices.ComTypes.IStream\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  fullName: System.Int32\n  nameWithType: Int32\n  commentId: T:System.Int32\n- uid: System\n  isExternal: false\n  name: System\n  fullName: System\n  nameWithType: System\n  commentId: N:System\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  fullName: System.Int64\n  nameWithType: Int64\n  commentId: T:System.Int64\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  fullName: System.IntPtr\n  nameWithType: IntPtr\n  commentId: T:System.IntPtr\n- uid: System.Byte[]\n  name: Byte[]\n  fullName: System.Byte[]\n  fullname.vb: System.Byte()\n  name.vb: Byte()\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: '[]'\n    fullName: '[]'\n  spec.vb:\n  - uid: System.Byte\n    name: Byte\n    fullName: System.Byte\n    isExternal: true\n  - name: ()\n    fullName: ()\n  nameWithType: Byte[]\n  nameWithType.vb: Byte()\n- uid: System.Runtime.InteropServices.ComTypes.STATSTG\n  parent: System.Runtime.InteropServices.ComTypes\n  isExternal: false\n  name: STATSTG\n  fullName: System.Runtime.InteropServices.ComTypes.STATSTG\n  nameWithType: STATSTG\n  commentId: T:System.Runtime.InteropServices.ComTypes.STATSTG\n"}