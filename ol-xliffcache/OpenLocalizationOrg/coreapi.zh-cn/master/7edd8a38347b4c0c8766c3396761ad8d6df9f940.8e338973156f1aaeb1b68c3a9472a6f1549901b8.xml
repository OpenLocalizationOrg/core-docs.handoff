{"nodes":[{"pos":[2665,2681],"content":"SocketOptionName","needQuote":true,"nodes":[{"content":"SocketOptionName","pos":[0,16]}]},{"pos":[3777,3793],"content":"AcceptConnection","needQuote":true,"nodes":[{"content":"AcceptConnection","pos":[0,16]}]},{"pos":[4702,4715],"content":"AddMembership","needQuote":true,"nodes":[{"content":"AddMembership","pos":[0,13]}]},{"pos":[5634,5653],"content":"AddSourceMembership","needQuote":true,"nodes":[{"content":"AddSourceMembership","pos":[0,19]}]},{"pos":[6565,6576],"content":"BlockSource","needQuote":true,"nodes":[{"content":"BlockSource","pos":[0,11]}]},{"pos":[7455,7464],"content":"Broadcast","needQuote":true,"nodes":[{"content":"Broadcast","pos":[0,9]}]},{"pos":[8358,8367],"content":"BsdUrgent","needQuote":true,"nodes":[{"content":"BsdUrgent","pos":[0,9]}]},{"pos":[9348,9364],"content":"ChecksumCoverage","needQuote":true,"nodes":[{"content":"ChecksumCoverage","pos":[0,16]}]},{"pos":[10263,10268],"content":"Debug","needQuote":true,"nodes":[{"content":"Debug","pos":[0,5]}]},{"pos":[11135,11147],"content":"DontFragment","needQuote":true,"nodes":[{"content":"DontFragment","pos":[0,12]}]},{"pos":[12037,12047],"content":"DontLinger","needQuote":true,"nodes":[{"content":"DontLinger","pos":[0,10]}]},{"pos":[12945,12954],"content":"DontRoute","needQuote":true,"nodes":[{"content":"DontRoute","pos":[0,9]}]},{"pos":[13881,13895],"content":"DropMembership","needQuote":true,"nodes":[{"content":"DropMembership","pos":[0,14]}]},{"pos":[14822,14842],"content":"DropSourceMembership","needQuote":true,"nodes":[{"content":"DropSourceMembership","pos":[0,20]}]},{"pos":[15740,15745],"content":"Error","needQuote":true,"nodes":[{"content":"Error","pos":[0,5]}]},{"pos":[16638,16657],"content":"ExclusiveAddressUse","needQuote":true,"nodes":[{"content":"ExclusiveAddressUse","pos":[0,19]}]},{"pos":[17593,17602],"content":"Expedited","needQuote":true,"nodes":[{"content":"Expedited","pos":[0,9]}]},{"pos":[18580,18594],"content":"HeaderIncluded","needQuote":true,"nodes":[{"content":"HeaderIncluded","pos":[0,14]}]},{"pos":[19533,19541],"content":"HopLimit","needQuote":true,"nodes":[{"content":"HopLimit","pos":[0,8]}]},{"pos":[20547,20556],"content":"IPOptions","needQuote":true,"nodes":[{"content":"IPOptions","pos":[0,9]}]},{"pos":[21489,21506],"content":"IPProtectionLevel","needQuote":true,"nodes":[{"content":"IPProtectionLevel","pos":[0,17]}]},{"pos":[23110,23122],"content":"IpTimeToLive","needQuote":true,"nodes":[{"content":"IpTimeToLive","pos":[0,12]}]},{"pos":[24013,24021],"content":"IPv6Only","needQuote":true,"nodes":[{"content":"IPv6Only","pos":[0,8]}]},{"pos":[25669,25678],"content":"KeepAlive","needQuote":true,"nodes":[{"content":"KeepAlive","pos":[0,9]}]},{"pos":[26530,26536],"content":"Linger","needQuote":true,"nodes":[{"content":"Linger","pos":[0,6]}]},{"pos":[27428,27442],"content":"MaxConnections","needQuote":true,"nodes":[{"content":"MaxConnections","pos":[0,14]}]},{"pos":[28474,28492],"content":"MulticastInterface","needQuote":true,"nodes":[{"content":"MulticastInterface","pos":[0,18]}]},{"pos":[29446,29463],"content":"MulticastLoopback","needQuote":true,"nodes":[{"content":"MulticastLoopback","pos":[0,17]}]},{"pos":[30396,30415],"content":"MulticastTimeToLive","needQuote":true,"nodes":[{"content":"MulticastTimeToLive","pos":[0,19]}]},{"pos":[31333,31343],"content":"NoChecksum","needQuote":true,"nodes":[{"content":"NoChecksum","pos":[0,10]}]},{"pos":[32231,32238],"content":"NoDelay","needQuote":true,"nodes":[{"content":"NoDelay","pos":[0,7]}]},{"pos":[33142,33157],"content":"OutOfBandInline","needQuote":true,"nodes":[{"content":"OutOfBandInline","pos":[0,15]}]},{"pos":[34104,34121],"content":"PacketInformation","needQuote":true,"nodes":[{"content":"PacketInformation","pos":[0,17]}]},{"pos":[35053,35066],"content":"ReceiveBuffer","needQuote":true,"nodes":[{"content":"ReceiveBuffer","pos":[0,13]}]},{"pos":[36089,36104],"content":"ReceiveLowWater","needQuote":true,"nodes":[{"content":"ReceiveLowWater","pos":[0,15]}]},{"pos":[37144,37158],"content":"ReceiveTimeout","needQuote":true,"nodes":[{"content":"ReceiveTimeout","pos":[0,14]}]},{"pos":[38367,38379],"content":"ReuseAddress","needQuote":true,"nodes":[{"content":"ReuseAddress","pos":[0,12]}]},{"pos":[39324,39340],"content":"ReuseUnicastPort","needQuote":true,"nodes":[{"content":"ReuseUnicastPort","pos":[0,16]}]},{"pos":[40387,40397],"content":"SendBuffer","needQuote":true,"nodes":[{"content":"SendBuffer","pos":[0,10]}]},{"pos":[41396,41408],"content":"SendLowWater","needQuote":true,"nodes":[{"content":"SendLowWater","pos":[0,12]}]},{"pos":[42424,42435],"content":"SendTimeout","needQuote":true,"nodes":[{"content":"SendTimeout","pos":[0,11]}]},{"pos":[43605,43609],"content":"Type","needQuote":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44469,44482],"content":"TypeOfService","needQuote":true,"nodes":[{"content":"TypeOfService","pos":[0,13]}]},{"pos":[45402,45415],"content":"UnblockSource","needQuote":true,"nodes":[{"content":"UnblockSource","pos":[0,13]}]},{"pos":[46343,46362],"content":"UpdateAcceptContext","needQuote":true,"nodes":[{"content":"UpdateAcceptContext","pos":[0,19]}]},{"pos":[47495,47515],"content":"UpdateConnectContext","needQuote":true,"nodes":[{"content":"UpdateConnectContext","pos":[0,20]}]},{"pos":[48626,48637],"content":"UseLoopback","needQuote":true,"nodes":[{"content":"UseLoopback","pos":[0,11]}]},{"pos":[49376,49394],"content":"System.Net.Sockets","needQuote":true,"nodes":[{"content":"System.Net.Sockets","pos":[0,18]}]},{"pos":[49595,49611],"content":"SocketOptionName","needQuote":true,"nodes":[{"content":"SocketOptionName","pos":[0,16]}]}],"content":"items:\n- uid: System.Net.Sockets.SocketOptionName\n  commentId: T:System.Net.Sockets.SocketOptionName\n  id: SocketOptionName\n  parent: System.Net.Sockets\n  children:\n  - System.Net.Sockets.SocketOptionName.AcceptConnection\n  - System.Net.Sockets.SocketOptionName.AddMembership\n  - System.Net.Sockets.SocketOptionName.AddSourceMembership\n  - System.Net.Sockets.SocketOptionName.BlockSource\n  - System.Net.Sockets.SocketOptionName.Broadcast\n  - System.Net.Sockets.SocketOptionName.BsdUrgent\n  - System.Net.Sockets.SocketOptionName.ChecksumCoverage\n  - System.Net.Sockets.SocketOptionName.Debug\n  - System.Net.Sockets.SocketOptionName.DontFragment\n  - System.Net.Sockets.SocketOptionName.DontLinger\n  - System.Net.Sockets.SocketOptionName.DontRoute\n  - System.Net.Sockets.SocketOptionName.DropMembership\n  - System.Net.Sockets.SocketOptionName.DropSourceMembership\n  - System.Net.Sockets.SocketOptionName.Error\n  - System.Net.Sockets.SocketOptionName.ExclusiveAddressUse\n  - System.Net.Sockets.SocketOptionName.Expedited\n  - System.Net.Sockets.SocketOptionName.HeaderIncluded\n  - System.Net.Sockets.SocketOptionName.HopLimit\n  - System.Net.Sockets.SocketOptionName.IPOptions\n  - System.Net.Sockets.SocketOptionName.IPProtectionLevel\n  - System.Net.Sockets.SocketOptionName.IpTimeToLive\n  - System.Net.Sockets.SocketOptionName.IPv6Only\n  - System.Net.Sockets.SocketOptionName.KeepAlive\n  - System.Net.Sockets.SocketOptionName.Linger\n  - System.Net.Sockets.SocketOptionName.MaxConnections\n  - System.Net.Sockets.SocketOptionName.MulticastInterface\n  - System.Net.Sockets.SocketOptionName.MulticastLoopback\n  - System.Net.Sockets.SocketOptionName.MulticastTimeToLive\n  - System.Net.Sockets.SocketOptionName.NoChecksum\n  - System.Net.Sockets.SocketOptionName.NoDelay\n  - System.Net.Sockets.SocketOptionName.OutOfBandInline\n  - System.Net.Sockets.SocketOptionName.PacketInformation\n  - System.Net.Sockets.SocketOptionName.ReceiveBuffer\n  - System.Net.Sockets.SocketOptionName.ReceiveLowWater\n  - System.Net.Sockets.SocketOptionName.ReceiveTimeout\n  - System.Net.Sockets.SocketOptionName.ReuseAddress\n  - System.Net.Sockets.SocketOptionName.ReuseUnicastPort\n  - System.Net.Sockets.SocketOptionName.SendBuffer\n  - System.Net.Sockets.SocketOptionName.SendLowWater\n  - System.Net.Sockets.SocketOptionName.SendTimeout\n  - System.Net.Sockets.SocketOptionName.Type\n  - System.Net.Sockets.SocketOptionName.TypeOfService\n  - System.Net.Sockets.SocketOptionName.UnblockSource\n  - System.Net.Sockets.SocketOptionName.UpdateAcceptContext\n  - System.Net.Sockets.SocketOptionName.UpdateConnectContext\n  - System.Net.Sockets.SocketOptionName.UseLoopback\n  langs:\n  - csharp\n  - vb\n  name: SocketOptionName\n  fullName: System.Net.Sockets.SocketOptionName\n  type: Enum\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SocketOptionName\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 303\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Defines configuration option names.</p>\\n\"\n  syntax:\n    content: public enum SocketOptionName\n    content.vb: Public Enum SocketOptionName\n  seealso:\n  - type: System.Net.Sockets.SocketOptionLevel\n    commentId: T:System.Net.Sockets.SocketOptionLevel\n  - type: System.Net.Sockets.SocketOptionName\n    commentId: T:System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - enum\n  modifiers.vb:\n  - Public\n  - Enum\n  nameWithType: SocketOptionName\n- uid: System.Net.Sockets.SocketOptionName.AcceptConnection\n  commentId: F:System.Net.Sockets.SocketOptionName.AcceptConnection\n  id: AcceptConnection\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: AcceptConnection\n  fullName: System.Net.Sockets.SocketOptionName.AcceptConnection\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AcceptConnection\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 305\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>The socket is listening.</p>\\n\"\n  syntax:\n    content: AcceptConnection = 2\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.AcceptConnection\n- uid: System.Net.Sockets.SocketOptionName.AddMembership\n  commentId: F:System.Net.Sockets.SocketOptionName.AddMembership\n  id: AddMembership\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: AddMembership\n  fullName: System.Net.Sockets.SocketOptionName.AddMembership\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddMembership\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 306\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Add an IP group membership.</p>\\n\"\n  syntax:\n    content: AddMembership = 12\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.AddMembership\n- uid: System.Net.Sockets.SocketOptionName.AddSourceMembership\n  commentId: F:System.Net.Sockets.SocketOptionName.AddSourceMembership\n  id: AddSourceMembership\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: AddSourceMembership\n  fullName: System.Net.Sockets.SocketOptionName.AddSourceMembership\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: AddSourceMembership\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 307\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Join a source group.</p>\\n\"\n  syntax:\n    content: AddSourceMembership = 15\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.AddSourceMembership\n- uid: System.Net.Sockets.SocketOptionName.BlockSource\n  commentId: F:System.Net.Sockets.SocketOptionName.BlockSource\n  id: BlockSource\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: BlockSource\n  fullName: System.Net.Sockets.SocketOptionName.BlockSource\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BlockSource\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 308\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Block data from a source.</p>\\n\"\n  syntax:\n    content: BlockSource = 17\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.BlockSource\n- uid: System.Net.Sockets.SocketOptionName.Broadcast\n  commentId: F:System.Net.Sockets.SocketOptionName.Broadcast\n  id: Broadcast\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Broadcast\n  fullName: System.Net.Sockets.SocketOptionName.Broadcast\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Broadcast\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 309\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Permit sending broadcast messages on the socket.</p>\\n\"\n  syntax:\n    content: Broadcast = 32\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Broadcast\n- uid: System.Net.Sockets.SocketOptionName.BsdUrgent\n  commentId: F:System.Net.Sockets.SocketOptionName.BsdUrgent\n  id: BsdUrgent\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: BsdUrgent\n  fullName: System.Net.Sockets.SocketOptionName.BsdUrgent\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: BsdUrgent\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 310\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Use urgent data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</p>\\n\"\n  syntax:\n    content: BsdUrgent = 2\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.BsdUrgent\n- uid: System.Net.Sockets.SocketOptionName.ChecksumCoverage\n  commentId: F:System.Net.Sockets.SocketOptionName.ChecksumCoverage\n  id: ChecksumCoverage\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ChecksumCoverage\n  fullName: System.Net.Sockets.SocketOptionName.ChecksumCoverage\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ChecksumCoverage\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 311\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Set or get the UDP checksum coverage.</p>\\n\"\n  syntax:\n    content: ChecksumCoverage = 20\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ChecksumCoverage\n- uid: System.Net.Sockets.SocketOptionName.Debug\n  commentId: F:System.Net.Sockets.SocketOptionName.Debug\n  id: Debug\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Debug\n  fullName: System.Net.Sockets.SocketOptionName.Debug\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Debug\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 312\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Record debugging information.</p>\\n\"\n  syntax:\n    content: Debug = 1\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Debug\n- uid: System.Net.Sockets.SocketOptionName.DontFragment\n  commentId: F:System.Net.Sockets.SocketOptionName.DontFragment\n  id: DontFragment\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: DontFragment\n  fullName: System.Net.Sockets.SocketOptionName.DontFragment\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DontFragment\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 313\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Do not fragment IP datagrams.</p>\\n\"\n  syntax:\n    content: DontFragment = 14\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.DontFragment\n- uid: System.Net.Sockets.SocketOptionName.DontLinger\n  commentId: F:System.Net.Sockets.SocketOptionName.DontLinger\n  id: DontLinger\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: DontLinger\n  fullName: System.Net.Sockets.SocketOptionName.DontLinger\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DontLinger\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 314\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Close the socket gracefully without lingering.</p>\\n\"\n  syntax:\n    content: DontLinger = -129\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.DontLinger\n- uid: System.Net.Sockets.SocketOptionName.DontRoute\n  commentId: F:System.Net.Sockets.SocketOptionName.DontRoute\n  id: DontRoute\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: DontRoute\n  fullName: System.Net.Sockets.SocketOptionName.DontRoute\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DontRoute\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 315\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Do not route; send the packet directly to the interface addresses.</p>\\n\"\n  syntax:\n    content: DontRoute = 16\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.DontRoute\n- uid: System.Net.Sockets.SocketOptionName.DropMembership\n  commentId: F:System.Net.Sockets.SocketOptionName.DropMembership\n  id: DropMembership\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: DropMembership\n  fullName: System.Net.Sockets.SocketOptionName.DropMembership\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DropMembership\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 316\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Drop an IP group membership.</p>\\n\"\n  syntax:\n    content: DropMembership = 13\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.DropMembership\n- uid: System.Net.Sockets.SocketOptionName.DropSourceMembership\n  commentId: F:System.Net.Sockets.SocketOptionName.DropSourceMembership\n  id: DropSourceMembership\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: DropSourceMembership\n  fullName: System.Net.Sockets.SocketOptionName.DropSourceMembership\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: DropSourceMembership\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 317\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Drop a source group.</p>\\n\"\n  syntax:\n    content: DropSourceMembership = 16\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.DropSourceMembership\n- uid: System.Net.Sockets.SocketOptionName.Error\n  commentId: F:System.Net.Sockets.SocketOptionName.Error\n  id: Error\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Error\n  fullName: System.Net.Sockets.SocketOptionName.Error\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Error\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 318\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Get the error status and clear.</p>\\n\"\n  syntax:\n    content: Error = 4103\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Error\n- uid: System.Net.Sockets.SocketOptionName.ExclusiveAddressUse\n  commentId: F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse\n  id: ExclusiveAddressUse\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ExclusiveAddressUse\n  fullName: System.Net.Sockets.SocketOptionName.ExclusiveAddressUse\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ExclusiveAddressUse\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 319\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Enables a socket to be bound for exclusive access.</p>\\n\"\n  syntax:\n    content: ExclusiveAddressUse = -5\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ExclusiveAddressUse\n- uid: System.Net.Sockets.SocketOptionName.Expedited\n  commentId: F:System.Net.Sockets.SocketOptionName.Expedited\n  id: Expedited\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Expedited\n  fullName: System.Net.Sockets.SocketOptionName.Expedited\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Expedited\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 320\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Use expedited data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.</p>\\n\"\n  syntax:\n    content: Expedited = 2\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Expedited\n- uid: System.Net.Sockets.SocketOptionName.HeaderIncluded\n  commentId: F:System.Net.Sockets.SocketOptionName.HeaderIncluded\n  id: HeaderIncluded\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: HeaderIncluded\n  fullName: System.Net.Sockets.SocketOptionName.HeaderIncluded\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HeaderIncluded\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 321\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Indicates that the application provides the IP header for outgoing datagrams.</p>\\n\"\n  syntax:\n    content: HeaderIncluded = 2\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.HeaderIncluded\n- uid: System.Net.Sockets.SocketOptionName.HopLimit\n  commentId: F:System.Net.Sockets.SocketOptionName.HopLimit\n  id: HopLimit\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: HopLimit\n  fullName: System.Net.Sockets.SocketOptionName.HopLimit\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: HopLimit\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 322\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the maximum number of router hops for an Internet Protocol version 6 (IPv6) packet. This is similar to Time to Live (TTL) for Internet Protocol version 4.</p>\\n\"\n  syntax:\n    content: HopLimit = 21\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.HopLimit\n- uid: System.Net.Sockets.SocketOptionName.IPOptions\n  commentId: F:System.Net.Sockets.SocketOptionName.IPOptions\n  id: IPOptions\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: IPOptions\n  fullName: System.Net.Sockets.SocketOptionName.IPOptions\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPOptions\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 323\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the IP options to be inserted into outgoing datagrams.</p>\\n\"\n  syntax:\n    content: IPOptions = 1\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.IPOptions\n- uid: System.Net.Sockets.SocketOptionName.IPProtectionLevel\n  commentId: F:System.Net.Sockets.SocketOptionName.IPProtectionLevel\n  id: IPProtectionLevel\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: IPProtectionLevel\n  fullName: System.Net.Sockets.SocketOptionName.IPProtectionLevel\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPProtectionLevel\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 324\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Enables restriction of a IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.This socket option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This socket option has defined protection levels specified in the <xref href=\\\"System.Net.Sockets.IPProtectionLevel\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> enumeration.</p>\\n\"\n  syntax:\n    content: IPProtectionLevel = 23\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.IPProtectionLevel\n- uid: System.Net.Sockets.SocketOptionName.IpTimeToLive\n  commentId: F:System.Net.Sockets.SocketOptionName.IpTimeToLive\n  id: IpTimeToLive\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: IpTimeToLive\n  fullName: System.Net.Sockets.SocketOptionName.IpTimeToLive\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IpTimeToLive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 325\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Set the IP header Time-to-Live field.</p>\\n\"\n  syntax:\n    content: IpTimeToLive = 4\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.IpTimeToLive\n- uid: System.Net.Sockets.SocketOptionName.IPv6Only\n  commentId: F:System.Net.Sockets.SocketOptionName.IPv6Only\n  id: IPv6Only\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: IPv6Only\n  fullName: System.Net.Sockets.SocketOptionName.IPv6Only\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: IPv6Only\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 326\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Indicates if a socket created for the AF_INET6 address family is restricted to IPv6 communications only. Sockets created for the AF_INET6 address family may be used for both IPv6 and IPv4 communications. Some applications may want to restrict their use of a socket created for the AF_INET6 address family to IPv6 communications only. When this value is non-zero (the default on Windows), a socket created for the AF_INET6 address family can be used to send and receive IPv6 packets only. When this value is zero, a socket created for the AF_INET6 address family can be used to send and receive packets to and from an IPv6 address or an IPv4 address. Note that the ability to interact with an IPv4 address requires the use of IPv4 mapped addresses. This socket option is supported on Windows Vista or later.</p>\\n\"\n  syntax:\n    content: IPv6Only = 27\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.IPv6Only\n- uid: System.Net.Sockets.SocketOptionName.KeepAlive\n  commentId: F:System.Net.Sockets.SocketOptionName.KeepAlive\n  id: KeepAlive\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: KeepAlive\n  fullName: System.Net.Sockets.SocketOptionName.KeepAlive\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: KeepAlive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 327\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Use keep-alives.</p>\\n\"\n  syntax:\n    content: KeepAlive = 8\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.KeepAlive\n- uid: System.Net.Sockets.SocketOptionName.Linger\n  commentId: F:System.Net.Sockets.SocketOptionName.Linger\n  id: Linger\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Linger\n  fullName: System.Net.Sockets.SocketOptionName.Linger\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Linger\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 328\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Linger on close if unsent data is present.</p>\\n\"\n  syntax:\n    content: Linger = 128\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Linger\n- uid: System.Net.Sockets.SocketOptionName.MaxConnections\n  commentId: F:System.Net.Sockets.SocketOptionName.MaxConnections\n  id: MaxConnections\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: MaxConnections\n  fullName: System.Net.Sockets.SocketOptionName.MaxConnections\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MaxConnections\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 329\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Not supported; will throw a <xref href=\\\"System.Net.Sockets.SocketException\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> if used.</p>\\n\"\n  syntax:\n    content: MaxConnections = 2147483647\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.MaxConnections\n- uid: System.Net.Sockets.SocketOptionName.MulticastInterface\n  commentId: F:System.Net.Sockets.SocketOptionName.MulticastInterface\n  id: MulticastInterface\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: MulticastInterface\n  fullName: System.Net.Sockets.SocketOptionName.MulticastInterface\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastInterface\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 330\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Set the interface for outgoing multicast packets.</p>\\n\"\n  syntax:\n    content: MulticastInterface = 9\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.MulticastInterface\n- uid: System.Net.Sockets.SocketOptionName.MulticastLoopback\n  commentId: F:System.Net.Sockets.SocketOptionName.MulticastLoopback\n  id: MulticastLoopback\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: MulticastLoopback\n  fullName: System.Net.Sockets.SocketOptionName.MulticastLoopback\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastLoopback\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 331\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>An IP multicast loopback.</p>\\n\"\n  syntax:\n    content: MulticastLoopback = 11\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.MulticastLoopback\n- uid: System.Net.Sockets.SocketOptionName.MulticastTimeToLive\n  commentId: F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive\n  id: MulticastTimeToLive\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: MulticastTimeToLive\n  fullName: System.Net.Sockets.SocketOptionName.MulticastTimeToLive\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: MulticastTimeToLive\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 332\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>An IP multicast Time to Live.</p>\\n\"\n  syntax:\n    content: MulticastTimeToLive = 10\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.MulticastTimeToLive\n- uid: System.Net.Sockets.SocketOptionName.NoChecksum\n  commentId: F:System.Net.Sockets.SocketOptionName.NoChecksum\n  id: NoChecksum\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: NoChecksum\n  fullName: System.Net.Sockets.SocketOptionName.NoChecksum\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NoChecksum\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 333\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Send UDP datagrams with checksum set to zero.</p>\\n\"\n  syntax:\n    content: NoChecksum = 1\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.NoChecksum\n- uid: System.Net.Sockets.SocketOptionName.NoDelay\n  commentId: F:System.Net.Sockets.SocketOptionName.NoDelay\n  id: NoDelay\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: NoDelay\n  fullName: System.Net.Sockets.SocketOptionName.NoDelay\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: NoDelay\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 334\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Disables the Nagle algorithm for send coalescing.</p>\\n\"\n  syntax:\n    content: NoDelay = 1\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.NoDelay\n- uid: System.Net.Sockets.SocketOptionName.OutOfBandInline\n  commentId: F:System.Net.Sockets.SocketOptionName.OutOfBandInline\n  id: OutOfBandInline\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: OutOfBandInline\n  fullName: System.Net.Sockets.SocketOptionName.OutOfBandInline\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: OutOfBandInline\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 335\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receives out-of-band data in the normal data stream.</p>\\n\"\n  syntax:\n    content: OutOfBandInline = 256\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.OutOfBandInline\n- uid: System.Net.Sockets.SocketOptionName.PacketInformation\n  commentId: F:System.Net.Sockets.SocketOptionName.PacketInformation\n  id: PacketInformation\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: PacketInformation\n  fullName: System.Net.Sockets.SocketOptionName.PacketInformation\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: PacketInformation\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 336\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Return information about received packets.</p>\\n\"\n  syntax:\n    content: PacketInformation = 19\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.PacketInformation\n- uid: System.Net.Sockets.SocketOptionName.ReceiveBuffer\n  commentId: F:System.Net.Sockets.SocketOptionName.ReceiveBuffer\n  id: ReceiveBuffer\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ReceiveBuffer\n  fullName: System.Net.Sockets.SocketOptionName.ReceiveBuffer\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveBuffer\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 337\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the total per-socket buffer space reserved for receives. This is unrelated to the maximum message size or the size of a TCP window.</p>\\n\"\n  syntax:\n    content: ReceiveBuffer = 4098\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ReceiveBuffer\n- uid: System.Net.Sockets.SocketOptionName.ReceiveLowWater\n  commentId: F:System.Net.Sockets.SocketOptionName.ReceiveLowWater\n  id: ReceiveLowWater\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ReceiveLowWater\n  fullName: System.Net.Sockets.SocketOptionName.ReceiveLowWater\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveLowWater\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 338\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the low water mark for <xref href=\\\"System.Net.Sockets.Socket.Receive(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operations.</p>\\n\"\n  syntax:\n    content: ReceiveLowWater = 4100\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ReceiveLowWater\n- uid: System.Net.Sockets.SocketOptionName.ReceiveTimeout\n  commentId: F:System.Net.Sockets.SocketOptionName.ReceiveTimeout\n  id: ReceiveTimeout\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ReceiveTimeout\n  fullName: System.Net.Sockets.SocketOptionName.ReceiveTimeout\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReceiveTimeout\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 339\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Receive a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <xref href=\\\"System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: ReceiveTimeout = 4102\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ReceiveTimeout\n- uid: System.Net.Sockets.SocketOptionName.ReuseAddress\n  commentId: F:System.Net.Sockets.SocketOptionName.ReuseAddress\n  id: ReuseAddress\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ReuseAddress\n  fullName: System.Net.Sockets.SocketOptionName.ReuseAddress\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReuseAddress\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 340\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Allows the socket to be bound to an address that is already in use.</p>\\n\"\n  syntax:\n    content: ReuseAddress = 4\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ReuseAddress\n- uid: System.Net.Sockets.SocketOptionName.ReuseUnicastPort\n  commentId: F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort\n  id: ReuseUnicastPort\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: ReuseUnicastPort\n  fullName: System.Net.Sockets.SocketOptionName.ReuseUnicastPort\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: ReuseUnicastPort\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 341\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Indicates that the system should defer ephemeral port allocation for outbound connections. This is equivalent to using the Winsock2 SO_REUSE_UNICASTPORT socket option.</p>\\n\"\n  syntax:\n    content: ReuseUnicastPort = 12295\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.ReuseUnicastPort\n- uid: System.Net.Sockets.SocketOptionName.SendBuffer\n  commentId: F:System.Net.Sockets.SocketOptionName.SendBuffer\n  id: SendBuffer\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: SendBuffer\n  fullName: System.Net.Sockets.SocketOptionName.SendBuffer\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendBuffer\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 342\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the total per-socket buffer space reserved for sends. This is unrelated to the maximum message size or the size of a TCP window.</p>\\n\"\n  syntax:\n    content: SendBuffer = 4097\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.SendBuffer\n- uid: System.Net.Sockets.SocketOptionName.SendLowWater\n  commentId: F:System.Net.Sockets.SocketOptionName.SendLowWater\n  id: SendLowWater\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: SendLowWater\n  fullName: System.Net.Sockets.SocketOptionName.SendLowWater\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendLowWater\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 343\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Specifies the low water mark for <xref href=\\\"System.Net.Sockets.Socket.Send(System.Byte[])\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> operations.</p>\\n\"\n  syntax:\n    content: SendLowWater = 4099\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.SendLowWater\n- uid: System.Net.Sockets.SocketOptionName.SendTimeout\n  commentId: F:System.Net.Sockets.SocketOptionName.SendTimeout\n  id: SendTimeout\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: SendTimeout\n  fullName: System.Net.Sockets.SocketOptionName.SendTimeout\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: SendTimeout\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 344\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Send a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the <xref href=\\\"System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)\\\" data-throw-if-not-resolved=\\\"false\\\"></xref> method.</p>\\n\"\n  syntax:\n    content: SendTimeout = 4101\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.SendTimeout\n- uid: System.Net.Sockets.SocketOptionName.Type\n  commentId: F:System.Net.Sockets.SocketOptionName.Type\n  id: Type\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: Type\n  fullName: System.Net.Sockets.SocketOptionName.Type\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: Type\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 345\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Get the socket type.</p>\\n\"\n  syntax:\n    content: Type = 4104\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.Type\n- uid: System.Net.Sockets.SocketOptionName.TypeOfService\n  commentId: F:System.Net.Sockets.SocketOptionName.TypeOfService\n  id: TypeOfService\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: TypeOfService\n  fullName: System.Net.Sockets.SocketOptionName.TypeOfService\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: TypeOfService\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 346\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Change the IP header type of the service field.</p>\\n\"\n  syntax:\n    content: TypeOfService = 3\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.TypeOfService\n- uid: System.Net.Sockets.SocketOptionName.UnblockSource\n  commentId: F:System.Net.Sockets.SocketOptionName.UnblockSource\n  id: UnblockSource\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: UnblockSource\n  fullName: System.Net.Sockets.SocketOptionName.UnblockSource\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UnblockSource\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 347\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Unblock a previously blocked source.</p>\\n\"\n  syntax:\n    content: UnblockSource = 18\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.UnblockSource\n- uid: System.Net.Sockets.SocketOptionName.UpdateAcceptContext\n  commentId: F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext\n  id: UpdateAcceptContext\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: UpdateAcceptContext\n  fullName: System.Net.Sockets.SocketOptionName.UpdateAcceptContext\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UpdateAcceptContext\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 348\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Updates an accepted socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_ACCEPT_CONTEXT socket option and is supported only on connection-oriented sockets.</p>\\n\"\n  syntax:\n    content: UpdateAcceptContext = 28683\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.UpdateAcceptContext\n- uid: System.Net.Sockets.SocketOptionName.UpdateConnectContext\n  commentId: F:System.Net.Sockets.SocketOptionName.UpdateConnectContext\n  id: UpdateConnectContext\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: UpdateConnectContext\n  fullName: System.Net.Sockets.SocketOptionName.UpdateConnectContext\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UpdateConnectContext\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 349\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Updates a connected socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_CONNECT_CONTEXT socket option and is supported only on connection-oriented sockets.</p>\\n\"\n  syntax:\n    content: UpdateConnectContext = 28688\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.UpdateConnectContext\n- uid: System.Net.Sockets.SocketOptionName.UseLoopback\n  commentId: F:System.Net.Sockets.SocketOptionName.UseLoopback\n  id: UseLoopback\n  parent: System.Net.Sockets.SocketOptionName\n  langs:\n  - csharp\n  - vb\n  name: UseLoopback\n  fullName: System.Net.Sockets.SocketOptionName.UseLoopback\n  type: Field\n  source:\n    remote:\n      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n      branch: master\n      repo: https://github.com/dotnet/corefx.git\n    id: UseLoopback\n    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs\n    startLine: 350\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: \"\\n<p>Bypass hardware when possible.</p>\\n\"\n  syntax:\n    content: UseLoopback = 64\n    return:\n      type: System.Net.Sockets.SocketOptionName\n  modifiers.csharp:\n  - public\n  - const\n  modifiers.vb:\n  - Public\n  - Const\n  nameWithType: SocketOptionName.UseLoopback\nreferences:\n- uid: System.Net.Sockets\n  isExternal: false\n  name: System.Net.Sockets\n  fullName: System.Net.Sockets\n  commentId: N:System.Net.Sockets\n  nameWithType: System.Net.Sockets\n- uid: System.Net.Sockets.SocketOptionName\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketOptionName\n  fullName: System.Net.Sockets.SocketOptionName\n  commentId: T:System.Net.Sockets.SocketOptionName\n  nameWithType: SocketOptionName\n"}